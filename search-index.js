var searchIndex = {};
searchIndex["cairo"] = {"doc":"","items":[[0,"enums","cairo","",null,null],[4,"Status","cairo::enums","",null,null],[13,"Success","","",0,null],[13,"NoMemory","","",0,null],[13,"InvalidRestore","","",0,null],[13,"InvalidPopGroup","","",0,null],[13,"NoCurrentPoint","","",0,null],[13,"InvalidMatrix","","",0,null],[13,"InvalidStatus","","",0,null],[13,"NullPointer","","",0,null],[13,"InvalidString","","",0,null],[13,"InvalidPathData","","",0,null],[13,"ReadError","","",0,null],[13,"WriteError","","",0,null],[13,"SurfaceFinished","","",0,null],[13,"SurfaceTypeMismatch","","",0,null],[13,"PatternTypeMismatch","","",0,null],[13,"InvalidContent","","",0,null],[13,"InvalidFormat","","",0,null],[13,"InvalidVisual","","",0,null],[13,"FileNotFound","","",0,null],[13,"InvalidDash","","",0,null],[13,"InvalidDscComment","","",0,null],[13,"InvalidIndex","","",0,null],[13,"ClipNotRepresentable","","",0,null],[13,"TempFileError","","",0,null],[13,"InvalidStride","","",0,null],[13,"FontTypeMismatch","","",0,null],[13,"UserFontImmutable","","",0,null],[13,"UserFontError","","",0,null],[13,"NegativeCount","","",0,null],[13,"InvalidClusters","","",0,null],[13,"InvalidSlant","","",0,null],[13,"InvalidWeight","","",0,null],[13,"InvalidSize","","",0,null],[13,"UserFontNotImplemented","","",0,null],[13,"DeviceTypeMismatch","","",0,null],[13,"DeviceError","","",0,null],[13,"InvalidMeshConstruction","","",0,null],[13,"DeviceFinished","","",0,null],[13,"JBig2GlobalMissing","","",0,null],[13,"PngError","","",0,null],[13,"FreetypeError","","",0,null],[13,"Win32GdiError","","",0,null],[13,"LastStatus","","",0,null],[4,"Antialias","","",null,null],[13,"Default","","",1,null],[13,"None","","",1,null],[13,"Gray","","",1,null],[13,"Subpixel","","",1,null],[13,"Fast","","",1,null],[13,"Good","","",1,null],[13,"Best","","",1,null],[4,"FillRule","","",null,null],[13,"Winding","","",2,null],[13,"EvenOdd","","",2,null],[4,"LineCap","","",null,null],[13,"Butt","","",3,null],[13,"Round","","",3,null],[13,"Square","","",3,null],[4,"LineJoin","","",null,null],[13,"Miter","","",4,null],[13,"Round","","",4,null],[13,"Bevel","","",4,null],[4,"Operator","","",null,null],[13,"Clear","","",5,null],[13,"Source","","",5,null],[13,"Over","","",5,null],[13,"In","","",5,null],[13,"Out","","",5,null],[13,"Atop","","",5,null],[13,"Dest","","",5,null],[13,"DestOver","","",5,null],[13,"DestIn","","",5,null],[13,"DestOut","","",5,null],[13,"DestAtop","","",5,null],[13,"Xor","","",5,null],[13,"Add","","",5,null],[13,"Saturate","","",5,null],[13,"Multiply","","",5,null],[13,"Screen","","",5,null],[13,"Overlay","","",5,null],[13,"Darken","","",5,null],[13,"Lighten","","",5,null],[13,"ColorDodge","","",5,null],[13,"ColorBurn","","",5,null],[13,"HardLight","","",5,null],[13,"SoftLight","","",5,null],[13,"Difference","","",5,null],[13,"Exclusion","","",5,null],[13,"HslHue","","",5,null],[13,"HslSaturation","","",5,null],[13,"HslColor","","",5,null],[13,"HslLuminosity","","",5,null],[4,"PathDataType","","",null,null],[13,"MoveTo","","",6,null],[13,"LineTo","","",6,null],[13,"CurveTo","","",6,null],[13,"ClosePath","","",6,null],[4,"Content","","",null,null],[13,"Color","","",7,null],[13,"Alpha","","",7,null],[13,"ColorAlpha","","",7,null],[4,"Extend","","",null,null],[13,"None","","",8,null],[13,"Repeat","","",8,null],[13,"Reflect","","",8,null],[13,"Pad","","",8,null],[4,"Filter","","",null,null],[13,"Fast","","",9,null],[13,"Good","","",9,null],[13,"Best","","",9,null],[13,"Nearest","","",9,null],[13,"Bilinear","","",9,null],[13,"Gaussian","","",9,null],[4,"PatternType","","",null,null],[13,"Solid","","",10,null],[13,"Surface","","",10,null],[13,"LinearGradient","","",10,null],[13,"RadialGradient","","",10,null],[13,"Mesh","","",10,null],[13,"RasterSource","","",10,null],[4,"FontSlant","","",null,null],[13,"Normal","","",11,null],[13,"Italic","","",11,null],[13,"Oblique","","",11,null],[4,"FontWeight","","",null,null],[13,"Normal","","",12,null],[13,"Bold","","",12,null],[4,"TextClusterFlags","","",null,null],[13,"None","","",13,null],[13,"Backward","","",13,null],[4,"FontType","","",null,null],[13,"FontTypeToy","","",14,null],[13,"FontTypeFt","","",14,null],[13,"FontTypeWin32","","",14,null],[13,"FontTypeQuartz","","",14,null],[13,"FontTypeUser","","",14,null],[4,"SubpixelOrder","","",null,null],[13,"Default","","",15,null],[13,"Rgb","","",15,null],[13,"Bgr","","",15,null],[13,"Vrgb","","",15,null],[13,"Vbgr","","",15,null],[4,"HintStyle","","",null,null],[13,"Default","","",16,null],[13,"None","","",16,null],[13,"Slight","","",16,null],[13,"Medium","","",16,null],[13,"Full","","",16,null],[4,"HintMetrics","","",null,null],[13,"Default","","",17,null],[13,"Off","","",17,null],[13,"On","","",17,null],[4,"SurfaceType","","",null,null],[13,"Image","","",18,null],[13,"Pdf","","",18,null],[13,"Ps","","",18,null],[13,"Xlib","","",18,null],[13,"Xcb","","",18,null],[13,"Glitz","","",18,null],[13,"Quartz","","",18,null],[13,"Win32","","",18,null],[13,"BeOs","","",18,null],[13,"DirectFb","","",18,null],[13,"Svg","","",18,null],[13,"Os2","","",18,null],[13,"Win32Printing","","",18,null],[13,"QuartzImage","","",18,null],[13,"Script","","",18,null],[13,"Qt","","",18,null],[13,"Recording","","",18,null],[13,"Vg","","",18,null],[13,"Gl","","",18,null],[13,"Drm","","",18,null],[13,"Tee","","",18,null],[13,"Xml","","",18,null],[13,"Skia","","",18,null],[13,"Subsurface","","",18,null],[13,"Cogl","","",18,null],[4,"Format","","",null,null],[13,"Invalid","","",19,null],[13,"ARgb32","","",19,null],[13,"Rgb24","","",19,null],[13,"A8","","",19,null],[13,"A1","","",19,null],[13,"Rgb16_565","","",19,null],[13,"Rgb30","","",19,null],[4,"RegionOverlap","","",null,null],[13,"In","","",20,null],[13,"Out","","",20,null],[13,"Part","","",20,null],[3,"Rectangle","cairo","",null,null],[12,"x","","",21,null],[12,"y","","",21,null],[12,"width","","",21,null],[12,"height","","",21,null],[4,"Status","","",null,null],[13,"Success","","",0,null],[13,"NoMemory","","",0,null],[13,"InvalidRestore","","",0,null],[13,"InvalidPopGroup","","",0,null],[13,"NoCurrentPoint","","",0,null],[13,"InvalidMatrix","","",0,null],[13,"InvalidStatus","","",0,null],[13,"NullPointer","","",0,null],[13,"InvalidString","","",0,null],[13,"InvalidPathData","","",0,null],[13,"ReadError","","",0,null],[13,"WriteError","","",0,null],[13,"SurfaceFinished","","",0,null],[13,"SurfaceTypeMismatch","","",0,null],[13,"PatternTypeMismatch","","",0,null],[13,"InvalidContent","","",0,null],[13,"InvalidFormat","","",0,null],[13,"InvalidVisual","","",0,null],[13,"FileNotFound","","",0,null],[13,"InvalidDash","","",0,null],[13,"InvalidDscComment","","",0,null],[13,"InvalidIndex","","",0,null],[13,"ClipNotRepresentable","","",0,null],[13,"TempFileError","","",0,null],[13,"InvalidStride","","",0,null],[13,"FontTypeMismatch","","",0,null],[13,"UserFontImmutable","","",0,null],[13,"UserFontError","","",0,null],[13,"NegativeCount","","",0,null],[13,"InvalidClusters","","",0,null],[13,"InvalidSlant","","",0,null],[13,"InvalidWeight","","",0,null],[13,"InvalidSize","","",0,null],[13,"UserFontNotImplemented","","",0,null],[13,"DeviceTypeMismatch","","",0,null],[13,"DeviceError","","",0,null],[13,"InvalidMeshConstruction","","",0,null],[13,"DeviceFinished","","",0,null],[13,"JBig2GlobalMissing","","",0,null],[13,"PngError","","",0,null],[13,"FreetypeError","","",0,null],[13,"Win32GdiError","","",0,null],[13,"LastStatus","","",0,null],[4,"Antialias","","",null,null],[13,"Default","","",1,null],[13,"None","","",1,null],[13,"Gray","","",1,null],[13,"Subpixel","","",1,null],[13,"Fast","","",1,null],[13,"Good","","",1,null],[13,"Best","","",1,null],[4,"Content","","",null,null],[13,"Color","","",7,null],[13,"Alpha","","",7,null],[13,"ColorAlpha","","",7,null],[4,"Extend","","",null,null],[13,"None","","",8,null],[13,"Repeat","","",8,null],[13,"Reflect","","",8,null],[13,"Pad","","",8,null],[4,"FillRule","","",null,null],[13,"Winding","","",2,null],[13,"EvenOdd","","",2,null],[4,"Filter","","",null,null],[13,"Fast","","",9,null],[13,"Good","","",9,null],[13,"Best","","",9,null],[13,"Nearest","","",9,null],[13,"Bilinear","","",9,null],[13,"Gaussian","","",9,null],[4,"LineCap","","",null,null],[13,"Butt","","",3,null],[13,"Round","","",3,null],[13,"Square","","",3,null],[4,"LineJoin","","",null,null],[13,"Miter","","",4,null],[13,"Round","","",4,null],[13,"Bevel","","",4,null],[4,"Operator","","",null,null],[13,"Clear","","",5,null],[13,"Source","","",5,null],[13,"Over","","",5,null],[13,"In","","",5,null],[13,"Out","","",5,null],[13,"Atop","","",5,null],[13,"Dest","","",5,null],[13,"DestOver","","",5,null],[13,"DestIn","","",5,null],[13,"DestOut","","",5,null],[13,"DestAtop","","",5,null],[13,"Xor","","",5,null],[13,"Add","","",5,null],[13,"Saturate","","",5,null],[13,"Multiply","","",5,null],[13,"Screen","","",5,null],[13,"Overlay","","",5,null],[13,"Darken","","",5,null],[13,"Lighten","","",5,null],[13,"ColorDodge","","",5,null],[13,"ColorBurn","","",5,null],[13,"HardLight","","",5,null],[13,"SoftLight","","",5,null],[13,"Difference","","",5,null],[13,"Exclusion","","",5,null],[13,"HslHue","","",5,null],[13,"HslSaturation","","",5,null],[13,"HslColor","","",5,null],[13,"HslLuminosity","","",5,null],[4,"PathDataType","","",null,null],[13,"MoveTo","","",6,null],[13,"LineTo","","",6,null],[13,"CurveTo","","",6,null],[13,"ClosePath","","",6,null],[4,"Format","","",null,null],[13,"Invalid","","",19,null],[13,"ARgb32","","",19,null],[13,"Rgb24","","",19,null],[13,"A8","","",19,null],[13,"A1","","",19,null],[13,"Rgb16_565","","",19,null],[13,"Rgb30","","",19,null],[4,"RegionOverlap","","",null,null],[13,"In","","",20,null],[13,"Out","","",20,null],[13,"Part","","",20,null],[4,"SurfaceType","","",null,null],[13,"Image","","",18,null],[13,"Pdf","","",18,null],[13,"Ps","","",18,null],[13,"Xlib","","",18,null],[13,"Xcb","","",18,null],[13,"Glitz","","",18,null],[13,"Quartz","","",18,null],[13,"Win32","","",18,null],[13,"BeOs","","",18,null],[13,"DirectFb","","",18,null],[13,"Svg","","",18,null],[13,"Os2","","",18,null],[13,"Win32Printing","","",18,null],[13,"QuartzImage","","",18,null],[13,"Script","","",18,null],[13,"Qt","","",18,null],[13,"Recording","","",18,null],[13,"Vg","","",18,null],[13,"Gl","","",18,null],[13,"Drm","","",18,null],[13,"Tee","","",18,null],[13,"Xml","","",18,null],[13,"Skia","","",18,null],[13,"Subsurface","","",18,null],[13,"Cogl","","",18,null],[4,"FontType","","",null,null],[13,"FontTypeToy","","",14,null],[13,"FontTypeFt","","",14,null],[13,"FontTypeWin32","","",14,null],[13,"FontTypeQuartz","","",14,null],[13,"FontTypeUser","","",14,null],[4,"FontSlant","","",null,null],[13,"Normal","","",11,null],[13,"Italic","","",11,null],[13,"Oblique","","",11,null],[4,"FontWeight","","",null,null],[13,"Normal","","",12,null],[13,"Bold","","",12,null],[3,"Glyph","","",null,null],[12,"index","","",22,null],[12,"x","","",22,null],[12,"y","","",22,null],[3,"FontExtents","","",null,null],[12,"ascent","","",23,null],[12,"descent","","",23,null],[12,"height","","",23,null],[12,"max_x_advance","","",23,null],[12,"max_y_advance","","",23,null],[3,"TextExtents","","",null,null],[12,"x_bearing","","",24,null],[12,"y_bearing","","",24,null],[12,"width","","",24,null],[12,"height","","",24,null],[12,"x_advance","","",24,null],[12,"y_advance","","",24,null],[3,"TextCluster","","",null,null],[12,"num_bytes","","",25,null],[12,"num_glyphs","","",25,null],[3,"Matrix","","",null,null],[12,"xx","","",26,null],[12,"yx","","",26,null],[12,"xy","","",26,null],[12,"yy","","",26,null],[12,"x0","","",26,null],[12,"y0","","",26,null],[3,"Context","","",null,null],[3,"RectangleVec","","",null,null],[12,"rectangles","","",27,null],[3,"Path","","Paths are the most basic drawing tools and are primarily used to implicitly generate simple masks.",null,null],[3,"PathSegments","","",null,null],[3,"LinearGradient","","",null,null],[3,"RadialGradient","","",null,null],[3,"SolidPattern","","",null,null],[3,"SurfacePattern","","",null,null],[3,"Mesh","","",null,null],[3,"FontFace","","",null,null],[3,"ScaledFont","","",null,null],[3,"FontOptions","","",null,null],[3,"RectangleInt","","",null,null],[12,"x","","",28,null],[12,"y","","",28,null],[12,"width","","",28,null],[12,"height","","",28,null],[3,"Region","","",null,null],[3,"Surface","","",null,null],[3,"ImageSurface","","",null,null],[3,"ImageSurfaceData","","",null,null],[3,"PDFSurface","","",null,null],[3,"XCBConnection","","",null,null],[12,"0","","",29,null],[3,"Device","","",null,null],[12,"0","","",30,null],[3,"XCBDrawable","","",null,null],[12,"0","","",31,null],[3,"XCBPixmap","","",null,null],[12,"0","","",32,null],[3,"XCBRenderPictFormInfo","","",null,null],[12,"0","","",33,null],[3,"XCBScreen","","",null,null],[12,"0","","",34,null],[3,"XCBVisualType","","",null,null],[12,"0","","",35,null],[4,"PathSegment","","",null,null],[13,"MoveTo","","",36,null],[13,"LineTo","","",36,null],[13,"CurveTo","","",36,null],[13,"ClosePath","","",36,null],[4,"BorrowError","","",null,null],[13,"Cairo","","",37,null],[13,"NonExclusive","","",37,null],[4,"IoError","","",null,null],[13,"Cairo","","",38,null],[13,"Io","","",38,null],[4,"MeshCorner","","",null,null],[13,"MeshCorner0","","",39,null],[13,"MeshCorner1","","",39,null],[13,"MeshCorner2","","",39,null],[13,"MeshCorner3","","",39,null],[0,"prelude","","",null,null],[8,"MatrixTrait","cairo::prelude","",null,null],[10,"null","","",40,{"inputs":[],"output":{"name":"matrix"}}],[10,"new","","",40,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"matrix"}}],[10,"multiply","","",40,{"inputs":[{"name":"matrix"},{"name":"matrix"}],"output":{"name":"matrix"}}],[10,"identity","","",40,{"inputs":[],"output":{"name":"matrix"}}],[10,"init","","",40,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"translate","","",40,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"scale","","",40,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"rotate","","",40,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"invert","","",40,{"inputs":[{"name":"self"}],"output":null}],[10,"try_invert","","",40,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"transform_distance","","",40,null],[10,"transform_point","","",40,null],[8,"Gradient","","",null,null],[11,"add_color_stop_rgb","","Adds an opaque color stop to a gradient pattern. The offset specifies the location along the gradient's control vector. For example, a linear gradient's control vector is from (x0,y0) to (x1,y1) while a radial gradient's control vector is from any point on the start circle to the corresponding point on the end circle.",41,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"add_color_stop_rgba","","Adds a translucent color stop to a gradient pattern. The offset specifies the location along the gradient's control vector. For example, a linear gradient's control vector is from (x0,y0) to (x1,y1) while a radial gradient's control vector is from any point on the start circle to the corresponding point on the end circle.",41,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"get_color_stop_count","","Gets the number of color stops specified in the given gradient pattern.",41,{"inputs":[{"name":"self"}],"output":{"name":"isize"}}],[11,"get_color_stop_rgba","","Gets the color and offset information at the given index for a gradient pattern. Values of index range from 0 to n-1 where n is the number returned by Pattern::get_color_stop_count().",41,null],[8,"Pattern","","",null,null],[11,"ensure_status","","",42,{"inputs":[{"name":"self"}],"output":null}],[11,"status","","Checks whether an error has previously occurred for this pattern.",42,{"inputs":[{"name":"self"}],"output":{"name":"status"}}],[11,"get_reference_count","","Returns the current reference count of self.",42,{"inputs":[{"name":"self"}],"output":{"name":"isize"}}],[11,"set_extend","","Sets the mode to be used for drawing outside the area of a pattern. See cairo_extend_t for details on the semantics of each extend strategy.",42,{"inputs":[{"name":"self"},{"name":"extend"}],"output":null}],[11,"get_extend","","Gets the current extend mode for a pattern. See Extend enum for details on the semantics of each extend strategy.",42,{"inputs":[{"name":"self"}],"output":{"name":"extend"}}],[11,"set_filter","","Sets the filter to be used for resizing when using this pattern. See Filter enum for details on each filter.",42,{"inputs":[{"name":"self"},{"name":"filter"}],"output":null}],[11,"get_filter","","Gets the current filter for a pattern. See Filter enum for details on each filter.",42,{"inputs":[{"name":"self"}],"output":{"name":"filter"}}],[11,"set_matrix","","",42,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":null}],[11,"get_matrix","","",42,{"inputs":[{"name":"self"}],"output":{"name":"matrix"}}],[8,"SurfaceExt","","",null,null],[10,"flush","","",43,{"inputs":[{"name":"self"}],"output":null}],[10,"finish","","",43,{"inputs":[{"name":"self"}],"output":null}],[10,"get_type","","",43,{"inputs":[{"name":"self"}],"output":{"name":"surfacetype"}}],[11,"clone","cairo","",44,{"inputs":[{"name":"self"}],"output":{"name":"fontoptions"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",44,{"inputs":[],"output":{"name":"fontoptions"}}],[11,"ensure_status","","",44,{"inputs":[{"name":"self"}],"output":null}],[11,"merge","","",44,{"inputs":[{"name":"self"},{"name":"fontoptions"}],"output":null}],[11,"hash","","",44,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"set_antialias","","",44,{"inputs":[{"name":"self"},{"name":"antialias"}],"output":null}],[11,"get_antialias","","",44,{"inputs":[{"name":"self"}],"output":{"name":"antialias"}}],[11,"set_subpixel_order","","",44,{"inputs":[{"name":"self"},{"name":"subpixelorder"}],"output":null}],[11,"get_subpixel_order","","",44,{"inputs":[{"name":"self"}],"output":{"name":"subpixelorder"}}],[11,"set_hint_style","","",44,{"inputs":[{"name":"self"},{"name":"hintstyle"}],"output":null}],[11,"get_hint_style","","",44,{"inputs":[{"name":"self"}],"output":{"name":"hintstyle"}}],[11,"set_hint_metrics","","",44,{"inputs":[{"name":"self"},{"name":"hintmetrics"}],"output":null}],[11,"get_hint_metrics","","",44,{"inputs":[{"name":"self"}],"output":{"name":"hintmetrics"}}],[11,"eq","","",44,{"inputs":[{"name":"self"},{"name":"fontoptions"}],"output":{"name":"bool"}}],[11,"clone","","",45,{"inputs":[{"name":"self"}],"output":{"name":"fontface"}}],[11,"toy_create","","",45,{"inputs":[{"name":"str"},{"name":"fontslant"},{"name":"fontweight"}],"output":{"name":"fontface"}}],[11,"toy_get_family","","",45,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"toy_get_slant","","",45,{"inputs":[{"name":"self"}],"output":{"name":"fontslant"}}],[11,"toy_get_weight","","",45,{"inputs":[{"name":"self"}],"output":{"name":"fontweight"}}],[11,"ensure_status","","",45,{"inputs":[{"name":"self"}],"output":null}],[11,"get_type","","",45,{"inputs":[{"name":"self"}],"output":{"name":"fonttype"}}],[11,"get_reference_count","","",45,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"scaledfont"}}],[11,"new","","",46,{"inputs":[{"name":"fontface"},{"name":"matrix"},{"name":"matrix"},{"name":"fontoptions"}],"output":{"name":"scaledfont"}}],[11,"ensure_status","","",46,{"inputs":[{"name":"self"}],"output":null}],[11,"get_type","","",46,{"inputs":[{"name":"self"}],"output":{"name":"fonttype"}}],[11,"get_reference_count","","",46,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"extents","","",46,{"inputs":[{"name":"self"}],"output":{"name":"fontextents"}}],[11,"text_extents","","",46,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"textextents"}}],[11,"glyph_extents","","",46,null],[11,"text_to_glyphs","","",46,null],[11,"get_font_face","","",46,{"inputs":[{"name":"self"}],"output":{"name":"fontface"}}],[11,"get_font_options","","",46,{"inputs":[{"name":"self"}],"output":{"name":"fontoptions"}}],[11,"get_font_matrix","","",46,{"inputs":[{"name":"self"}],"output":{"name":"matrix"}}],[11,"get_ctm","","",46,{"inputs":[{"name":"self"}],"output":{"name":"matrix"}}],[11,"get_scale_matrix","","",46,{"inputs":[{"name":"self"}],"output":{"name":"matrix"}}],[11,"drop","","",27,{"inputs":[{"name":"self"}],"output":null}],[11,"from_glib_none","","",47,null],[11,"from_glib_full","","",47,null],[11,"as_ref","","",47,{"inputs":[{"name":"self"}],"output":{"name":"context"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"context"}}],[11,"drop","","",47,{"inputs":[{"name":"self"}],"output":null}],[11,"ensure_status","","",47,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Creates a new Context with all graphics state parameters set to default values and with target as a target surface. The target surface should be constructed with a backend-specific function such as cairo_image_surface_create() (or any other Context::backend_surface_create() variant).",47,{"inputs":[{"name":"t"}],"output":{"name":"context"}}],[11,"status","","Checks whether an error has previously occurred for this context.",47,{"inputs":[{"name":"self"}],"output":{"name":"status"}}],[11,"save","","Makes a copy of the current state of self and saves it on an internal stack of saved states for self. When Context::restore() is called, self will be restored to the saved state. Multiple calls to Context::save() and Context::restore() can be nested; each call to Context::restore() restores the state from the matching paired Context::save().",47,{"inputs":[{"name":"self"}],"output":null}],[11,"restore","","Restores self to the state saved by a preceding call to Context::save() and removes that state from the stack of saved states.",47,{"inputs":[{"name":"self"}],"output":null}],[11,"get_target","","",47,{"inputs":[{"name":"self"}],"output":{"name":"surface"}}],[11,"push_group","","Temporarily redirects drawing to an intermediate surface known as a group. The redirection lasts until the group is completed by a call to Context::pop_group() or Context::pop_group_to_source(). These calls provide the result of any drawing to the group as a pattern, (either as an explicit object, or set as the source pattern).",47,{"inputs":[{"name":"self"}],"output":null}],[11,"pop_group","","Terminates the redirection begun by a call to Context::push_group() or Context::push_group_with_content() and returns a new pattern containing the results of all drawing operations performed to the group.",47,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"pop_group_to_source","","Terminates the redirection begun by a call to Context::push_group() or Context::push_group_with_content() and installs the resulting pattern as the source pattern in the given cairo context.",47,{"inputs":[{"name":"self"}],"output":null}],[11,"get_group_target","","",47,{"inputs":[{"name":"self"}],"output":{"name":"surface"}}],[11,"set_source_rgb","","Sets the source pattern within self to an opaque color. This opaque color will then be used for any subsequent drawing operation until a new source pattern is set.",47,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"set_source_rgba","","Sets the source pattern within self to a translucent color. This color will then be used for any subsequent drawing operation until a new source pattern is set.",47,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"set_source","","Sets the source pattern within self to source. This pattern will then be used for any subsequent drawing operation until a new source pattern is set.",47,{"inputs":[{"name":"self"},{"name":"pattern"}],"output":null}],[11,"get_source","","Gets the current source pattern for self.",47,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"set_source_surface","","",47,{"inputs":[{"name":"self"},{"name":"t"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"set_antialias","","Set the antialiasing mode of the rasterizer used for drawing shapes. This value is a hint, and a particular backend may or may not support a particular value. At the current time, no backend supports CAIRO_ANTIALIAS_SUBPIXEL when drawing shapes.",47,{"inputs":[{"name":"self"},{"name":"antialias"}],"output":null}],[11,"get_antialias","","Gets the current shape antialiasing mode, as set by Context::set_antialias().",47,{"inputs":[{"name":"self"}],"output":{"name":"antialias"}}],[11,"set_dash","","Sets the dash pattern to be used by cairo_stroke(). A dash pattern is specified by dashes, an array of positive values. Each value provides the length of alternate \"on\" and \"off\" portions of the stroke. The offset specifies an offset into the pattern at which the stroke begins.",47,null],[11,"get_dash_count","","This function returns the length of the dash array in self (0 if dashing is not currently in effect).",47,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_dash","","Gets the current dash array. If not NULL, dashes should be big enough to hold at least the number of values returned by Context::get_dash_count().",47,null],[11,"get_dash_dashes","","",47,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"get_dash_offset","","",47,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"set_fill_rule","","Set the current fill rule within the cairo context. The fill rule is used to determine which regions are inside or outside a complex (potentially self-intersecting) path. The current fill rule affects both Context::fill() and Context::clip(). See FillRule enum for details on the semantics of each available fill rule.",47,{"inputs":[{"name":"self"},{"name":"fillrule"}],"output":null}],[11,"get_fill_rule","","Gets the current fill rule, as set by Context::set_fill_rule().",47,{"inputs":[{"name":"self"}],"output":{"name":"fillrule"}}],[11,"set_line_cap","","Sets the current line cap style within the cairo context. See LineCap enum for details about how the available line cap styles are drawn.",47,{"inputs":[{"name":"self"},{"name":"linecap"}],"output":null}],[11,"get_line_cap","","Gets the current line cap style, as set by Context::set_line_cap().",47,{"inputs":[{"name":"self"}],"output":{"name":"linecap"}}],[11,"set_line_join","","Sets the current line join style within the cairo context. See LineJoin enum for details about how the available line join styles are drawn.",47,{"inputs":[{"name":"self"},{"name":"linejoin"}],"output":null}],[11,"get_line_join","","Gets the current line join style, as set by Context::set_line_join().",47,{"inputs":[{"name":"self"}],"output":{"name":"linejoin"}}],[11,"set_line_width","","Sets the current line width within the cairo context. The line width value specifies the diameter of a pen that is circular in user space, (though device-space pen may be an ellipse in general due to scaling/shear/rotation of the CTM).",47,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[11,"get_line_width","","This function returns the current line width value exactly as set by Context::set_line_width(). Note that the value is unchanged even if the CTM has changed between the calls to Context::set_line_width() and Context::get_line_width().",47,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"set_miter_limit","","Sets the current miter limit within the cairo context.",47,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[11,"get_miter_limit","","Gets the current miter limit, as set by Contextset_miter_limit().",47,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"set_operator","","",47,{"inputs":[{"name":"self"},{"name":"operator"}],"output":null}],[11,"get_operator","","",47,{"inputs":[{"name":"self"}],"output":{"name":"operator"}}],[11,"set_tolerance","","Sets the tolerance used when converting paths into trapezoids. Curved segments of the path will be subdivided until the maximum deviation between the original path and the polygonal approximation is less than tolerance . The default value is 0.1. A larger value will give better performance, a smaller value, better appearance. (Reducing the value from the default value of 0.1 is unlikely to improve appearance significantly.) The accuracy of paths within Cairo is limited by the precision of its internal arithmetic, and the prescribed tolerance is restricted to the smallest representable internal value.",47,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[11,"get_tolerance","","Gets the current tolerance value, as set by Context::set_tolerance().",47,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"clip","","Establishes a new clip region by intersecting the current clip region with the current path as it would be filled by Context::fill() and according to the current fill rule (see Context::set_fill_rule()).",47,{"inputs":[{"name":"self"}],"output":null}],[11,"clip_preserve","","Establishes a new clip region by intersecting the current clip region with the current path as it would be filled by Context::fill() and according to the current fill rule (see Context::set_fill_rule()).",47,{"inputs":[{"name":"self"}],"output":null}],[11,"clip_extents","","Computes a bounding box in user coordinates covering the area inside the current clip.",47,null],[11,"in_clip","","Tests whether the given point is inside the area that would be visible through the current clip, i.e. the area that would be filled by a Context::paint() operation.",47,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":{"name":"bool"}}],[11,"reset_clip","","Reset the current clip region to its original, unrestricted state. That is, set the clip region to an infinitely large shape containing the target surface. Equivalently, if infinity is too hard to grasp, one can imagine the clip region being reset to the exact bounds of the target surface.",47,{"inputs":[{"name":"self"}],"output":null}],[11,"copy_clip_rectangle_list","","Gets the current clip region as a list of rectangles in user coordinates.",47,{"inputs":[{"name":"self"}],"output":{"name":"rectanglevec"}}],[11,"fill","","A drawing operator that fills the current path according to the current fill rule, (each sub-path is implicitly closed before being filled). After Context::fill(), the current path will be cleared from the cairo context. See Context::set_fill_rule() and Context::fill_preserve().",47,{"inputs":[{"name":"self"}],"output":null}],[11,"fill_preserve","","A drawing operator that fills the current path according to the current fill rule, (each sub-path is implicitly closed before being filled). Unlike Context::fill(), Context::fill_preserve() preserves the path within the cairo context.",47,{"inputs":[{"name":"self"}],"output":null}],[11,"fill_extents","","Computes a bounding box in user coordinates covering the area that would be affected, (the \"inked\" area), by a Context::fill() operation given the current path and fill parameters. If the current path is empty, returns an empty rectangle ((0,0), (0,0)). Surface dimensions and clipping are not taken into account.",47,null],[11,"in_fill","","Tests whether the given point is inside the area that would be affected by a Context::fill() operation given the current path and filling parameters. Surface dimensions and clipping are not taken into account.",47,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":{"name":"bool"}}],[11,"mask","","A drawing operator that paints the current source using the alpha channel of pattern as a mask. (Opaque areas of pattern are painted with the source, transparent areas are not painted.)",47,{"inputs":[{"name":"self"},{"name":"pattern"}],"output":null}],[11,"paint","","A drawing operator that paints the current source everywhere within the current clip region.",47,{"inputs":[{"name":"self"}],"output":null}],[11,"paint_with_alpha","","A drawing operator that paints the current source everywhere within the current clip region using a mask of constant alpha value alpha . The effect is similar to Context::paint(), but the drawing is faded out using the alpha value.",47,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[11,"stroke","","A drawing operator that strokes the current path according to the current line width, line join, line cap, and dash settings. After Context::stroke(), the current path will be cleared from the cairo context. See Context::set_line_width(), Context::set_line_join(), Context::set_line_cap(), Context::set_dash(), and Context::stroke_preserve().",47,{"inputs":[{"name":"self"}],"output":null}],[11,"stroke_preserve","","A drawing operator that strokes the current path according to the current line width, line join, line cap, and dash settings. Unlike Context::stroke(), Context::stroke_preserve() preserves the path within the cairo context.",47,{"inputs":[{"name":"self"}],"output":null}],[11,"stroke_extents","","Computes a bounding box in user coordinates covering the area that would be affected, (the \"inked\" area), by a Context::stroke() operation given the current path and stroke parameters. If the current path is empty, returns an empty rectangle ((0,0), (0,0)). Surface dimensions and clipping are not taken into account.",47,null],[11,"in_stroke","","Tests whether the given point is inside the area that would be affected by a  Context::stroke() operation given the current path and stroking parameters. Surface dimensions and clipping are not taken into account.",47,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":{"name":"bool"}}],[11,"copy_page","","Emits the current page for backends that support multiple pages, but doesn't clear it, so, the contents of the current page will be retained for the next page too. Use Context::show_page() if you want to get an empty page after the emission.",47,{"inputs":[{"name":"self"}],"output":null}],[11,"show_page","","Emits and clears the current page for backends that support multiple pages. Use Context::copy_page() if you don't want to clear the page.",47,{"inputs":[{"name":"self"}],"output":null}],[11,"get_reference_count","","Returns the current reference count of self.",47,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"translate","","Modifies the current transformation matrix (CTM) by translating the user-space origin by (tx , ty ). This offset is interpreted as a user-space coordinate according to the CTM in place before the new call to cairo_translate(). In other words, the translation of the user-space origin takes place after any existing transformation.",47,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"scale","","Modifies the current transformation matrix (CTM) by scaling the X and Y user-space axes by sx and sy respectively. The scaling of the axes takes place after any existing transformation of user space.",47,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"rotate","","Modifies the current transformation matrix (CTM) by rotating the user-space axes by angle radians. The rotation of the axes takes places after any existing transformation of user space. The rotation direction for positive angles is from the positive X axis toward the positive Y axis.",47,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[11,"transform","","",47,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":null}],[11,"set_matrix","","",47,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":null}],[11,"get_matrix","","",47,{"inputs":[{"name":"self"}],"output":{"name":"matrix"}}],[11,"identity_matrix","","Resets the current transformation matrix (CTM) by setting it equal to the identity matrix. That is, the user-space and device-space axes will be aligned and one user-space unit will transform to one device-space unit.",47,{"inputs":[{"name":"self"}],"output":null}],[11,"user_to_device","","Transform a coordinate from user space to device space by multiplying the given point by the current transformation matrix (CTM).",47,null],[11,"user_to_device_distance","","Transform a distance vector from user space to device space. This function is similar to Context::user_to_device() except that the translation components of the CTM will be ignored when transforming (dx ,dy ).",47,null],[11,"device_to_user","","Transform a coordinate from device space to user space by multiplying the given point by the inverse of the current transformation matrix (CTM).",47,null],[11,"device_to_user_distance","","Transform a distance vector from device space to user space. This function is similar to Context::device_to_user() except that the translation components of the inverse CTM will be ignored when transforming (dx ,dy ).",47,null],[11,"select_font_face","","Note: The Context::select_font_face() function call is part of what the cairo designers call the \"toy\" text API. It is convenient for short demos and simple programs, but it is not expected to be adequate for serious text-using applications.",47,{"inputs":[{"name":"self"},{"name":"str"},{"name":"fontslant"},{"name":"fontweight"}],"output":null}],[11,"set_font_size","","Sets the current font matrix to a scale by a factor of size , replacing any font matrix previously set with Context::set_font_size() or Context::set_font_matrix(). This results in a font size of size user space units. (More precisely, this matrix will result in the font's em-square being a size by size square in user space.)",47,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[11,"set_font_matrix","","",47,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":null}],[11,"get_font_matrix","","Stores the current font matrix into matrix . See Context::set_font_matrix().",47,{"inputs":[{"name":"self"}],"output":{"name":"matrix"}}],[11,"set_font_options","","Sets a set of custom font rendering options for the Context. Rendering options are derived by merging these options with the options derived from underlying surface; if the value in options has a default value (like Antialias::Default), then the value from the surface is used.",47,{"inputs":[{"name":"self"},{"name":"fontoptions"}],"output":null}],[11,"get_font_options","","Retrieves font rendering options set via Context::set_font_options. Note that the returned options do not include any options derived from the underlying surface; they are literally the options passed to Context::set_font_options().",47,{"inputs":[{"name":"self"}],"output":{"name":"fontoptions"}}],[11,"set_font_face","","Replaces the current FontFace object in the Context with font_face. The replaced font face in the cairo_t will be destroyed if there are no other references to it.",47,{"inputs":[{"name":"self"},{"name":"fontface"}],"output":null}],[11,"get_font_face","","Gets the current font face for a Context object.",47,{"inputs":[{"name":"self"}],"output":{"name":"fontface"}}],[11,"set_scaled_font","","Replaces the current font face, font matrix, and font options in the Context with those of the ScaledFont object. Except for some translation, the current CTM of the Context should be the same as that of the ScaledFont object, which can be accessed using Context::scaled_font_get_ctm().",47,{"inputs":[{"name":"self"},{"name":"scaledfont"}],"output":null}],[11,"get_scaled_font","","Gets the current scaled font for a Context.",47,{"inputs":[{"name":"self"}],"output":{"name":"scaledfont"}}],[11,"show_text","","A drawing operator that generates the shape from a string of UTF-8 characters, rendered according to the current FontFace, FontSize (FontMatrix), and font_options.",47,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[11,"show_glyphs","","",47,null],[11,"show_text_glyphs","","A drawing operator that generates the shape from an array of glyphs, rendered according to the current font face, font size (font matrix), and font options.",47,null],[11,"font_extents","","Gets the font extents for the currently selected font.",47,{"inputs":[{"name":"self"}],"output":{"name":"fontextents"}}],[11,"text_extents","","Gets the extents for a string of text. The extents describe a user-space rectangle that encloses the \"inked\" portion of the text, (as it would be drawn by Context::show_text()). Additionally, the x_advance and y_advance values indicate the amount by which the current point would be advanced by Context::show_text().",47,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"textextents"}}],[11,"glyph_extents","","Gets the extents for an array of glyphs. The extents describe a user-space rectangle that encloses the \"inked\" portion of the glyphs, (as they would be drawn by Context::show_glyphs()). Additionally, the x_advance and y_advance values indicate the amount by which the current point would be advanced by Context::show_glyphs().",47,null],[11,"copy_path","","Creates a copy of the current path and returns it to the user as a Path. See PathData for hints on how to iterate over the returned data structure.",47,{"inputs":[{"name":"self"}],"output":{"name":"path"}}],[11,"copy_path_flat","","Gets a flattened copy of the current path and returns it to the user as a Path. See PathData for hints on how to iterate over the returned data structure.",47,{"inputs":[{"name":"self"}],"output":{"name":"path"}}],[11,"append_path","","Append the path onto the current path. The path may be either the return value from one of Context::copy_path() or Context::copy_path_flat() or it may be constructed manually. See Path for details on how the path data structure should be initialized, and note that path.status must be initialized to Status::Success.",47,{"inputs":[{"name":"self"},{"name":"path"}],"output":null}],[11,"has_current_point","","Returns whether a current point is defined on the current path. See Context::get_current_point() for details on the current point.",47,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get_current_point","","Gets the current point of the current path, which is conceptually the final point reached by the path so far.",47,null],[11,"new_path","","Clears the current path. After this call there will be no path and no current point.",47,{"inputs":[{"name":"self"}],"output":null}],[11,"new_sub_path","","Begin a new sub-path. Note that the existing path is not affected. After this call there will be no current point.",47,{"inputs":[{"name":"self"}],"output":null}],[11,"close_path","","Adds a line segment to the path from the current point to the beginning of the current sub-path, (the most recent point passed to cairo_move_to()), and closes this sub-path. After this call the current point will be at the joined endpoint of the sub-path.",47,{"inputs":[{"name":"self"}],"output":null}],[11,"arc","","Adds a circular arc of the given radius to the current path. The arc is centered at (xc , yc ), begins at angle1 and proceeds in the direction of increasing angles to end at angle2 . If angle2 is less than angle1 it will be progressively increased by 2*M_PI until it is greater than angle1 .",47,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"arc_negative","","Adds a circular arc of the given radius to the current path. The arc is centered at (xc , yc ), begins at angle1 and proceeds in the direction of decreasing angles to end at angle2 . If angle2 is greater than angle1 it will be progressively decreased by 2*M_PI until it is less than angle1.",47,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"curve_to","","Adds a cubic Bézier spline to the path from the current point to position (x3 , y3 ) in user-space coordinates, using (x1 , y1 ) and (x2 , y2 ) as the control points. After this call the current point will be (x3 , y3 ).",47,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"line_to","","Adds a line to the path from the current point to position (x , y ) in user-space coordinates. After this call the current point will be (x , y ).",47,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"move_to","","Begin a new sub-path. After this call the current point will be (x , y ).",47,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"rectangle","","Adds a closed sub-path rectangle of the given size to the current path at position (x , y ) in user-space coordinates.",47,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"text_path","","Adds closed paths for the glyphs to the current path. The generated path if  filled, achieves an effect similar to that of Context::show_glyphs().",47,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[11,"glyph_path","","",47,null],[11,"rel_curve_to","","Relative-coordinate version of Context::curve_to(). All offsets are relative to the current point. Adds a cubic Bézier spline to the path from the current point to a point offset from the current point by (dx3 , dy3 ), using points offset by (dx1 , dy1 ) and (dx2 , dy2 ) as the control points. After this call the current point will be offset by (dx3 , dy3 ).",47,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"rel_line_to","","Relative-coordinate version of Context::line_to(). Adds a line to the path from the current point to a point that is offset from the current point by (dx , dy ) in user space. After this call the current point will be offset by (dx , dy ).",47,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"rel_move_to","","Begin a new sub-path. After this call the current point will offset by (x , y ).",47,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",37,{"inputs":[{"name":"status"}],"output":{"name":"self"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",37,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",37,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",38,{"inputs":[{"name":"status"}],"output":{"name":"self"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",38,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",38,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"from","","",48,{"inputs":[{"name":"surface"}],"output":{"name":"result"}}],[11,"create","","",48,{"inputs":[{"name":"t"},{"name":"f64"},{"name":"f64"}],"output":{"name":"pdfsurface"}}],[11,"as_ref","","",48,{"inputs":[{"name":"self"}],"output":{"name":"surface"}}],[11,"deref","","",48,{"inputs":[{"name":"self"}],"output":{"name":"surface"}}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"pdfsurface"}}],[11,"to_glib_none","","",48,{"inputs":[{"name":"self"}],"output":{"name":"stash"}}],[11,"from_glib_none","","",48,null],[11,"from_glib_full","","",48,null],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",49,{"inputs":[{"name":"surface"}],"output":{"name":"result"}}],[11,"from_raw_full","","",49,null],[11,"create","","",49,{"inputs":[{"name":"format"},{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[11,"create_for_data","","",49,{"inputs":[{"name":"box"},{"name":"f"},{"name":"format"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[11,"get_data","","",49,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"get_format","","",49,{"inputs":[{"name":"self"}],"output":{"name":"format"}}],[11,"get_height","","",49,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_stride","","",49,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_width","","",49,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"to_glib_none","","",49,{"inputs":[{"name":"self"}],"output":{"name":"stash"}}],[11,"from_glib_none","","",49,null],[11,"from_glib_full","","",49,null],[11,"as_ref","","",49,{"inputs":[{"name":"self"}],"output":{"name":"surface"}}],[11,"deref","","",49,{"inputs":[{"name":"self"}],"output":{"name":"surface"}}],[11,"clone","","",49,{"inputs":[{"name":"self"}],"output":{"name":"imagesurface"}}],[11,"drop","","",50,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",50,null],[11,"deref_mut","","",50,null],[11,"create_from_png","","",49,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[11,"write_to_png","","",49,{"inputs":[{"name":"self"},{"name":"w"}],"output":{"name":"result"}}],[11,"ensure_status","","",51,{"inputs":[{"name":"self"}],"output":null}],[11,"iter","","",51,{"inputs":[{"name":"self"}],"output":{"name":"pathsegments"}}],[11,"drop","","",51,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"pathsegment"}}],[11,"eq","","",36,{"inputs":[{"name":"self"},{"name":"pathsegment"}],"output":{"name":"bool"}}],[11,"ne","","",36,{"inputs":[{"name":"self"},{"name":"pathsegment"}],"output":{"name":"bool"}}],[11,"next","","",52,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"ensure_status","cairo::prelude","",42,{"inputs":[{"name":"self"}],"output":null}],[11,"status","","Checks whether an error has previously occurred for this pattern.",42,{"inputs":[{"name":"self"}],"output":{"name":"status"}}],[11,"get_reference_count","","Returns the current reference count of self.",42,{"inputs":[{"name":"self"}],"output":{"name":"isize"}}],[11,"set_extend","","Sets the mode to be used for drawing outside the area of a pattern. See cairo_extend_t for details on the semantics of each extend strategy.",42,{"inputs":[{"name":"self"},{"name":"extend"}],"output":null}],[11,"get_extend","","Gets the current extend mode for a pattern. See Extend enum for details on the semantics of each extend strategy.",42,{"inputs":[{"name":"self"}],"output":{"name":"extend"}}],[11,"set_filter","","Sets the filter to be used for resizing when using this pattern. See Filter enum for details on each filter.",42,{"inputs":[{"name":"self"},{"name":"filter"}],"output":null}],[11,"get_filter","","Gets the current filter for a pattern. See Filter enum for details on each filter.",42,{"inputs":[{"name":"self"}],"output":{"name":"filter"}}],[11,"set_matrix","","",42,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":null}],[11,"get_matrix","","",42,{"inputs":[{"name":"self"}],"output":{"name":"matrix"}}],[11,"add_color_stop_rgb","","Adds an opaque color stop to a gradient pattern. The offset specifies the location along the gradient's control vector. For example, a linear gradient's control vector is from (x0,y0) to (x1,y1) while a radial gradient's control vector is from any point on the start circle to the corresponding point on the end circle.",41,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"add_color_stop_rgba","","Adds a translucent color stop to a gradient pattern. The offset specifies the location along the gradient's control vector. For example, a linear gradient's control vector is from (x0,y0) to (x1,y1) while a radial gradient's control vector is from any point on the start circle to the corresponding point on the end circle.",41,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"get_color_stop_count","","Gets the number of color stops specified in the given gradient pattern.",41,{"inputs":[{"name":"self"}],"output":{"name":"isize"}}],[11,"get_color_stop_rgba","","Gets the color and offset information at the given index for a gradient pattern. Values of index range from 0 to n-1 where n is the number returned by Pattern::get_color_stop_count().",41,null],[11,"wrap","cairo","",53,null],[11,"reference","","",53,{"inputs":[{"name":"self"}],"output":{"name":"solidpattern"}}],[11,"get_ptr","","",53,null],[11,"drop","","",53,{"inputs":[{"name":"self"}],"output":null}],[11,"from_rgb","","Creates a new SolidPattern corresponding to an opaque color. The color components are floating point numbers in the range 0 to 1.",53,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"solidpattern"}}],[11,"from_rgba","","Creates a new SolidPattern corresponding to a translucent color. The color components are floating point numbers in the range 0 to",53,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"solidpattern"}}],[11,"get_rgba","","Gets the solid color for a solid color pattern.",53,null],[11,"wrap","","",54,null],[11,"reference","","",54,{"inputs":[{"name":"self"}],"output":{"name":"lineargradient"}}],[11,"get_ptr","","",54,null],[11,"drop","","",54,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Create a new linear gradient Pattern object along the line defined by (x0, y0) and (x1, y1). Before using the gradient pattern, a number of color stops should be defined using Pattern::add_color_stop_rgb() or Pattern::add_color_stop_rgba().",54,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"lineargradient"}}],[11,"get_linear_points","","Gets the gradient endpoints for a linear gradient.",54,null],[11,"wrap","","",55,null],[11,"reference","","",55,{"inputs":[{"name":"self"}],"output":{"name":"radialgradient"}}],[11,"get_ptr","","",55,null],[11,"drop","","",55,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Creates a new radial gradient Pattern between the two circles defined by (cx0, cy0, radius0) and (cx1, cy1, radius1). Before using the gradient pattern, a number of color stops should be defined using Pattern::add_color_stop_rgb() or Pattern::add_color_stop_rgba().",55,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"radialgradient"}}],[11,"get_radial_circles","","Gets the gradient endpoint circles for a radial gradient, each specified as a center coordinate and a radius.",55,null],[11,"wrap","","",56,null],[11,"reference","","",56,{"inputs":[{"name":"self"}],"output":{"name":"surfacepattern"}}],[11,"get_ptr","","",56,null],[11,"drop","","",56,{"inputs":[{"name":"self"}],"output":null}],[11,"create","","",56,{"inputs":[{"name":"t"}],"output":{"name":"surfacepattern"}}],[11,"get_surface","","",56,{"inputs":[{"name":"self"}],"output":{"name":"surface"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"meshcorner"}}],[11,"eq","","",39,{"inputs":[{"name":"self"},{"name":"meshcorner"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",39,{"inputs":[{"name":"self"},{"name":"meshcorner"}],"output":{"name":"option"}}],[11,"wrap","","",57,null],[11,"reference","","",57,{"inputs":[{"name":"self"}],"output":{"name":"mesh"}}],[11,"get_ptr","","",57,null],[11,"drop","","",57,{"inputs":[{"name":"self"}],"output":null}],[11,"new","","Create a new mesh pattern.",57,{"inputs":[],"output":{"name":"mesh"}}],[11,"begin_patch","","Begin a patch in a mesh pattern.",57,{"inputs":[{"name":"self"}],"output":null}],[11,"end_patch","","Indicates the end of the current patch in a mesh pattern.",57,{"inputs":[{"name":"self"}],"output":null}],[11,"move_to","","Define the first point of the current patch in a mesh pattern.",57,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"line_to","","Adds a line to the current patch from the current point to position (x , y ) in pattern-space coordinates.",57,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"curve_to","","Adds a cubic Bézier spline to the current patch from the current point to position (x3 , y3 ) in pattern-space coordinates, using (x1 , y1 ) and (x2 , y2 ) as the control points.",57,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"set_control_point","","Set an internal control point of the current patch.",57,{"inputs":[{"name":"self"},{"name":"meshcorner"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"get_control_point","","Gets the control point point_num of patch patch_num for a mesh pattern.",57,null],[11,"set_corner_color_rgb","","Sets the color of a corner of the current patch in a mesh pattern.",57,{"inputs":[{"name":"self"},{"name":"meshcorner"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"set_corner_color_rgba","","Sets the color of a corner of the current patch in a mesh pattern.",57,{"inputs":[{"name":"self"},{"name":"meshcorner"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"get_corner_color_rgba","","Gets the color information in corner corner_num of patch patch_num for a mesh pattern.",57,null],[11,"get_patch_count","","Gets the number of patches specified in the given mesh pattern.",57,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"get_path","","Gets path defining the patch patch_num for a mesh pattern.",57,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"path"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"rectangleint"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",28,{"inputs":[{"name":"self"},{"name":"rectangleint"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"self"},{"name":"rectangleint"}],"output":{"name":"bool"}}],[11,"hash","","",28,null],[11,"as_ref","","",58,{"inputs":[{"name":"self"}],"output":{"name":"region"}}],[11,"clone","","",58,{"inputs":[{"name":"self"}],"output":{"name":"region"}}],[11,"drop","","",58,{"inputs":[{"name":"self"}],"output":null}],[11,"eq","","",58,{"inputs":[{"name":"self"},{"name":"region"}],"output":{"name":"bool"}}],[11,"create","","",58,{"inputs":[],"output":{"name":"region"}}],[11,"create_rectangle","","",58,{"inputs":[{"name":"rectangleint"}],"output":{"name":"region"}}],[11,"copy","","",58,{"inputs":[{"name":"self"}],"output":{"name":"region"}}],[11,"status","","",58,{"inputs":[{"name":"self"}],"output":{"name":"status"}}],[11,"get_extents","","",58,{"inputs":[{"name":"self"},{"name":"rectangleint"}],"output":null}],[11,"num_rectangles","","",58,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_rectangle","","",58,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"rectangleint"}}],[11,"is_empty","","",58,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"contains_point","","",58,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"contains_rectangle","","",58,{"inputs":[{"name":"self"},{"name":"rectangleint"}],"output":{"name":"regionoverlap"}}],[11,"translate","","",58,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"intersect","","",58,{"inputs":[{"name":"self"},{"name":"region"}],"output":{"name":"status"}}],[11,"intersect_rectangle","","",58,{"inputs":[{"name":"self"},{"name":"rectangleint"}],"output":{"name":"status"}}],[11,"subtract","","",58,{"inputs":[{"name":"self"},{"name":"region"}],"output":{"name":"status"}}],[11,"subtract_rectangle","","",58,{"inputs":[{"name":"self"},{"name":"rectangleint"}],"output":{"name":"status"}}],[11,"union","","",58,{"inputs":[{"name":"self"},{"name":"region"}],"output":{"name":"status"}}],[11,"union_rectangle","","",58,{"inputs":[{"name":"self"},{"name":"rectangleint"}],"output":{"name":"status"}}],[11,"xor","","",58,{"inputs":[{"name":"self"},{"name":"region"}],"output":{"name":"status"}}],[11,"xor_rectangle","","",58,{"inputs":[{"name":"self"},{"name":"rectangleint"}],"output":{"name":"status"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"status","","",59,{"inputs":[{"name":"self"}],"output":{"name":"status"}}],[11,"create_similar","","",59,{"inputs":[{"name":"self"},{"name":"content"},{"name":"i32"},{"name":"i32"}],"output":{"name":"surface"}}],[11,"quartz_create","","",59,{"inputs":[{"name":"format"},{"name":"u32"},{"name":"u32"}],"output":{"name":"surface"}}],[11,"quartz_create_for_cg_context","","",59,{"inputs":[{"name":"cgcontextref"},{"name":"u32"},{"name":"u32"}],"output":{"name":"surface"}}],[11,"quartz_get_cg_context","","",59,{"inputs":[{"name":"self"}],"output":{"name":"cgcontextref"}}],[11,"to_glib_none","","",59,{"inputs":[{"name":"self"}],"output":{"name":"stash"}}],[11,"from_glib_none","","",59,null],[11,"from_glib_full","","",59,null],[11,"as_ref","","",59,{"inputs":[{"name":"self"}],"output":{"name":"surface"}}],[11,"clone","","",59,{"inputs":[{"name":"self"}],"output":{"name":"surface"}}],[11,"drop","","",59,{"inputs":[{"name":"self"}],"output":null}],[11,"null","","",26,{"inputs":[],"output":{"name":"matrix"}}],[11,"new","","",26,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"matrix"}}],[11,"multiply","","",26,{"inputs":[{"name":"matrix"},{"name":"matrix"}],"output":{"name":"matrix"}}],[11,"identity","","",26,{"inputs":[],"output":{"name":"matrix"}}],[11,"init","","",26,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"translate","","",26,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"scale","","",26,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"rotate","","",26,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[11,"invert","","",26,{"inputs":[{"name":"self"}],"output":null}],[11,"try_invert","","",26,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"transform_distance","","",26,null],[11,"transform_point","","",26,null],[11,"to_raw_none","","",29,null],[11,"from_raw_none","","",29,null],[11,"from_raw_full","","",29,null],[11,"from_glib_none","","",29,null],[11,"from_glib_full","","",29,null],[11,"as_ref","","",29,{"inputs":[{"name":"self"}],"output":{"name":"xcbconnection"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"xcbconnection"}}],[11,"to_raw_none","","",33,null],[11,"from_raw_none","","",33,null],[11,"from_raw_full","","",33,null],[11,"from_glib_none","","",33,null],[11,"from_glib_full","","",33,null],[11,"as_ref","","",33,{"inputs":[{"name":"self"}],"output":{"name":"xcbrenderpictforminfo"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"xcbrenderpictforminfo"}}],[11,"to_raw_none","","",34,null],[11,"from_raw_none","","",34,null],[11,"from_raw_full","","",34,null],[11,"from_glib_none","","",34,null],[11,"from_glib_full","","",34,null],[11,"as_ref","","",34,{"inputs":[{"name":"self"}],"output":{"name":"xcbscreen"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"xcbscreen"}}],[11,"create","","",59,{"inputs":[{"name":"xcbconnection"},{"name":"xcbdrawable"},{"name":"xcbvisualtype"},{"name":"i32"},{"name":"i32"}],"output":{"name":"surface"}}],[11,"create_for_bitmap","","",59,{"inputs":[{"name":"xcbconnection"},{"name":"xcbscreen"},{"name":"xcbpixmap"},{"name":"i32"},{"name":"i32"}],"output":{"name":"surface"}}],[11,"create_with_xrender_format","","",59,{"inputs":[{"name":"xcbconnection"},{"name":"xcbscreen"},{"name":"xcbpixmap"},{"name":"xcbrenderpictforminfo"},{"name":"i32"},{"name":"i32"}],"output":{"name":"surface"}}],[11,"set_size","","",59,{"inputs":[{"name":"surface"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"set_drawable","","",59,{"inputs":[{"name":"surface"},{"name":"xcbdrawable"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"to_raw_none","","",35,null],[11,"from_raw_none","","",35,null],[11,"from_raw_full","","",35,null],[11,"from_glib_none","","",35,null],[11,"from_glib_full","","",35,null],[11,"as_ref","","",35,{"inputs":[{"name":"self"}],"output":{"name":"xcbvisualtype"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"xcbvisualtype"}}],[11,"to_raw_none","","",30,null],[11,"from_raw_none","","",30,null],[11,"from_raw_full","","",30,null],[11,"from_glib_none","","",30,null],[11,"from_glib_full","","",30,null],[11,"as_ref","","",30,{"inputs":[{"name":"self"}],"output":{"name":"device"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"device"}}],[11,"get_connection","","",30,{"inputs":[{"name":"self"}],"output":{"name":"xcbconnection"}}],[11,"debug_cap_xrender_version","","",30,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"debug_cap_xshm_version","","",30,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"debug_get_precision","","",30,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"debug_set_precision","","",30,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[8,"Pattern","","",null,null],[11,"ensure_status","cairo::prelude","",42,{"inputs":[{"name":"self"}],"output":null}],[11,"status","","Checks whether an error has previously occurred for this pattern.",42,{"inputs":[{"name":"self"}],"output":{"name":"status"}}],[11,"get_reference_count","","Returns the current reference count of self.",42,{"inputs":[{"name":"self"}],"output":{"name":"isize"}}],[11,"set_extend","","Sets the mode to be used for drawing outside the area of a pattern. See cairo_extend_t for details on the semantics of each extend strategy.",42,{"inputs":[{"name":"self"},{"name":"extend"}],"output":null}],[11,"get_extend","","Gets the current extend mode for a pattern. See Extend enum for details on the semantics of each extend strategy.",42,{"inputs":[{"name":"self"}],"output":{"name":"extend"}}],[11,"set_filter","","Sets the filter to be used for resizing when using this pattern. See Filter enum for details on each filter.",42,{"inputs":[{"name":"self"},{"name":"filter"}],"output":null}],[11,"get_filter","","Gets the current filter for a pattern. See Filter enum for details on each filter.",42,{"inputs":[{"name":"self"}],"output":{"name":"filter"}}],[11,"set_matrix","","",42,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":null}],[11,"get_matrix","","",42,{"inputs":[{"name":"self"}],"output":{"name":"matrix"}}],[8,"Gradient","cairo","",null,null],[11,"add_color_stop_rgb","cairo::prelude","Adds an opaque color stop to a gradient pattern. The offset specifies the location along the gradient's control vector. For example, a linear gradient's control vector is from (x0,y0) to (x1,y1) while a radial gradient's control vector is from any point on the start circle to the corresponding point on the end circle.",41,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"add_color_stop_rgba","","Adds a translucent color stop to a gradient pattern. The offset specifies the location along the gradient's control vector. For example, a linear gradient's control vector is from (x0,y0) to (x1,y1) while a radial gradient's control vector is from any point on the start circle to the corresponding point on the end circle.",41,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"get_color_stop_count","","Gets the number of color stops specified in the given gradient pattern.",41,{"inputs":[{"name":"self"}],"output":{"name":"isize"}}],[11,"get_color_stop_rgba","","Gets the color and offset information at the given index for a gradient pattern. Values of index range from 0 to n-1 where n is the number returned by Pattern::get_color_stop_count().",41,null],[8,"MatrixTrait","cairo","",null,null],[10,"null","","",40,{"inputs":[],"output":{"name":"matrix"}}],[10,"new","","",40,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"matrix"}}],[10,"multiply","","",40,{"inputs":[{"name":"matrix"},{"name":"matrix"}],"output":{"name":"matrix"}}],[10,"identity","","",40,{"inputs":[],"output":{"name":"matrix"}}],[10,"init","","",40,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"translate","","",40,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"scale","","",40,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"rotate","","",40,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"invert","","",40,{"inputs":[{"name":"self"}],"output":null}],[10,"try_invert","","",40,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"transform_distance","","",40,null],[10,"transform_point","","",40,null],[8,"XCBSurface","","",null,null],[10,"create","","",60,{"inputs":[{"name":"xcbconnection"},{"name":"xcbdrawable"},{"name":"xcbvisualtype"},{"name":"i32"},{"name":"i32"}],"output":{"name":"surface"}}],[10,"create_for_bitmap","","",60,{"inputs":[{"name":"xcbconnection"},{"name":"xcbscreen"},{"name":"xcbpixmap"},{"name":"i32"},{"name":"i32"}],"output":{"name":"surface"}}],[10,"create_with_xrender_format","","",60,{"inputs":[{"name":"xcbconnection"},{"name":"xcbscreen"},{"name":"xcbpixmap"},{"name":"xcbrenderpictforminfo"},{"name":"i32"},{"name":"i32"}],"output":{"name":"surface"}}],[10,"set_size","","",60,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_drawable","","",60,{"inputs":[{"name":"self"},{"name":"xcbdrawable"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"ensure_valid","","",0,null],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"textextents"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"fontslant"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"filter"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"glyph"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"operator"}}],[11,"clone","cairo::enums","",16,{"inputs":[{"name":"self"}],"output":{"name":"hintstyle"}}],[11,"clone","cairo","",18,{"inputs":[{"name":"self"}],"output":{"name":"surfacetype"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"fontextents"}}],[11,"clone","cairo::enums","",15,{"inputs":[{"name":"self"}],"output":{"name":"subpixelorder"}}],[11,"clone","cairo","",25,{"inputs":[{"name":"self"}],"output":{"name":"textcluster"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"pathdatatype"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"matrix"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"status"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"antialias"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"linejoin"}}],[11,"clone","cairo::enums","",10,{"inputs":[{"name":"self"}],"output":{"name":"patterntype"}}],[11,"clone","cairo","",7,{"inputs":[{"name":"self"}],"output":{"name":"content"}}],[11,"clone","cairo::enums","",17,{"inputs":[{"name":"self"}],"output":{"name":"hintmetrics"}}],[11,"clone","cairo","",19,{"inputs":[{"name":"self"}],"output":{"name":"format"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"extend"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"fillrule"}}],[11,"clone","cairo::enums","",13,{"inputs":[{"name":"self"}],"output":{"name":"textclusterflags"}}],[11,"clone","cairo","",3,{"inputs":[{"name":"self"}],"output":{"name":"linecap"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"fontweight"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"fonttype"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"cairo_rectangle_t"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"regionoverlap"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"self"},{"name":"linecap"}],"output":{"name":"option"}}],[11,"partial_cmp","","",11,{"inputs":[{"name":"self"},{"name":"fontslant"}],"output":{"name":"option"}}],[11,"partial_cmp","","",12,{"inputs":[{"name":"self"},{"name":"fontweight"}],"output":{"name":"option"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"self"},{"name":"fillrule"}],"output":{"name":"option"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"self"},{"name":"linejoin"}],"output":{"name":"option"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"self"},{"name":"operator"}],"output":{"name":"option"}}],[11,"partial_cmp","cairo::enums","",16,{"inputs":[{"name":"self"},{"name":"hintstyle"}],"output":{"name":"option"}}],[11,"partial_cmp","cairo","",8,{"inputs":[{"name":"self"},{"name":"extend"}],"output":{"name":"option"}}],[11,"partial_cmp","","",14,{"inputs":[{"name":"self"},{"name":"fonttype"}],"output":{"name":"option"}}],[11,"partial_cmp","cairo::enums","",10,{"inputs":[{"name":"self"},{"name":"patterntype"}],"output":{"name":"option"}}],[11,"partial_cmp","","",17,{"inputs":[{"name":"self"},{"name":"hintmetrics"}],"output":{"name":"option"}}],[11,"partial_cmp","","",13,{"inputs":[{"name":"self"},{"name":"textclusterflags"}],"output":{"name":"option"}}],[11,"partial_cmp","cairo","",9,{"inputs":[{"name":"self"},{"name":"filter"}],"output":{"name":"option"}}],[11,"partial_cmp","","",7,{"inputs":[{"name":"self"},{"name":"content"}],"output":{"name":"option"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"self"},{"name":"pathdatatype"}],"output":{"name":"option"}}],[11,"partial_cmp","cairo::enums","",15,{"inputs":[{"name":"self"},{"name":"subpixelorder"}],"output":{"name":"option"}}],[11,"partial_cmp","cairo","",1,{"inputs":[{"name":"self"},{"name":"antialias"}],"output":{"name":"option"}}],[11,"eq","","",19,{"inputs":[{"name":"self"},{"name":"format"}],"output":{"name":"bool"}}],[11,"eq","","",21,{"inputs":[{"name":"self"},{"name":"cairo_rectangle_t"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"self"},{"name":"cairo_rectangle_t"}],"output":{"name":"bool"}}],[11,"eq","cairo::enums","",10,{"inputs":[{"name":"self"},{"name":"patterntype"}],"output":{"name":"bool"}}],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"hintstyle"}],"output":{"name":"bool"}}],[11,"eq","","",17,{"inputs":[{"name":"self"},{"name":"hintmetrics"}],"output":{"name":"bool"}}],[11,"eq","cairo","",6,{"inputs":[{"name":"self"},{"name":"pathdatatype"}],"output":{"name":"bool"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"linecap"}],"output":{"name":"bool"}}],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"fonttype"}],"output":{"name":"bool"}}],[11,"eq","","",18,{"inputs":[{"name":"self"},{"name":"surfacetype"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"antialias"}],"output":{"name":"bool"}}],[11,"eq","cairo::enums","",15,{"inputs":[{"name":"self"},{"name":"subpixelorder"}],"output":{"name":"bool"}}],[11,"eq","cairo","",9,{"inputs":[{"name":"self"},{"name":"filter"}],"output":{"name":"bool"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"fillrule"}],"output":{"name":"bool"}}],[11,"eq","","",20,{"inputs":[{"name":"self"},{"name":"regionoverlap"}],"output":{"name":"bool"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"linejoin"}],"output":{"name":"bool"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"extend"}],"output":{"name":"bool"}}],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"fontslant"}],"output":{"name":"bool"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"content"}],"output":{"name":"bool"}}],[11,"eq","","",26,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"status"}],"output":{"name":"bool"}}],[11,"eq","cairo::enums","",13,{"inputs":[{"name":"self"},{"name":"textclusterflags"}],"output":{"name":"bool"}}],[11,"eq","cairo","",12,{"inputs":[{"name":"self"},{"name":"fontweight"}],"output":{"name":"bool"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"operator"}],"output":{"name":"bool"}}],[11,"fmt","cairo::enums","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","cairo","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","cairo::enums","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","cairo","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","cairo::enums","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","cairo","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","cairo::enums","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","cairo","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"stride_for_width","","",19,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"result"}}]],"paths":[[4,"Status"],[4,"Antialias"],[4,"FillRule"],[4,"LineCap"],[4,"LineJoin"],[4,"Operator"],[4,"PathDataType"],[4,"Content"],[4,"Extend"],[4,"Filter"],[4,"PatternType"],[4,"FontSlant"],[4,"FontWeight"],[4,"TextClusterFlags"],[4,"FontType"],[4,"SubpixelOrder"],[4,"HintStyle"],[4,"HintMetrics"],[4,"SurfaceType"],[4,"Format"],[4,"RegionOverlap"],[3,"Rectangle"],[3,"Glyph"],[3,"FontExtents"],[3,"TextExtents"],[3,"TextCluster"],[3,"Matrix"],[3,"RectangleVec"],[3,"RectangleInt"],[3,"XCBConnection"],[3,"Device"],[3,"XCBDrawable"],[3,"XCBPixmap"],[3,"XCBRenderPictFormInfo"],[3,"XCBScreen"],[3,"XCBVisualType"],[4,"PathSegment"],[4,"BorrowError"],[4,"IoError"],[4,"MeshCorner"],[8,"MatrixTrait"],[8,"Gradient"],[8,"Pattern"],[8,"SurfaceExt"],[3,"FontOptions"],[3,"FontFace"],[3,"ScaledFont"],[3,"Context"],[3,"PDFSurface"],[3,"ImageSurface"],[3,"ImageSurfaceData"],[3,"Path"],[3,"PathSegments"],[3,"SolidPattern"],[3,"LinearGradient"],[3,"RadialGradient"],[3,"SurfacePattern"],[3,"Mesh"],[3,"Region"],[3,"Surface"],[8,"XCBSurface"]]};
searchIndex["sourceview"] = {"doc":"","items":[[3,"Error","sourceview","A generic error capable of representing various error domains (types).",null,null],[3,"Object","","The base class in the object hierarchy.",null,null],[3,"Buffer","","",null,null],[3,"Completion","","",null,null],[3,"CompletionContext","","",null,null],[3,"CompletionInfo","","",null,null],[3,"CompletionItem","","",null,null],[3,"CompletionProposal","","",null,null],[3,"CompletionProvider","","",null,null],[3,"CompletionWords","","",null,null],[3,"Gutter","","",null,null],[3,"GutterRenderer","","",null,null],[3,"GutterRendererPixbuf","","",null,null],[3,"GutterRendererText","","",null,null],[3,"Language","","",null,null],[3,"LanguageManager","","",null,null],[3,"Map","","",null,null],[3,"Mark","","",null,null],[3,"MarkAttributes","","",null,null],[3,"PrintCompositor","","",null,null],[3,"SearchContext","","",null,null],[3,"SearchSettings","","",null,null],[3,"Style","","",null,null],[3,"StyleScheme","","",null,null],[3,"StyleSchemeChooser","","",null,null],[3,"StyleSchemeManager","","",null,null],[3,"Tag","","",null,null],[3,"UndoManager","","",null,null],[3,"View","","",null,null],[3,"CompletionActivation","","",null,null],[3,"DrawSpacesFlags","","",null,null],[3,"GutterRendererState","","",null,null],[4,"BackgroundPatternType","","",null,null],[13,"None","","",0,null],[13,"Grid","","",0,null],[4,"ChangeCaseType","","",null,null],[13,"Lower","","",1,null],[13,"Upper","","",1,null],[13,"Toggle","","",1,null],[13,"Title","","",1,null],[4,"GutterRendererAlignmentMode","","The alignment mode of the renderer, when a cell spans multiple lines (due to text wrapping).",null,null],[13,"Cell","","",2,null],[13,"First","","",2,null],[13,"Last","","",2,null],[4,"SmartHomeEndType","","",null,null],[13,"Disabled","","",3,null],[13,"Before","","",3,null],[13,"After","","",3,null],[13,"Always","","",3,null],[0,"signal","","",null,null],[3,"Inhibit","sourceview::signal","Whether to propagate the signal to the default handler.",null,null],[12,"0","","",4,null],[0,"prelude","sourceview","",null,null],[8,"BufferExt","sourceview::prelude","Trait containing all `Buffer` methods.",null,null],[10,"backward_iter_to_source_mark","","Moves `iter` to the position of the previous `Mark` of the given category. Returns `true` if `iter` was moved. If `category` is NULL, the previous source mark can be of any category.",5,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"p"}],"output":{"name":"bool"}}],[10,"begin_not_undoable_action","","Marks the beginning of a not undoable action on the buffer, disabling the undo manager. Typically you would call this function before initially setting the contents of the buffer (e.g. when loading a file in a text editor).",5,{"inputs":[{"name":"self"}],"output":null}],[10,"can_redo","","Determines whether a source buffer can redo the last action (i.e. if the last operation was an undo).",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"can_undo","","Determines whether a source buffer can undo the last action.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"change_case","","Changes the case of the text between the specified iterators.",5,{"inputs":[{"name":"self"},{"name":"changecasetype"},{"name":"textiter"},{"name":"textiter"}],"output":null}],[10,"create_source_mark","","Creates a source mark in the `self` of category `category`. A source mark is a `gtk::TextMark` but organised into categories. Depending on the category a pixbuf can be specified that will be displayed along the line of the mark.",5,{"inputs":[{"name":"self"},{"name":"p"},{"name":"str"},{"name":"textiter"}],"output":{"name":"option"}}],[10,"end_not_undoable_action","","Marks the end of a not undoable action on the buffer. When the last not undoable block is closed through the call to this function, the list of undo actions is cleared and the undo manager is re-enabled.",5,{"inputs":[{"name":"self"}],"output":null}],[10,"ensure_highlight","","Forces buffer to analyze and highlight the given area synchronously.",5,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"textiter"}],"output":null}],[10,"forward_iter_to_source_mark","","Moves `iter` to the position of the next `Mark` of the given `category`. Returns `true` if `iter` was moved. If `category` is NULL, the next source mark can be of any category.",5,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"p"}],"output":{"name":"bool"}}],[10,"get_context_classes_at_iter","","Get all defined context classes at `iter`.",5,{"inputs":[{"name":"self"},{"name":"textiter"}],"output":{"name":"vec"}}],[10,"get_highlight_matching_brackets","","Determines whether bracket match highlighting is activated for the source buffer.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_highlight_syntax","","Determines whether syntax highlighting is activated in the source buffer.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_language","","Returns the `Language` associated with the buffer, see `BufferExt::set_language`. The returned object should not be unreferenced by the user.",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_max_undo_levels","","Determines the number of undo levels the buffer will track for buffer edits.",5,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_source_marks_at_iter","","Returns the list of marks of the given category at `iter`. If `category` is `None` it returns all marks at `iter`.",5,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"p"}],"output":{"name":"vec"}}],[10,"get_source_marks_at_line","","Returns the list of marks of the given category at `line`. If `category` is `None`, all marks at `line` are returned.",5,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"p"}],"output":{"name":"vec"}}],[10,"get_style_scheme","","Returns the `StyleScheme` associated with the buffer, see `BufferExt::set_style_scheme`. The returned object should not be unreferenced by the user.",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_undo_manager","","Returns the `UndoManager` associated with the buffer, see `BufferExt::set_undo_manager`. The returned object should not be unreferenced by the user.",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"iter_backward_to_context_class_toggle","","Moves backward to the next toggle (on or off) of the context class. If no matching context class toggles are found, returns `false`, otherwise `true`. Does not return toggles located at `iter`, only toggles after `iter`. Sets `iter` to the location of the toggle, or to the end of the buffer if no toggle is found.",5,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"str"}],"output":{"name":"bool"}}],[10,"iter_forward_to_context_class_toggle","","Moves forward to the next toggle (on or off) of the context class. If no matching context class toggles are found, returns `false`, otherwise `true`. Does not return toggles located at `iter`, only toggles after `iter`. Sets `iter` to the location of the toggle, or to the end of the buffer if no toggle is found.",5,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"str"}],"output":{"name":"bool"}}],[10,"iter_has_context_class","","Check if the class `context_class` is set on `iter`.",5,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"str"}],"output":{"name":"bool"}}],[10,"join_lines","","Joins the lines of text between the specified iterators.",5,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"textiter"}],"output":null}],[10,"redo","","Redoes the last undo operation. Use `BufferExt::can_redo` to check whether a call to this function will have any effect.",5,{"inputs":[{"name":"self"}],"output":null}],[10,"remove_source_marks","","Remove all marks of `category` between `start` and `end` from the buffer. If `category` is NULL, all marks in the range will be removed.",5,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"textiter"},{"name":"p"}],"output":null}],[10,"set_highlight_matching_brackets","","Controls the bracket match highlighting function in the buffer. If activated, when you position your cursor over a bracket character (a parenthesis, a square bracket, etc.) the matching opening or closing bracket character will be highlighted. ## `highlight` `true` if you want matching brackets highlighted.",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_highlight_syntax","","Controls whether syntax is highlighted in the buffer. If `highlight` is `true`, the text will be highlighted according to the syntax patterns specified in the language set with `BufferExt::set_language`. If `highlight` is `false`, syntax highlighting is disabled and all the `gtk::TextTag` objects that have been added by the syntax highlighting engine are removed from the buffer. ## `highlight` `true` to enable syntax highlighting, `false` to disable it.",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_language","","Associate a `Language` with the buffer. If `language` is not-`None` and syntax highlighting is enabled (see `BufferExt::set_highlight_syntax`), the syntax patterns defined in `language` will be used to highlight the text contained in the buffer. If `language` is `None`, the text contained in the buffer is not highlighted.",5,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_max_undo_levels","","Sets the number of undo levels for user actions the buffer will track. If the number of user actions exceeds the limit set by this function, older actions will be discarded.",5,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_style_scheme","","Sets style scheme used by the buffer. If `scheme` is `None` no style scheme is used. ## `scheme` a `StyleScheme` or `None`.",5,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_undo_manager","","Set the buffer undo manager. If `manager` is `None` the default undo manager will be set. ## `manager` A `UndoManager` or `None`.",5,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"undo","","Undoes the last user action which modified the buffer. Use `BufferExt::can_undo` to check whether a call to this function will have any effect.",5,{"inputs":[{"name":"self"}],"output":null}],[10,"get_property_can_redo","","",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_can_undo","","",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"connect_highlight_updated","","",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_redo","","",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_source_mark_updated","","",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_undo","","",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_can_redo_notify","","",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_can_undo_notify","","",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_highlight_matching_brackets_notify","","",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_highlight_syntax_notify","","",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_language_notify","","",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_max_undo_levels_notify","","",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_style_scheme_notify","","",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_undo_manager_notify","","",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CompletionExt","","Trait containing all `Completion` methods.",null,null],[10,"add_provider","","Add a new `CompletionProvider` to the completion object. This will add a reference `provider`, so make sure to unref your own copy when you no longer need it. ## `provider` a `CompletionProvider`.",6,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"block_interactive","","Block interactive completion. This can be used to disable interactive completion when inserting or deleting text from the buffer associated with the completion. Use `CompletionExt::unblock_interactive` to enable interactive completion again.",6,{"inputs":[{"name":"self"}],"output":null}],[10,"get_info_window","","The info widget is the window where the completion displays optional extra information of the proposal.",6,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_providers","","Get list of providers registered on `self`. The returned list is owned by the completion and should not be freed.",6,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_view","","The `View` associated with `self`, or `None` if the view has been destroyed.",6,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"hide","","Hides the completion if it is active (visible).",6,{"inputs":[{"name":"self"}],"output":null}],[10,"move_window","","Move the completion window to a specific iter.",6,{"inputs":[{"name":"self"},{"name":"textiter"}],"output":null}],[10,"remove_provider","","Remove `provider` from the completion. ## `provider` a `CompletionProvider`.",6,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"show","","Starts a new completion with the specified `CompletionContext` and a list of potential candidate providers for completion.",6,null],[10,"unblock_interactive","","Unblock interactive completion. This can be used after using `CompletionExt::block_interactive` to enable interactive completion again.",6,{"inputs":[{"name":"self"}],"output":null}],[10,"get_property_accelerators","","",6,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_accelerators","","",6,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_auto_complete_delay","","",6,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_auto_complete_delay","","",6,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_proposal_page_size","","",6,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_proposal_page_size","","",6,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_provider_page_size","","",6,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_provider_page_size","","",6,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_remember_info_visibility","","",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_remember_info_visibility","","",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_select_on_show","","",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_select_on_show","","",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_show_headers","","",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_show_headers","","",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_show_icons","","",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_show_icons","","",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_activate_proposal","","",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_hide","","",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_cursor","","",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_page","","",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_populate_context","","",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_show","","",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_accelerators_notify","","",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_auto_complete_delay_notify","","",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_proposal_page_size_notify","","",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_provider_page_size_notify","","",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_remember_info_visibility_notify","","",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_select_on_show_notify","","",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_headers_notify","","",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_icons_notify","","",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_view_notify","","",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CompletionContextExt","","Trait containing all `CompletionContext` methods.",null,null],[10,"add_proposals","","Providers can use this function to add proposals to the completion. They can do so asynchronously by means of the `finished` argument. Providers must ensure that they always call this function with `finished` set to `true` once each population (even if no proposals need to be added). Population occurs when the `CompletionProvider::populate` function is called. ## `provider` a `CompletionProvider`. ## `proposals` The list of proposals to add. ## `finished` Whether the provider is finished adding proposals.",7,null],[10,"get_activation","","Get the context activation.",7,{"inputs":[{"name":"self"}],"output":{"name":"completionactivation"}}],[10,"get_iter","","Get the iter at which the completion was invoked. Providers can use this to determine how and if to match proposals. ## `iter` a `gtk::TextIter`.",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_activation","","",7,{"inputs":[{"name":"self"},{"name":"completionactivation"}],"output":null}],[10,"get_property_completion","","",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_cancelled","","",7,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_activation_notify","","",7,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_completion_notify","","",7,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CompletionInfoExt","","Trait containing all `CompletionInfo` methods.",null,null],[10,"get_widget","","Get the current content widget.",8,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_widget","","Sets the content widget of the info window. See that the previous widget will lose a reference and it can be destroyed, so if you do not want this to happen you must use `gobject::Object::ref` before calling this method.",8,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"connect_before_show","","",8,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CompletionItemExt","","Trait containing all `CompletionItem` methods.",null,null],[10,"set_property_icon","","",9,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"set_property_icon_name","","",9,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"set_property_info","","",9,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"set_property_label","","",9,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"set_property_markup","","",9,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"set_property_text","","",9,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"connect_property_gicon_notify","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_icon_notify","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_icon_name_notify","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_info_notify","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_label_notify","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_markup_notify","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_text_notify","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CompletionProposalExt","","Trait containing all `CompletionProposal` methods.",null,null],[10,"changed","","Emits the \"changed\" signal on `self`. This should be called by implementations whenever the name, icon or info of the proposal has changed.",10,{"inputs":[{"name":"self"}],"output":null}],[10,"equal","","Get whether two proposal objects are the same. This is used to (together with `CompletionProposal::hash`) to match proposals in the completion model. By default, it uses direct equality (`g_direct_equal`). ## `other` a `CompletionProposal`.",10,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"get_icon","","Gets the `gdk_pixbuf::Pixbuf` for the icon of `self`.",10,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_icon_name","","Gets the icon name of `self`.",10,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_info","","Gets extra information associated to the proposal. This information will be used to present the user with extra, detailed information about the selected proposal. The returned string must be freed with `g_free`.",10,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_label","","Gets the label of `self`. The label is shown in the list of proposals as plain text. If you need any markup (such as bold or italic text), you have to implement `CompletionProposal::get_markup`. The returned string must be freed with `g_free`.",10,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_markup","","Gets the label of `self` with markup. The label is shown in the list of proposals and may contain markup. This will be used instead of `CompletionProposal::get_label` if implemented. The returned string must be freed with `g_free`.",10,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_text","","Gets the text of `self`. The text that is inserted into the text buffer when the proposal is activated by the default activation. You are free to implement a custom activation handler in the provider and not implement this function. For more information, see `CompletionProvider::activate_proposal`. The returned string must be freed with `g_free`.",10,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"hash","","Get the hash value of `self`. This is used to (together with `CompletionProposal::equal`) to match proposals in the completion model. By default, it uses a direct hash (`g_direct_hash`).",10,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"connect_changed","","",10,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CompletionProviderExt","","Trait containing all `CompletionProvider` methods.",null,null],[10,"activate_proposal","","Activate `proposal` at `iter`. When this functions returns `false`, the default activation of `proposal` will take place which replaces the word at `iter` with the text of `proposal` (see `CompletionProposal::get_text`).",11,{"inputs":[{"name":"self"},{"name":"p"},{"name":"textiter"}],"output":{"name":"bool"}}],[10,"get_activation","","Get with what kind of activation the provider should be activated.",11,{"inputs":[{"name":"self"}],"output":{"name":"completionactivation"}}],[10,"get_icon","","Get the `gdk_pixbuf::Pixbuf` for the icon of the `self`.",11,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_icon_name","","Gets the icon name of `self`.",11,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_info_widget","","Get a customized info widget to show extra information of a proposal. This allows for customized widgets on a proposal basis, although in general providers will have the same custom widget for all their proposals and `proposal` can be ignored. The implementation of this function is optional.",11,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[10,"get_interactive_delay","","Get the delay in milliseconds before starting interactive completion for this provider. A value of -1 indicates to use the default value as set by the `Completion:auto-complete-delay` property.",11,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_name","","Get the name of the provider. This should be a translatable name for display to the user. For example: _(\"Document word completion provider\"). The returned string must be freed with `g_free`.",11,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_priority","","Get the provider priority. The priority determines the order in which proposals appear in the completion popup. Higher priorities are sorted before lower priorities. The default priority is 0.",11,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_start_iter","","Get the `gtk::TextIter` at which the completion for `proposal` starts. When implemented, this information is used to position the completion window accordingly when a proposal is selected in the completion window. The `proposal` text inside the completion window is aligned on `iter`.",11,{"inputs":[{"name":"self"},{"name":"completioncontext"},{"name":"p"}],"output":{"name":"option"}}],[10,"match_","","",11,{"inputs":[{"name":"self"},{"name":"completioncontext"}],"output":{"name":"bool"}}],[10,"populate","","Populate `context` with proposals from `self` added with the `CompletionContextExt::add_proposals` function. ## `context` a `CompletionContext`.",11,{"inputs":[{"name":"self"},{"name":"completioncontext"}],"output":null}],[10,"update_info","","Update extra information shown in `info` for `proposal`.",11,{"inputs":[{"name":"self"},{"name":"p"},{"name":"completioninfo"}],"output":null}],[8,"CompletionWordsExt","","Trait containing all `CompletionWords` methods.",null,null],[10,"register","","Registers `buffer` in the `self` provider. ## `buffer` a `gtk::TextBuffer`",12,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"unregister","","Unregisters `buffer` from the `self` provider. ## `buffer` a `gtk::TextBuffer`",12,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_property_activation","","",12,{"inputs":[{"name":"self"},{"name":"completionactivation"}],"output":null}],[10,"set_property_icon","","",12,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"set_property_interactive_delay","","",12,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_minimum_word_size","","",12,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_minimum_word_size","","",12,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"set_property_name","","",12,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"set_property_priority","","",12,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_proposals_batch_size","","",12,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_proposals_batch_size","","",12,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_scan_batch_size","","",12,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_scan_batch_size","","",12,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"connect_property_activation_notify","","",12,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_icon_notify","","",12,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_interactive_delay_notify","","",12,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_minimum_word_size_notify","","",12,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_name_notify","","",12,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_priority_notify","","",12,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_proposals_batch_size_notify","","",12,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_scan_batch_size_notify","","",12,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"GutterExt","","Trait containing all `Gutter` methods.",null,null],[10,"get_renderer_at_pos","","Finds the `GutterRenderer` at (x, y). ## `x` The x position to get identified. ## `y` The y position to get identified.",13,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_window","","Get the `gdk::Window` of the gutter. The window will only be available when the gutter has at least one, non-zero width, cell renderer packed.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"insert","","Insert `renderer` into the gutter. If `renderer` is yet unowned then gutter claims its ownership. Otherwise just increases renderer's reference count. `renderer` cannot be already inserted to another gutter.",13,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":{"name":"bool"}}],[10,"queue_draw","","Invalidates the drawable area of the gutter. You can use this to force a redraw of the gutter if something has changed and needs to be redrawn.",13,{"inputs":[{"name":"self"}],"output":null}],[10,"remove","","Removes `renderer` from `self`.",13,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"reorder","","Reorders `renderer` in `self` to new `position`.",13,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":null}],[10,"set_padding","","",13,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"get_property_view","","",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_property_window_type","","",13,{"inputs":[{"name":"self"}],"output":{"name":"textwindowtype"}}],[10,"get_property_xpad","","",13,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_xpad","","",13,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_ypad","","",13,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_ypad","","",13,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"connect_property_view_notify","","",13,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_window_type_notify","","",13,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_xpad_notify","","",13,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_ypad_notify","","",13,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"GutterRendererExt","","Trait containing all `GutterRenderer` methods.",null,null],[10,"activate","","Emits the `GutterRenderer::activate` signal of the renderer. This is called from `Gutter` and should never have to be called manually. ## `iter` a `gtk::TextIter` at the start of the line where the renderer is activated ## `area` a `gdk::Rectangle` of the cell area where the renderer is activated ## `event` the event that triggered the activation",14,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"rectangle"},{"name":"event"}],"output":null}],[10,"begin","","Called when drawing a region begins. The region to be drawn is indicated by `start` and `end`. The purpose is to allow the implementation to precompute some state before the draw method is called for each cell. ## `cr` a `cairo::Context` ## `background_area` a `gdk::Rectangle` ## `cell_area` a `gdk::Rectangle` ## `start` a `gtk::TextIter` ## `end` a `gtk::TextIter`",14,{"inputs":[{"name":"self"},{"name":"context"},{"name":"rectangle"},{"name":"rectangle"},{"name":"textiter"},{"name":"textiter"}],"output":null}],[10,"draw","","Main renderering method. Implementations should implement this method to draw onto the cairo context. The `background_area` indicates the total area of the cell to be drawn. The `cell_area` indicates the area where content can be drawn (text, images, etc).",14,{"inputs":[{"name":"self"},{"name":"context"},{"name":"rectangle"},{"name":"rectangle"},{"name":"textiter"},{"name":"textiter"},{"name":"gutterrendererstate"}],"output":null}],[10,"end","","Called when drawing a region of lines has ended.",14,{"inputs":[{"name":"self"}],"output":null}],[10,"get_alignment","","Get the x-alignment and y-alignment of the gutter renderer. ## `xalign` return location for the x-alignment (can be `None`) ## `yalign` return location for the y-alignment (can be `None`)",14,null],[10,"get_alignment_mode","","Get the alignment mode. The alignment mode describes the manner in which the renderer is aligned (see :xalign and :yalign).",14,{"inputs":[{"name":"self"}],"output":{"name":"gutterrendereralignmentmode"}}],[10,"get_background","","Get the background color of the renderer. ## `color` return value for a `gdk::RGBA`",14,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_padding","","Get the x-padding and y-padding of the gutter renderer. ## `xpad` return location for the x-padding (can be `None`) ## `ypad` return location for the y-padding (can be `None`)",14,null],[10,"get_size","","Get the size of the renderer.",14,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_view","","Get the view associated to the gutter renderer",14,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_visible","","Get whether the gutter renderer is visible.",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_window_type","","Get the `gtk::TextWindowType` associated with the gutter renderer.",14,{"inputs":[{"name":"self"}],"output":{"name":"textwindowtype"}}],[10,"query_activatable","","Get whether the renderer is activatable at the location in `event`. This is called from `Gutter` to determine whether a renderer is activatable using the mouse pointer. ## `iter` a `gtk::TextIter` at the start of the line to be activated ## `area` a `gdk::Rectangle` of the cell area to be activated ## `event` the event that triggered the query",14,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"rectangle"},{"name":"event"}],"output":{"name":"bool"}}],[10,"query_data","","Emit the `GutterRenderer::query-data` signal. This function is called to query for data just before rendering a cell. This is called from the `Gutter`. Implementations can override the default signal handler or can connect a signal handler externally to the `GutterRenderer::query-data` signal. ## `start` a `gtk::TextIter`. ## `end` a `gtk::TextIter`. ## `state` a `GutterRendererState`.",14,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"textiter"},{"name":"gutterrendererstate"}],"output":null}],[10,"query_tooltip","","Emits the `GutterRenderer::query-tooltip` signal. This function is called from `Gutter`. Implementations can override the default signal handler or can connect to the signal externally. ## `iter` a `gtk::TextIter`. ## `area` a `gdk::Rectangle`. ## `x` The x position of the tooltip. ## `y` The y position of the tooltip. ## `tooltip` a `gtk::Tooltip`.",14,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"rectangle"},{"name":"i32"},{"name":"i32"},{"name":"tooltip"}],"output":{"name":"bool"}}],[10,"queue_draw","","Emits the `GutterRenderer::queue-draw` signal of the renderer. Call this from an implementation to inform that the renderer has changed such that it needs to redraw.",14,{"inputs":[{"name":"self"}],"output":null}],[10,"set_alignment","","Set the alignment of the gutter renderer. Both `xalign` and `yalign` can be -1, which means the values will not be changed (this allows changing only one of the values).",14,{"inputs":[{"name":"self"},{"name":"f32"},{"name":"f32"}],"output":null}],[10,"set_alignment_mode","","Set the alignment mode. The alignment mode describes the manner in which the renderer is aligned (see :xalign and :yalign). ## `mode` a `GutterRendererAlignmentMode`",14,{"inputs":[{"name":"self"},{"name":"gutterrendereralignmentmode"}],"output":null}],[10,"set_background","","Set the background color of the renderer. If `color` is set to `None`, the renderer will not have a background color. ## `color` a `gdk::RGBA` or `None`",14,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_padding","","Set the padding of the gutter renderer. Both `xpad` and `ypad` can be -1, which means the values will not be changed (this allows changing only one of the values).",14,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_size","","Sets the size of the renderer. A value of -1 specifies that the size is to be determined dynamically. ## `size` the size",14,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_visible","","Set whether the gutter renderer is visible. ## `visible` the visibility",14,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_background_rgba","","",14,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_background_rgba","","",14,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_background_set","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_background_set","","",14,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_xalign","","",14,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_xalign","","",14,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"get_property_xpad","","",14,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_xpad","","",14,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_yalign","","",14,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_yalign","","",14,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"get_property_ypad","","",14,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_ypad","","",14,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"connect_activate","","",14,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_query_activatable","","",14,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_query_data","","",14,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_query_tooltip","","",14,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_queue_draw","","",14,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_alignment_mode_notify","","",14,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_background_rgba_notify","","",14,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_background_set_notify","","",14,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_size_notify","","",14,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_view_notify","","",14,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_visible_notify","","",14,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_window_type_notify","","",14,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_xalign_notify","","",14,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_xpad_notify","","",14,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_yalign_notify","","",14,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_ypad_notify","","",14,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"GutterRendererPixbufExt","","Trait containing all `GutterRendererPixbuf` methods.",null,null],[10,"get_icon_name","","",15,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_pixbuf","","Get the pixbuf of the renderer.",15,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_stock_id","","",15,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_icon_name","","`icon_name` the icon name",15,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_pixbuf","","`pixbuf` the pixbuf",15,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_stock_id","","",15,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"connect_property_gicon_notify","","",15,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_icon_name_notify","","",15,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pixbuf_notify","","",15,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_stock_id_notify","","",15,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"GutterRendererTextExt","","Trait containing all `GutterRendererText` methods.",null,null],[10,"measure","","Measures the text provided using the pango layout used by the `GutterRendererText`. ## `text` the text to measure. ## `width` location to store the width of the text in pixels,  or `None`. ## `height` location to store the height of the text in  pixels, or `None`.",16,null],[10,"measure_markup","","Measures the pango markup provided using the pango layout used by the `GutterRendererText`. ## `markup` the pango markup to measure. ## `width` location to store the width of the text in pixels,  or `None`. ## `height` location to store the height of the text in  pixels, or `None`.",16,null],[10,"set_markup","","",16,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_text","","",16,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"get_property_markup","","",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_property_text","","",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_property_markup_notify","","",16,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_text_notify","","",16,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"LanguageExt","","Trait containing all `Language` methods.",null,null],[10,"get_globs","","Returns the globs associated to this language. This is just an utility wrapper around `LanguageExt::get_metadata` to retrieve the \"globs\" metadata property and split it into an array.",17,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_hidden","","Returns whether the language should be hidden from the user.",17,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_id","","Returns the ID of the language. The ID is not locale-dependent. The returned string is owned by `self` and should not be freed or modified.",17,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_metadata","","`name` metadata property name.",17,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_mime_types","","Returns the mime types associated to this language. This is just an utility wrapper around `LanguageExt::get_metadata` to retrieve the \"mimetypes\" metadata property and split it into an array.",17,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_name","","Returns the localized name of the language. The returned string is owned by `self` and should not be freed or modified.",17,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_section","","Returns the localized section of the language. Each language belong to a section (ex. HTML belogs to the Markup section). The returned string is owned by `self` and should not be freed or modified.",17,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_style_ids","","Returns the ids of the styles defined by this `self`.",17,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_style_name","","Returns the name of the style with ID `style_id` defined by this `self`. ## `style_id` a style ID.",17,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"connect_property_hidden_notify","","",17,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_id_notify","","",17,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_name_notify","","",17,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_section_notify","","",17,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"LanguageManagerExt","","Trait containing all `LanguageManager` methods.",null,null],[10,"get_language","","Gets the `Language` identified by the given `id` in the language manager. ## `id` a language id.",18,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_language_ids","","Returns the ids of the available languages.",18,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_search_path","","Gets the list directories where `self` looks for language files.",18,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"guess_language","","Picks a `Language` for given file name and content type, according to the information in lang files. Either `filename` or `content_type` may be `None`. This function can be used as follows:",18,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":{"name":"option"}}],[10,"set_search_path","","Sets the list of directories where the `self` looks for language files. If `dirs` is `None`, the search path is reset to default.",18,null],[10,"connect_property_language_ids_notify","","",18,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_search_path_notify","","",18,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"MapExt","","Trait containing all `Map` methods.",null,null],[10,"get_view","","Gets the `Map:view` property, which is the view this widget is mapping.",19,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_view","","Sets the view that `self` will be doing the mapping to.",19,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"get_property_view","","",19,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_view","","",19,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"connect_property_view_notify","","",19,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"MarkExt","","Trait containing all `Mark` methods.",null,null],[10,"get_category","","Returns the mark category.",20,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"next","","Returns the next `Mark` in the buffer or `None` if the mark was not added to a buffer. If there is no next mark, `None` will be returned.",20,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[10,"prev","","Returns the previous `Mark` in the buffer or `None` if the mark was not added to a buffer. If there is no previous mark, `None` is returned.",20,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_property_category","","",20,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_property_category_notify","","",20,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"MarkAttributesExt","","Trait containing all `MarkAttributes` methods.",null,null],[10,"get_background","","Stores background color in `background`. ## `background` a `gdk::RGBA`.",21,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_icon_name","","Gets a name of an icon to be used as a base for rendered icon. Note that the icon name can be `None` if it wasn't set earlier.",21,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_stock_id","","Gets a stock id of an icon used by this attributes. Note that the stock id can be `None` if it wasn't set earlier.",21,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_tooltip_markup","","Queries for a tooltip by emitting a `MarkAttributes::query-tooltip-markup` signal. The tooltip may contain a markup. ## `mark` a `Mark`.",21,{"inputs":[{"name":"self"},{"name":"mark"}],"output":{"name":"option"}}],[10,"get_tooltip_text","","Queries for a tooltip by emitting a `MarkAttributes::query-tooltip-text` signal. The tooltip is a plain text. ## `mark` a `Mark`.",21,{"inputs":[{"name":"self"},{"name":"mark"}],"output":{"name":"option"}}],[10,"set_background","","Sets background color to the one given in `background`. ## `background` a `gdk::RGBA`.",21,{"inputs":[{"name":"self"},{"name":"rgba"}],"output":null}],[10,"set_icon_name","","Sets a name of an icon to be used as a base for rendered icon. ## `icon_name` name of an icon to be used.",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_pixbuf","","Sets a pixbuf to be used as a base for rendered icon. ## `pixbuf` a `gdk_pixbuf::Pixbuf` to be used.",21,{"inputs":[{"name":"self"},{"name":"pixbuf"}],"output":null}],[10,"set_stock_id","","Sets stock id to be used as a base for rendered icon.",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"get_property_pixbuf","","",21,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_query_tooltip_markup","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_query_tooltip_text","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_background_notify","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gicon_notify","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_icon_name_notify","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pixbuf_notify","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_stock_id_notify","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"PrintCompositorExt","","Trait containing all `PrintCompositor` methods.",null,null],[10,"get_body_font_name","","Returns the name of the font used to print the text body. The returned string must be freed with `g_free`.",22,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_bottom_margin","","Gets the bottom margin in units of `unit`.",22,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"f64"}}],[10,"get_buffer","","Gets the `Buffer` associated with the compositor. The returned object reference is owned by the compositor object and should not be unreferenced.",22,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_footer_font_name","","Returns the name of the font used to print the page footer. The returned string must be freed with `g_free`.",22,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_header_font_name","","Returns the name of the font used to print the page header. The returned string must be freed with `g_free`.",22,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_highlight_syntax","","Determines whether the printed text will be highlighted according to the buffer rules. Note that highlighting will happen only if the buffer to print has highlighting activated.",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_left_margin","","Gets the left margin in units of `unit`.",22,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"f64"}}],[10,"get_line_numbers_font_name","","Returns the name of the font used to print line numbers on the left margin. The returned string must be freed with `g_free`.",22,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_n_pages","","Returns the number of pages in the document or `<code>`-1`</code>` if the document has not been completely paginated.",22,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_pagination_progress","","Returns the current fraction of the document pagination that has been completed.",22,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_print_footer","","Determines if a footer is set to be printed for each page. A footer will be printed if this function returns `true` `<emphasis>`and`</emphasis>` some format strings have been specified with `PrintCompositorExt::set_footer_format`.",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_print_header","","Determines if a header is set to be printed for each page. A header will be printed if this function returns `true` `<emphasis>`and`</emphasis>` some format strings have been specified with `PrintCompositorExt::set_header_format`.",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_print_line_numbers","","Returns the interval used for line number printing. If the value is 0, no line numbers will be printed. The default value is 1 (i.e. numbers printed in all lines).",22,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_right_margin","","Gets the right margin in units of `unit`.",22,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"f64"}}],[10,"get_tab_width","","Returns the width of tabulation in characters for printed text.",22,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_top_margin","","Gets the top margin in units of `unit`.",22,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"f64"}}],[10,"get_wrap_mode","","Gets the line wrapping mode for the printed text.",22,{"inputs":[{"name":"self"}],"output":{"name":"wrapmode"}}],[10,"set_body_font_name","","Sets the default font for the printed text.",22,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_bottom_margin","","Sets the bottom margin used by `self`.",22,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"unit"}],"output":null}],[10,"set_footer_font_name","","Sets the font for printing the page footer. If `None` is supplied, the default font (i.e. the one being used for the text) will be used instead.",22,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_footer_format","","See `PrintCompositorExt::set_header_format` for more information about the parameters.",22,{"inputs":[{"name":"self"},{"name":"bool"},{"name":"p"},{"name":"q"},{"name":"r"}],"output":null}],[10,"set_header_font_name","","Sets the font for printing the page header. If `None` is supplied, the default font (i.e. the one being used for the text) will be used instead.",22,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_header_format","","Sets strftime like header format strings, to be printed on the left, center and right of the top of each page. The strings may include strftime(3) codes which will be expanded at print time. A subset of `strftime` codes are accepted, see `glib::DateTime::format` for more details on the accepted format specifiers. Additionally the following format specifiers are accepted: - `N`: the page number - `Q`: the page count.",22,{"inputs":[{"name":"self"},{"name":"bool"},{"name":"p"},{"name":"q"},{"name":"r"}],"output":null}],[10,"set_highlight_syntax","","Sets whether the printed text will be highlighted according to the buffer rules. Both color and font style are applied.",22,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_left_margin","","Sets the left margin used by `self`.",22,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"unit"}],"output":null}],[10,"set_line_numbers_font_name","","Sets the font for printing line numbers on the left margin. If `None` is supplied, the default font (i.e. the one being used for the text) will be used instead.",22,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_print_footer","","Sets whether you want to print a footer in each page. The footer consists of three pieces of text and an optional line separator, configurable with `PrintCompositorExt::set_footer_format`.",22,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_print_header","","Sets whether you want to print a header in each page. The header consists of three pieces of text and an optional line separator, configurable with `PrintCompositorExt::set_header_format`.",22,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_print_line_numbers","","Sets the interval for printed line numbers. If `interval` is 0 no numbers will be printed. If greater than 0, a number will be printed every `interval` lines (i.e. 1 will print all line numbers).",22,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"set_right_margin","","Sets the right margin used by `self`.",22,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"unit"}],"output":null}],[10,"set_tab_width","","Sets the width of tabulation in characters for printed text.",22,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"set_top_margin","","Sets the top margin used by `self`.",22,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"unit"}],"output":null}],[10,"set_wrap_mode","","Sets the line wrapping mode for the printed text.",22,{"inputs":[{"name":"self"},{"name":"wrapmode"}],"output":null}],[10,"connect_property_body_font_name_notify","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_buffer_notify","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_footer_font_name_notify","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_header_font_name_notify","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_highlight_syntax_notify","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_line_numbers_font_name_notify","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_n_pages_notify","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_print_footer_notify","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_print_header_notify","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_print_line_numbers_notify","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_tab_width_notify","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_wrap_mode_notify","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"SearchContextExt","","Trait containing all `SearchContext` methods.",null,null],[10,"backward","","Synchronous backward search. It is recommended to use the asynchronous functions instead, to not block the user interface. However, if you are sure that the `buffer` is small, this function is more convenient to use.",23,{"inputs":[{"name":"self"},{"name":"textiter"}],"output":{"name":"option"}}],[10,"forward","","Synchronous forward search. It is recommended to use the asynchronous functions instead, to not block the user interface. However, if you are sure that the `buffer` is small, this function is more convenient to use.",23,{"inputs":[{"name":"self"},{"name":"textiter"}],"output":{"name":"option"}}],[10,"get_buffer","","",23,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_highlight","","",23,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_match_style","","",23,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_occurrence_position","","Gets the position of a search occurrence. If the buffer is not already fully scanned, the position may be unknown, and -1 is returned. If 0 is returned, it means that this part of the buffer has already been scanned, and that `match_start` and `match_end` don't delimit an occurrence.",23,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"textiter"}],"output":{"name":"i32"}}],[10,"get_occurrences_count","","Gets the total number of search occurrences. If the buffer is not already fully scanned, the total number of occurrences is unknown, and -1 is returned.",23,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_regex_error","","Regular expression patterns must follow certain rules. If `SearchSettings:search-text` breaks a rule, the error can be retrieved with this function. The error domain is `G_REGEX_ERROR`.",23,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_settings","","",23,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"replace","","Replaces a search match by another text. If `match_start` and `match_end` doesn't correspond to a search match, `false` is returned.",23,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"textiter"},{"name":"str"}],"output":{"name":"result"}}],[10,"replace_all","","Replaces all search matches by another text. It is a synchronous function, so it can block the user interface.",23,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"set_highlight","","Enables or disables the search occurrences highlighting.",23,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_match_style","","Set the style to apply on search matches. If `match_style` is `None`, default theme's scheme 'match-style' will be used. To enable or disable the search highlighting, use `SearchContextExt::set_highlight`.",23,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_settings","","Associate a `SearchSettings` with the search context. If `settings` is `None`, a new one will be created.",23,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"connect_property_buffer_notify","","",23,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_highlight_notify","","",23,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_match_style_notify","","",23,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_occurrences_count_notify","","",23,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_regex_error_notify","","",23,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_settings_notify","","",23,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"SearchSettingsExt","","Trait containing all `SearchSettings` methods.",null,null],[10,"get_at_word_boundaries","","",24,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_case_sensitive","","",24,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_regex_enabled","","",24,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_search_text","","Gets the text to search. The return value must not be freed.",24,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_wrap_around","","",24,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_at_word_boundaries","","Change whether the search is done at word boundaries. If `at_word_boundaries` is `true`, a search match must start and end a word. The match can span multiple words. See also `gtk::TextIter::starts_word` and `gtk::TextIter::ends_word`.",24,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_case_sensitive","","Enables or disables the case sensitivity for the search.",24,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_regex_enabled","","Enables or disables whether to search by regular expressions. If enabled, the `SearchSettings:search-text` property contains the pattern of the regular expression.",24,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_search_text","","Sets the text to search. If `text` is `None` or is empty, the search will be disabled. A copy of `text` will be made, so you can safely free `text` after a call to this function.",24,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_wrap_around","","Enables or disables the wrap around search. If `wrap_around` is `true`, the forward search continues at the beginning of the buffer if no search occurrences are found. Similarly, the backward search continues to search at the end of the buffer.",24,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_property_at_word_boundaries_notify","","",24,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_case_sensitive_notify","","",24,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_regex_enabled_notify","","",24,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_search_text_notify","","",24,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_wrap_around_notify","","",24,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"StyleExt","","Trait containing all `Style` methods.",null,null],[10,"get_property_background","","",25,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_property_background_set","","",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_bold","","",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_bold_set","","",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_foreground","","",25,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_property_foreground_set","","",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_italic","","",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_italic_set","","",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_line_background","","",25,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_property_line_background_set","","",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_pango_underline","","",25,{"inputs":[{"name":"self"}],"output":{"name":"underline"}}],[10,"get_property_scale","","",25,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_property_scale_set","","",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_strikethrough","","",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_strikethrough_set","","",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_underline","","",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_underline_color","","",25,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_property_underline_color_set","","",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_underline_set","","",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"connect_property_background_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_background_set_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_bold_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_bold_set_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_foreground_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_foreground_set_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_italic_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_italic_set_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_line_background_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_line_background_set_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pango_underline_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_scale_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_scale_set_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_strikethrough_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_strikethrough_set_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_underline_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_underline_color_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_underline_color_set_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_underline_set_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"StyleSchemeExt","","Trait containing all `StyleScheme` methods.",null,null],[10,"get_authors","","",26,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_description","","",26,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_filename","","",26,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_id","","",26,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_name","","",26,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_style","","",26,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_property_description","","",26,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_property_filename","","",26,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_property_id","","",26,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_property_name","","",26,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_property_description_notify","","",26,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_filename_notify","","",26,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_id_notify","","",26,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_name_notify","","",26,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"StyleSchemeChooserExt","","Trait containing all `StyleSchemeChooser` methods.",null,null],[10,"get_style_scheme","","Gets the currently-selected scheme.",27,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_style_scheme","","Sets the scheme.",27,{"inputs":[{"name":"self"},{"name":"stylescheme"}],"output":null}],[10,"connect_property_style_scheme_notify","","",27,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"StyleSchemeManagerExt","","Trait containing all `StyleSchemeManager` methods.",null,null],[10,"append_search_path","","Appends `path` to the list of directories where the `self` looks for style scheme files. See `StyleSchemeManagerExt::set_search_path` for details. ## `path` a directory or a filename.",28,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"force_rescan","","Mark any currently cached information about the available style scehems as invalid. All the available style schemes will be reloaded next time the `self` is accessed.",28,{"inputs":[{"name":"self"}],"output":null}],[10,"get_scheme","","Looks up style scheme by id. ## `scheme_id` style scheme id to find.",28,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_scheme_ids","","Returns the ids of the available style schemes.",28,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_search_path","","Returns the current search path for the `self`. See `StyleSchemeManagerExt::set_search_path` for details.",28,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"prepend_search_path","","Prepends `path` to the list of directories where the `self` looks for style scheme files. See `StyleSchemeManagerExt::set_search_path` for details. ## `path` a directory or a filename.",28,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_search_path","","Sets the list of directories where the `self` looks for style scheme files. If `path` is `None`, the search path is reset to default. ## `path`",28,null],[10,"connect_property_scheme_ids_notify","","",28,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_search_path_notify","","",28,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"TagExt","","Trait containing all `Tag` methods.",null,null],[10,"get_property_draw_spaces","","",29,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_draw_spaces","","",29,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_draw_spaces_set","","",29,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_draw_spaces_set","","",29,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_property_draw_spaces_notify","","",29,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_draw_spaces_set_notify","","",29,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"UndoManagerExt","","Trait containing all `UndoManager` methods.",null,null],[10,"begin_not_undoable_action","","Begin a not undoable action on the buffer. All changes between this call and the call to `UndoManager::end_not_undoable_action` cannot be undone. This function should be re-entrant.",30,{"inputs":[{"name":"self"}],"output":null}],[10,"can_redo","","Get whether there are redo operations available.",30,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"can_redo_changed","","Emits the `UndoManager::can-redo-changed` signal.",30,{"inputs":[{"name":"self"}],"output":null}],[10,"can_undo","","Get whether there are undo operations available.",30,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"can_undo_changed","","Emits the `UndoManager::can-undo-changed` signal.",30,{"inputs":[{"name":"self"}],"output":null}],[10,"end_not_undoable_action","","Ends a not undoable action on the buffer.",30,{"inputs":[{"name":"self"}],"output":null}],[10,"redo","","Perform a single redo. Calling this function when there are no redo operations available is an error. Use `UndoManager::can_redo` to find out if there are redo operations available.",30,{"inputs":[{"name":"self"}],"output":null}],[10,"undo","","Perform a single undo. Calling this function when there are no undo operations available is an error. Use `UndoManager::can_undo` to find out if there are undo operations available.",30,{"inputs":[{"name":"self"}],"output":null}],[10,"connect_can_redo_changed","","",30,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_can_undo_changed","","",30,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ViewExt","","Trait containing all `View` methods.",null,null],[10,"get_auto_indent","","Returns whether auto-indentation of text is enabled.",31,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_background_pattern","","Returns the `BackgroundPatternType` specifying if and how the background pattern should be displayed for this `self`.",31,{"inputs":[{"name":"self"}],"output":{"name":"backgroundpatterntype"}}],[10,"get_completion","","Gets the `Completion` associated with `self`.",31,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_draw_spaces","","Returns the `DrawSpacesFlags` specifying if and how spaces should be displayed for this `self`.",31,{"inputs":[{"name":"self"}],"output":{"name":"drawspacesflags"}}],[10,"get_gutter","","Returns the `Gutter` object associated with `window_type` for `self`. Only GTK_TEXT_WINDOW_LEFT and GTK_TEXT_WINDOW_RIGHT are supported, respectively corresponding to the left and right gutter. The line numbers and mark category icons are rendered in the left gutter.",31,{"inputs":[{"name":"self"},{"name":"textwindowtype"}],"output":{"name":"option"}}],[10,"get_highlight_current_line","","Returns whether the current line is highlighted.",31,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_indent_on_tab","","Returns whether when the tab key is pressed the current selection should get indented instead of replaced with the \\t character.",31,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_indent_width","","Returns the number of spaces to use for each step of indent. See `ViewExt::set_indent_width` for details.",31,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_insert_spaces_instead_of_tabs","","Returns whether when inserting a tabulator character it should be replaced by a group of space characters.",31,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_right_margin_position","","Gets the position of the right margin in the given `self`.",31,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_show_line_marks","","Returns whether line marks are displayed beside the text.",31,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_line_numbers","","Returns whether line numbers are displayed beside the text.",31,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_right_margin","","Returns whether a right margin is displayed.",31,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_smart_backspace","","Returns `true` if pressing the Backspace key will try to delete spaces up to the previous tab stop.",31,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_smart_home_end","","Returns a `SmartHomeEndType` end value specifying how the cursor will move when HOME and END keys are pressed.",31,{"inputs":[{"name":"self"}],"output":{"name":"smarthomeendtype"}}],[10,"get_tab_width","","Returns the width of tabulation in characters.",31,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_visual_column","","Determines the visual column at `iter` taking into consideration the `View:tab-width` of `self`. ## `iter` a position in `self`.",31,{"inputs":[{"name":"self"},{"name":"textiter"}],"output":{"name":"u32"}}],[10,"indent_lines","","Insert one indentation level at the beginning of the specified lines.",31,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"textiter"}],"output":null}],[10,"set_auto_indent","","If `true` auto-indentation of text is enabled.",31,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_background_pattern","","Set if and how the background pattern should be displayed.",31,{"inputs":[{"name":"self"},{"name":"backgroundpatterntype"}],"output":null}],[10,"set_draw_spaces","","Set if and how the spaces should be visualized. Specifying `flags` as 0 will disable display of spaces.",31,{"inputs":[{"name":"self"},{"name":"drawspacesflags"}],"output":null}],[10,"set_highlight_current_line","","If `highlight` is `true` the current line will be highlighted. ## `highlight` whether to highlight the current line.",31,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_indent_on_tab","","If `true`, when the tab key is pressed when several lines are selected, the selected lines are indented of one level instead of being replaced with a \\t character. Shift+Tab unindents the selection.",31,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_indent_width","","Sets the number of spaces to use for each step of indent when the tab key is pressed. If `width` is -1, the value of the `View:tab-width` property will be used.",31,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_insert_spaces_instead_of_tabs","","If `true` a tab key pressed is replaced by a group of space characters. Of course it is still possible to insert a real \\t programmatically with the `gtk::TextBuffer` API. ## `enable` whether to insert spaces instead of tabs.",31,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_mark_attributes","","Sets attributes and priority for the `category`. ## `category` the category. ## `attributes` mark attributes. ## `priority` priority of the category.",31,{"inputs":[{"name":"self"},{"name":"str"},{"name":"markattributes"},{"name":"i32"}],"output":null}],[10,"set_right_margin_position","","Sets the position of the right margin in the given `self`. ## `pos` the width in characters where to position the right margin.",31,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"set_show_line_marks","","If `true` line marks will be displayed beside the text.",31,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_line_numbers","","If `true` line numbers will be displayed beside the text. ## `show` whether line numbers should be displayed.",31,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_right_margin","","If `true` a right margin is displayed. ## `show` whether to show a right margin.",31,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_smart_backspace","","When set to `true`, pressing the Backspace key will try to delete spaces up to the previous tab stop.",31,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_smart_home_end","","Set the desired movement of the cursor when HOME and END keys are pressed. ## `smart_home_end` the desired behavior among `SmartHomeEndType`.",31,{"inputs":[{"name":"self"},{"name":"smarthomeendtype"}],"output":null}],[10,"set_tab_width","","Sets the width of tabulation in characters. The `gtk::TextBuffer` still contains \\t characters, but they can take a different visual width in a `View` widget. ## `width` width of tab in characters.",31,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"unindent_lines","","Removes one indentation level at the beginning of the specified lines.",31,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"textiter"}],"output":null}],[10,"get_property_show_line_marks","","",31,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_show_line_marks","","",31,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_change_case","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_change_number","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_join_lines","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_line_mark_activated","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_lines","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_to_matching_bracket","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_words","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_redo","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_show_completion","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_smart_home_end","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_undo","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_auto_indent_notify","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_background_pattern_notify","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_completion_notify","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_draw_spaces_notify","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_highlight_current_line_notify","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_indent_on_tab_notify","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_indent_width_notify","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_insert_spaces_instead_of_tabs_notify","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_right_margin_position_notify","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_line_marks_notify","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_line_numbers_notify","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_right_margin_notify","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_smart_backspace_notify","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_smart_home_end_notify","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_tab_width_notify","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[11,"clone","sourceview","",32,{"inputs":[{"name":"self"}],"output":{"name":"buffer"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",32,null],[11,"static_type","","",32,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",32,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new source buffer. ## `table` a `gtk::TextTagTable`, or `None` to create a new one.",32,{"inputs":[{"name":"p"}],"output":{"name":"buffer"}}],[11,"new_with_language","","Creates a new source buffer using the highlighting patterns in `language`. This is equivalent to creating a new source buffer with a new tag table and then calling `BufferExt::set_language`. ## `language` a `Language`.",32,{"inputs":[{"name":"language"}],"output":{"name":"buffer"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"completion"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",33,null],[11,"static_type","","",33,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",33,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"completioncontext"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",34,null],[11,"static_type","","",34,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",34,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"completioninfo"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",35,null],[11,"static_type","","",35,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",35,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","",35,{"inputs":[],"output":{"name":"completioninfo"}}],[11,"default","","",35,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"completionitem"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",36,null],[11,"static_type","","",36,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",36,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Create a new `CompletionItem` with label `label`, icon `icon` and extra information `info`. Both `icon` and `info` can be `None` in which case there will be no icon shown and no extra information available. ## `label` The item label. ## `text` The item text. ## `icon` The item icon. ## `info` The item extra information.",36,{"inputs":[{"name":"str"},{"name":"str"},{"name":"p"},{"name":"q"}],"output":{"name":"completionitem"}}],[11,"new_from_stock","","Creates a new `CompletionItem` from a stock item. If `label` is `None`, the stock label will be used.",36,{"inputs":[{"name":"p"},{"name":"str"},{"name":"str"},{"name":"q"}],"output":{"name":"completionitem"}}],[11,"new_with_markup","","Create a new `CompletionItem` with markup label `markup`, icon `icon` and extra information `info`. Both `icon` and `info` can be `None` in which case there will be no icon shown and no extra information available. ## `markup` The item markup label. ## `text` The item text. ## `icon` The item icon. ## `info` The item extra information.",36,{"inputs":[{"name":"str"},{"name":"str"},{"name":"p"},{"name":"q"}],"output":{"name":"completionitem"}}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"completionproposal"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",37,null],[11,"static_type","","",37,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",37,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"completionprovider"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",38,null],[11,"static_type","","",38,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",38,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"completionwords"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",39,null],[11,"static_type","","",39,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",39,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","`name` The name for the provider ## `icon` A specific icon for the provider",39,{"inputs":[{"name":"p"},{"name":"q"}],"output":{"name":"completionwords"}}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"gutter"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",40,null],[11,"static_type","","",40,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",40,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"gutterrenderer"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",41,null],[11,"static_type","","",41,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",41,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",42,{"inputs":[{"name":"self"}],"output":{"name":"gutterrendererpixbuf"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",42,null],[11,"static_type","","",42,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",42,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Create a new `GutterRendererPixbuf`.",42,{"inputs":[],"output":{"name":"gutterrendererpixbuf"}}],[11,"default","","",42,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"gutterrenderertext"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",43,null],[11,"static_type","","",43,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",43,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Create a new `GutterRendererText`.",43,{"inputs":[],"output":{"name":"gutterrenderertext"}}],[11,"default","","",43,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",44,{"inputs":[{"name":"self"}],"output":{"name":"language"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",44,null],[11,"static_type","","",44,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",44,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",45,{"inputs":[{"name":"self"}],"output":{"name":"languagemanager"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",45,null],[11,"static_type","","",45,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",45,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new language manager. If you do not need more than one language manager or a private language manager instance then use `LanguageManager::get_default` instead.",45,{"inputs":[],"output":{"name":"languagemanager"}}],[11,"get_default","","Returns the default `LanguageManager` instance.",45,{"inputs":[],"output":{"name":"option"}}],[11,"default","","",45,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"map"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",46,null],[11,"static_type","","",46,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",46,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Map`.",46,{"inputs":[],"output":{"name":"map"}}],[11,"default","","",46,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"mark"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",47,null],[11,"static_type","","",47,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",47,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a text mark. Add it to a buffer using `gtk::TextBufferExt::add_mark`. If name is NULL, the mark is anonymous; otherwise, the mark can be retrieved by name using `gtk::TextBufferExt::get_mark`. Normally marks are created using the utility function `BufferExt::create_source_mark`.",47,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"mark"}}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"markattributes"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",48,null],[11,"static_type","","",48,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",48,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new source mark attributes.",48,{"inputs":[],"output":{"name":"markattributes"}}],[11,"default","","",48,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",49,{"inputs":[{"name":"self"}],"output":{"name":"printcompositor"}}],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",49,null],[11,"static_type","","",49,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",49,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new print compositor that can be used to print `buffer`.",49,{"inputs":[{"name":"buffer"}],"output":{"name":"printcompositor"}}],[11,"new_from_view","","Creates a new print compositor that can be used to print the buffer associated with `view`. This constructor sets some configuration properties to make the printed output match `view` as much as possible. The properties set are `PrintCompositor:tab-width`, `PrintCompositor:highlight-syntax`, `PrintCompositor:wrap-mode`, `PrintCompositor:body-font-name` and `PrintCompositor:print-line-numbers`.",49,{"inputs":[{"name":"p"}],"output":{"name":"printcompositor"}}],[11,"clone","","",50,{"inputs":[{"name":"self"}],"output":{"name":"searchcontext"}}],[11,"fmt","","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",50,null],[11,"static_type","","",50,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",50,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new search context, associated with `buffer`, and customized with `settings`. If `settings` is `None`, a new `SearchSettings` object will be created, that you can retrieve with `SearchContextExt::get_settings`.",50,{"inputs":[{"name":"buffer"},{"name":"p"}],"output":{"name":"searchcontext"}}],[11,"clone","","",51,{"inputs":[{"name":"self"}],"output":{"name":"searchsettings"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",51,null],[11,"static_type","","",51,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",51,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new search settings object.",51,{"inputs":[],"output":{"name":"searchsettings"}}],[11,"default","","",51,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"style"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",52,null],[11,"static_type","","",52,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",52,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",53,{"inputs":[{"name":"self"}],"output":{"name":"stylescheme"}}],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",53,null],[11,"static_type","","",53,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",53,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",54,{"inputs":[{"name":"self"}],"output":{"name":"styleschemechooser"}}],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",54,null],[11,"static_type","","",54,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",54,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",55,{"inputs":[{"name":"self"}],"output":{"name":"styleschememanager"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",55,null],[11,"static_type","","",55,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",55,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new style manager. If you do not need more than one style manager then use `StyleSchemeManager::get_default` instead.",55,{"inputs":[],"output":{"name":"styleschememanager"}}],[11,"get_default","","Returns the default `StyleSchemeManager` instance.",55,{"inputs":[],"output":{"name":"option"}}],[11,"default","","",55,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",56,{"inputs":[{"name":"self"}],"output":{"name":"tag"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",56,null],[11,"static_type","","",56,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",56,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",57,{"inputs":[{"name":"self"}],"output":{"name":"undomanager"}}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",57,null],[11,"static_type","","",57,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",57,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",58,{"inputs":[{"name":"self"}],"output":{"name":"view"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",58,null],[11,"static_type","","",58,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",58,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `View`. An empty default `Buffer` will be created for you and can be retrieved with `gtk::TextViewExt::get_buffer`. If you want to specify your own buffer, consider `View::new_with_buffer`.",58,{"inputs":[],"output":{"name":"view"}}],[11,"new_with_buffer","","Creates a new `View` widget displaying the buffer `buffer`. One buffer can be shared among many widgets. ## `buffer` a `Buffer`.",58,{"inputs":[{"name":"buffer"}],"output":{"name":"view"}}],[11,"default","","",58,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"backgroundpatterntype"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"backgroundpatterntype"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"backgroundpatterntype"}],"output":{"name":"bool"}}],[11,"hash","","",0,null],[11,"static_type","","",0,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",0,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",0,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",0,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"changecasetype"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"changecasetype"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"changecasetype"}],"output":{"name":"bool"}}],[11,"hash","","",1,null],[11,"static_type","","",1,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",1,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",1,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",1,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"gutterrendereralignmentmode"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"gutterrendereralignmentmode"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"gutterrendereralignmentmode"}],"output":{"name":"bool"}}],[11,"hash","","",2,null],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"smarthomeendtype"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"smarthomeendtype"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"smarthomeendtype"}],"output":{"name":"bool"}}],[11,"hash","","",3,null],[11,"eq","","",59,{"inputs":[{"name":"self"},{"name":"completionactivation"}],"output":{"name":"bool"}}],[11,"ne","","",59,{"inputs":[{"name":"self"},{"name":"completionactivation"}],"output":{"name":"bool"}}],[11,"clone","","",59,{"inputs":[{"name":"self"}],"output":{"name":"completionactivation"}}],[11,"partial_cmp","","",59,{"inputs":[{"name":"self"},{"name":"completionactivation"}],"output":{"name":"option"}}],[11,"lt","","",59,{"inputs":[{"name":"self"},{"name":"completionactivation"}],"output":{"name":"bool"}}],[11,"le","","",59,{"inputs":[{"name":"self"},{"name":"completionactivation"}],"output":{"name":"bool"}}],[11,"gt","","",59,{"inputs":[{"name":"self"},{"name":"completionactivation"}],"output":{"name":"bool"}}],[11,"ge","","",59,{"inputs":[{"name":"self"},{"name":"completionactivation"}],"output":{"name":"bool"}}],[11,"cmp","","",59,{"inputs":[{"name":"self"},{"name":"completionactivation"}],"output":{"name":"ordering"}}],[11,"hash","","",59,null],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",59,{"inputs":[],"output":{"name":"completionactivation"}}],[11,"all","","Returns the set containing all flags.",59,{"inputs":[],"output":{"name":"completionactivation"}}],[11,"bits","","Returns the raw value of the flags currently stored.",59,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",59,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",59,{"inputs":[{"name":"u32"}],"output":{"name":"completionactivation"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",59,{"inputs":[{"name":"self"},{"name":"completionactivation"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",59,{"inputs":[{"name":"self"},{"name":"completionactivation"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",59,{"inputs":[{"name":"self"},{"name":"completionactivation"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",59,{"inputs":[{"name":"self"},{"name":"completionactivation"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",59,{"inputs":[{"name":"self"},{"name":"completionactivation"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",59,{"inputs":[{"name":"self"},{"name":"completionactivation"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",59,{"inputs":[{"name":"self"},{"name":"completionactivation"}],"output":{"name":"completionactivation"}}],[11,"bitor_assign","","Adds the set of flags.",59,{"inputs":[{"name":"self"},{"name":"completionactivation"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",59,{"inputs":[{"name":"self"},{"name":"completionactivation"}],"output":{"name":"completionactivation"}}],[11,"bitxor_assign","","Toggles the set of flags.",59,{"inputs":[{"name":"self"},{"name":"completionactivation"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",59,{"inputs":[{"name":"self"},{"name":"completionactivation"}],"output":{"name":"completionactivation"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",59,{"inputs":[{"name":"self"},{"name":"completionactivation"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",59,{"inputs":[{"name":"self"},{"name":"completionactivation"}],"output":{"name":"completionactivation"}}],[11,"sub_assign","","Disables all flags enabled in the set.",59,{"inputs":[{"name":"self"},{"name":"completionactivation"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",59,{"inputs":[{"name":"self"}],"output":{"name":"completionactivation"}}],[11,"extend","","",59,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",59,{"inputs":[{"name":"t"}],"output":{"name":"completionactivation"}}],[11,"eq","","",60,{"inputs":[{"name":"self"},{"name":"drawspacesflags"}],"output":{"name":"bool"}}],[11,"ne","","",60,{"inputs":[{"name":"self"},{"name":"drawspacesflags"}],"output":{"name":"bool"}}],[11,"clone","","",60,{"inputs":[{"name":"self"}],"output":{"name":"drawspacesflags"}}],[11,"partial_cmp","","",60,{"inputs":[{"name":"self"},{"name":"drawspacesflags"}],"output":{"name":"option"}}],[11,"lt","","",60,{"inputs":[{"name":"self"},{"name":"drawspacesflags"}],"output":{"name":"bool"}}],[11,"le","","",60,{"inputs":[{"name":"self"},{"name":"drawspacesflags"}],"output":{"name":"bool"}}],[11,"gt","","",60,{"inputs":[{"name":"self"},{"name":"drawspacesflags"}],"output":{"name":"bool"}}],[11,"ge","","",60,{"inputs":[{"name":"self"},{"name":"drawspacesflags"}],"output":{"name":"bool"}}],[11,"cmp","","",60,{"inputs":[{"name":"self"},{"name":"drawspacesflags"}],"output":{"name":"ordering"}}],[11,"hash","","",60,null],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",60,{"inputs":[],"output":{"name":"drawspacesflags"}}],[11,"all","","Returns the set containing all flags.",60,{"inputs":[],"output":{"name":"drawspacesflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",60,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",60,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",60,{"inputs":[{"name":"u32"}],"output":{"name":"drawspacesflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",60,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",60,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",60,{"inputs":[{"name":"self"},{"name":"drawspacesflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",60,{"inputs":[{"name":"self"},{"name":"drawspacesflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",60,{"inputs":[{"name":"self"},{"name":"drawspacesflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",60,{"inputs":[{"name":"self"},{"name":"drawspacesflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",60,{"inputs":[{"name":"self"},{"name":"drawspacesflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",60,{"inputs":[{"name":"self"},{"name":"drawspacesflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",60,{"inputs":[{"name":"self"},{"name":"drawspacesflags"}],"output":{"name":"drawspacesflags"}}],[11,"bitor_assign","","Adds the set of flags.",60,{"inputs":[{"name":"self"},{"name":"drawspacesflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",60,{"inputs":[{"name":"self"},{"name":"drawspacesflags"}],"output":{"name":"drawspacesflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",60,{"inputs":[{"name":"self"},{"name":"drawspacesflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",60,{"inputs":[{"name":"self"},{"name":"drawspacesflags"}],"output":{"name":"drawspacesflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",60,{"inputs":[{"name":"self"},{"name":"drawspacesflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",60,{"inputs":[{"name":"self"},{"name":"drawspacesflags"}],"output":{"name":"drawspacesflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",60,{"inputs":[{"name":"self"},{"name":"drawspacesflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",60,{"inputs":[{"name":"self"}],"output":{"name":"drawspacesflags"}}],[11,"extend","","",60,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",60,{"inputs":[{"name":"t"}],"output":{"name":"drawspacesflags"}}],[11,"eq","","",61,{"inputs":[{"name":"self"},{"name":"gutterrendererstate"}],"output":{"name":"bool"}}],[11,"ne","","",61,{"inputs":[{"name":"self"},{"name":"gutterrendererstate"}],"output":{"name":"bool"}}],[11,"clone","","",61,{"inputs":[{"name":"self"}],"output":{"name":"gutterrendererstate"}}],[11,"partial_cmp","","",61,{"inputs":[{"name":"self"},{"name":"gutterrendererstate"}],"output":{"name":"option"}}],[11,"lt","","",61,{"inputs":[{"name":"self"},{"name":"gutterrendererstate"}],"output":{"name":"bool"}}],[11,"le","","",61,{"inputs":[{"name":"self"},{"name":"gutterrendererstate"}],"output":{"name":"bool"}}],[11,"gt","","",61,{"inputs":[{"name":"self"},{"name":"gutterrendererstate"}],"output":{"name":"bool"}}],[11,"ge","","",61,{"inputs":[{"name":"self"},{"name":"gutterrendererstate"}],"output":{"name":"bool"}}],[11,"cmp","","",61,{"inputs":[{"name":"self"},{"name":"gutterrendererstate"}],"output":{"name":"ordering"}}],[11,"hash","","",61,null],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",61,{"inputs":[],"output":{"name":"gutterrendererstate"}}],[11,"all","","Returns the set containing all flags.",61,{"inputs":[],"output":{"name":"gutterrendererstate"}}],[11,"bits","","Returns the raw value of the flags currently stored.",61,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",61,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",61,{"inputs":[{"name":"u32"}],"output":{"name":"gutterrendererstate"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",61,{"inputs":[{"name":"self"},{"name":"gutterrendererstate"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",61,{"inputs":[{"name":"self"},{"name":"gutterrendererstate"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",61,{"inputs":[{"name":"self"},{"name":"gutterrendererstate"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",61,{"inputs":[{"name":"self"},{"name":"gutterrendererstate"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",61,{"inputs":[{"name":"self"},{"name":"gutterrendererstate"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",61,{"inputs":[{"name":"self"},{"name":"gutterrendererstate"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",61,{"inputs":[{"name":"self"},{"name":"gutterrendererstate"}],"output":{"name":"gutterrendererstate"}}],[11,"bitor_assign","","Adds the set of flags.",61,{"inputs":[{"name":"self"},{"name":"gutterrendererstate"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",61,{"inputs":[{"name":"self"},{"name":"gutterrendererstate"}],"output":{"name":"gutterrendererstate"}}],[11,"bitxor_assign","","Toggles the set of flags.",61,{"inputs":[{"name":"self"},{"name":"gutterrendererstate"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",61,{"inputs":[{"name":"self"},{"name":"gutterrendererstate"}],"output":{"name":"gutterrendererstate"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",61,{"inputs":[{"name":"self"},{"name":"gutterrendererstate"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",61,{"inputs":[{"name":"self"},{"name":"gutterrendererstate"}],"output":{"name":"gutterrendererstate"}}],[11,"sub_assign","","Disables all flags enabled in the set.",61,{"inputs":[{"name":"self"},{"name":"gutterrendererstate"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",61,{"inputs":[{"name":"self"}],"output":{"name":"gutterrendererstate"}}],[11,"extend","","",61,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",61,{"inputs":[{"name":"t"}],"output":{"name":"gutterrendererstate"}}],[11,"create_context","","",33,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[11,"move_to_iter","","",35,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":null}],[11,"get_padding","","",40,null],[17,"COMPLETION_ACTIVATION_NONE","","",null,null],[17,"COMPLETION_ACTIVATION_INTERACTIVE","","",null,null],[17,"COMPLETION_ACTIVATION_USER_REQUESTED","","",null,null],[17,"DRAW_SPACES_SPACE","","",null,null],[17,"DRAW_SPACES_TAB","","",null,null],[17,"DRAW_SPACES_NEWLINE","","",null,null],[17,"DRAW_SPACES_NBSP","","",null,null],[17,"DRAW_SPACES_LEADING","","",null,null],[17,"DRAW_SPACES_TEXT","","",null,null],[17,"DRAW_SPACES_TRAILING","","",null,null],[17,"DRAW_SPACES_ALL","","",null,null],[17,"GUTTER_RENDERER_STATE_NORMAL","","",null,null],[17,"GUTTER_RENDERER_STATE_CURSOR","","",null,null],[17,"GUTTER_RENDERER_STATE_PRELIT","","",null,null],[17,"GUTTER_RENDERER_STATE_SELECTED","","",null,null],[8,"BufferExt","","Trait containing all `Buffer` methods.",null,null],[10,"backward_iter_to_source_mark","","Moves `iter` to the position of the previous `Mark` of the given category. Returns `true` if `iter` was moved. If `category` is NULL, the previous source mark can be of any category.",5,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"p"}],"output":{"name":"bool"}}],[10,"begin_not_undoable_action","","Marks the beginning of a not undoable action on the buffer, disabling the undo manager. Typically you would call this function before initially setting the contents of the buffer (e.g. when loading a file in a text editor).",5,{"inputs":[{"name":"self"}],"output":null}],[10,"can_redo","","Determines whether a source buffer can redo the last action (i.e. if the last operation was an undo).",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"can_undo","","Determines whether a source buffer can undo the last action.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"change_case","","Changes the case of the text between the specified iterators.",5,{"inputs":[{"name":"self"},{"name":"changecasetype"},{"name":"textiter"},{"name":"textiter"}],"output":null}],[10,"create_source_mark","","Creates a source mark in the `self` of category `category`. A source mark is a `gtk::TextMark` but organised into categories. Depending on the category a pixbuf can be specified that will be displayed along the line of the mark.",5,{"inputs":[{"name":"self"},{"name":"p"},{"name":"str"},{"name":"textiter"}],"output":{"name":"option"}}],[10,"end_not_undoable_action","","Marks the end of a not undoable action on the buffer. When the last not undoable block is closed through the call to this function, the list of undo actions is cleared and the undo manager is re-enabled.",5,{"inputs":[{"name":"self"}],"output":null}],[10,"ensure_highlight","","Forces buffer to analyze and highlight the given area synchronously.",5,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"textiter"}],"output":null}],[10,"forward_iter_to_source_mark","","Moves `iter` to the position of the next `Mark` of the given `category`. Returns `true` if `iter` was moved. If `category` is NULL, the next source mark can be of any category.",5,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"p"}],"output":{"name":"bool"}}],[10,"get_context_classes_at_iter","","Get all defined context classes at `iter`.",5,{"inputs":[{"name":"self"},{"name":"textiter"}],"output":{"name":"vec"}}],[10,"get_highlight_matching_brackets","","Determines whether bracket match highlighting is activated for the source buffer.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_highlight_syntax","","Determines whether syntax highlighting is activated in the source buffer.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_language","","Returns the `Language` associated with the buffer, see `BufferExt::set_language`. The returned object should not be unreferenced by the user.",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_max_undo_levels","","Determines the number of undo levels the buffer will track for buffer edits.",5,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_source_marks_at_iter","","Returns the list of marks of the given category at `iter`. If `category` is `None` it returns all marks at `iter`.",5,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"p"}],"output":{"name":"vec"}}],[10,"get_source_marks_at_line","","Returns the list of marks of the given category at `line`. If `category` is `None`, all marks at `line` are returned.",5,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"p"}],"output":{"name":"vec"}}],[10,"get_style_scheme","","Returns the `StyleScheme` associated with the buffer, see `BufferExt::set_style_scheme`. The returned object should not be unreferenced by the user.",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_undo_manager","","Returns the `UndoManager` associated with the buffer, see `BufferExt::set_undo_manager`. The returned object should not be unreferenced by the user.",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"iter_backward_to_context_class_toggle","","Moves backward to the next toggle (on or off) of the context class. If no matching context class toggles are found, returns `false`, otherwise `true`. Does not return toggles located at `iter`, only toggles after `iter`. Sets `iter` to the location of the toggle, or to the end of the buffer if no toggle is found.",5,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"str"}],"output":{"name":"bool"}}],[10,"iter_forward_to_context_class_toggle","","Moves forward to the next toggle (on or off) of the context class. If no matching context class toggles are found, returns `false`, otherwise `true`. Does not return toggles located at `iter`, only toggles after `iter`. Sets `iter` to the location of the toggle, or to the end of the buffer if no toggle is found.",5,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"str"}],"output":{"name":"bool"}}],[10,"iter_has_context_class","","Check if the class `context_class` is set on `iter`.",5,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"str"}],"output":{"name":"bool"}}],[10,"join_lines","","Joins the lines of text between the specified iterators.",5,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"textiter"}],"output":null}],[10,"redo","","Redoes the last undo operation. Use `BufferExt::can_redo` to check whether a call to this function will have any effect.",5,{"inputs":[{"name":"self"}],"output":null}],[10,"remove_source_marks","","Remove all marks of `category` between `start` and `end` from the buffer. If `category` is NULL, all marks in the range will be removed.",5,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"textiter"},{"name":"p"}],"output":null}],[10,"set_highlight_matching_brackets","","Controls the bracket match highlighting function in the buffer. If activated, when you position your cursor over a bracket character (a parenthesis, a square bracket, etc.) the matching opening or closing bracket character will be highlighted. ## `highlight` `true` if you want matching brackets highlighted.",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_highlight_syntax","","Controls whether syntax is highlighted in the buffer. If `highlight` is `true`, the text will be highlighted according to the syntax patterns specified in the language set with `BufferExt::set_language`. If `highlight` is `false`, syntax highlighting is disabled and all the `gtk::TextTag` objects that have been added by the syntax highlighting engine are removed from the buffer. ## `highlight` `true` to enable syntax highlighting, `false` to disable it.",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_language","","Associate a `Language` with the buffer. If `language` is not-`None` and syntax highlighting is enabled (see `BufferExt::set_highlight_syntax`), the syntax patterns defined in `language` will be used to highlight the text contained in the buffer. If `language` is `None`, the text contained in the buffer is not highlighted.",5,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_max_undo_levels","","Sets the number of undo levels for user actions the buffer will track. If the number of user actions exceeds the limit set by this function, older actions will be discarded.",5,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_style_scheme","","Sets style scheme used by the buffer. If `scheme` is `None` no style scheme is used. ## `scheme` a `StyleScheme` or `None`.",5,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_undo_manager","","Set the buffer undo manager. If `manager` is `None` the default undo manager will be set. ## `manager` A `UndoManager` or `None`.",5,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"undo","","Undoes the last user action which modified the buffer. Use `BufferExt::can_undo` to check whether a call to this function will have any effect.",5,{"inputs":[{"name":"self"}],"output":null}],[10,"get_property_can_redo","","",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_can_undo","","",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"connect_highlight_updated","","",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_redo","","",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_source_mark_updated","","",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_undo","","",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_can_redo_notify","","",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_can_undo_notify","","",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_highlight_matching_brackets_notify","","",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_highlight_syntax_notify","","",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_language_notify","","",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_max_undo_levels_notify","","",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_style_scheme_notify","","",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_undo_manager_notify","","",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CompletionExt","","Trait containing all `Completion` methods.",null,null],[10,"add_provider","","Add a new `CompletionProvider` to the completion object. This will add a reference `provider`, so make sure to unref your own copy when you no longer need it. ## `provider` a `CompletionProvider`.",6,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"block_interactive","","Block interactive completion. This can be used to disable interactive completion when inserting or deleting text from the buffer associated with the completion. Use `CompletionExt::unblock_interactive` to enable interactive completion again.",6,{"inputs":[{"name":"self"}],"output":null}],[10,"get_info_window","","The info widget is the window where the completion displays optional extra information of the proposal.",6,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_providers","","Get list of providers registered on `self`. The returned list is owned by the completion and should not be freed.",6,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_view","","The `View` associated with `self`, or `None` if the view has been destroyed.",6,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"hide","","Hides the completion if it is active (visible).",6,{"inputs":[{"name":"self"}],"output":null}],[10,"move_window","","Move the completion window to a specific iter.",6,{"inputs":[{"name":"self"},{"name":"textiter"}],"output":null}],[10,"remove_provider","","Remove `provider` from the completion. ## `provider` a `CompletionProvider`.",6,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"show","","Starts a new completion with the specified `CompletionContext` and a list of potential candidate providers for completion.",6,null],[10,"unblock_interactive","","Unblock interactive completion. This can be used after using `CompletionExt::block_interactive` to enable interactive completion again.",6,{"inputs":[{"name":"self"}],"output":null}],[10,"get_property_accelerators","","",6,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_accelerators","","",6,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_auto_complete_delay","","",6,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_auto_complete_delay","","",6,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_proposal_page_size","","",6,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_proposal_page_size","","",6,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_provider_page_size","","",6,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_provider_page_size","","",6,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_remember_info_visibility","","",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_remember_info_visibility","","",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_select_on_show","","",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_select_on_show","","",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_show_headers","","",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_show_headers","","",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_show_icons","","",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_show_icons","","",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_activate_proposal","","",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_hide","","",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_cursor","","",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_page","","",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_populate_context","","",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_show","","",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_accelerators_notify","","",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_auto_complete_delay_notify","","",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_proposal_page_size_notify","","",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_provider_page_size_notify","","",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_remember_info_visibility_notify","","",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_select_on_show_notify","","",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_headers_notify","","",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_icons_notify","","",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_view_notify","","",6,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CompletionContextExt","","Trait containing all `CompletionContext` methods.",null,null],[10,"add_proposals","","Providers can use this function to add proposals to the completion. They can do so asynchronously by means of the `finished` argument. Providers must ensure that they always call this function with `finished` set to `true` once each population (even if no proposals need to be added). Population occurs when the `CompletionProvider::populate` function is called. ## `provider` a `CompletionProvider`. ## `proposals` The list of proposals to add. ## `finished` Whether the provider is finished adding proposals.",7,null],[10,"get_activation","","Get the context activation.",7,{"inputs":[{"name":"self"}],"output":{"name":"completionactivation"}}],[10,"get_iter","","Get the iter at which the completion was invoked. Providers can use this to determine how and if to match proposals. ## `iter` a `gtk::TextIter`.",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_activation","","",7,{"inputs":[{"name":"self"},{"name":"completionactivation"}],"output":null}],[10,"get_property_completion","","",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_cancelled","","",7,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_activation_notify","","",7,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_completion_notify","","",7,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CompletionInfoExt","","Trait containing all `CompletionInfo` methods.",null,null],[10,"get_widget","","Get the current content widget.",8,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_widget","","Sets the content widget of the info window. See that the previous widget will lose a reference and it can be destroyed, so if you do not want this to happen you must use `gobject::Object::ref` before calling this method.",8,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"connect_before_show","","",8,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CompletionItemExt","","Trait containing all `CompletionItem` methods.",null,null],[10,"set_property_icon","","",9,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"set_property_icon_name","","",9,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"set_property_info","","",9,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"set_property_label","","",9,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"set_property_markup","","",9,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"set_property_text","","",9,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"connect_property_gicon_notify","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_icon_notify","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_icon_name_notify","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_info_notify","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_label_notify","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_markup_notify","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_text_notify","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CompletionProposalExt","","Trait containing all `CompletionProposal` methods.",null,null],[10,"changed","","Emits the \"changed\" signal on `self`. This should be called by implementations whenever the name, icon or info of the proposal has changed.",10,{"inputs":[{"name":"self"}],"output":null}],[10,"equal","","Get whether two proposal objects are the same. This is used to (together with `CompletionProposal::hash`) to match proposals in the completion model. By default, it uses direct equality (`g_direct_equal`). ## `other` a `CompletionProposal`.",10,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"get_icon","","Gets the `gdk_pixbuf::Pixbuf` for the icon of `self`.",10,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_icon_name","","Gets the icon name of `self`.",10,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_info","","Gets extra information associated to the proposal. This information will be used to present the user with extra, detailed information about the selected proposal. The returned string must be freed with `g_free`.",10,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_label","","Gets the label of `self`. The label is shown in the list of proposals as plain text. If you need any markup (such as bold or italic text), you have to implement `CompletionProposal::get_markup`. The returned string must be freed with `g_free`.",10,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_markup","","Gets the label of `self` with markup. The label is shown in the list of proposals and may contain markup. This will be used instead of `CompletionProposal::get_label` if implemented. The returned string must be freed with `g_free`.",10,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_text","","Gets the text of `self`. The text that is inserted into the text buffer when the proposal is activated by the default activation. You are free to implement a custom activation handler in the provider and not implement this function. For more information, see `CompletionProvider::activate_proposal`. The returned string must be freed with `g_free`.",10,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"hash","","Get the hash value of `self`. This is used to (together with `CompletionProposal::equal`) to match proposals in the completion model. By default, it uses a direct hash (`g_direct_hash`).",10,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"connect_changed","","",10,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CompletionProviderExt","","Trait containing all `CompletionProvider` methods.",null,null],[10,"activate_proposal","","Activate `proposal` at `iter`. When this functions returns `false`, the default activation of `proposal` will take place which replaces the word at `iter` with the text of `proposal` (see `CompletionProposal::get_text`).",11,{"inputs":[{"name":"self"},{"name":"p"},{"name":"textiter"}],"output":{"name":"bool"}}],[10,"get_activation","","Get with what kind of activation the provider should be activated.",11,{"inputs":[{"name":"self"}],"output":{"name":"completionactivation"}}],[10,"get_icon","","Get the `gdk_pixbuf::Pixbuf` for the icon of the `self`.",11,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_icon_name","","Gets the icon name of `self`.",11,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_info_widget","","Get a customized info widget to show extra information of a proposal. This allows for customized widgets on a proposal basis, although in general providers will have the same custom widget for all their proposals and `proposal` can be ignored. The implementation of this function is optional.",11,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[10,"get_interactive_delay","","Get the delay in milliseconds before starting interactive completion for this provider. A value of -1 indicates to use the default value as set by the `Completion:auto-complete-delay` property.",11,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_name","","Get the name of the provider. This should be a translatable name for display to the user. For example: _(\"Document word completion provider\"). The returned string must be freed with `g_free`.",11,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_priority","","Get the provider priority. The priority determines the order in which proposals appear in the completion popup. Higher priorities are sorted before lower priorities. The default priority is 0.",11,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_start_iter","","Get the `gtk::TextIter` at which the completion for `proposal` starts. When implemented, this information is used to position the completion window accordingly when a proposal is selected in the completion window. The `proposal` text inside the completion window is aligned on `iter`.",11,{"inputs":[{"name":"self"},{"name":"completioncontext"},{"name":"p"}],"output":{"name":"option"}}],[10,"match_","","",11,{"inputs":[{"name":"self"},{"name":"completioncontext"}],"output":{"name":"bool"}}],[10,"populate","","Populate `context` with proposals from `self` added with the `CompletionContextExt::add_proposals` function. ## `context` a `CompletionContext`.",11,{"inputs":[{"name":"self"},{"name":"completioncontext"}],"output":null}],[10,"update_info","","Update extra information shown in `info` for `proposal`.",11,{"inputs":[{"name":"self"},{"name":"p"},{"name":"completioninfo"}],"output":null}],[8,"CompletionWordsExt","","Trait containing all `CompletionWords` methods.",null,null],[10,"register","","Registers `buffer` in the `self` provider. ## `buffer` a `gtk::TextBuffer`",12,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"unregister","","Unregisters `buffer` from the `self` provider. ## `buffer` a `gtk::TextBuffer`",12,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_property_activation","","",12,{"inputs":[{"name":"self"},{"name":"completionactivation"}],"output":null}],[10,"set_property_icon","","",12,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"set_property_interactive_delay","","",12,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_minimum_word_size","","",12,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_minimum_word_size","","",12,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"set_property_name","","",12,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"set_property_priority","","",12,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_proposals_batch_size","","",12,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_proposals_batch_size","","",12,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_scan_batch_size","","",12,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_scan_batch_size","","",12,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"connect_property_activation_notify","","",12,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_icon_notify","","",12,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_interactive_delay_notify","","",12,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_minimum_word_size_notify","","",12,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_name_notify","","",12,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_priority_notify","","",12,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_proposals_batch_size_notify","","",12,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_scan_batch_size_notify","","",12,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"GutterExt","","Trait containing all `Gutter` methods.",null,null],[10,"get_renderer_at_pos","","Finds the `GutterRenderer` at (x, y). ## `x` The x position to get identified. ## `y` The y position to get identified.",13,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_window","","Get the `gdk::Window` of the gutter. The window will only be available when the gutter has at least one, non-zero width, cell renderer packed.",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"insert","","Insert `renderer` into the gutter. If `renderer` is yet unowned then gutter claims its ownership. Otherwise just increases renderer's reference count. `renderer` cannot be already inserted to another gutter.",13,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":{"name":"bool"}}],[10,"queue_draw","","Invalidates the drawable area of the gutter. You can use this to force a redraw of the gutter if something has changed and needs to be redrawn.",13,{"inputs":[{"name":"self"}],"output":null}],[10,"remove","","Removes `renderer` from `self`.",13,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"reorder","","Reorders `renderer` in `self` to new `position`.",13,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":null}],[10,"set_padding","","",13,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"get_property_view","","",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_property_window_type","","",13,{"inputs":[{"name":"self"}],"output":{"name":"textwindowtype"}}],[10,"get_property_xpad","","",13,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_xpad","","",13,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_ypad","","",13,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_ypad","","",13,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"connect_property_view_notify","","",13,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_window_type_notify","","",13,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_xpad_notify","","",13,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_ypad_notify","","",13,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"GutterRendererExt","","Trait containing all `GutterRenderer` methods.",null,null],[10,"activate","","Emits the `GutterRenderer::activate` signal of the renderer. This is called from `Gutter` and should never have to be called manually. ## `iter` a `gtk::TextIter` at the start of the line where the renderer is activated ## `area` a `gdk::Rectangle` of the cell area where the renderer is activated ## `event` the event that triggered the activation",14,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"rectangle"},{"name":"event"}],"output":null}],[10,"begin","","Called when drawing a region begins. The region to be drawn is indicated by `start` and `end`. The purpose is to allow the implementation to precompute some state before the draw method is called for each cell. ## `cr` a `cairo::Context` ## `background_area` a `gdk::Rectangle` ## `cell_area` a `gdk::Rectangle` ## `start` a `gtk::TextIter` ## `end` a `gtk::TextIter`",14,{"inputs":[{"name":"self"},{"name":"context"},{"name":"rectangle"},{"name":"rectangle"},{"name":"textiter"},{"name":"textiter"}],"output":null}],[10,"draw","","Main renderering method. Implementations should implement this method to draw onto the cairo context. The `background_area` indicates the total area of the cell to be drawn. The `cell_area` indicates the area where content can be drawn (text, images, etc).",14,{"inputs":[{"name":"self"},{"name":"context"},{"name":"rectangle"},{"name":"rectangle"},{"name":"textiter"},{"name":"textiter"},{"name":"gutterrendererstate"}],"output":null}],[10,"end","","Called when drawing a region of lines has ended.",14,{"inputs":[{"name":"self"}],"output":null}],[10,"get_alignment","","Get the x-alignment and y-alignment of the gutter renderer. ## `xalign` return location for the x-alignment (can be `None`) ## `yalign` return location for the y-alignment (can be `None`)",14,null],[10,"get_alignment_mode","","Get the alignment mode. The alignment mode describes the manner in which the renderer is aligned (see :xalign and :yalign).",14,{"inputs":[{"name":"self"}],"output":{"name":"gutterrendereralignmentmode"}}],[10,"get_background","","Get the background color of the renderer. ## `color` return value for a `gdk::RGBA`",14,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_padding","","Get the x-padding and y-padding of the gutter renderer. ## `xpad` return location for the x-padding (can be `None`) ## `ypad` return location for the y-padding (can be `None`)",14,null],[10,"get_size","","Get the size of the renderer.",14,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_view","","Get the view associated to the gutter renderer",14,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_visible","","Get whether the gutter renderer is visible.",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_window_type","","Get the `gtk::TextWindowType` associated with the gutter renderer.",14,{"inputs":[{"name":"self"}],"output":{"name":"textwindowtype"}}],[10,"query_activatable","","Get whether the renderer is activatable at the location in `event`. This is called from `Gutter` to determine whether a renderer is activatable using the mouse pointer. ## `iter` a `gtk::TextIter` at the start of the line to be activated ## `area` a `gdk::Rectangle` of the cell area to be activated ## `event` the event that triggered the query",14,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"rectangle"},{"name":"event"}],"output":{"name":"bool"}}],[10,"query_data","","Emit the `GutterRenderer::query-data` signal. This function is called to query for data just before rendering a cell. This is called from the `Gutter`. Implementations can override the default signal handler or can connect a signal handler externally to the `GutterRenderer::query-data` signal. ## `start` a `gtk::TextIter`. ## `end` a `gtk::TextIter`. ## `state` a `GutterRendererState`.",14,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"textiter"},{"name":"gutterrendererstate"}],"output":null}],[10,"query_tooltip","","Emits the `GutterRenderer::query-tooltip` signal. This function is called from `Gutter`. Implementations can override the default signal handler or can connect to the signal externally. ## `iter` a `gtk::TextIter`. ## `area` a `gdk::Rectangle`. ## `x` The x position of the tooltip. ## `y` The y position of the tooltip. ## `tooltip` a `gtk::Tooltip`.",14,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"rectangle"},{"name":"i32"},{"name":"i32"},{"name":"tooltip"}],"output":{"name":"bool"}}],[10,"queue_draw","","Emits the `GutterRenderer::queue-draw` signal of the renderer. Call this from an implementation to inform that the renderer has changed such that it needs to redraw.",14,{"inputs":[{"name":"self"}],"output":null}],[10,"set_alignment","","Set the alignment of the gutter renderer. Both `xalign` and `yalign` can be -1, which means the values will not be changed (this allows changing only one of the values).",14,{"inputs":[{"name":"self"},{"name":"f32"},{"name":"f32"}],"output":null}],[10,"set_alignment_mode","","Set the alignment mode. The alignment mode describes the manner in which the renderer is aligned (see :xalign and :yalign). ## `mode` a `GutterRendererAlignmentMode`",14,{"inputs":[{"name":"self"},{"name":"gutterrendereralignmentmode"}],"output":null}],[10,"set_background","","Set the background color of the renderer. If `color` is set to `None`, the renderer will not have a background color. ## `color` a `gdk::RGBA` or `None`",14,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_padding","","Set the padding of the gutter renderer. Both `xpad` and `ypad` can be -1, which means the values will not be changed (this allows changing only one of the values).",14,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_size","","Sets the size of the renderer. A value of -1 specifies that the size is to be determined dynamically. ## `size` the size",14,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_visible","","Set whether the gutter renderer is visible. ## `visible` the visibility",14,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_background_rgba","","",14,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_background_rgba","","",14,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_background_set","","",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_background_set","","",14,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_xalign","","",14,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_xalign","","",14,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"get_property_xpad","","",14,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_xpad","","",14,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_yalign","","",14,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_yalign","","",14,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"get_property_ypad","","",14,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_ypad","","",14,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"connect_activate","","",14,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_query_activatable","","",14,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_query_data","","",14,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_query_tooltip","","",14,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_queue_draw","","",14,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_alignment_mode_notify","","",14,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_background_rgba_notify","","",14,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_background_set_notify","","",14,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_size_notify","","",14,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_view_notify","","",14,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_visible_notify","","",14,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_window_type_notify","","",14,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_xalign_notify","","",14,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_xpad_notify","","",14,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_yalign_notify","","",14,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_ypad_notify","","",14,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"GutterRendererPixbufExt","","Trait containing all `GutterRendererPixbuf` methods.",null,null],[10,"get_icon_name","","",15,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_pixbuf","","Get the pixbuf of the renderer.",15,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_stock_id","","",15,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_icon_name","","`icon_name` the icon name",15,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_pixbuf","","`pixbuf` the pixbuf",15,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_stock_id","","",15,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"connect_property_gicon_notify","","",15,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_icon_name_notify","","",15,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pixbuf_notify","","",15,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_stock_id_notify","","",15,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"GutterRendererTextExt","","Trait containing all `GutterRendererText` methods.",null,null],[10,"measure","","Measures the text provided using the pango layout used by the `GutterRendererText`. ## `text` the text to measure. ## `width` location to store the width of the text in pixels,  or `None`. ## `height` location to store the height of the text in  pixels, or `None`.",16,null],[10,"measure_markup","","Measures the pango markup provided using the pango layout used by the `GutterRendererText`. ## `markup` the pango markup to measure. ## `width` location to store the width of the text in pixels,  or `None`. ## `height` location to store the height of the text in  pixels, or `None`.",16,null],[10,"set_markup","","",16,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_text","","",16,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"get_property_markup","","",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_property_text","","",16,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_property_markup_notify","","",16,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_text_notify","","",16,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"LanguageExt","","Trait containing all `Language` methods.",null,null],[10,"get_globs","","Returns the globs associated to this language. This is just an utility wrapper around `LanguageExt::get_metadata` to retrieve the \"globs\" metadata property and split it into an array.",17,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_hidden","","Returns whether the language should be hidden from the user.",17,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_id","","Returns the ID of the language. The ID is not locale-dependent. The returned string is owned by `self` and should not be freed or modified.",17,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_metadata","","`name` metadata property name.",17,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_mime_types","","Returns the mime types associated to this language. This is just an utility wrapper around `LanguageExt::get_metadata` to retrieve the \"mimetypes\" metadata property and split it into an array.",17,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_name","","Returns the localized name of the language. The returned string is owned by `self` and should not be freed or modified.",17,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_section","","Returns the localized section of the language. Each language belong to a section (ex. HTML belogs to the Markup section). The returned string is owned by `self` and should not be freed or modified.",17,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_style_ids","","Returns the ids of the styles defined by this `self`.",17,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_style_name","","Returns the name of the style with ID `style_id` defined by this `self`. ## `style_id` a style ID.",17,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"connect_property_hidden_notify","","",17,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_id_notify","","",17,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_name_notify","","",17,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_section_notify","","",17,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"LanguageManagerExt","","Trait containing all `LanguageManager` methods.",null,null],[10,"get_language","","Gets the `Language` identified by the given `id` in the language manager. ## `id` a language id.",18,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_language_ids","","Returns the ids of the available languages.",18,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_search_path","","Gets the list directories where `self` looks for language files.",18,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"guess_language","","Picks a `Language` for given file name and content type, according to the information in lang files. Either `filename` or `content_type` may be `None`. This function can be used as follows:",18,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":{"name":"option"}}],[10,"set_search_path","","Sets the list of directories where the `self` looks for language files. If `dirs` is `None`, the search path is reset to default.",18,null],[10,"connect_property_language_ids_notify","","",18,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_search_path_notify","","",18,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"MapExt","","Trait containing all `Map` methods.",null,null],[10,"get_view","","Gets the `Map:view` property, which is the view this widget is mapping.",19,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_view","","Sets the view that `self` will be doing the mapping to.",19,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"get_property_view","","",19,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_view","","",19,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"connect_property_view_notify","","",19,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"MarkExt","","Trait containing all `Mark` methods.",null,null],[10,"get_category","","Returns the mark category.",20,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"next","","Returns the next `Mark` in the buffer or `None` if the mark was not added to a buffer. If there is no next mark, `None` will be returned.",20,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[10,"prev","","Returns the previous `Mark` in the buffer or `None` if the mark was not added to a buffer. If there is no previous mark, `None` is returned.",20,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_property_category","","",20,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_property_category_notify","","",20,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"MarkAttributesExt","","Trait containing all `MarkAttributes` methods.",null,null],[10,"get_background","","Stores background color in `background`. ## `background` a `gdk::RGBA`.",21,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_icon_name","","Gets a name of an icon to be used as a base for rendered icon. Note that the icon name can be `None` if it wasn't set earlier.",21,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_stock_id","","Gets a stock id of an icon used by this attributes. Note that the stock id can be `None` if it wasn't set earlier.",21,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_tooltip_markup","","Queries for a tooltip by emitting a `MarkAttributes::query-tooltip-markup` signal. The tooltip may contain a markup. ## `mark` a `Mark`.",21,{"inputs":[{"name":"self"},{"name":"mark"}],"output":{"name":"option"}}],[10,"get_tooltip_text","","Queries for a tooltip by emitting a `MarkAttributes::query-tooltip-text` signal. The tooltip is a plain text. ## `mark` a `Mark`.",21,{"inputs":[{"name":"self"},{"name":"mark"}],"output":{"name":"option"}}],[10,"set_background","","Sets background color to the one given in `background`. ## `background` a `gdk::RGBA`.",21,{"inputs":[{"name":"self"},{"name":"rgba"}],"output":null}],[10,"set_icon_name","","Sets a name of an icon to be used as a base for rendered icon. ## `icon_name` name of an icon to be used.",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_pixbuf","","Sets a pixbuf to be used as a base for rendered icon. ## `pixbuf` a `gdk_pixbuf::Pixbuf` to be used.",21,{"inputs":[{"name":"self"},{"name":"pixbuf"}],"output":null}],[10,"set_stock_id","","Sets stock id to be used as a base for rendered icon.",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"get_property_pixbuf","","",21,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_query_tooltip_markup","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_query_tooltip_text","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_background_notify","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gicon_notify","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_icon_name_notify","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pixbuf_notify","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_stock_id_notify","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"PrintCompositorExt","","Trait containing all `PrintCompositor` methods.",null,null],[10,"get_body_font_name","","Returns the name of the font used to print the text body. The returned string must be freed with `g_free`.",22,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_bottom_margin","","Gets the bottom margin in units of `unit`.",22,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"f64"}}],[10,"get_buffer","","Gets the `Buffer` associated with the compositor. The returned object reference is owned by the compositor object and should not be unreferenced.",22,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_footer_font_name","","Returns the name of the font used to print the page footer. The returned string must be freed with `g_free`.",22,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_header_font_name","","Returns the name of the font used to print the page header. The returned string must be freed with `g_free`.",22,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_highlight_syntax","","Determines whether the printed text will be highlighted according to the buffer rules. Note that highlighting will happen only if the buffer to print has highlighting activated.",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_left_margin","","Gets the left margin in units of `unit`.",22,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"f64"}}],[10,"get_line_numbers_font_name","","Returns the name of the font used to print line numbers on the left margin. The returned string must be freed with `g_free`.",22,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_n_pages","","Returns the number of pages in the document or `<code>`-1`</code>` if the document has not been completely paginated.",22,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_pagination_progress","","Returns the current fraction of the document pagination that has been completed.",22,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_print_footer","","Determines if a footer is set to be printed for each page. A footer will be printed if this function returns `true` `<emphasis>`and`</emphasis>` some format strings have been specified with `PrintCompositorExt::set_footer_format`.",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_print_header","","Determines if a header is set to be printed for each page. A header will be printed if this function returns `true` `<emphasis>`and`</emphasis>` some format strings have been specified with `PrintCompositorExt::set_header_format`.",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_print_line_numbers","","Returns the interval used for line number printing. If the value is 0, no line numbers will be printed. The default value is 1 (i.e. numbers printed in all lines).",22,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_right_margin","","Gets the right margin in units of `unit`.",22,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"f64"}}],[10,"get_tab_width","","Returns the width of tabulation in characters for printed text.",22,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_top_margin","","Gets the top margin in units of `unit`.",22,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"f64"}}],[10,"get_wrap_mode","","Gets the line wrapping mode for the printed text.",22,{"inputs":[{"name":"self"}],"output":{"name":"wrapmode"}}],[10,"set_body_font_name","","Sets the default font for the printed text.",22,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_bottom_margin","","Sets the bottom margin used by `self`.",22,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"unit"}],"output":null}],[10,"set_footer_font_name","","Sets the font for printing the page footer. If `None` is supplied, the default font (i.e. the one being used for the text) will be used instead.",22,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_footer_format","","See `PrintCompositorExt::set_header_format` for more information about the parameters.",22,{"inputs":[{"name":"self"},{"name":"bool"},{"name":"p"},{"name":"q"},{"name":"r"}],"output":null}],[10,"set_header_font_name","","Sets the font for printing the page header. If `None` is supplied, the default font (i.e. the one being used for the text) will be used instead.",22,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_header_format","","Sets strftime like header format strings, to be printed on the left, center and right of the top of each page. The strings may include strftime(3) codes which will be expanded at print time. A subset of `strftime` codes are accepted, see `glib::DateTime::format` for more details on the accepted format specifiers. Additionally the following format specifiers are accepted: - `N`: the page number - `Q`: the page count.",22,{"inputs":[{"name":"self"},{"name":"bool"},{"name":"p"},{"name":"q"},{"name":"r"}],"output":null}],[10,"set_highlight_syntax","","Sets whether the printed text will be highlighted according to the buffer rules. Both color and font style are applied.",22,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_left_margin","","Sets the left margin used by `self`.",22,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"unit"}],"output":null}],[10,"set_line_numbers_font_name","","Sets the font for printing line numbers on the left margin. If `None` is supplied, the default font (i.e. the one being used for the text) will be used instead.",22,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_print_footer","","Sets whether you want to print a footer in each page. The footer consists of three pieces of text and an optional line separator, configurable with `PrintCompositorExt::set_footer_format`.",22,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_print_header","","Sets whether you want to print a header in each page. The header consists of three pieces of text and an optional line separator, configurable with `PrintCompositorExt::set_header_format`.",22,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_print_line_numbers","","Sets the interval for printed line numbers. If `interval` is 0 no numbers will be printed. If greater than 0, a number will be printed every `interval` lines (i.e. 1 will print all line numbers).",22,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"set_right_margin","","Sets the right margin used by `self`.",22,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"unit"}],"output":null}],[10,"set_tab_width","","Sets the width of tabulation in characters for printed text.",22,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"set_top_margin","","Sets the top margin used by `self`.",22,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"unit"}],"output":null}],[10,"set_wrap_mode","","Sets the line wrapping mode for the printed text.",22,{"inputs":[{"name":"self"},{"name":"wrapmode"}],"output":null}],[10,"connect_property_body_font_name_notify","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_buffer_notify","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_footer_font_name_notify","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_header_font_name_notify","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_highlight_syntax_notify","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_line_numbers_font_name_notify","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_n_pages_notify","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_print_footer_notify","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_print_header_notify","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_print_line_numbers_notify","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_tab_width_notify","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_wrap_mode_notify","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"SearchContextExt","","Trait containing all `SearchContext` methods.",null,null],[10,"backward","","Synchronous backward search. It is recommended to use the asynchronous functions instead, to not block the user interface. However, if you are sure that the `buffer` is small, this function is more convenient to use.",23,{"inputs":[{"name":"self"},{"name":"textiter"}],"output":{"name":"option"}}],[10,"forward","","Synchronous forward search. It is recommended to use the asynchronous functions instead, to not block the user interface. However, if you are sure that the `buffer` is small, this function is more convenient to use.",23,{"inputs":[{"name":"self"},{"name":"textiter"}],"output":{"name":"option"}}],[10,"get_buffer","","",23,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_highlight","","",23,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_match_style","","",23,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_occurrence_position","","Gets the position of a search occurrence. If the buffer is not already fully scanned, the position may be unknown, and -1 is returned. If 0 is returned, it means that this part of the buffer has already been scanned, and that `match_start` and `match_end` don't delimit an occurrence.",23,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"textiter"}],"output":{"name":"i32"}}],[10,"get_occurrences_count","","Gets the total number of search occurrences. If the buffer is not already fully scanned, the total number of occurrences is unknown, and -1 is returned.",23,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_regex_error","","Regular expression patterns must follow certain rules. If `SearchSettings:search-text` breaks a rule, the error can be retrieved with this function. The error domain is `G_REGEX_ERROR`.",23,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_settings","","",23,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"replace","","Replaces a search match by another text. If `match_start` and `match_end` doesn't correspond to a search match, `false` is returned.",23,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"textiter"},{"name":"str"}],"output":{"name":"result"}}],[10,"replace_all","","Replaces all search matches by another text. It is a synchronous function, so it can block the user interface.",23,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"set_highlight","","Enables or disables the search occurrences highlighting.",23,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_match_style","","Set the style to apply on search matches. If `match_style` is `None`, default theme's scheme 'match-style' will be used. To enable or disable the search highlighting, use `SearchContextExt::set_highlight`.",23,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_settings","","Associate a `SearchSettings` with the search context. If `settings` is `None`, a new one will be created.",23,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"connect_property_buffer_notify","","",23,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_highlight_notify","","",23,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_match_style_notify","","",23,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_occurrences_count_notify","","",23,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_regex_error_notify","","",23,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_settings_notify","","",23,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"SearchSettingsExt","","Trait containing all `SearchSettings` methods.",null,null],[10,"get_at_word_boundaries","","",24,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_case_sensitive","","",24,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_regex_enabled","","",24,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_search_text","","Gets the text to search. The return value must not be freed.",24,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_wrap_around","","",24,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_at_word_boundaries","","Change whether the search is done at word boundaries. If `at_word_boundaries` is `true`, a search match must start and end a word. The match can span multiple words. See also `gtk::TextIter::starts_word` and `gtk::TextIter::ends_word`.",24,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_case_sensitive","","Enables or disables the case sensitivity for the search.",24,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_regex_enabled","","Enables or disables whether to search by regular expressions. If enabled, the `SearchSettings:search-text` property contains the pattern of the regular expression.",24,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_search_text","","Sets the text to search. If `text` is `None` or is empty, the search will be disabled. A copy of `text` will be made, so you can safely free `text` after a call to this function.",24,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_wrap_around","","Enables or disables the wrap around search. If `wrap_around` is `true`, the forward search continues at the beginning of the buffer if no search occurrences are found. Similarly, the backward search continues to search at the end of the buffer.",24,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_property_at_word_boundaries_notify","","",24,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_case_sensitive_notify","","",24,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_regex_enabled_notify","","",24,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_search_text_notify","","",24,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_wrap_around_notify","","",24,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"StyleExt","","Trait containing all `Style` methods.",null,null],[10,"get_property_background","","",25,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_property_background_set","","",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_bold","","",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_bold_set","","",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_foreground","","",25,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_property_foreground_set","","",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_italic","","",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_italic_set","","",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_line_background","","",25,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_property_line_background_set","","",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_pango_underline","","",25,{"inputs":[{"name":"self"}],"output":{"name":"underline"}}],[10,"get_property_scale","","",25,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_property_scale_set","","",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_strikethrough","","",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_strikethrough_set","","",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_underline","","",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_underline_color","","",25,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_property_underline_color_set","","",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_underline_set","","",25,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"connect_property_background_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_background_set_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_bold_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_bold_set_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_foreground_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_foreground_set_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_italic_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_italic_set_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_line_background_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_line_background_set_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pango_underline_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_scale_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_scale_set_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_strikethrough_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_strikethrough_set_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_underline_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_underline_color_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_underline_color_set_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_underline_set_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"StyleSchemeExt","","Trait containing all `StyleScheme` methods.",null,null],[10,"get_authors","","",26,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_description","","",26,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_filename","","",26,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_id","","",26,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_name","","",26,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_style","","",26,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_property_description","","",26,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_property_filename","","",26,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_property_id","","",26,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_property_name","","",26,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_property_description_notify","","",26,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_filename_notify","","",26,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_id_notify","","",26,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_name_notify","","",26,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"StyleSchemeChooserExt","","Trait containing all `StyleSchemeChooser` methods.",null,null],[10,"get_style_scheme","","Gets the currently-selected scheme.",27,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_style_scheme","","Sets the scheme.",27,{"inputs":[{"name":"self"},{"name":"stylescheme"}],"output":null}],[10,"connect_property_style_scheme_notify","","",27,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"StyleSchemeManagerExt","","Trait containing all `StyleSchemeManager` methods.",null,null],[10,"append_search_path","","Appends `path` to the list of directories where the `self` looks for style scheme files. See `StyleSchemeManagerExt::set_search_path` for details. ## `path` a directory or a filename.",28,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"force_rescan","","Mark any currently cached information about the available style scehems as invalid. All the available style schemes will be reloaded next time the `self` is accessed.",28,{"inputs":[{"name":"self"}],"output":null}],[10,"get_scheme","","Looks up style scheme by id. ## `scheme_id` style scheme id to find.",28,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_scheme_ids","","Returns the ids of the available style schemes.",28,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_search_path","","Returns the current search path for the `self`. See `StyleSchemeManagerExt::set_search_path` for details.",28,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"prepend_search_path","","Prepends `path` to the list of directories where the `self` looks for style scheme files. See `StyleSchemeManagerExt::set_search_path` for details. ## `path` a directory or a filename.",28,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_search_path","","Sets the list of directories where the `self` looks for style scheme files. If `path` is `None`, the search path is reset to default. ## `path`",28,null],[10,"connect_property_scheme_ids_notify","","",28,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_search_path_notify","","",28,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"TagExt","","Trait containing all `Tag` methods.",null,null],[10,"get_property_draw_spaces","","",29,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_draw_spaces","","",29,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_draw_spaces_set","","",29,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_draw_spaces_set","","",29,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_property_draw_spaces_notify","","",29,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_draw_spaces_set_notify","","",29,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"UndoManagerExt","","Trait containing all `UndoManager` methods.",null,null],[10,"begin_not_undoable_action","","Begin a not undoable action on the buffer. All changes between this call and the call to `UndoManager::end_not_undoable_action` cannot be undone. This function should be re-entrant.",30,{"inputs":[{"name":"self"}],"output":null}],[10,"can_redo","","Get whether there are redo operations available.",30,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"can_redo_changed","","Emits the `UndoManager::can-redo-changed` signal.",30,{"inputs":[{"name":"self"}],"output":null}],[10,"can_undo","","Get whether there are undo operations available.",30,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"can_undo_changed","","Emits the `UndoManager::can-undo-changed` signal.",30,{"inputs":[{"name":"self"}],"output":null}],[10,"end_not_undoable_action","","Ends a not undoable action on the buffer.",30,{"inputs":[{"name":"self"}],"output":null}],[10,"redo","","Perform a single redo. Calling this function when there are no redo operations available is an error. Use `UndoManager::can_redo` to find out if there are redo operations available.",30,{"inputs":[{"name":"self"}],"output":null}],[10,"undo","","Perform a single undo. Calling this function when there are no undo operations available is an error. Use `UndoManager::can_undo` to find out if there are undo operations available.",30,{"inputs":[{"name":"self"}],"output":null}],[10,"connect_can_redo_changed","","",30,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_can_undo_changed","","",30,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ViewExt","","Trait containing all `View` methods.",null,null],[10,"get_auto_indent","","Returns whether auto-indentation of text is enabled.",31,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_background_pattern","","Returns the `BackgroundPatternType` specifying if and how the background pattern should be displayed for this `self`.",31,{"inputs":[{"name":"self"}],"output":{"name":"backgroundpatterntype"}}],[10,"get_completion","","Gets the `Completion` associated with `self`.",31,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_draw_spaces","","Returns the `DrawSpacesFlags` specifying if and how spaces should be displayed for this `self`.",31,{"inputs":[{"name":"self"}],"output":{"name":"drawspacesflags"}}],[10,"get_gutter","","Returns the `Gutter` object associated with `window_type` for `self`. Only GTK_TEXT_WINDOW_LEFT and GTK_TEXT_WINDOW_RIGHT are supported, respectively corresponding to the left and right gutter. The line numbers and mark category icons are rendered in the left gutter.",31,{"inputs":[{"name":"self"},{"name":"textwindowtype"}],"output":{"name":"option"}}],[10,"get_highlight_current_line","","Returns whether the current line is highlighted.",31,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_indent_on_tab","","Returns whether when the tab key is pressed the current selection should get indented instead of replaced with the \\t character.",31,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_indent_width","","Returns the number of spaces to use for each step of indent. See `ViewExt::set_indent_width` for details.",31,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_insert_spaces_instead_of_tabs","","Returns whether when inserting a tabulator character it should be replaced by a group of space characters.",31,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_right_margin_position","","Gets the position of the right margin in the given `self`.",31,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_show_line_marks","","Returns whether line marks are displayed beside the text.",31,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_line_numbers","","Returns whether line numbers are displayed beside the text.",31,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_right_margin","","Returns whether a right margin is displayed.",31,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_smart_backspace","","Returns `true` if pressing the Backspace key will try to delete spaces up to the previous tab stop.",31,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_smart_home_end","","Returns a `SmartHomeEndType` end value specifying how the cursor will move when HOME and END keys are pressed.",31,{"inputs":[{"name":"self"}],"output":{"name":"smarthomeendtype"}}],[10,"get_tab_width","","Returns the width of tabulation in characters.",31,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_visual_column","","Determines the visual column at `iter` taking into consideration the `View:tab-width` of `self`. ## `iter` a position in `self`.",31,{"inputs":[{"name":"self"},{"name":"textiter"}],"output":{"name":"u32"}}],[10,"indent_lines","","Insert one indentation level at the beginning of the specified lines.",31,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"textiter"}],"output":null}],[10,"set_auto_indent","","If `true` auto-indentation of text is enabled.",31,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_background_pattern","","Set if and how the background pattern should be displayed.",31,{"inputs":[{"name":"self"},{"name":"backgroundpatterntype"}],"output":null}],[10,"set_draw_spaces","","Set if and how the spaces should be visualized. Specifying `flags` as 0 will disable display of spaces.",31,{"inputs":[{"name":"self"},{"name":"drawspacesflags"}],"output":null}],[10,"set_highlight_current_line","","If `highlight` is `true` the current line will be highlighted. ## `highlight` whether to highlight the current line.",31,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_indent_on_tab","","If `true`, when the tab key is pressed when several lines are selected, the selected lines are indented of one level instead of being replaced with a \\t character. Shift+Tab unindents the selection.",31,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_indent_width","","Sets the number of spaces to use for each step of indent when the tab key is pressed. If `width` is -1, the value of the `View:tab-width` property will be used.",31,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_insert_spaces_instead_of_tabs","","If `true` a tab key pressed is replaced by a group of space characters. Of course it is still possible to insert a real \\t programmatically with the `gtk::TextBuffer` API. ## `enable` whether to insert spaces instead of tabs.",31,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_mark_attributes","","Sets attributes and priority for the `category`. ## `category` the category. ## `attributes` mark attributes. ## `priority` priority of the category.",31,{"inputs":[{"name":"self"},{"name":"str"},{"name":"markattributes"},{"name":"i32"}],"output":null}],[10,"set_right_margin_position","","Sets the position of the right margin in the given `self`. ## `pos` the width in characters where to position the right margin.",31,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"set_show_line_marks","","If `true` line marks will be displayed beside the text.",31,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_line_numbers","","If `true` line numbers will be displayed beside the text. ## `show` whether line numbers should be displayed.",31,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_right_margin","","If `true` a right margin is displayed. ## `show` whether to show a right margin.",31,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_smart_backspace","","When set to `true`, pressing the Backspace key will try to delete spaces up to the previous tab stop.",31,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_smart_home_end","","Set the desired movement of the cursor when HOME and END keys are pressed. ## `smart_home_end` the desired behavior among `SmartHomeEndType`.",31,{"inputs":[{"name":"self"},{"name":"smarthomeendtype"}],"output":null}],[10,"set_tab_width","","Sets the width of tabulation in characters. The `gtk::TextBuffer` still contains \\t characters, but they can take a different visual width in a `View` widget. ## `width` width of tab in characters.",31,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"unindent_lines","","Removes one indentation level at the beginning of the specified lines.",31,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"textiter"}],"output":null}],[10,"get_property_show_line_marks","","",31,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_show_line_marks","","",31,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_change_case","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_change_number","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_join_lines","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_line_mark_activated","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_lines","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_to_matching_bracket","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_words","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_redo","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_show_completion","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_smart_home_end","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_undo","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_auto_indent_notify","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_background_pattern_notify","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_completion_notify","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_draw_spaces_notify","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_highlight_current_line_notify","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_indent_on_tab_notify","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_indent_width_notify","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_insert_spaces_instead_of_tabs_notify","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_right_margin_position_notify","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_line_marks_notify","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_line_numbers_notify","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_right_margin_notify","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_smart_backspace_notify","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_smart_home_end_notify","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_tab_width_notify","","",31,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[11,"new","","Creates an error with supplied error enum variant and message.",62,{"inputs":[{"name":"t"},{"name":"str"}],"output":{"name":"error"}}],[11,"is","","Checks if the error domain matches `T`.",62,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"kind","","Tries to convert to a specific error enum.",62,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"wrap","","",62,null],[11,"static_type","","",62,{"inputs":[],"output":{"name":"type"}}],[11,"static_type","","",63,{"inputs":[],"output":{"name":"type"}}],[11,"clone","sourceview::signal","",4,{"inputs":[{"name":"self"}],"output":{"name":"inhibit"}}],[11,"clone","sourceview","",63,{"inputs":[{"name":"self"}],"output":{"name":"object"}}],[11,"clone","","",62,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"description","","",62,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",63,null],[11,"default","sourceview::signal","",4,{"inputs":[],"output":{"name":"inhibit"}}],[11,"eq","sourceview","",63,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"eq","sourceview::signal","",4,{"inputs":[{"name":"self"},{"name":"inhibit"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"inhibit"}],"output":{"name":"bool"}}],[11,"fmt","sourceview","",63,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","sourceview::signal","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","sourceview","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[4,"BackgroundPatternType"],[4,"ChangeCaseType"],[4,"GutterRendererAlignmentMode"],[4,"SmartHomeEndType"],[3,"Inhibit"],[8,"BufferExt"],[8,"CompletionExt"],[8,"CompletionContextExt"],[8,"CompletionInfoExt"],[8,"CompletionItemExt"],[8,"CompletionProposalExt"],[8,"CompletionProviderExt"],[8,"CompletionWordsExt"],[8,"GutterExt"],[8,"GutterRendererExt"],[8,"GutterRendererPixbufExt"],[8,"GutterRendererTextExt"],[8,"LanguageExt"],[8,"LanguageManagerExt"],[8,"MapExt"],[8,"MarkExt"],[8,"MarkAttributesExt"],[8,"PrintCompositorExt"],[8,"SearchContextExt"],[8,"SearchSettingsExt"],[8,"StyleExt"],[8,"StyleSchemeExt"],[8,"StyleSchemeChooserExt"],[8,"StyleSchemeManagerExt"],[8,"TagExt"],[8,"UndoManagerExt"],[8,"ViewExt"],[3,"Buffer"],[3,"Completion"],[3,"CompletionContext"],[3,"CompletionInfo"],[3,"CompletionItem"],[3,"CompletionProposal"],[3,"CompletionProvider"],[3,"CompletionWords"],[3,"Gutter"],[3,"GutterRenderer"],[3,"GutterRendererPixbuf"],[3,"GutterRendererText"],[3,"Language"],[3,"LanguageManager"],[3,"Map"],[3,"Mark"],[3,"MarkAttributes"],[3,"PrintCompositor"],[3,"SearchContext"],[3,"SearchSettings"],[3,"Style"],[3,"StyleScheme"],[3,"StyleSchemeChooser"],[3,"StyleSchemeManager"],[3,"Tag"],[3,"UndoManager"],[3,"View"],[3,"CompletionActivation"],[3,"DrawSpacesFlags"],[3,"GutterRendererState"],[3,"Error"],[3,"Object"]]};
searchIndex["glib"] = {"doc":"glib, gobject and gio bindings for Rust","items":[[3,"TimeVal","glib","",null,null],[12,"tv_sec","","",0,null],[12,"tv_usec","","",0,null],[3,"Bytes","","A shared immutable byte slice (the equivalent of `Rc<[u8]>`).",null,null],[3,"VariantTy","","Describes `Variant` types.",null,null],[3,"VariantType","","Describes `Variant` types.",null,null],[3,"EnumClass","","Representation of an `enum` for dynamically, at runtime, querying the values of the enum and using them.",null,null],[3,"EnumValue","","Representation of a single enum value of an `EnumClass`.",null,null],[3,"FlagsClass","","Representation of a `flags` for dynamically, at runtime, querying the values of the enum and using them",null,null],[3,"FlagsValue","","Representation of a single flags value of a `FlagsClass`.",null,null],[3,"FlagsBuilder","","Builder for conveniently setting/unsetting flags and returning a `Value`.",null,null],[3,"KEY_FILE_DESKTOP_GROUP","","",null,null],[3,"KEY_FILE_DESKTOP_KEY_ACTIONS","","",null,null],[3,"KEY_FILE_DESKTOP_KEY_CATEGORIES","","",null,null],[3,"KEY_FILE_DESKTOP_KEY_COMMENT","","",null,null],[3,"KEY_FILE_DESKTOP_KEY_DBUS_ACTIVATABLE","","",null,null],[3,"KEY_FILE_DESKTOP_KEY_EXEC","","",null,null],[3,"KEY_FILE_DESKTOP_KEY_FULLNAME","","",null,null],[3,"KEY_FILE_DESKTOP_KEY_GENERIC_NAME","","",null,null],[3,"KEY_FILE_DESKTOP_KEY_GETTEXT_DOMAIN","","",null,null],[3,"KEY_FILE_DESKTOP_KEY_HIDDEN","","",null,null],[3,"KEY_FILE_DESKTOP_KEY_ICON","","",null,null],[3,"KEY_FILE_DESKTOP_KEY_KEYWORDS","","",null,null],[3,"KEY_FILE_DESKTOP_KEY_MIME_TYPE","","",null,null],[3,"KEY_FILE_DESKTOP_KEY_NAME","","",null,null],[3,"KEY_FILE_DESKTOP_KEY_NOT_SHOW_IN","","",null,null],[3,"KEY_FILE_DESKTOP_KEY_NO_DISPLAY","","",null,null],[3,"KEY_FILE_DESKTOP_KEY_ONLY_SHOW_IN","","",null,null],[3,"KEY_FILE_DESKTOP_KEY_PATH","","",null,null],[3,"KEY_FILE_DESKTOP_KEY_STARTUP_NOTIFY","","",null,null],[3,"KEY_FILE_DESKTOP_KEY_STARTUP_WM_CLASS","","",null,null],[3,"KEY_FILE_DESKTOP_KEY_TERMINAL","","",null,null],[3,"KEY_FILE_DESKTOP_KEY_TRY_EXEC","","",null,null],[3,"KEY_FILE_DESKTOP_KEY_TYPE","","",null,null],[3,"KEY_FILE_DESKTOP_KEY_URL","","",null,null],[3,"KEY_FILE_DESKTOP_KEY_VERSION","","",null,null],[3,"KEY_FILE_DESKTOP_TYPE_APPLICATION","","",null,null],[3,"KEY_FILE_DESKTOP_TYPE_DIRECTORY","","",null,null],[3,"KEY_FILE_DESKTOP_TYPE_LINK","","",null,null],[3,"Checksum","","",null,null],[3,"DateTime","","",null,null],[3,"KeyFile","","",null,null],[3,"MainContext","","",null,null],[3,"MainLoop","","",null,null],[3,"Source","","",null,null],[3,"TimeZone","","",null,null],[3,"FormatSizeFlags","","",null,null],[3,"KeyFileFlags","","",null,null],[3,"Date","","",null,null],[4,"FileError","","",null,null],[13,"Exist","","",1,null],[13,"Isdir","","",1,null],[13,"Acces","","",1,null],[13,"Nametoolong","","",1,null],[13,"Noent","","",1,null],[13,"Notdir","","",1,null],[13,"Nxio","","",1,null],[13,"Nodev","","",1,null],[13,"Rofs","","",1,null],[13,"Txtbsy","","",1,null],[13,"Fault","","",1,null],[13,"Loop","","",1,null],[13,"Nospc","","",1,null],[13,"Nomem","","",1,null],[13,"Mfile","","",1,null],[13,"Nfile","","",1,null],[13,"Badf","","",1,null],[13,"Inval","","",1,null],[13,"Pipe","","",1,null],[13,"Again","","",1,null],[13,"Intr","","",1,null],[13,"Io","","",1,null],[13,"Perm","","",1,null],[13,"Nosys","","",1,null],[13,"Failed","","",1,null],[4,"UserDirectory","","",null,null],[13,"Desktop","","",2,null],[13,"Documents","","",2,null],[13,"Downloads","","",2,null],[13,"Music","","",2,null],[13,"Pictures","","",2,null],[13,"PublicShare","","",2,null],[13,"Templates","","",2,null],[13,"Videos","","",2,null],[4,"ChecksumType","","",null,null],[13,"Md5","","",3,null],[13,"Sha1","","",3,null],[13,"Sha256","","",3,null],[4,"DateMonth","","",null,null],[13,"BadMonth","","",4,null],[13,"January","","",4,null],[13,"February","","",4,null],[13,"March","","",4,null],[13,"April","","",4,null],[13,"May","","",4,null],[13,"June","","",4,null],[13,"July","","",4,null],[13,"August","","",4,null],[13,"September","","",4,null],[13,"October","","",4,null],[13,"November","","",4,null],[13,"December","","",4,null],[4,"DateWeekday","","",null,null],[13,"BadWeekday","","",5,null],[13,"Monday","","",5,null],[13,"Tuesday","","",5,null],[13,"Wednesday","","",5,null],[13,"Thursday","","",5,null],[13,"Friday","","",5,null],[13,"Saturday","","",5,null],[13,"Sunday","","",5,null],[4,"KeyFileError","","",null,null],[13,"UnknownEncoding","","",6,null],[13,"Parse","","",6,null],[13,"NotFound","","",6,null],[13,"KeyNotFound","","",6,null],[13,"GroupNotFound","","",6,null],[13,"InvalidValue","","",6,null],[4,"TimeType","","",null,null],[13,"Standard","","",7,null],[13,"Daylight","","",7,null],[13,"Universal","","",7,null],[5,"get_current_time","","",null,{"inputs":[],"output":{"name":"timeval"}}],[5,"access","","",null,{"inputs":[{"name":"p"},{"name":"i32"}],"output":{"name":"i32"}}],[5,"assert_warning","","",null,{"inputs":[{"name":"str"},{"name":"str"},{"name":"i32"},{"name":"str"},{"name":"str"}],"output":null}],[5,"assertion_message","","",null,{"inputs":[{"name":"str"},{"name":"str"},{"name":"i32"},{"name":"str"},{"name":"str"}],"output":null}],[5,"assertion_message_cmpstr","","",null,{"inputs":[{"name":"str"},{"name":"str"},{"name":"i32"},{"name":"str"},{"name":"str"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":null}],[5,"assertion_message_expr","","",null,{"inputs":[{"name":"p"},{"name":"str"},{"name":"i32"},{"name":"str"},{"name":"q"}],"output":null}],[5,"base64_decode","","",null,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[5,"base64_encode","","",null,null],[5,"basename","","",null,{"inputs":[{"name":"p"}],"output":{"name":"option"}}],[5,"bit_nth_lsf","","",null,{"inputs":[{"name":"c_ulong"},{"name":"i32"}],"output":{"name":"i32"}}],[5,"bit_nth_msf","","",null,{"inputs":[{"name":"c_ulong"},{"name":"i32"}],"output":{"name":"i32"}}],[5,"bit_storage","","",null,{"inputs":[{"name":"c_ulong"}],"output":{"name":"u32"}}],[5,"build_filenamev","","",null,null],[5,"build_pathv","","",null,null],[5,"chdir","","",null,{"inputs":[{"name":"p"}],"output":{"name":"i32"}}],[5,"check_version","","",null,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[5,"clear_error","","",null,{"inputs":[],"output":{"name":"result"}}],[5,"compute_checksum_for_bytes","","",null,{"inputs":[{"name":"checksumtype"},{"name":"bytes"}],"output":{"name":"option"}}],[5,"compute_checksum_for_data","","",null,null],[5,"compute_checksum_for_string","","",null,{"inputs":[{"name":"checksumtype"},{"name":"str"}],"output":{"name":"option"}}],[5,"compute_hmac_for_bytes","","",null,{"inputs":[{"name":"checksumtype"},{"name":"bytes"},{"name":"bytes"}],"output":{"name":"option"}}],[5,"compute_hmac_for_data","","",null,null],[5,"compute_hmac_for_string","","",null,null],[5,"dcgettext","","",null,{"inputs":[{"name":"p"},{"name":"str"},{"name":"i32"}],"output":{"name":"option"}}],[5,"dgettext","","",null,{"inputs":[{"name":"p"},{"name":"str"}],"output":{"name":"option"}}],[5,"dngettext","","",null,{"inputs":[{"name":"p"},{"name":"str"},{"name":"str"},{"name":"c_ulong"}],"output":{"name":"option"}}],[5,"dpgettext","","",null,{"inputs":[{"name":"p"},{"name":"str"},{"name":"usize"}],"output":{"name":"option"}}],[5,"dpgettext2","","",null,{"inputs":[{"name":"p"},{"name":"str"},{"name":"str"}],"output":{"name":"option"}}],[5,"environ_getenv","","",null,null],[5,"environ_setenv","","",null,null],[5,"environ_unsetenv","","",null,null],[5,"file_get_contents","","",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"file_open_tmp","","",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"file_read_link","","",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"file_set_contents","","",null,null],[5,"filename_display_basename","","",null,{"inputs":[{"name":"p"}],"output":{"name":"option"}}],[5,"filename_display_name","","",null,{"inputs":[{"name":"p"}],"output":{"name":"option"}}],[5,"format_size","","",null,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[5,"format_size_for_display","","",null,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[5,"format_size_full","","",null,{"inputs":[{"name":"u64"},{"name":"formatsizeflags"}],"output":{"name":"option"}}],[5,"get_application_name","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"get_charset","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"get_codeset","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"get_environ","","",null,{"inputs":[],"output":{"name":"vec"}}],[5,"get_host_name","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"get_language_names","","",null,{"inputs":[],"output":{"name":"vec"}}],[5,"get_locale_variants","","",null,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[5,"get_monotonic_time","","",null,{"inputs":[],"output":{"name":"i64"}}],[5,"get_real_time","","",null,{"inputs":[],"output":{"name":"i64"}}],[5,"get_system_config_dirs","","",null,{"inputs":[],"output":{"name":"vec"}}],[5,"get_system_data_dirs","","",null,{"inputs":[],"output":{"name":"vec"}}],[5,"get_user_cache_dir","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"get_user_config_dir","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"get_user_data_dir","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"get_user_runtime_dir","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"get_user_special_dir","","",null,{"inputs":[{"name":"userdirectory"}],"output":{"name":"option"}}],[5,"hostname_is_ascii_encoded","","",null,{"inputs":[{"name":"str"}],"output":{"name":"bool"}}],[5,"hostname_is_ip_address","","",null,{"inputs":[{"name":"str"}],"output":{"name":"bool"}}],[5,"hostname_is_non_ascii","","",null,{"inputs":[{"name":"str"}],"output":{"name":"bool"}}],[5,"hostname_to_ascii","","",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"hostname_to_unicode","","",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"intern_static_string","","",null,{"inputs":[{"name":"p"}],"output":{"name":"option"}}],[5,"intern_string","","",null,{"inputs":[{"name":"p"}],"output":{"name":"option"}}],[5,"listenv","","",null,{"inputs":[],"output":{"name":"vec"}}],[5,"log_remove_handler","","",null,{"inputs":[{"name":"str"},{"name":"u32"}],"output":null}],[5,"log_writer_is_journald","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"bool"}}],[5,"log_writer_supports_color","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"bool"}}],[5,"main_current_source","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"main_depth","","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"mem_is_system_malloc","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"mem_profile","","",null,{"inputs":[],"output":null}],[5,"mkdir_with_parents","","",null,{"inputs":[{"name":"p"},{"name":"i32"}],"output":{"name":"i32"}}],[5,"mkdtemp","","",null,{"inputs":[{"name":"p"}],"output":{"name":"option"}}],[5,"mkdtemp_full","","",null,{"inputs":[{"name":"p"},{"name":"i32"}],"output":{"name":"option"}}],[5,"mkstemp_full","","",null,{"inputs":[{"name":"p"},{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[5,"on_error_query","","",null,{"inputs":[{"name":"str"}],"output":null}],[5,"on_error_stack_trace","","",null,{"inputs":[{"name":"str"}],"output":null}],[5,"path_get_basename","","",null,{"inputs":[{"name":"p"}],"output":{"name":"option"}}],[5,"path_get_dirname","","",null,{"inputs":[{"name":"p"}],"output":{"name":"option"}}],[5,"path_is_absolute","","",null,{"inputs":[{"name":"p"}],"output":{"name":"bool"}}],[5,"path_skip_root","","",null,{"inputs":[{"name":"p"}],"output":{"name":"option"}}],[5,"pattern_match_simple","","",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"bool"}}],[5,"random_double","","",null,{"inputs":[],"output":{"name":"f64"}}],[5,"random_double_range","","",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"random_int","","",null,{"inputs":[],"output":{"name":"u32"}}],[5,"random_int_range","","",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[5,"random_set_seed","","",null,{"inputs":[{"name":"u32"}],"output":null}],[5,"reload_user_special_dirs_cache","","",null,{"inputs":[],"output":null}],[5,"return_if_fail_warning","","",null,{"inputs":[{"name":"p"},{"name":"str"},{"name":"q"}],"output":null}],[5,"rmdir","","",null,{"inputs":[{"name":"p"}],"output":{"name":"i32"}}],[5,"set_application_name","","",null,{"inputs":[{"name":"str"}],"output":null}],[5,"shell_parse_argv","","",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"shell_quote","","",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"shell_unquote","","",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"spaced_primes_closest","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"u32"}}],[5,"spawn_check_exit_status","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"result"}}],[5,"spawn_command_line_async","","",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"stpcpy","","",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"option"}}],[5,"test_assert_expected_messages_internal","","",null,{"inputs":[{"name":"str"},{"name":"str"},{"name":"i32"},{"name":"str"}],"output":null}],[5,"test_bug","","",null,{"inputs":[{"name":"str"}],"output":null}],[5,"test_bug_base","","",null,{"inputs":[{"name":"str"}],"output":null}],[5,"test_fail","","",null,{"inputs":[],"output":null}],[5,"test_failed","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"test_incomplete","","",null,{"inputs":[{"name":"p"}],"output":null}],[5,"test_rand_double","","",null,{"inputs":[],"output":{"name":"f64"}}],[5,"test_rand_double_range","","",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"test_rand_int","","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"test_rand_int_range","","",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[5,"test_run","","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"test_set_nonfatal_assertions","","",null,{"inputs":[],"output":null}],[5,"test_skip","","",null,{"inputs":[{"name":"p"}],"output":null}],[5,"test_subprocess","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"test_timer_elapsed","","",null,{"inputs":[],"output":{"name":"f64"}}],[5,"test_timer_last","","",null,{"inputs":[],"output":{"name":"f64"}}],[5,"test_timer_start","","",null,{"inputs":[],"output":null}],[5,"test_trap_assertions","","",null,{"inputs":[{"name":"str"},{"name":"str"},{"name":"i32"},{"name":"str"},{"name":"u64"},{"name":"str"}],"output":null}],[5,"test_trap_has_passed","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"test_trap_reached_timeout","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"unix_set_fd_nonblocking","","",null,{"inputs":[{"name":"i32"},{"name":"bool"}],"output":{"name":"result"}}],[5,"unlink","","",null,{"inputs":[{"name":"p"}],"output":{"name":"i32"}}],[5,"uri_escape_string","","",null,{"inputs":[{"name":"str"},{"name":"p"},{"name":"bool"}],"output":{"name":"option"}}],[5,"uri_list_extract_uris","","",null,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[5,"uri_parse_scheme","","",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"uri_unescape_segment","","",null,{"inputs":[{"name":"p"},{"name":"q"},{"name":"r"}],"output":{"name":"option"}}],[5,"uri_unescape_string","","",null,{"inputs":[{"name":"str"},{"name":"p"}],"output":{"name":"option"}}],[5,"usleep","","",null,{"inputs":[{"name":"c_ulong"}],"output":null}],[5,"variant_get_gtype","","",null,{"inputs":[],"output":{"name":"type"}}],[5,"warn_message","","",null,{"inputs":[{"name":"p"},{"name":"str"},{"name":"i32"},{"name":"str"},{"name":"q"}],"output":null}],[5,"get_program_name","","Same as [`get_prgname()`].",null,{"inputs":[],"output":{"name":"option"}}],[5,"get_prgname","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"set_program_name","","Same as [`set_prgname()`].",null,{"inputs":[{"name":"option"}],"output":null}],[5,"set_prgname","","",null,{"inputs":[{"name":"option"}],"output":null}],[5,"getenv","","",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"setenv","","",null,{"inputs":[{"name":"str"},{"name":"str"},{"name":"bool"}],"output":{"name":"result"}}],[5,"unsetenv","","",null,{"inputs":[{"name":"str"}],"output":null}],[5,"get_user_name","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"get_real_name","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"get_current_dir","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"filename_to_uri","","",null,{"inputs":[{"name":"p"},{"name":"q"}],"output":{"name":"result"}}],[5,"filename_from_uri","","",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"find_program_in_path","","",null,{"inputs":[{"name":"p"}],"output":{"name":"option"}}],[5,"get_home_dir","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"get_tmp_dir","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"mkstemp","","",null,{"inputs":[{"name":"p"}],"output":{"name":"i32"}}],[0,"wrapper","","`IMPL` The `glib_wrapper!` macro and miscellaneous wrapper traits.",null,null],[8,"Wrapper","glib::wrapper","A wrapper struct.",null,null],[16,"GlibType","","Foreign type represented by the struct.",8,null],[8,"UnsafeFrom","","",null,null],[10,"from","","",9,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[0,"boxed","glib","`IMPL` Boxed wrapper implementation.",null,null],[3,"Boxed","glib::boxed","Encapsulates memory management logic for boxed types.",null,null],[8,"BoxedMemoryManager","","Memory management functions for a boxed type.",null,null],[10,"copy","","Makes a copy.",10,null],[10,"free","","Frees the object.",10,null],[11,"uninitialized","","",11,{"inputs":[],"output":{"name":"self"}}],[11,"uninitialized","","",11,{"inputs":[],"output":{"name":"self"}}],[11,"to_glib_none","","",11,{"inputs":[{"name":"self"}],"output":{"name":"stash"}}],[11,"to_glib_full","","",11,null],[11,"to_glib_none_mut","","",11,{"inputs":[{"name":"self"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",11,null],[11,"from_glib_full","","",11,null],[11,"from_glib_borrow","","",11,null],[11,"drop","","",11,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"deref","","",11,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"deref_mut","","",11,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[0,"shared","glib","`IMPL` Shared (reference counted) wrapper implementation.",null,null],[3,"Shared","glib::shared","Encapsulates memory management logic for shared types.",null,null],[8,"SharedMemoryManager","","",null,null],[10,"ref_","","",12,null],[10,"unref","","",12,null],[11,"drop","","",13,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"hash","","",13,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"to_glib_none","","",13,{"inputs":[{"name":"self"}],"output":{"name":"stash"}}],[11,"to_glib_full","","",13,null],[11,"from_glib_none","","",13,null],[11,"from_glib_full","","",13,null],[11,"from_glib_borrow","","",13,null],[0,"object","glib","`IMPL` Object wrapper implementation and `Object` binding.",null,null],[3,"Object","glib::object","The base class in the object hierarchy.",null,null],[3,"WeakRef","","",null,null],[8,"Cast","","Upcasting and downcasting support.",null,null],[11,"upcast","","Upcasts an object to a superclass or interface `T`.",14,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"downcast","","Tries to downcast to a subclass or interface implementor `T`.",14,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"is","","Returns `true` if the object is an instance of (can be cast to) `T`.",14,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"dynamic_cast","","Tries to cast to an object of type `T`. This handles upcasting, downcasting and casting between interface and interface implementors. All checks are performed at runtime, while `downcast` and `upcast` will do many checks at compile-time already.",14,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[8,"IsA","","Declares the \"is a\" relationship.",null,null],[8,"Downcast","","Downcasts support.",null,null],[10,"can_downcast","","Checks if it's possible to downcast to `T`.",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"downcast","","Tries to downcast to `T`.",15,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"downcast_unchecked","","Downcasts to `T` unconditionally.",15,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[8,"ObjectExt","","",null,null],[10,"get_type","","",16,{"inputs":[{"name":"self"}],"output":{"name":"type"}}],[10,"set_property","","",16,{"inputs":[{"name":"self"},{"name":"n"},{"name":"value"}],"output":{"name":"result"}}],[10,"get_property","","",16,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"result"}}],[10,"has_property","","",16,{"inputs":[{"name":"self"},{"name":"n"},{"name":"option"}],"output":{"name":"result"}}],[10,"get_property_type","","",16,{"inputs":[{"name":"self"},{"name":"n"}],"output":{"name":"option"}}],[10,"connect","","",16,{"inputs":[{"name":"self"},{"name":"n"},{"name":"bool"},{"name":"f"}],"output":{"name":"result"}}],[10,"emit","","",16,null],[10,"downgrade","","",16,{"inputs":[{"name":"self"}],"output":{"name":"weakref"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"object"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",17,null],[11,"static_type","","",17,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",17,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"upgrade","","",18,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"drop","","",18,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[0,"functions","glib","",null,null],[5,"access","glib::functions","",null,{"inputs":[{"name":"p"},{"name":"i32"}],"output":{"name":"i32"}}],[5,"assert_warning","","",null,{"inputs":[{"name":"str"},{"name":"str"},{"name":"i32"},{"name":"str"},{"name":"str"}],"output":null}],[5,"assertion_message","","",null,{"inputs":[{"name":"str"},{"name":"str"},{"name":"i32"},{"name":"str"},{"name":"str"}],"output":null}],[5,"assertion_message_cmpstr","","",null,{"inputs":[{"name":"str"},{"name":"str"},{"name":"i32"},{"name":"str"},{"name":"str"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":null}],[5,"assertion_message_expr","","",null,{"inputs":[{"name":"p"},{"name":"str"},{"name":"i32"},{"name":"str"},{"name":"q"}],"output":null}],[5,"base64_decode","","",null,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[5,"base64_encode","","",null,null],[5,"basename","","",null,{"inputs":[{"name":"p"}],"output":{"name":"option"}}],[5,"bit_nth_lsf","","",null,{"inputs":[{"name":"c_ulong"},{"name":"i32"}],"output":{"name":"i32"}}],[5,"bit_nth_msf","","",null,{"inputs":[{"name":"c_ulong"},{"name":"i32"}],"output":{"name":"i32"}}],[5,"bit_storage","","",null,{"inputs":[{"name":"c_ulong"}],"output":{"name":"u32"}}],[5,"build_filenamev","","",null,null],[5,"build_pathv","","",null,null],[5,"chdir","","",null,{"inputs":[{"name":"p"}],"output":{"name":"i32"}}],[5,"check_version","","",null,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[5,"clear_error","","",null,{"inputs":[],"output":{"name":"result"}}],[5,"compute_checksum_for_bytes","","",null,{"inputs":[{"name":"checksumtype"},{"name":"bytes"}],"output":{"name":"option"}}],[5,"compute_checksum_for_data","","",null,null],[5,"compute_checksum_for_string","","",null,{"inputs":[{"name":"checksumtype"},{"name":"str"}],"output":{"name":"option"}}],[5,"compute_hmac_for_bytes","","",null,{"inputs":[{"name":"checksumtype"},{"name":"bytes"},{"name":"bytes"}],"output":{"name":"option"}}],[5,"compute_hmac_for_data","","",null,null],[5,"compute_hmac_for_string","","",null,null],[5,"dcgettext","","",null,{"inputs":[{"name":"p"},{"name":"str"},{"name":"i32"}],"output":{"name":"option"}}],[5,"dgettext","","",null,{"inputs":[{"name":"p"},{"name":"str"}],"output":{"name":"option"}}],[5,"dngettext","","",null,{"inputs":[{"name":"p"},{"name":"str"},{"name":"str"},{"name":"c_ulong"}],"output":{"name":"option"}}],[5,"dpgettext","","",null,{"inputs":[{"name":"p"},{"name":"str"},{"name":"usize"}],"output":{"name":"option"}}],[5,"dpgettext2","","",null,{"inputs":[{"name":"p"},{"name":"str"},{"name":"str"}],"output":{"name":"option"}}],[5,"environ_getenv","","",null,null],[5,"environ_setenv","","",null,null],[5,"environ_unsetenv","","",null,null],[5,"file_get_contents","","",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"file_open_tmp","","",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"file_read_link","","",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"file_set_contents","","",null,null],[5,"filename_display_basename","","",null,{"inputs":[{"name":"p"}],"output":{"name":"option"}}],[5,"filename_display_name","","",null,{"inputs":[{"name":"p"}],"output":{"name":"option"}}],[5,"format_size","","",null,{"inputs":[{"name":"u64"}],"output":{"name":"option"}}],[5,"format_size_for_display","","",null,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[5,"format_size_full","","",null,{"inputs":[{"name":"u64"},{"name":"formatsizeflags"}],"output":{"name":"option"}}],[5,"get_application_name","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"get_charset","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"get_codeset","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"get_environ","","",null,{"inputs":[],"output":{"name":"vec"}}],[5,"get_host_name","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"get_language_names","","",null,{"inputs":[],"output":{"name":"vec"}}],[5,"get_locale_variants","","",null,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[5,"get_monotonic_time","","",null,{"inputs":[],"output":{"name":"i64"}}],[5,"get_real_time","","",null,{"inputs":[],"output":{"name":"i64"}}],[5,"get_system_config_dirs","","",null,{"inputs":[],"output":{"name":"vec"}}],[5,"get_system_data_dirs","","",null,{"inputs":[],"output":{"name":"vec"}}],[5,"get_user_cache_dir","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"get_user_config_dir","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"get_user_data_dir","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"get_user_runtime_dir","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"get_user_special_dir","","",null,{"inputs":[{"name":"userdirectory"}],"output":{"name":"option"}}],[5,"hostname_is_ascii_encoded","","",null,{"inputs":[{"name":"str"}],"output":{"name":"bool"}}],[5,"hostname_is_ip_address","","",null,{"inputs":[{"name":"str"}],"output":{"name":"bool"}}],[5,"hostname_is_non_ascii","","",null,{"inputs":[{"name":"str"}],"output":{"name":"bool"}}],[5,"hostname_to_ascii","","",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"hostname_to_unicode","","",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"intern_static_string","","",null,{"inputs":[{"name":"p"}],"output":{"name":"option"}}],[5,"intern_string","","",null,{"inputs":[{"name":"p"}],"output":{"name":"option"}}],[5,"listenv","","",null,{"inputs":[],"output":{"name":"vec"}}],[5,"log_remove_handler","","",null,{"inputs":[{"name":"str"},{"name":"u32"}],"output":null}],[5,"log_writer_is_journald","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"bool"}}],[5,"log_writer_supports_color","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"bool"}}],[5,"main_current_source","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"main_depth","","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"mem_is_system_malloc","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"mem_profile","","",null,{"inputs":[],"output":null}],[5,"mkdir_with_parents","","",null,{"inputs":[{"name":"p"},{"name":"i32"}],"output":{"name":"i32"}}],[5,"mkdtemp","","",null,{"inputs":[{"name":"p"}],"output":{"name":"option"}}],[5,"mkdtemp_full","","",null,{"inputs":[{"name":"p"},{"name":"i32"}],"output":{"name":"option"}}],[5,"mkstemp_full","","",null,{"inputs":[{"name":"p"},{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[5,"on_error_query","","",null,{"inputs":[{"name":"str"}],"output":null}],[5,"on_error_stack_trace","","",null,{"inputs":[{"name":"str"}],"output":null}],[5,"path_get_basename","","",null,{"inputs":[{"name":"p"}],"output":{"name":"option"}}],[5,"path_get_dirname","","",null,{"inputs":[{"name":"p"}],"output":{"name":"option"}}],[5,"path_is_absolute","","",null,{"inputs":[{"name":"p"}],"output":{"name":"bool"}}],[5,"path_skip_root","","",null,{"inputs":[{"name":"p"}],"output":{"name":"option"}}],[5,"pattern_match_simple","","",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"bool"}}],[5,"random_double","","",null,{"inputs":[],"output":{"name":"f64"}}],[5,"random_double_range","","",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"random_int","","",null,{"inputs":[],"output":{"name":"u32"}}],[5,"random_int_range","","",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[5,"random_set_seed","","",null,{"inputs":[{"name":"u32"}],"output":null}],[5,"reload_user_special_dirs_cache","","",null,{"inputs":[],"output":null}],[5,"return_if_fail_warning","","",null,{"inputs":[{"name":"p"},{"name":"str"},{"name":"q"}],"output":null}],[5,"rmdir","","",null,{"inputs":[{"name":"p"}],"output":{"name":"i32"}}],[5,"set_application_name","","",null,{"inputs":[{"name":"str"}],"output":null}],[5,"shell_parse_argv","","",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"shell_quote","","",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"shell_unquote","","",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"spaced_primes_closest","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"u32"}}],[5,"spawn_check_exit_status","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"result"}}],[5,"spawn_command_line_async","","",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"stpcpy","","",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"option"}}],[5,"test_assert_expected_messages_internal","","",null,{"inputs":[{"name":"str"},{"name":"str"},{"name":"i32"},{"name":"str"}],"output":null}],[5,"test_bug","","",null,{"inputs":[{"name":"str"}],"output":null}],[5,"test_bug_base","","",null,{"inputs":[{"name":"str"}],"output":null}],[5,"test_fail","","",null,{"inputs":[],"output":null}],[5,"test_failed","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"test_incomplete","","",null,{"inputs":[{"name":"p"}],"output":null}],[5,"test_rand_double","","",null,{"inputs":[],"output":{"name":"f64"}}],[5,"test_rand_double_range","","",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"test_rand_int","","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"test_rand_int_range","","",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[5,"test_run","","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"test_set_nonfatal_assertions","","",null,{"inputs":[],"output":null}],[5,"test_skip","","",null,{"inputs":[{"name":"p"}],"output":null}],[5,"test_subprocess","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"test_timer_elapsed","","",null,{"inputs":[],"output":{"name":"f64"}}],[5,"test_timer_last","","",null,{"inputs":[],"output":{"name":"f64"}}],[5,"test_timer_start","","",null,{"inputs":[],"output":null}],[5,"test_trap_assertions","","",null,{"inputs":[{"name":"str"},{"name":"str"},{"name":"i32"},{"name":"str"},{"name":"u64"},{"name":"str"}],"output":null}],[5,"test_trap_has_passed","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"test_trap_reached_timeout","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"unix_set_fd_nonblocking","","",null,{"inputs":[{"name":"i32"},{"name":"bool"}],"output":{"name":"result"}}],[5,"unlink","","",null,{"inputs":[{"name":"p"}],"output":{"name":"i32"}}],[5,"uri_escape_string","","",null,{"inputs":[{"name":"str"},{"name":"p"},{"name":"bool"}],"output":{"name":"option"}}],[5,"uri_list_extract_uris","","",null,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[5,"uri_parse_scheme","","",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"uri_unescape_segment","","",null,{"inputs":[{"name":"p"},{"name":"q"},{"name":"r"}],"output":{"name":"option"}}],[5,"uri_unescape_string","","",null,{"inputs":[{"name":"str"},{"name":"p"}],"output":{"name":"option"}}],[5,"usleep","","",null,{"inputs":[{"name":"c_ulong"}],"output":null}],[5,"variant_get_gtype","","",null,{"inputs":[],"output":{"name":"type"}}],[5,"warn_message","","",null,{"inputs":[{"name":"p"},{"name":"str"},{"name":"i32"},{"name":"str"},{"name":"q"}],"output":null}],[11,"clone","glib","",19,{"inputs":[{"name":"self"}],"output":{"name":"checksum"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"static_type","","",19,{"inputs":[],"output":{"name":"type"}}],[11,"new","","",19,{"inputs":[{"name":"checksumtype"}],"output":{"name":"checksum"}}],[11,"reset","","",19,{"inputs":[{"name":"self"}],"output":null}],[11,"update","","",19,null],[11,"type_get_length","","",19,{"inputs":[{"name":"checksumtype"}],"output":{"name":"isize"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"datetime"}}],[11,"static_type","","",20,{"inputs":[],"output":{"name":"type"}}],[11,"new","","",20,{"inputs":[{"name":"timezone"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"f64"}],"output":{"name":"datetime"}}],[11,"new_from_unix_local","","",20,{"inputs":[{"name":"i64"}],"output":{"name":"datetime"}}],[11,"new_from_unix_utc","","",20,{"inputs":[{"name":"i64"}],"output":{"name":"datetime"}}],[11,"new_local","","",20,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"f64"}],"output":{"name":"datetime"}}],[11,"new_now","","",20,{"inputs":[{"name":"timezone"}],"output":{"name":"datetime"}}],[11,"new_now_local","","",20,{"inputs":[],"output":{"name":"datetime"}}],[11,"new_now_utc","","",20,{"inputs":[],"output":{"name":"datetime"}}],[11,"new_utc","","",20,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"f64"}],"output":{"name":"datetime"}}],[11,"add","","",20,{"inputs":[{"name":"self"},{"name":"timespan"}],"output":{"name":"option"}}],[11,"add_days","","",20,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[11,"add_full","","",20,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"f64"}],"output":{"name":"option"}}],[11,"add_hours","","",20,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[11,"add_minutes","","",20,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[11,"add_months","","",20,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[11,"add_seconds","","",20,{"inputs":[{"name":"self"},{"name":"f64"}],"output":{"name":"option"}}],[11,"add_weeks","","",20,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[11,"add_years","","",20,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[11,"difference","","",20,{"inputs":[{"name":"self"},{"name":"datetime"}],"output":{"name":"timespan"}}],[11,"format","","",20,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"get_day_of_month","","",20,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_day_of_week","","",20,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_day_of_year","","",20,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_hour","","",20,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_microsecond","","",20,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_minute","","",20,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_month","","",20,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_second","","",20,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_seconds","","",20,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"get_timezone_abbreviation","","",20,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_utc_offset","","",20,{"inputs":[{"name":"self"}],"output":{"name":"timespan"}}],[11,"get_week_numbering_year","","",20,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_week_of_year","","",20,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_year","","",20,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_ymd","","",20,null],[11,"is_daylight_savings","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"to_local","","",20,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_timezone","","",20,{"inputs":[{"name":"self"},{"name":"timezone"}],"output":{"name":"option"}}],[11,"to_unix","","",20,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"to_utc","","",20,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"partial_cmp","","",20,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[11,"cmp","","",20,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"ordering"}}],[11,"eq","","",20,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"keyfile"}}],[11,"static_type","","",21,{"inputs":[],"output":{"name":"type"}}],[11,"new","","",21,{"inputs":[],"output":{"name":"keyfile"}}],[11,"get_boolean","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"get_comment","","",21,{"inputs":[{"name":"self"},{"name":"p"},{"name":"str"}],"output":{"name":"result"}}],[11,"get_double","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"get_double_list","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"get_groups","","",21,null],[11,"get_int64","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"get_integer","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"get_integer_list","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"get_keys","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[11,"get_locale_string","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"},{"name":"p"}],"output":{"name":"result"}}],[11,"get_locale_string_list","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"},{"name":"p"}],"output":{"name":"result"}}],[11,"get_start_group","","",21,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_string","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"get_string_list","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"get_uint64","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"get_value","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"has_group","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"has_key","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"load_from_bytes","","",21,{"inputs":[{"name":"self"},{"name":"bytes"},{"name":"keyfileflags"}],"output":{"name":"result"}}],[11,"load_from_file","","",21,{"inputs":[{"name":"self"},{"name":"p"},{"name":"keyfileflags"}],"output":{"name":"result"}}],[11,"remove_comment","","",21,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":{"name":"result"}}],[11,"remove_group","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[11,"remove_key","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"set_boolean","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"},{"name":"bool"}],"output":null}],[11,"set_comment","","",21,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"},{"name":"str"}],"output":{"name":"result"}}],[11,"set_double","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"},{"name":"f64"}],"output":null}],[11,"set_int64","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"},{"name":"i64"}],"output":null}],[11,"set_integer","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"},{"name":"i32"}],"output":null}],[11,"set_locale_string","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":null}],[11,"set_string","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":null}],[11,"set_uint64","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"},{"name":"u64"}],"output":null}],[11,"set_value","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":null}],[11,"to_data","","",21,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"default","","",21,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"maincontext"}}],[11,"static_type","","",22,{"inputs":[],"output":{"name":"type"}}],[11,"new","","",22,{"inputs":[],"output":{"name":"maincontext"}}],[11,"acquire","","",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"dispatch","","",22,{"inputs":[{"name":"self"}],"output":null}],[11,"is_owner","","",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"iteration","","",22,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"bool"}}],[11,"pending","","",22,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"pop_thread_default","","",22,{"inputs":[{"name":"self"}],"output":null}],[11,"push_thread_default","","",22,{"inputs":[{"name":"self"}],"output":null}],[11,"release","","",22,{"inputs":[{"name":"self"}],"output":null}],[11,"wakeup","","",22,{"inputs":[{"name":"self"}],"output":null}],[11,"default","","",22,{"inputs":[],"output":{"name":"option"}}],[11,"get_thread_default","","",22,{"inputs":[],"output":{"name":"option"}}],[11,"ref_thread_default","","",22,{"inputs":[],"output":{"name":"option"}}],[11,"default","","",22,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"mainloop"}}],[11,"static_type","","",23,{"inputs":[],"output":{"name":"type"}}],[11,"new","","",23,{"inputs":[{"name":"p"},{"name":"bool"}],"output":{"name":"mainloop"}}],[11,"get_context","","",23,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"is_running","","",23,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"quit","","",23,{"inputs":[{"name":"self"}],"output":null}],[11,"run","","",23,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"source"}}],[11,"static_type","","",24,{"inputs":[],"output":{"name":"type"}}],[11,"add_child_source","","",24,{"inputs":[{"name":"self"},{"name":"source"}],"output":null}],[11,"attach","","",24,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"u32"}}],[11,"destroy","","",24,{"inputs":[{"name":"self"}],"output":null}],[11,"get_can_recurse","","",24,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get_context","","",24,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_id","","",24,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_name","","",24,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_priority","","",24,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_ready_time","","",24,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"get_time","","",24,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"is_destroyed","","",24,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"remove_child_source","","",24,{"inputs":[{"name":"self"},{"name":"source"}],"output":null}],[11,"remove","","",24,{"inputs":[{"name":"u32"}],"output":{"name":"bool"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"timezone"}}],[11,"static_type","","",25,{"inputs":[],"output":{"name":"type"}}],[11,"new","","",25,{"inputs":[{"name":"p"}],"output":{"name":"timezone"}}],[11,"new_local","","",25,{"inputs":[],"output":{"name":"timezone"}}],[11,"new_utc","","",25,{"inputs":[],"output":{"name":"timezone"}}],[11,"find_interval","","",25,{"inputs":[{"name":"self"},{"name":"timetype"},{"name":"i64"}],"output":{"name":"i32"}}],[11,"get_abbreviation","","",25,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[11,"get_offset","","",25,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"i32"}}],[11,"is_dst","","",25,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"checksumtype"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"checksumtype"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"checksumtype"}],"output":{"name":"bool"}}],[11,"hash","","",3,null],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"datemonth"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"datemonth"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"datemonth"}],"output":{"name":"bool"}}],[11,"hash","","",4,null],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"dateweekday"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"dateweekday"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"dateweekday"}],"output":{"name":"bool"}}],[11,"hash","","",5,null],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"keyfileerror"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"keyfileerror"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"self"},{"name":"keyfileerror"}],"output":{"name":"bool"}}],[11,"hash","","",6,null],[11,"domain","","",6,{"inputs":[],"output":{"name":"gquark"}}],[11,"code","","",6,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from","","",6,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"timetype"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"timetype"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"self"},{"name":"timetype"}],"output":{"name":"bool"}}],[11,"hash","","",7,null],[11,"eq","","",26,{"inputs":[{"name":"self"},{"name":"formatsizeflags"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"self"},{"name":"formatsizeflags"}],"output":{"name":"bool"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"formatsizeflags"}}],[11,"partial_cmp","","",26,{"inputs":[{"name":"self"},{"name":"formatsizeflags"}],"output":{"name":"option"}}],[11,"lt","","",26,{"inputs":[{"name":"self"},{"name":"formatsizeflags"}],"output":{"name":"bool"}}],[11,"le","","",26,{"inputs":[{"name":"self"},{"name":"formatsizeflags"}],"output":{"name":"bool"}}],[11,"gt","","",26,{"inputs":[{"name":"self"},{"name":"formatsizeflags"}],"output":{"name":"bool"}}],[11,"ge","","",26,{"inputs":[{"name":"self"},{"name":"formatsizeflags"}],"output":{"name":"bool"}}],[11,"cmp","","",26,{"inputs":[{"name":"self"},{"name":"formatsizeflags"}],"output":{"name":"ordering"}}],[11,"hash","","",26,null],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",26,{"inputs":[],"output":{"name":"formatsizeflags"}}],[11,"all","","Returns the set containing all flags.",26,{"inputs":[],"output":{"name":"formatsizeflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",26,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",26,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",26,{"inputs":[{"name":"u32"}],"output":{"name":"formatsizeflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",26,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",26,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",26,{"inputs":[{"name":"self"},{"name":"formatsizeflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",26,{"inputs":[{"name":"self"},{"name":"formatsizeflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",26,{"inputs":[{"name":"self"},{"name":"formatsizeflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",26,{"inputs":[{"name":"self"},{"name":"formatsizeflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",26,{"inputs":[{"name":"self"},{"name":"formatsizeflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",26,{"inputs":[{"name":"self"},{"name":"formatsizeflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",26,{"inputs":[{"name":"self"},{"name":"formatsizeflags"}],"output":{"name":"formatsizeflags"}}],[11,"bitor_assign","","Adds the set of flags.",26,{"inputs":[{"name":"self"},{"name":"formatsizeflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",26,{"inputs":[{"name":"self"},{"name":"formatsizeflags"}],"output":{"name":"formatsizeflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",26,{"inputs":[{"name":"self"},{"name":"formatsizeflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",26,{"inputs":[{"name":"self"},{"name":"formatsizeflags"}],"output":{"name":"formatsizeflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",26,{"inputs":[{"name":"self"},{"name":"formatsizeflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",26,{"inputs":[{"name":"self"},{"name":"formatsizeflags"}],"output":{"name":"formatsizeflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",26,{"inputs":[{"name":"self"},{"name":"formatsizeflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",26,{"inputs":[{"name":"self"}],"output":{"name":"formatsizeflags"}}],[11,"extend","","",26,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",26,{"inputs":[{"name":"t"}],"output":{"name":"formatsizeflags"}}],[11,"eq","","",27,{"inputs":[{"name":"self"},{"name":"keyfileflags"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"self"},{"name":"keyfileflags"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"keyfileflags"}}],[11,"partial_cmp","","",27,{"inputs":[{"name":"self"},{"name":"keyfileflags"}],"output":{"name":"option"}}],[11,"lt","","",27,{"inputs":[{"name":"self"},{"name":"keyfileflags"}],"output":{"name":"bool"}}],[11,"le","","",27,{"inputs":[{"name":"self"},{"name":"keyfileflags"}],"output":{"name":"bool"}}],[11,"gt","","",27,{"inputs":[{"name":"self"},{"name":"keyfileflags"}],"output":{"name":"bool"}}],[11,"ge","","",27,{"inputs":[{"name":"self"},{"name":"keyfileflags"}],"output":{"name":"bool"}}],[11,"cmp","","",27,{"inputs":[{"name":"self"},{"name":"keyfileflags"}],"output":{"name":"ordering"}}],[11,"hash","","",27,null],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",27,{"inputs":[],"output":{"name":"keyfileflags"}}],[11,"all","","Returns the set containing all flags.",27,{"inputs":[],"output":{"name":"keyfileflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",27,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",27,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",27,{"inputs":[{"name":"u32"}],"output":{"name":"keyfileflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",27,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",27,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",27,{"inputs":[{"name":"self"},{"name":"keyfileflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",27,{"inputs":[{"name":"self"},{"name":"keyfileflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",27,{"inputs":[{"name":"self"},{"name":"keyfileflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",27,{"inputs":[{"name":"self"},{"name":"keyfileflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",27,{"inputs":[{"name":"self"},{"name":"keyfileflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",27,{"inputs":[{"name":"self"},{"name":"keyfileflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",27,{"inputs":[{"name":"self"},{"name":"keyfileflags"}],"output":{"name":"keyfileflags"}}],[11,"bitor_assign","","Adds the set of flags.",27,{"inputs":[{"name":"self"},{"name":"keyfileflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",27,{"inputs":[{"name":"self"},{"name":"keyfileflags"}],"output":{"name":"keyfileflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",27,{"inputs":[{"name":"self"},{"name":"keyfileflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",27,{"inputs":[{"name":"self"},{"name":"keyfileflags"}],"output":{"name":"keyfileflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",27,{"inputs":[{"name":"self"},{"name":"keyfileflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",27,{"inputs":[{"name":"self"},{"name":"keyfileflags"}],"output":{"name":"keyfileflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",27,{"inputs":[{"name":"self"},{"name":"keyfileflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",27,{"inputs":[{"name":"self"}],"output":{"name":"keyfileflags"}}],[11,"extend","","",27,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",27,{"inputs":[{"name":"t"}],"output":{"name":"keyfileflags"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"bytes"}}],[11,"static_type","","",28,{"inputs":[],"output":{"name":"type"}}],[11,"from_static","","Creates a view into static `data` without copying.",28,null],[11,"from","","",28,{"inputs":[{"name":"t"}],"output":{"name":"bytes"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",28,null],[11,"eq","","",28,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",28,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[11,"cmp","","",28,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"ordering"}}],[11,"eq","","",28,null],[11,"partial_cmp","","",28,null],[11,"eq","","",28,null],[11,"partial_cmp","","",28,null],[11,"eq","","",28,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",28,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"option"}}],[11,"hash","","",28,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"get_digest","","",19,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"get_string","","",19,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[0,"closure","","",null,null],[3,"Closure","glib::closure","",null,null],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"closure"}}],[11,"static_type","","",29,{"inputs":[],"output":{"name":"type"}}],[11,"new","","",29,{"inputs":[{"name":"f"}],"output":{"name":"self"}}],[11,"invoke","","",29,null],[0,"error","glib","`Error` binding and helper trait.",null,null],[3,"Error","glib::error","A generic error capable of representing various error domains (types).",null,null],[3,"BoolError","","Generic error used for functions that fail without any further information",null,null],[12,"0","","",30,null],[8,"ErrorDomain","","`GLib` error domain.",null,null],[10,"domain","","Returns the quark identifying the error domain.",31,{"inputs":[],"output":{"name":"gquark"}}],[10,"code","","Gets the integer representation of the variant.",31,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"from","","Tries to convert an integer code to an enum variant.",31,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"static_type","","",32,{"inputs":[],"output":{"name":"type"}}],[11,"new","","Creates an error with supplied error enum variant and message.",32,{"inputs":[{"name":"t"},{"name":"str"}],"output":{"name":"error"}}],[11,"is","","Checks if the error domain matches `T`.",32,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"kind","","Tries to convert to a specific error enum.",32,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"wrap","","",32,null],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",32,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_glib","","",30,{"inputs":[{"name":"gboolean"},{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",30,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"clone","glib","",2,{"inputs":[{"name":"self"}],"output":{"name":"userdirectory"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"userdirectory"}],"output":{"name":"bool"}}],[11,"hash","","",2,null],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new `EnumClass` from a `Type`.",33,{"inputs":[{"name":"type"}],"output":{"name":"option"}}],[11,"type_","","`Type` of the enum.",33,{"inputs":[{"name":"self"}],"output":{"name":"type"}}],[11,"get_value","","Gets `EnumValue` by integer `value`, if existing.",33,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[11,"get_value_by_name","","Gets `EnumValue` by string name `name`, if existing.",33,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"get_value_by_nick","","Gets `EnumValue` by string nick `nick`, if existing.",33,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"get_values","","Gets all `EnumValue` of this `EnumClass`.",33,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"to_value","","Converts integer `value` to a `Value`, if part of the enum.",33,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[11,"to_value_by_name","","Converts string name `name` to a `Value`, if part of the enum.",33,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"to_value_by_nick","","Converts string nick `nick` to a `Value`, if part of the enum.",33,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"drop","","",33,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"enumvalue"}}],[11,"get_value","","Get integer value corresponding to the value.",34,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_name","","Get name corresponding to the value.",34,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"get_nick","","Get nick corresponding to the value.",34,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"to_value","","Convert enum value to a `Value`.",34,{"inputs":[{"name":"self"}],"output":{"name":"value"}}],[11,"from_value","","Convert enum value from a `Value`.",34,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"get_class","","Get `EnumClass` to which the enum value belongs.",34,{"inputs":[{"name":"self"}],"output":{"name":"enumclass"}}],[11,"eq","","",34,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",34,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[11,"cmp","","",34,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"ordering"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new `FlagsClass` from a `Type`",35,{"inputs":[{"name":"type"}],"output":{"name":"option"}}],[11,"type_","","`Type` of the flags.",35,{"inputs":[{"name":"self"}],"output":{"name":"type"}}],[11,"get_value","","Gets `FlagsValue` by integer `value`, if existing.",35,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"get_value_by_name","","Gets `FlagsValue` by string name `name`, if existing.",35,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"get_value_by_nick","","Gets `FlagsValue` by string nick `nick`, if existing.",35,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"get_values","","Gets all `FlagsValue` of this `FlagsClass`.",35,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"to_value","","Converts integer `value` to a `Value`, if part of the flags.",35,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[11,"to_value_by_name","","Converts string name `name` to a `Value`, if part of the flags.",35,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"to_value_by_nick","","Converts string nick `nick` to a `Value`, if part of the flags.",35,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"is_set","","Checks if the flags corresponding to integer `f` is set in `value`.",35,{"inputs":[{"name":"self"},{"name":"value"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"is_set_by_name","","Checks if the flags corresponding to string name `name` is set in `value`.",35,{"inputs":[{"name":"self"},{"name":"value"},{"name":"str"}],"output":{"name":"bool"}}],[11,"is_set_by_nick","","Checks if the flags corresponding to string nick `nick` is set in `value`.",35,{"inputs":[{"name":"self"},{"name":"value"},{"name":"str"}],"output":{"name":"bool"}}],[11,"set","","Sets flags value corresponding to integer `f` in `value`, if part of that flags. If the flag is already set, it will succeed without doing any changes.",35,{"inputs":[{"name":"self"},{"name":"value"},{"name":"u32"}],"output":{"name":"result"}}],[11,"set_by_name","","Sets flags value corresponding to string name `name` in `value`, if part of that flags. If the flag is already set, it will succeed without doing any changes.",35,{"inputs":[{"name":"self"},{"name":"value"},{"name":"str"}],"output":{"name":"result"}}],[11,"set_by_nick","","Sets flags value corresponding to string nick `nick` in `value`, if part of that flags. If the flag is already set, it will succeed without doing any changes.",35,{"inputs":[{"name":"self"},{"name":"value"},{"name":"str"}],"output":{"name":"result"}}],[11,"unset","","Unsets flags value corresponding to integer `f` in `value`, if part of that flags. If the flag is already unset, it will succeed without doing any changes.",35,{"inputs":[{"name":"self"},{"name":"value"},{"name":"u32"}],"output":{"name":"result"}}],[11,"unset_by_name","","Unsets flags value corresponding to string name `name` in `value`, if part of that flags. If the flag is already unset, it will succeed without doing any changes.",35,{"inputs":[{"name":"self"},{"name":"value"},{"name":"str"}],"output":{"name":"result"}}],[11,"unset_by_nick","","Unsets flags value corresponding to string nick `nick` in `value`, if part of that flags. If the flag is already unset, it will succeed without doing any changes.",35,{"inputs":[{"name":"self"},{"name":"value"},{"name":"str"}],"output":{"name":"result"}}],[11,"builder","","Returns a new `FlagsBuilder` for conveniently setting/unsetting flags and building a `Value`.",35,{"inputs":[{"name":"self"}],"output":{"name":"flagsbuilder"}}],[11,"builder_with_value","","Returns a new `FlagsBuilder` for conveniently setting/unsetting flags and building a `Value`. The `Value` is initialized with `value`.",35,{"inputs":[{"name":"self"},{"name":"value"}],"output":{"name":"option"}}],[11,"drop","","",35,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"flagsvalue"}}],[11,"get_value","","Get integer value corresponding to the value.",36,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_name","","Get name corresponding to the value.",36,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"get_nick","","Get nick corresponding to the value.",36,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"to_value","","Convert flags value to a `Value`.",36,{"inputs":[{"name":"self"}],"output":{"name":"value"}}],[11,"from_value","","Convert flags values from a `Value`. This returns all flags that are set.",36,{"inputs":[{"name":"value"}],"output":{"name":"vec"}}],[11,"get_class","","Get `FlagsClass` to which the flags value belongs.",36,{"inputs":[{"name":"self"}],"output":{"name":"flagsclass"}}],[11,"eq","","",36,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"set","","Sets flags corresponding to integer value `f`.",37,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[11,"set_by_name","","Sets flags corresponding to string name `name`.",37,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"self"}}],[11,"set_by_nick","","Sets flags corresponding to string nick `nick`.",37,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"self"}}],[11,"unset","","Unsets flags corresponding to integer value `f`.",37,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"self"}}],[11,"unset_by_name","","Unsets flags corresponding to string name `name`.",37,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"self"}}],[11,"unset_by_nick","","Unsets flags corresponding to string nick `nick`.",37,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"self"}}],[11,"build","","Converts to the final `Value`, unless any previous setting/unsetting of flags failed.",37,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"fileerror"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"fileerror"}],"output":{"name":"bool"}}],[11,"domain","","",1,{"inputs":[],"output":{"name":"gquark"}}],[11,"code","","",1,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from","","",1,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"save_to_file","","",21,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"load_from_data_dirs","","",21,{"inputs":[{"name":"self"},{"name":"t"},{"name":"keyfileflags"}],"output":{"name":"result"}}],[11,"load_from_dirs","","",21,null],[0,"prelude","","Traits and essential types intended for blanket imports.",null,null],[0,"signal","","`IMPL` Low level signal support.",null,null],[3,"Inhibit","glib::signal","Whether to propagate the signal to the default handler.",null,null],[12,"0","","",38,null],[5,"connect","","",null,null],[5,"signal_handler_block","","",null,{"inputs":[{"name":"t"},{"name":"u64"}],"output":null}],[5,"signal_handler_unblock","","",null,{"inputs":[{"name":"t"},{"name":"u64"}],"output":null}],[5,"signal_handler_disconnect","","",null,{"inputs":[{"name":"t"},{"name":"u64"}],"output":null}],[5,"signal_stop_emission","","",null,{"inputs":[{"name":"t"},{"name":"u32"},{"name":"gquark"}],"output":null}],[5,"signal_stop_emission_by_name","","",null,{"inputs":[{"name":"t"},{"name":"str"}],"output":null}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"inhibit"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",38,{"inputs":[],"output":{"name":"inhibit"}}],[11,"eq","","",38,{"inputs":[{"name":"self"},{"name":"inhibit"}],"output":{"name":"bool"}}],[11,"ne","","",38,{"inputs":[{"name":"self"},{"name":"inhibit"}],"output":{"name":"bool"}}],[0,"source","glib","",null,null],[3,"SourceId","glib::source","The id of a source that is returned by `idle_add` and `timeout_add`.",null,null],[3,"Continue","","Continue calling the closure in the future iterations or drop it.",null,null],[12,"0","","",39,null],[3,"CallbackGuard","","Unwinding propagation guard. Aborts the process if destroyed while panicking.",null,null],[3,"Priority","","The priority of sources",null,null],[5,"idle_add","","Adds a closure to be called by the default main loop when it's idle.",null,{"inputs":[{"name":"f"}],"output":{"name":"sourceid"}}],[5,"timeout_add","","Adds a closure to be called by the default main loop at regular intervals with millisecond granularity.",null,{"inputs":[{"name":"u32"},{"name":"f"}],"output":{"name":"sourceid"}}],[5,"timeout_add_seconds","","Adds a closure to be called by the default main loop at regular intervals with second granularity.",null,{"inputs":[{"name":"u32"},{"name":"f"}],"output":{"name":"sourceid"}}],[5,"child_watch_add","","Adds a closure to be called by the main loop the returned `Source` is attached to when a child process exits.",null,{"inputs":[{"name":"u32"},{"name":"f"}],"output":{"name":"sourceid"}}],[5,"unix_signal_add","","Adds a closure to be called by the default main loop whenever a UNIX signal is raised.",null,{"inputs":[{"name":"i32"},{"name":"f"}],"output":{"name":"sourceid"}}],[5,"source_remove","","Removes the source with the given id `source_id` from the default main context.",null,{"inputs":[{"name":"sourceid"}],"output":null}],[5,"idle_source_new","","Adds a closure to be called by the main loop the return `Source` is attached to when it's idle.",null,{"inputs":[{"name":"n"},{"name":"priority"},{"name":"f"}],"output":{"name":"source"}}],[5,"timeout_source_new","","Adds a closure to be called by the main loop the returned `Source` is attached to at regular intervals with millisecond granularity.",null,{"inputs":[{"name":"u32"},{"name":"n"},{"name":"priority"},{"name":"f"}],"output":{"name":"source"}}],[5,"timeout_source_new_seconds","","Adds a closure to be called by the main loop the returned `Source` is attached to at regular intervals with second granularity.",null,{"inputs":[{"name":"u32"},{"name":"n"},{"name":"priority"},{"name":"f"}],"output":{"name":"source"}}],[5,"child_watch_source_new","","Adds a closure to be called by the main loop the returned `Source` is attached to when a child process exits.",null,{"inputs":[{"name":"u32"},{"name":"n"},{"name":"priority"},{"name":"f"}],"output":{"name":"source"}}],[5,"unix_signal_source_new","","Adds a closure to be called by the main loop the returned `Source` is attached to whenever a UNIX signal is raised.",null,{"inputs":[{"name":"i32"},{"name":"n"},{"name":"priority"},{"name":"f"}],"output":{"name":"source"}}],[17,"PRIORITY_HIGH","","",null,null],[17,"PRIORITY_DEFAULT","","",null,null],[17,"PRIORITY_HIGH_IDLE","","",null,null],[17,"PRIORITY_DEFAULT_IDLE","","",null,null],[17,"PRIORITY_LOW","","",null,null],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"sourceid"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",40,{"inputs":[],"output":{"name":"sourceid"}}],[11,"eq","","",40,{"inputs":[{"name":"self"},{"name":"sourceid"}],"output":{"name":"bool"}}],[11,"ne","","",40,{"inputs":[{"name":"self"},{"name":"sourceid"}],"output":{"name":"bool"}}],[11,"to_glib","","",40,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_glib","","",40,{"inputs":[{"name":"u32"}],"output":{"name":"sourceid"}}],[11,"to_glib","","",39,{"inputs":[{"name":"self"}],"output":{"name":"gboolean"}}],[11,"new","","",41,{"inputs":[],"output":{"name":"callbackguard"}}],[11,"default","","",41,{"inputs":[],"output":{"name":"self"}}],[11,"drop","","",41,{"inputs":[{"name":"self"}],"output":null}],[11,"clone","","",42,{"inputs":[{"name":"self"}],"output":{"name":"priority"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",42,{"inputs":[],"output":{"name":"priority"}}],[11,"eq","","",42,{"inputs":[{"name":"self"},{"name":"priority"}],"output":{"name":"bool"}}],[11,"ne","","",42,{"inputs":[{"name":"self"},{"name":"priority"}],"output":{"name":"bool"}}],[11,"to_glib","","",42,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from_glib","","",42,{"inputs":[{"name":"i32"}],"output":{"name":"priority"}}],[0,"translate","glib","Translation between GLib/GLib-based FFI types and their Rust counterparts.",null,null],[3,"Stash","glib::translate","Helper type that stores temporary values used for translation.",null,null],[12,"0","","",43,null],[12,"1","","",43,null],[3,"StashMut","","",null,null],[12,"0","","",44,null],[12,"1","","",44,null],[3,"List","","",null,null],[3,"SList","","",null,null],[3,"HashTable","","",null,null],[5,"mut_override","","Overrides pointer mutability.",null,null],[5,"uninitialized","","Returns an uninitialized value.",null,{"inputs":[],"output":{"name":"t"}}],[5,"some_if","","Returns `Some(val)` if the condition is true and `None` otherwise.",null,{"inputs":[{"name":"b"},{"name":"f"}],"output":{"name":"option"}}],[5,"from_glib","","Translate a simple type.",null,{"inputs":[{"name":"g"}],"output":{"name":"t"}}],[5,"from_glib_none","","Translate from a pointer type, transfer: none.",null,{"inputs":[{"name":"p"}],"output":{"name":"t"}}],[5,"from_glib_full","","Translate from a pointer type, transfer: full (assume ownership).",null,{"inputs":[{"name":"p"}],"output":{"name":"t"}}],[5,"from_glib_borrow","","Translate from a pointer type, borrowing the pointer.",null,{"inputs":[{"name":"p"}],"output":{"name":"t"}}],[5,"c_ptr_array_len","","",null,null],[8,"Ptr","","A pointer",null,null],[10,"is_null","","",45,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"from","","",45,null],[10,"to","","",45,null],[8,"Uninitialized","","A trait for creating an uninitialized value. Handy for receiving outparams.",null,null],[10,"uninitialized","","Returns an uninitialized value.",46,{"inputs":[],"output":{"name":"self"}}],[8,"ToBool","","",null,null],[10,"to_bool","","",47,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"ToGlib","","Translate a simple type.",null,null],[16,"GlibType","","",48,null],[10,"to_glib","","",48,null],[8,"GlibPtrDefault","","Provides the default pointer type to be used in some container conversions.",null,null],[16,"GlibType","","",49,null],[8,"ToGlibPtr","","Translate to a pointer.",null,null],[16,"Storage","","",50,null],[10,"to_glib_none","","Transfer: none.",50,{"inputs":[{"name":"self"}],"output":{"name":"stash"}}],[11,"to_glib_container","","Transfer: container.",50,{"inputs":[{"name":"self"}],"output":{"name":"stash"}}],[11,"to_glib_full","","Transfer: full.",50,{"inputs":[{"name":"self"}],"output":{"name":"p"}}],[8,"ToGlibPtrMut","","",null,null],[16,"Storage","","",51,null],[10,"to_glib_none_mut","","Transfer: none.",51,{"inputs":[{"name":"self"}],"output":{"name":"stashmut"}}],[8,"ToGlibContainerFromSlice","","",null,null],[16,"Storage","","",52,null],[10,"to_glib_none_from_slice","","",52,null],[10,"to_glib_container_from_slice","","",52,null],[10,"to_glib_full_from_slice","","",52,null],[8,"FromGlib","","Translate a simple type.",null,null],[10,"from_glib","","",53,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[8,"FromGlibPtrNone","","Translate from a pointer type without taking ownership, transfer: none.",null,null],[10,"from_glib_none","","",54,{"inputs":[{"name":"p"}],"output":{"name":"self"}}],[8,"FromGlibPtrFull","","Translate from a pointer type taking ownership, transfer: full.",null,null],[10,"from_glib_full","","",55,{"inputs":[{"name":"p"}],"output":{"name":"self"}}],[8,"FromGlibPtrBorrow","","Translate from a pointer type by borrowing. Don't increase the refcount",null,null],[11,"from_glib_borrow","","",56,{"inputs":[{"name":"p"}],"output":{"name":"self"}}],[8,"FromGlibContainer","","Translate from a container.",null,null],[10,"from_glib_none_num","","Transfer: none.",57,{"inputs":[{"name":"p"},{"name":"usize"}],"output":{"name":"self"}}],[10,"from_glib_container_num","","Transfer: container.",57,{"inputs":[{"name":"p"},{"name":"usize"}],"output":{"name":"self"}}],[10,"from_glib_full_num","","Transfer: full.",57,{"inputs":[{"name":"p"},{"name":"usize"}],"output":{"name":"self"}}],[8,"FromGlibPtrContainer","","Translate from a container of pointers.",null,null],[10,"from_glib_none","","Transfer: none.",58,{"inputs":[{"name":"pp"}],"output":{"name":"self"}}],[10,"from_glib_container","","Transfer: container.",58,{"inputs":[{"name":"pp"}],"output":{"name":"self"}}],[10,"from_glib_full","","Transfer: full.",58,{"inputs":[{"name":"pp"}],"output":{"name":"self"}}],[8,"FromGlibContainerAsVec","","",null,null],[10,"from_glib_none_num_as_vec","","",59,{"inputs":[{"name":"p"},{"name":"usize"}],"output":{"name":"vec"}}],[10,"from_glib_container_num_as_vec","","",59,{"inputs":[{"name":"p"},{"name":"usize"}],"output":{"name":"vec"}}],[10,"from_glib_full_num_as_vec","","",59,{"inputs":[{"name":"p"},{"name":"usize"}],"output":{"name":"vec"}}],[8,"FromGlibPtrArrayContainerAsVec","","",null,null],[10,"from_glib_none_as_vec","","",60,{"inputs":[{"name":"pp"}],"output":{"name":"vec"}}],[10,"from_glib_container_as_vec","","",60,{"inputs":[{"name":"pp"}],"output":{"name":"vec"}}],[10,"from_glib_full_as_vec","","",60,{"inputs":[{"name":"pp"}],"output":{"name":"vec"}}],[11,"drop","","",61,{"inputs":[{"name":"self"}],"output":null}],[11,"drop","","",62,{"inputs":[{"name":"self"}],"output":null}],[11,"drop","","",63,{"inputs":[{"name":"self"}],"output":null}],[0,"types","glib","Runtime type information.",null,null],[4,"Type","glib::types","A GLib or GLib-based library type",null,null],[13,"Invalid","","An invalid `Type` used as error return value in some functions",64,null],[13,"Unit","","The fundamental type corresponding to the unit type `()`",64,null],[13,"I8","","The fundamental type corresponding to `i8`",64,null],[13,"U8","","The fundamental type corresponding to `u8`",64,null],[13,"Bool","","The fundamental type corresponding to `bool`",64,null],[13,"I32","","The fundamental type corresponding to `i32`",64,null],[13,"U32","","The fundamental type corresponding to `u32`",64,null],[13,"ILong","","The fundamental type corresponding to C `long`",64,null],[13,"ULong","","The fundamental type corresponding to C `unsigned long`",64,null],[13,"I64","","The fundamental type corresponding to `i64`",64,null],[13,"U64","","The fundamental type corresponding to `u64`",64,null],[13,"F32","","The fundamental type corresponding to `f32`",64,null],[13,"F64","","The fundamental type corresponding to `f64`",64,null],[13,"String","","The fundamental type corresponding to `String`",64,null],[13,"Pointer","","The fundamental type corresponding to a pointer",64,null],[13,"Variant","","The fundamental type of GVariant",64,null],[13,"BaseInterface","","The fundamental type from which all interfaces are derived",64,null],[13,"BaseEnum","","The fundamental type from which all enumeration types are derived",64,null],[13,"BaseFlags","","The fundamental type from which all flags types are derived",64,null],[13,"BaseBoxed","","The fundamental type from which all boxed types are derived",64,null],[13,"BaseParamSpec","","The fundamental type from which all `GParamSpec` types are derived",64,null],[13,"BaseObject","","The fundamental type from which all objects are derived",64,null],[13,"Other","","A non-fundamental type identified by value of type `usize`",64,null],[5,"instance_of","","",null,{"inputs":[{"name":"gconstpointer"}],"output":{"name":"bool"}}],[8,"StaticType","","Types that are supported by GLib dynamic typing.",null,null],[10,"static_type","","Returns the type identifier of `Self`.",65,{"inputs":[],"output":{"name":"type"}}],[8,"InstanceType","","",null,null],[10,"instance_type","","",66,{"inputs":[{"name":"self"}],"output":{"name":"type"}}],[11,"clone","","",64,{"inputs":[{"name":"self"}],"output":{"name":"type"}}],[11,"eq","","",64,{"inputs":[{"name":"self"},{"name":"type"}],"output":{"name":"bool"}}],[11,"ne","","",64,{"inputs":[{"name":"self"},{"name":"type"}],"output":{"name":"bool"}}],[11,"name","","",64,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"fmt","","",64,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",64,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_glib","","",64,{"inputs":[{"name":"gtype"}],"output":{"name":"type"}}],[11,"to_glib","","",64,{"inputs":[{"name":"self"}],"output":{"name":"gtype"}}],[0,"value","glib","`Value` binding and helper traits.",null,null],[3,"Value","glib::value","A generic value capable of carrying various types.",null,null],[3,"ValueArray","","",null,null],[3,"TypedValue","","A statically typed `Value`.",null,null],[8,"ToValue","","Converts to `Value`.",null,null],[10,"to_value","","Returns a `Value` clone of `self`.",67,{"inputs":[{"name":"self"}],"output":{"name":"value"}}],[10,"to_value_type","","Returns the type identifer of `self`.",67,{"inputs":[{"name":"self"}],"output":{"name":"type"}}],[8,"FromValueOptional","","Extracts a value.",null,null],[10,"from_value_optional","","",68,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[8,"FromValue","","Extracts a value.",null,null],[10,"from_value","","",69,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[8,"SetValueOptional","","Sets a value.",null,null],[10,"set_value_optional","","",70,{"inputs":[{"name":"value"},{"name":"option"}],"output":null}],[8,"SetValue","","Sets a value.",null,null],[10,"set_value","","",71,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"downcast","","Tries to downcast to a `TypedValue`.",72,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"get","","Tries to get a value of type `T`.",72,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"is","","Returns `true` if the type of the value corresponds to `T`.",72,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"type_","","Returns the type of the value.",72,{"inputs":[{"name":"self"}],"output":{"name":"type"}}],[11,"type_transformable","","Returns whether `Value`s of type `src` can be transformed to type `dst`.",72,{"inputs":[{"name":"type"},{"name":"type"}],"output":{"name":"bool"}}],[11,"clone","","",72,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"drop","","",72,{"inputs":[{"name":"self"}],"output":null}],[11,"fmt","","",72,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",72,{"inputs":[{"name":"option"}],"output":{"name":"self"}}],[11,"from","","",72,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"from","","",72,{"inputs":[{"name":"typedvalue"}],"output":{"name":"self"}}],[11,"uninitialized","","",72,{"inputs":[],"output":{"name":"value"}}],[11,"to_glib_none","","",72,{"inputs":[{"name":"self"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",72,{"inputs":[{"name":"self"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",72,null],[11,"from_glib_none","","",72,null],[11,"from_glib_full","","",72,null],[11,"from_glib_none_num_as_vec","","",72,null],[11,"from_glib_container_num_as_vec","","",72,null],[11,"from_glib_full_num_as_vec","","",72,null],[11,"from_glib_none_as_vec","","",72,null],[11,"from_glib_container_as_vec","","",72,null],[11,"from_glib_full_as_vec","","",72,null],[11,"from_glib_none_num_as_vec","","",72,null],[11,"from_glib_container_num_as_vec","","",72,null],[11,"from_glib_full_num_as_vec","","",72,null],[11,"from_glib_none_as_vec","","",72,null],[11,"from_glib_container_as_vec","","",72,null],[11,"from_glib_full_as_vec","","",72,null],[11,"drop","","",73,{"inputs":[{"name":"self"}],"output":null}],[11,"get","","Returns the value.",74,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_some","","Returns the value.",74,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"set","","Sets the value.",74,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[11,"set_none","","Sets the value to `None`.",74,{"inputs":[{"name":"self"}],"output":null}],[11,"set_some","","Sets the value.",74,{"inputs":[{"name":"self"},{"name":"u"}],"output":null}],[11,"clone","","",74,{"inputs":[{"name":"self"}],"output":{"name":"self"}}],[11,"fmt","","",74,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",74,{"inputs":[{"name":"self"}],"output":{"name":"value"}}],[11,"deref_mut","","",74,{"inputs":[{"name":"self"}],"output":{"name":"value"}}],[11,"from","","",74,{"inputs":[{"name":"option"}],"output":{"name":"self"}}],[11,"from","","",74,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"from","","",74,{"inputs":[{"name":"option"}],"output":{"name":"self"}}],[11,"from","","",74,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"from","","",74,{"inputs":[{"name":"typedvalue"}],"output":{"name":"self"}}],[11,"from","","",74,{"inputs":[{"name":"typedvalue"}],"output":{"name":"self"}}],[11,"to_value","","",72,{"inputs":[{"name":"self"}],"output":{"name":"value"}}],[11,"to_value_type","","",72,{"inputs":[{"name":"self"}],"output":{"name":"type"}}],[0,"variant","glib","`Variant` binding and helper traits.",null,null],[3,"Variant","glib::variant","A generic immutable value capable of carrying various types.",null,null],[8,"ToVariant","","Converts to `Variant`.",null,null],[10,"to_variant","","Returns a `Variant` clone of `self`.",75,{"inputs":[{"name":"self"}],"output":{"name":"variant"}}],[8,"FromVariant","","Extracts a value.",null,null],[10,"from_variant","","Tries to extract a value.",76,{"inputs":[{"name":"variant"}],"output":{"name":"option"}}],[8,"StaticVariantType","","Returns `VariantType` of `Self`.",null,null],[10,"static_variant_type","","Returns the `VariantType` corresponding to `Self`.",77,{"inputs":[],"output":{"name":"cow"}}],[11,"clone","","",78,{"inputs":[{"name":"self"}],"output":{"name":"variant"}}],[11,"static_type","","",78,{"inputs":[],"output":{"name":"type"}}],[11,"type_","","Returns the type of the value.",78,{"inputs":[{"name":"self"}],"output":{"name":"variantty"}}],[11,"is","","Returns `true` if the type of the value corresponds to `T`.",78,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get","","Tries to extract a value of type `T`.",78,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_str","","Tries to extract a `&str`.",78,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",78,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",78,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",78,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"hash","","",78,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"from","","",78,{"inputs":[{"name":"t"}],"output":{"name":"variant"}}],[11,"new","glib","Tries to create a `VariantType` from a string slice.",79,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"drop","","",79,{"inputs":[{"name":"self"}],"output":null}],[11,"borrow","","",79,{"inputs":[{"name":"self"}],"output":{"name":"variantty"}}],[11,"clone","","",79,{"inputs":[{"name":"self"}],"output":{"name":"varianttype"}}],[11,"deref","","",79,{"inputs":[{"name":"self"}],"output":{"name":"variantty"}}],[11,"fmt","","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",79,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"into","","",79,{"inputs":[{"name":"self"}],"output":{"name":"cow"}}],[11,"fmt","","",80,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",80,{"inputs":[{"name":"self"},{"name":"variantty"}],"output":{"name":"bool"}}],[11,"ne","","",80,{"inputs":[{"name":"self"},{"name":"variantty"}],"output":{"name":"bool"}}],[11,"hash","","",80,null],[11,"new","","Tries to create a `&VariantTy` from a string slice.",80,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str_unchecked","","Converts a type string into `&VariantTy` without any checks.",80,{"inputs":[{"name":"str"}],"output":{"name":"variantty"}}],[11,"to_str","","Converts to a string slice.",80,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",80,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_owned","","",80,{"inputs":[{"name":"self"}],"output":{"name":"varianttype"}}],[11,"eq","","",79,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"eq","","",79,{"inputs":[{"name":"self"},{"name":"variantty"}],"output":{"name":"bool"}}],[11,"eq","","",80,{"inputs":[{"name":"self"},{"name":"varianttype"}],"output":{"name":"bool"}}],[11,"eq","","",79,{"inputs":[{"name":"self"},{"name":"variantty"}],"output":{"name":"bool"}}],[11,"eq","","",79,{"inputs":[{"name":"self"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"eq","","",80,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",80,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",80,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","","",79,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",79,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",79,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"bool"}}],[11,"prepare","","",22,null],[11,"find_source_by_id","","",22,{"inputs":[{"name":"self"},{"name":"sourceid"}],"output":{"name":"option"}}],[11,"invoke","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"invoke_with_priority","","",22,{"inputs":[{"name":"self"},{"name":"priority"},{"name":"f"}],"output":null}],[11,"compare","","",20,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"i32"}}],[11,"equal","","",20,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"clone","","",81,{"inputs":[{"name":"self"}],"output":{"name":"date"}}],[11,"fmt","","",81,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"static_type","","",81,{"inputs":[],"output":{"name":"type"}}],[11,"new","","",81,{"inputs":[],"output":{"name":"date"}}],[11,"new_dmy","","",81,{"inputs":[{"name":"dateday"},{"name":"datemonth"},{"name":"dateyear"}],"output":{"name":"date"}}],[11,"new_julian","","",81,{"inputs":[{"name":"u32"}],"output":{"name":"date"}}],[11,"add_days","","",81,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"add_months","","",81,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"add_years","","",81,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"clamp","","",81,{"inputs":[{"name":"self"},{"name":"date"},{"name":"date"}],"output":null}],[11,"clear","","",81,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"days_between","","",81,{"inputs":[{"name":"self"},{"name":"date"}],"output":{"name":"i32"}}],[11,"get_day","","",81,{"inputs":[{"name":"self"}],"output":{"name":"dateday"}}],[11,"get_day_of_year","","",81,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_iso8601_week_of_year","","",81,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_julian","","",81,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_monday_week_of_year","","",81,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_month","","",81,{"inputs":[{"name":"self"}],"output":{"name":"datemonth"}}],[11,"get_sunday_week_of_year","","",81,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_weekday","","",81,{"inputs":[{"name":"self"}],"output":{"name":"dateweekday"}}],[11,"get_year","","",81,{"inputs":[{"name":"self"}],"output":{"name":"dateyear"}}],[11,"is_first_of_month","","",81,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_last_of_month","","",81,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"order","","",81,{"inputs":[{"name":"self"},{"name":"date"}],"output":null}],[11,"set_day","","",81,{"inputs":[{"name":"self"},{"name":"dateday"}],"output":null}],[11,"set_dmy","","",81,{"inputs":[{"name":"self"},{"name":"dateday"},{"name":"datemonth"},{"name":"dateyear"}],"output":null}],[11,"set_julian","","",81,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"set_month","","",81,{"inputs":[{"name":"self"},{"name":"datemonth"}],"output":null}],[11,"set_parse","","",81,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[11,"set_time","","",81,{"inputs":[{"name":"self"},{"name":"time"}],"output":null}],[11,"set_time_t","","",81,{"inputs":[{"name":"self"},{"name":"c_long"}],"output":null}],[11,"set_year","","",81,{"inputs":[{"name":"self"},{"name":"dateyear"}],"output":null}],[11,"subtract_days","","",81,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"subtract_months","","",81,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"subtract_years","","",81,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"valid","","",81,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get_days_in_month","","",81,{"inputs":[{"name":"datemonth"},{"name":"dateyear"}],"output":{"name":"u8"}}],[11,"get_monday_weeks_in_year","","",81,{"inputs":[{"name":"dateyear"}],"output":{"name":"u8"}}],[11,"get_sunday_weeks_in_year","","",81,{"inputs":[{"name":"dateyear"}],"output":{"name":"u8"}}],[11,"is_leap_year","","",81,{"inputs":[{"name":"dateyear"}],"output":{"name":"bool"}}],[11,"strftime","","",81,{"inputs":[{"name":"str"},{"name":"str"},{"name":"date"}],"output":{"name":"usize"}}],[11,"valid_day","","",81,{"inputs":[{"name":"dateday"}],"output":{"name":"bool"}}],[11,"valid_dmy","","",81,{"inputs":[{"name":"dateday"},{"name":"datemonth"},{"name":"dateyear"}],"output":{"name":"bool"}}],[11,"valid_julian","","",81,{"inputs":[{"name":"u32"}],"output":{"name":"bool"}}],[11,"valid_month","","",81,{"inputs":[{"name":"datemonth"}],"output":{"name":"bool"}}],[11,"valid_weekday","","",81,{"inputs":[{"name":"dateweekday"}],"output":{"name":"bool"}}],[11,"valid_year","","",81,{"inputs":[{"name":"dateyear"}],"output":{"name":"bool"}}],[11,"default","","",81,{"inputs":[],"output":{"name":"self"}}],[11,"eq","","",81,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",81,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[11,"cmp","","",81,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"ordering"}}],[6,"DateDay","","",null,null],[6,"DateYear","","",null,null],[6,"Time","","",null,null],[6,"TimeSpan","","",null,null],[17,"FORMAT_SIZE_DEFAULT","","",null,null],[17,"FORMAT_SIZE_LONG_FORMAT","","",null,null],[17,"FORMAT_SIZE_IEC_UNITS","","",null,null],[17,"KEY_FILE_NONE","","",null,null],[17,"KEY_FILE_KEEP_COMMENTS","","",null,null],[17,"KEY_FILE_KEEP_TRANSLATIONS","","",null,null],[11,"deref","","",82,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"initialize","","",82,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",83,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"initialize","","",83,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",84,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"initialize","","",84,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",85,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"initialize","","",85,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",86,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"initialize","","",86,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",87,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"initialize","","",87,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",88,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"initialize","","",88,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",89,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"initialize","","",89,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",90,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"initialize","","",90,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",91,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"initialize","","",91,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",92,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"initialize","","",92,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",93,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"initialize","","",93,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",94,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"initialize","","",94,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",95,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"initialize","","",95,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",96,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"initialize","","",96,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"initialize","","",97,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",98,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"initialize","","",98,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",99,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"initialize","","",99,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",100,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"initialize","","",100,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",101,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"initialize","","",101,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",102,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"initialize","","",102,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",103,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"initialize","","",103,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",104,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"initialize","","",104,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",105,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"initialize","","",105,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",106,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"initialize","","",106,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",107,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"initialize","","",107,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",108,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"initialize","","",108,{"inputs":[{"name":"self"}],"output":null}],[11,"deref","","",109,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"initialize","","",109,{"inputs":[{"name":"self"}],"output":null}],[14,"glib_wrapper","","Defines a wrapper type and implements the appropriate traits.",null,null],[14,"glib_boxed_wrapper","","Wrapper implementations for Boxed types. See `glib_wrapper!`.",null,null],[14,"glib_shared_wrapper","","Wrapper implementations for shared types. See `glib_wrapper!`.",null,null],[14,"glib_object_wrapper","","Wrapper implementations for Object types. See `glib_wrapper!`.",null,null]],"paths":[[3,"TimeVal"],[4,"FileError"],[4,"UserDirectory"],[4,"ChecksumType"],[4,"DateMonth"],[4,"DateWeekday"],[4,"KeyFileError"],[4,"TimeType"],[8,"Wrapper"],[8,"UnsafeFrom"],[8,"BoxedMemoryManager"],[3,"Boxed"],[8,"SharedMemoryManager"],[3,"Shared"],[8,"Cast"],[8,"Downcast"],[8,"ObjectExt"],[3,"Object"],[3,"WeakRef"],[3,"Checksum"],[3,"DateTime"],[3,"KeyFile"],[3,"MainContext"],[3,"MainLoop"],[3,"Source"],[3,"TimeZone"],[3,"FormatSizeFlags"],[3,"KeyFileFlags"],[3,"Bytes"],[3,"Closure"],[3,"BoolError"],[8,"ErrorDomain"],[3,"Error"],[3,"EnumClass"],[3,"EnumValue"],[3,"FlagsClass"],[3,"FlagsValue"],[3,"FlagsBuilder"],[3,"Inhibit"],[3,"Continue"],[3,"SourceId"],[3,"CallbackGuard"],[3,"Priority"],[3,"Stash"],[3,"StashMut"],[8,"Ptr"],[8,"Uninitialized"],[8,"ToBool"],[8,"ToGlib"],[8,"GlibPtrDefault"],[8,"ToGlibPtr"],[8,"ToGlibPtrMut"],[8,"ToGlibContainerFromSlice"],[8,"FromGlib"],[8,"FromGlibPtrNone"],[8,"FromGlibPtrFull"],[8,"FromGlibPtrBorrow"],[8,"FromGlibContainer"],[8,"FromGlibPtrContainer"],[8,"FromGlibContainerAsVec"],[8,"FromGlibPtrArrayContainerAsVec"],[3,"List"],[3,"SList"],[3,"HashTable"],[4,"Type"],[8,"StaticType"],[8,"InstanceType"],[8,"ToValue"],[8,"FromValueOptional"],[8,"FromValue"],[8,"SetValueOptional"],[8,"SetValue"],[3,"Value"],[3,"ValueArray"],[3,"TypedValue"],[8,"ToVariant"],[8,"FromVariant"],[8,"StaticVariantType"],[3,"Variant"],[3,"VariantType"],[3,"VariantTy"],[3,"Date"],[3,"KEY_FILE_DESKTOP_GROUP"],[3,"KEY_FILE_DESKTOP_KEY_ACTIONS"],[3,"KEY_FILE_DESKTOP_KEY_CATEGORIES"],[3,"KEY_FILE_DESKTOP_KEY_COMMENT"],[3,"KEY_FILE_DESKTOP_KEY_DBUS_ACTIVATABLE"],[3,"KEY_FILE_DESKTOP_KEY_EXEC"],[3,"KEY_FILE_DESKTOP_KEY_FULLNAME"],[3,"KEY_FILE_DESKTOP_KEY_GENERIC_NAME"],[3,"KEY_FILE_DESKTOP_KEY_GETTEXT_DOMAIN"],[3,"KEY_FILE_DESKTOP_KEY_HIDDEN"],[3,"KEY_FILE_DESKTOP_KEY_ICON"],[3,"KEY_FILE_DESKTOP_KEY_KEYWORDS"],[3,"KEY_FILE_DESKTOP_KEY_MIME_TYPE"],[3,"KEY_FILE_DESKTOP_KEY_NAME"],[3,"KEY_FILE_DESKTOP_KEY_NOT_SHOW_IN"],[3,"KEY_FILE_DESKTOP_KEY_NO_DISPLAY"],[3,"KEY_FILE_DESKTOP_KEY_ONLY_SHOW_IN"],[3,"KEY_FILE_DESKTOP_KEY_PATH"],[3,"KEY_FILE_DESKTOP_KEY_STARTUP_NOTIFY"],[3,"KEY_FILE_DESKTOP_KEY_STARTUP_WM_CLASS"],[3,"KEY_FILE_DESKTOP_KEY_TERMINAL"],[3,"KEY_FILE_DESKTOP_KEY_TRY_EXEC"],[3,"KEY_FILE_DESKTOP_KEY_TYPE"],[3,"KEY_FILE_DESKTOP_KEY_URL"],[3,"KEY_FILE_DESKTOP_KEY_VERSION"],[3,"KEY_FILE_DESKTOP_TYPE_APPLICATION"],[3,"KEY_FILE_DESKTOP_TYPE_DIRECTORY"],[3,"KEY_FILE_DESKTOP_TYPE_LINK"]]};
searchIndex["gio"] = {"doc":"","items":[[3,"Error","gio","A generic error capable of representing various error domains (types).",null,null],[3,"Object","","The base class in the object hierarchy.",null,null],[3,"Action","","",null,null],[3,"ActionGroup","","",null,null],[3,"ActionMap","","",null,null],[3,"AppInfo","","",null,null],[3,"AppLaunchContext","","",null,null],[3,"Application","","",null,null],[3,"Cancellable","","",null,null],[3,"File","","",null,null],[3,"FileInfo","","",null,null],[3,"Icon","","",null,null],[3,"Menu","","",null,null],[3,"MenuAttributeIter","","",null,null],[3,"MenuItem","","",null,null],[3,"MenuLinkIter","","",null,null],[3,"MenuModel","","",null,null],[3,"Notification","","",null,null],[3,"Permission","","",null,null],[3,"Settings","","",null,null],[3,"SimpleAction","","",null,null],[3,"SimpleActionGroup","","",null,null],[3,"SimplePermission","","",null,null],[3,"ThemedIcon","","",null,null],[3,"TlsCertificate","","",null,null],[3,"Resource","","",null,null],[3,"AppInfoCreateFlags","","",null,null],[3,"ApplicationFlags","","",null,null],[3,"FileCreateFlags","","",null,null],[3,"FileQueryInfoFlags","","",null,null],[3,"ResourceLookupFlags","","",null,null],[3,"SettingsBindFlags","","",null,null],[3,"TlsCertificateFlags","","",null,null],[4,"FileType","","",null,null],[13,"Unknown","","",0,null],[13,"Regular","","",0,null],[13,"Directory","","",0,null],[13,"SymbolicLink","","",0,null],[13,"Special","","",0,null],[13,"Shortcut","","",0,null],[13,"Mountable","","",0,null],[4,"NotificationPriority","","",null,null],[13,"Normal","","",1,null],[13,"Low","","",1,null],[13,"High","","",1,null],[13,"Urgent","","",1,null],[4,"ResourceError","","",null,null],[13,"NotFound","","",2,null],[13,"Internal","","",2,null],[5,"bus_unown_name","","",null,{"inputs":[{"name":"u32"}],"output":null}],[5,"bus_unwatch_name","","",null,{"inputs":[{"name":"u32"}],"output":null}],[5,"content_type_can_be_executable","","",null,{"inputs":[{"name":"str"}],"output":{"name":"bool"}}],[5,"content_type_equals","","",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"bool"}}],[5,"content_type_from_mime_type","","",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"content_type_get_description","","",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"content_type_get_generic_icon_name","","",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"content_type_get_icon","","",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"content_type_get_mime_type","","",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"content_type_get_symbolic_icon","","",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"content_type_guess","","",null,null],[5,"content_type_guess_for_tree","","",null,{"inputs":[{"name":"p"}],"output":{"name":"vec"}}],[5,"content_type_is_a","","",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"bool"}}],[5,"content_type_is_unknown","","",null,{"inputs":[{"name":"str"}],"output":{"name":"bool"}}],[5,"content_types_get_registered","","",null,{"inputs":[],"output":{"name":"vec"}}],[5,"dbus_address_escape_value","","",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"dbus_generate_guid","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"dbus_is_address","","",null,{"inputs":[{"name":"str"}],"output":{"name":"bool"}}],[5,"dbus_is_guid","","",null,{"inputs":[{"name":"str"}],"output":{"name":"bool"}}],[5,"dbus_is_interface_name","","",null,{"inputs":[{"name":"str"}],"output":{"name":"bool"}}],[5,"dbus_is_member_name","","",null,{"inputs":[{"name":"str"}],"output":{"name":"bool"}}],[5,"dbus_is_name","","",null,{"inputs":[{"name":"str"}],"output":{"name":"bool"}}],[5,"dbus_is_supported_address","","",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"dbus_is_unique_name","","",null,{"inputs":[{"name":"str"}],"output":{"name":"bool"}}],[5,"io_modules_scan_all_in_directory","","",null,{"inputs":[{"name":"p"}],"output":null}],[5,"io_scheduler_cancel_all_jobs","","",null,{"inputs":[],"output":null}],[5,"networking_init","","",null,{"inputs":[],"output":null}],[5,"resources_enumerate_children","","",null,{"inputs":[{"name":"str"},{"name":"resourcelookupflags"}],"output":{"name":"result"}}],[5,"resources_get_info","","",null,{"inputs":[{"name":"str"},{"name":"resourcelookupflags"}],"output":{"name":"result"}}],[5,"resources_lookup_data","","",null,{"inputs":[{"name":"str"},{"name":"resourcelookupflags"}],"output":{"name":"result"}}],[5,"resources_register","","",null,{"inputs":[{"name":"resource"}],"output":null}],[5,"resources_unregister","","",null,{"inputs":[{"name":"resource"}],"output":null}],[5,"unix_is_mount_path_system_internal","","",null,{"inputs":[{"name":"p"}],"output":{"name":"bool"}}],[5,"unix_mount_points_changed_since","","",null,{"inputs":[{"name":"u64"}],"output":{"name":"bool"}}],[5,"unix_mounts_changed_since","","",null,{"inputs":[{"name":"u64"}],"output":{"name":"bool"}}],[0,"functions","","",null,null],[5,"bus_unown_name","gio::functions","",null,{"inputs":[{"name":"u32"}],"output":null}],[5,"bus_unwatch_name","","",null,{"inputs":[{"name":"u32"}],"output":null}],[5,"content_type_can_be_executable","","",null,{"inputs":[{"name":"str"}],"output":{"name":"bool"}}],[5,"content_type_equals","","",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"bool"}}],[5,"content_type_from_mime_type","","",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"content_type_get_description","","",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"content_type_get_generic_icon_name","","",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"content_type_get_icon","","",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"content_type_get_mime_type","","",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"content_type_get_symbolic_icon","","",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"content_type_guess","","",null,null],[5,"content_type_guess_for_tree","","",null,{"inputs":[{"name":"p"}],"output":{"name":"vec"}}],[5,"content_type_is_a","","",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"bool"}}],[5,"content_type_is_unknown","","",null,{"inputs":[{"name":"str"}],"output":{"name":"bool"}}],[5,"content_types_get_registered","","",null,{"inputs":[],"output":{"name":"vec"}}],[5,"dbus_address_escape_value","","",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"dbus_generate_guid","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"dbus_is_address","","",null,{"inputs":[{"name":"str"}],"output":{"name":"bool"}}],[5,"dbus_is_guid","","",null,{"inputs":[{"name":"str"}],"output":{"name":"bool"}}],[5,"dbus_is_interface_name","","",null,{"inputs":[{"name":"str"}],"output":{"name":"bool"}}],[5,"dbus_is_member_name","","",null,{"inputs":[{"name":"str"}],"output":{"name":"bool"}}],[5,"dbus_is_name","","",null,{"inputs":[{"name":"str"}],"output":{"name":"bool"}}],[5,"dbus_is_supported_address","","",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"dbus_is_unique_name","","",null,{"inputs":[{"name":"str"}],"output":{"name":"bool"}}],[5,"io_modules_scan_all_in_directory","","",null,{"inputs":[{"name":"p"}],"output":null}],[5,"io_scheduler_cancel_all_jobs","","",null,{"inputs":[],"output":null}],[5,"networking_init","","",null,{"inputs":[],"output":null}],[5,"resources_enumerate_children","","",null,{"inputs":[{"name":"str"},{"name":"resourcelookupflags"}],"output":{"name":"result"}}],[5,"resources_get_info","","",null,{"inputs":[{"name":"str"},{"name":"resourcelookupflags"}],"output":{"name":"result"}}],[5,"resources_lookup_data","","",null,{"inputs":[{"name":"str"},{"name":"resourcelookupflags"}],"output":{"name":"result"}}],[5,"resources_register","","",null,{"inputs":[{"name":"resource"}],"output":null}],[5,"resources_unregister","","",null,{"inputs":[{"name":"resource"}],"output":null}],[5,"unix_is_mount_path_system_internal","","",null,{"inputs":[{"name":"p"}],"output":{"name":"bool"}}],[5,"unix_mount_points_changed_since","","",null,{"inputs":[{"name":"u64"}],"output":{"name":"bool"}}],[5,"unix_mounts_changed_since","","",null,{"inputs":[{"name":"u64"}],"output":{"name":"bool"}}],[0,"signal","gio","",null,null],[3,"Inhibit","gio::signal","Whether to propagate the signal to the default handler.",null,null],[12,"0","","",3,null],[0,"prelude","gio","",null,null],[8,"ActionExt","gio::prelude","",null,null],[10,"activate","","",4,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"change_state","","",4,{"inputs":[{"name":"self"},{"name":"variant"}],"output":null}],[10,"get_enabled","","",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_name","","",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_parameter_type","","",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_state","","",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_state_hint","","",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_state_type","","",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_property_enabled_notify","","",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_name_notify","","",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_parameter_type_notify","","",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_state_notify","","",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_state_type_notify","","",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ActionGroupExt","","",null,null],[10,"action_added","","",5,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"action_enabled_changed","","",5,{"inputs":[{"name":"self"},{"name":"str"},{"name":"bool"}],"output":null}],[10,"action_removed","","",5,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"action_state_changed","","",5,{"inputs":[{"name":"self"},{"name":"str"},{"name":"variant"}],"output":null}],[10,"activate_action","","",5,{"inputs":[{"name":"self"},{"name":"str"},{"name":"p"}],"output":null}],[10,"change_action_state","","",5,{"inputs":[{"name":"self"},{"name":"str"},{"name":"variant"}],"output":null}],[10,"get_action_enabled","","",5,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"get_action_parameter_type","","",5,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_action_state","","",5,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_action_state_hint","","",5,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_action_state_type","","",5,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"has_action","","",5,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"list_actions","","",5,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"connect_action_added","","",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_action_enabled_changed","","",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_action_removed","","",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_action_state_changed","","",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ActionMapExt","","",null,null],[10,"add_action","","",6,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"lookup_action","","",6,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"remove_action","","",6,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[8,"AppInfoExt","","",null,null],[10,"add_supports_type","","",7,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"can_delete","","",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"can_remove_supports_type","","",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"delete","","",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"dup","","",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"equal","","",7,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"get_commandline","","",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_description","","",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_display_name","","",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_executable","","",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_icon","","",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_id","","",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_name","","",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_supported_types","","",7,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"launch","","",7,null],[10,"launch_uris","","",7,null],[10,"remove_supports_type","","",7,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"set_as_default_for_extension","","",7,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"set_as_default_for_type","","",7,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"set_as_last_used_for_type","","",7,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"should_show","","",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"supports_files","","",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"supports_uris","","",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"AppLaunchContextExt","","",null,null],[10,"get_display","","",8,null],[10,"get_environment","","",8,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_startup_notify_id","","",8,null],[10,"launch_failed","","",8,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"setenv","","",8,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":null}],[10,"unsetenv","","",8,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"connect_launch_failed","","",8,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_launched","","",8,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ApplicationExt","","",null,null],[10,"activate","","",9,{"inputs":[{"name":"self"}],"output":null}],[10,"bind_busy_property","","",9,{"inputs":[{"name":"self"},{"name":"p"},{"name":"str"}],"output":null}],[10,"get_application_id","","",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_dbus_object_path","","",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_flags","","",9,{"inputs":[{"name":"self"}],"output":{"name":"applicationflags"}}],[10,"get_inactivity_timeout","","",9,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_is_busy","","",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_is_registered","","",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_is_remote","","",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_resource_base_path","","",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"hold","","",9,{"inputs":[{"name":"self"}],"output":null}],[10,"mark_busy","","",9,{"inputs":[{"name":"self"}],"output":null}],[10,"open","","",9,null],[10,"quit","","",9,{"inputs":[{"name":"self"}],"output":null}],[10,"register","","",9,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"release","","",9,{"inputs":[{"name":"self"}],"output":null}],[10,"run","","",9,null],[10,"send_notification","","",9,{"inputs":[{"name":"self"},{"name":"p"},{"name":"notification"}],"output":null}],[10,"set_action_group","","",9,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_application_id","","",9,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_default","","",9,{"inputs":[{"name":"self"}],"output":null}],[10,"set_flags","","",9,{"inputs":[{"name":"self"},{"name":"applicationflags"}],"output":null}],[10,"set_inactivity_timeout","","",9,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"set_resource_base_path","","",9,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"unbind_busy_property","","",9,{"inputs":[{"name":"self"},{"name":"p"},{"name":"str"}],"output":null}],[10,"unmark_busy","","",9,{"inputs":[{"name":"self"}],"output":null}],[10,"withdraw_notification","","",9,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_property_action_group","","",9,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_application_id","","",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_application_id","","",9,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_flags","","",9,{"inputs":[{"name":"self"}],"output":{"name":"applicationflags"}}],[10,"set_property_flags","","",9,{"inputs":[{"name":"self"},{"name":"applicationflags"}],"output":null}],[10,"get_property_inactivity_timeout","","",9,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_inactivity_timeout","","",9,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_is_registered","","",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_is_remote","","",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_resource_base_path","","",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_resource_base_path","","",9,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"connect_activate","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_shutdown","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_startup","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_action_group_notify","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_application_id_notify","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_flags_notify","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_inactivity_timeout_notify","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_is_busy_notify","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_is_registered_notify","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_is_remote_notify","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_resource_base_path_notify","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CancellableExt","","",null,null],[10,"cancel","","",10,{"inputs":[{"name":"self"}],"output":null}],[10,"disconnect","","",10,{"inputs":[{"name":"self"},{"name":"c_ulong"}],"output":null}],[10,"get_fd","","",10,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"is_cancelled","","",10,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"pop_current","","",10,{"inputs":[{"name":"self"}],"output":null}],[10,"push_current","","",10,{"inputs":[{"name":"self"}],"output":null}],[10,"release_fd","","",10,{"inputs":[{"name":"self"}],"output":null}],[10,"reset","","",10,{"inputs":[{"name":"self"}],"output":null}],[10,"set_error_if_cancelled","","",10,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"connect_cancelled","","",10,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"FileExt","","",null,null],[10,"delete","","",11,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"dup","","",11,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"equal","","",11,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"get_basename","","",11,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_child","","",11,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[10,"get_child_for_display_name","","",11,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"get_parent","","",11,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_parse_name","","",11,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_path","","",11,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_relative_path","","",11,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[10,"get_uri","","",11,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_uri_scheme","","",11,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"has_parent","","",11,{"inputs":[{"name":"self"},{"name":"q"}],"output":{"name":"bool"}}],[10,"has_prefix","","",11,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"has_uri_scheme","","",11,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"is_native","","",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"load_contents","","",11,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"make_directory","","",11,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"make_directory_with_parents","","",11,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"make_symbolic_link","","",11,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":{"name":"result"}}],[10,"query_default_handler","","",11,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"query_exists","","",11,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"query_file_type","","",11,{"inputs":[{"name":"self"},{"name":"filequeryinfoflags"},{"name":"p"}],"output":{"name":"filetype"}}],[10,"query_filesystem_info","","",11,{"inputs":[{"name":"self"},{"name":"str"},{"name":"p"}],"output":{"name":"result"}}],[10,"query_info","","",11,{"inputs":[{"name":"self"},{"name":"str"},{"name":"filequeryinfoflags"},{"name":"p"}],"output":{"name":"result"}}],[10,"replace_contents","","",11,null],[10,"resolve_relative_path","","",11,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[10,"set_attribute_byte_string","","",11,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"},{"name":"filequeryinfoflags"},{"name":"p"}],"output":{"name":"result"}}],[10,"set_attribute_int32","","",11,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"},{"name":"filequeryinfoflags"},{"name":"p"}],"output":{"name":"result"}}],[10,"set_attribute_int64","","",11,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i64"},{"name":"filequeryinfoflags"},{"name":"p"}],"output":{"name":"result"}}],[10,"set_attribute_string","","",11,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"},{"name":"filequeryinfoflags"},{"name":"p"}],"output":{"name":"result"}}],[10,"set_attribute_uint32","","",11,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u32"},{"name":"filequeryinfoflags"},{"name":"p"}],"output":{"name":"result"}}],[10,"set_attribute_uint64","","",11,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u64"},{"name":"filequeryinfoflags"},{"name":"p"}],"output":{"name":"result"}}],[10,"set_attributes_from_info","","",11,{"inputs":[{"name":"self"},{"name":"fileinfo"},{"name":"filequeryinfoflags"},{"name":"p"}],"output":{"name":"result"}}],[10,"set_display_name","","",11,{"inputs":[{"name":"self"},{"name":"str"},{"name":"p"}],"output":{"name":"result"}}],[10,"supports_thread_contexts","","",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"trash","","",11,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[8,"FileInfoExt","","",null,null],[10,"clear_status","","",12,{"inputs":[{"name":"self"}],"output":null}],[10,"copy_into","","",12,{"inputs":[{"name":"self"},{"name":"fileinfo"}],"output":null}],[10,"dup","","",12,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_attribute_as_string","","",12,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_attribute_boolean","","",12,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"get_attribute_byte_string","","",12,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_attribute_int32","","",12,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"i32"}}],[10,"get_attribute_int64","","",12,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"i64"}}],[10,"get_attribute_object","","",12,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_attribute_string","","",12,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_attribute_stringv","","",12,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"vec"}}],[10,"get_attribute_uint32","","",12,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"u32"}}],[10,"get_attribute_uint64","","",12,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"u64"}}],[10,"get_content_type","","",12,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_display_name","","",12,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_edit_name","","",12,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_etag","","",12,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_file_type","","",12,{"inputs":[{"name":"self"}],"output":{"name":"filetype"}}],[10,"get_icon","","",12,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_is_backup","","",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_is_hidden","","",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_is_symlink","","",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_name","","",12,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_size","","",12,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[10,"get_sort_order","","",12,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_symbolic_icon","","",12,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_symlink_target","","",12,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"has_attribute","","",12,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"has_namespace","","",12,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"list_attributes","","",12,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"vec"}}],[10,"remove_attribute","","",12,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_attribute_boolean","","",12,{"inputs":[{"name":"self"},{"name":"str"},{"name":"bool"}],"output":null}],[10,"set_attribute_byte_string","","",12,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":null}],[10,"set_attribute_int32","","",12,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"}],"output":null}],[10,"set_attribute_int64","","",12,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i64"}],"output":null}],[10,"set_attribute_object","","",12,{"inputs":[{"name":"self"},{"name":"str"},{"name":"p"}],"output":null}],[10,"set_attribute_string","","",12,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":null}],[10,"set_attribute_stringv","","",12,null],[10,"set_attribute_uint32","","",12,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u32"}],"output":null}],[10,"set_attribute_uint64","","",12,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u64"}],"output":null}],[10,"set_content_type","","",12,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_display_name","","",12,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_edit_name","","",12,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_file_type","","",12,{"inputs":[{"name":"self"},{"name":"filetype"}],"output":null}],[10,"set_icon","","",12,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_is_hidden","","",12,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_is_symlink","","",12,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_name","","",12,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_size","","",12,{"inputs":[{"name":"self"},{"name":"i64"}],"output":null}],[10,"set_sort_order","","",12,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_symbolic_icon","","",12,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_symlink_target","","",12,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"unset_attribute_mask","","",12,{"inputs":[{"name":"self"}],"output":null}],[8,"IconExt","","",null,null],[10,"equal","","",13,{"inputs":[{"name":"self"},{"name":"q"}],"output":{"name":"bool"}}],[10,"serialize","","",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"to_string","","",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"MenuExt","","",null,null],[10,"append","","",14,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":null}],[10,"append_item","","",14,{"inputs":[{"name":"self"},{"name":"menuitem"}],"output":null}],[10,"append_section","","",14,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":null}],[10,"append_submenu","","",14,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":null}],[10,"freeze","","",14,{"inputs":[{"name":"self"}],"output":null}],[10,"insert","","",14,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"p"},{"name":"q"}],"output":null}],[10,"insert_item","","",14,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"menuitem"}],"output":null}],[10,"insert_section","","",14,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"p"},{"name":"q"}],"output":null}],[10,"insert_submenu","","",14,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"p"},{"name":"q"}],"output":null}],[10,"prepend","","",14,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":null}],[10,"prepend_item","","",14,{"inputs":[{"name":"self"},{"name":"menuitem"}],"output":null}],[10,"prepend_section","","",14,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":null}],[10,"prepend_submenu","","",14,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":null}],[10,"remove","","",14,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"remove_all","","",14,{"inputs":[{"name":"self"}],"output":null}],[8,"MenuAttributeIterExt","","",null,null],[10,"get_name","","",15,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_next","","",15,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_value","","",15,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"next","","",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"MenuItemExt","","",null,null],[10,"get_attribute_value","","",16,{"inputs":[{"name":"self"},{"name":"str"},{"name":"p"}],"output":{"name":"option"}}],[10,"get_link","","",16,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"set_action_and_target_value","","",16,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":null}],[10,"set_attribute_value","","",16,{"inputs":[{"name":"self"},{"name":"str"},{"name":"p"}],"output":null}],[10,"set_detailed_action","","",16,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_icon","","",16,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_label","","",16,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_link","","",16,{"inputs":[{"name":"self"},{"name":"str"},{"name":"q"}],"output":null}],[10,"set_section","","",16,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_submenu","","",16,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[8,"MenuLinkIterExt","","",null,null],[10,"get_name","","",17,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_next","","",17,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_value","","",17,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"next","","",17,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"MenuModelExt","","",null,null],[10,"get_item_attribute_value","","",18,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"str"},{"name":"p"}],"output":{"name":"option"}}],[10,"get_item_link","","",18,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_n_items","","",18,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"is_mutable","","",18,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"items_changed","","",18,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"iterate_item_attributes","","",18,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[10,"iterate_item_links","","",18,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[10,"connect_items_changed","","",18,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"NotificationExt","","",null,null],[10,"add_button","","",19,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":null}],[10,"add_button_with_target_value","","",19,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"},{"name":"p"}],"output":null}],[10,"set_body","","",19,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_default_action","","",19,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_default_action_and_target_value","","",19,{"inputs":[{"name":"self"},{"name":"str"},{"name":"p"}],"output":null}],[10,"set_icon","","",19,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_priority","","",19,{"inputs":[{"name":"self"},{"name":"notificationpriority"}],"output":null}],[10,"set_title","","",19,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_urgent","","",19,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[8,"PermissionExt","","",null,null],[10,"acquire","","",20,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"get_allowed","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_can_acquire","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_can_release","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"impl_update","","",20,{"inputs":[{"name":"self"},{"name":"bool"},{"name":"bool"},{"name":"bool"}],"output":null}],[10,"release","","",20,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"get_property_allowed","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_can_acquire","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_can_release","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"connect_property_allowed_notify","","",20,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_can_acquire_notify","","",20,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_can_release_notify","","",20,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"SettingsExt","","",null,null],[10,"apply","","",21,{"inputs":[{"name":"self"}],"output":null}],[10,"bind","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"p"},{"name":"str"},{"name":"settingsbindflags"}],"output":null}],[10,"bind_writable","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"p"},{"name":"str"},{"name":"bool"}],"output":null}],[10,"create_action","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"delay","","",21,{"inputs":[{"name":"self"}],"output":null}],[10,"get_boolean","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"get_child","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_default_value","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_double","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"f64"}}],[10,"get_enum","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"i32"}}],[10,"get_flags","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"u32"}}],[10,"get_has_unapplied","","",21,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_int","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"i32"}}],[10,"get_int64","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"i64"}}],[10,"get_range","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_string","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_strv","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"vec"}}],[10,"get_uint","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"u32"}}],[10,"get_uint64","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"u64"}}],[10,"get_user_value","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_value","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"is_writable","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"list_children","","",21,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"list_keys","","",21,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"range_check","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"variant"}],"output":{"name":"bool"}}],[10,"reset","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"revert","","",21,{"inputs":[{"name":"self"}],"output":null}],[10,"set_boolean","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"bool"}],"output":{"name":"bool"}}],[10,"set_double","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"f64"}],"output":{"name":"bool"}}],[10,"set_enum","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"}],"output":{"name":"bool"}}],[10,"set_flags","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u32"}],"output":{"name":"bool"}}],[10,"set_int","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"}],"output":{"name":"bool"}}],[10,"set_int64","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i64"}],"output":{"name":"bool"}}],[10,"set_string","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":{"name":"bool"}}],[10,"set_strv","","",21,null],[10,"set_uint","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u32"}],"output":{"name":"bool"}}],[10,"set_uint64","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u64"}],"output":{"name":"bool"}}],[10,"set_value","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"variant"}],"output":{"name":"bool"}}],[10,"get_property_delay_apply","","",21,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_has_unapplied","","",21,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_path","","",21,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_property_schema","","",21,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_property_schema_id","","",21,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_changed","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_writable_change_event","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_writable_changed","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_delay_apply_notify","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_has_unapplied_notify","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_path_notify","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_schema_notify","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_schema_id_notify","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_settings_schema_notify","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"SimpleActionExt","","",null,null],[10,"set_enabled","","",22,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_state","","",22,{"inputs":[{"name":"self"},{"name":"variant"}],"output":null}],[10,"set_state_hint","","",22,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"connect_activate","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_change_state","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_enabled_notify","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_name_notify","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_state_type_notify","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"SimpleActionGroupExt","","",null,null],[10,"insert","","",23,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"lookup","","",23,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"remove","","",23,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[8,"ThemedIconExt","","",null,null],[10,"append_name","","",24,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"get_names","","",24,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"prepend_name","","",24,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"get_property_use_default_fallbacks","","",24,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"connect_property_name_notify","","",24,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_names_notify","","",24,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_default_fallbacks_notify","","",24,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"TlsCertificateExt","","",null,null],[10,"get_issuer","","",25,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"is_same","","",25,{"inputs":[{"name":"self"},{"name":"tlscertificate"}],"output":{"name":"bool"}}],[10,"get_property_certificate_pem","","",25,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_property_certificate_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_certificate_pem_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_issuer_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_private_key_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_private_key_pem_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ApplicationExtManual","","",null,null],[10,"connect_open","","",26,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[11,"clone","gio","",27,{"inputs":[{"name":"self"}],"output":{"name":"action"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",27,null],[11,"static_type","","",27,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",27,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"name_is_valid","","",27,{"inputs":[{"name":"str"}],"output":{"name":"bool"}}],[11,"parse_detailed_name","","",27,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"print_detailed_name","","",27,{"inputs":[{"name":"str"},{"name":"p"}],"output":{"name":"option"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"actiongroup"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",28,null],[11,"static_type","","",28,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",28,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"actionmap"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",29,null],[11,"static_type","","",29,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",29,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"appinfo"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",30,null],[11,"static_type","","",30,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",30,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"create_from_commandline","","",30,{"inputs":[{"name":"str"},{"name":"p"},{"name":"appinfocreateflags"}],"output":{"name":"result"}}],[11,"get_all","","",30,{"inputs":[],"output":{"name":"vec"}}],[11,"get_all_for_type","","",30,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[11,"get_default_for_type","","",30,{"inputs":[{"name":"str"},{"name":"bool"}],"output":{"name":"option"}}],[11,"get_default_for_uri_scheme","","",30,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[11,"get_fallback_for_type","","",30,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[11,"get_recommended_for_type","","",30,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[11,"launch_default_for_uri","","",30,{"inputs":[{"name":"str"},{"name":"p"}],"output":{"name":"result"}}],[11,"reset_type_associations","","",30,{"inputs":[{"name":"str"}],"output":null}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"applaunchcontext"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",31,null],[11,"static_type","","",31,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",31,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","",31,{"inputs":[],"output":{"name":"applaunchcontext"}}],[11,"default","","",31,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"application"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",32,null],[11,"static_type","","",32,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",32,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","",32,{"inputs":[{"name":"p"},{"name":"applicationflags"}],"output":{"name":"application"}}],[11,"get_default","","",32,{"inputs":[],"output":{"name":"option"}}],[11,"id_is_valid","","",32,{"inputs":[{"name":"str"}],"output":{"name":"bool"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"cancellable"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",33,null],[11,"static_type","","",33,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",33,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","",33,{"inputs":[],"output":{"name":"cancellable"}}],[11,"get_current","","",33,{"inputs":[],"output":{"name":"option"}}],[11,"default","","",33,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"file"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",34,null],[11,"static_type","","",34,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",34,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new_for_commandline_arg","","",34,{"inputs":[{"name":"str"}],"output":{"name":"file"}}],[11,"new_for_commandline_arg_and_cwd","","",34,{"inputs":[{"name":"str"},{"name":"p"}],"output":{"name":"file"}}],[11,"new_for_path","","",34,{"inputs":[{"name":"p"}],"output":{"name":"file"}}],[11,"new_for_uri","","",34,{"inputs":[{"name":"str"}],"output":{"name":"file"}}],[11,"parse_name","","",34,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"fileinfo"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",35,null],[11,"static_type","","",35,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",35,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","",35,{"inputs":[],"output":{"name":"fileinfo"}}],[11,"default","","",35,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"icon"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",36,null],[11,"static_type","","",36,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",36,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"deserialize","","",36,{"inputs":[{"name":"variant"}],"output":{"name":"option"}}],[11,"new_for_string","","",36,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"menu"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",37,null],[11,"static_type","","",37,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",37,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","",37,{"inputs":[],"output":{"name":"menu"}}],[11,"default","","",37,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"menuattributeiter"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",38,null],[11,"static_type","","",38,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",38,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"menuitem"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",39,null],[11,"static_type","","",39,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",39,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","",39,{"inputs":[{"name":"p"},{"name":"q"}],"output":{"name":"menuitem"}}],[11,"new_from_model","","",39,{"inputs":[{"name":"p"},{"name":"i32"}],"output":{"name":"menuitem"}}],[11,"new_section","","",39,{"inputs":[{"name":"p"},{"name":"q"}],"output":{"name":"menuitem"}}],[11,"new_submenu","","",39,{"inputs":[{"name":"p"},{"name":"q"}],"output":{"name":"menuitem"}}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"menulinkiter"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",40,null],[11,"static_type","","",40,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",40,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"menumodel"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",41,null],[11,"static_type","","",41,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",41,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",42,{"inputs":[{"name":"self"}],"output":{"name":"notification"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",42,null],[11,"static_type","","",42,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",42,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","",42,{"inputs":[{"name":"str"}],"output":{"name":"notification"}}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"permission"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",43,null],[11,"static_type","","",43,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",43,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",44,{"inputs":[{"name":"self"}],"output":{"name":"settings"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",44,null],[11,"static_type","","",44,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",44,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","",44,{"inputs":[{"name":"str"}],"output":{"name":"settings"}}],[11,"new_with_path","","",44,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"settings"}}],[11,"list_relocatable_schemas","","",44,{"inputs":[],"output":{"name":"vec"}}],[11,"list_schemas","","",44,{"inputs":[],"output":{"name":"vec"}}],[11,"sync","","",44,{"inputs":[],"output":null}],[11,"unbind","","",44,{"inputs":[{"name":"p"},{"name":"str"}],"output":null}],[11,"clone","","",45,{"inputs":[{"name":"self"}],"output":{"name":"simpleaction"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",45,null],[11,"static_type","","",45,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",45,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","",45,{"inputs":[{"name":"str"},{"name":"p"}],"output":{"name":"simpleaction"}}],[11,"new_stateful","","",45,{"inputs":[{"name":"str"},{"name":"p"},{"name":"variant"}],"output":{"name":"simpleaction"}}],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"simpleactiongroup"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",46,null],[11,"static_type","","",46,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",46,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","",46,{"inputs":[],"output":{"name":"simpleactiongroup"}}],[11,"default","","",46,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"simplepermission"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",47,null],[11,"static_type","","",47,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",47,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","",47,{"inputs":[{"name":"bool"}],"output":{"name":"simplepermission"}}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"themedicon"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",48,null],[11,"static_type","","",48,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",48,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","",48,{"inputs":[{"name":"str"}],"output":{"name":"themedicon"}}],[11,"new_from_names","","",48,null],[11,"new_with_default_fallbacks","","",48,{"inputs":[{"name":"str"}],"output":{"name":"themedicon"}}],[11,"clone","","",49,{"inputs":[{"name":"self"}],"output":{"name":"tlscertificate"}}],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",49,null],[11,"static_type","","",49,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",49,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new_from_file","","",49,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"new_from_files","","",49,{"inputs":[{"name":"p"},{"name":"q"}],"output":{"name":"result"}}],[11,"new_from_pem","","",49,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"list_new_from_file","","",49,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"clone","","",50,{"inputs":[{"name":"self"}],"output":{"name":"resource"}}],[11,"static_type","","",50,{"inputs":[],"output":{"name":"type"}}],[11,"new_from_data","","",50,{"inputs":[{"name":"bytes"}],"output":{"name":"result"}}],[11,"enumerate_children","","",50,{"inputs":[{"name":"self"},{"name":"str"},{"name":"resourcelookupflags"}],"output":{"name":"result"}}],[11,"get_info","","",50,{"inputs":[{"name":"self"},{"name":"str"},{"name":"resourcelookupflags"}],"output":{"name":"result"}}],[11,"lookup_data","","",50,{"inputs":[{"name":"self"},{"name":"str"},{"name":"resourcelookupflags"}],"output":{"name":"result"}}],[11,"load","","",50,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"filetype"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"hash","","",0,null],[11,"static_type","","",0,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",0,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",0,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",0,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"notificationpriority"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"notificationpriority"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"notificationpriority"}],"output":{"name":"bool"}}],[11,"hash","","",1,null],[11,"static_type","","",1,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",1,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",1,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",1,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"resourceerror"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"resourceerror"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"resourceerror"}],"output":{"name":"bool"}}],[11,"hash","","",2,null],[11,"domain","","",2,{"inputs":[],"output":{"name":"gquark"}}],[11,"code","","",2,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from","","",2,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"static_type","","",2,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",2,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",2,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",2,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"eq","","",51,{"inputs":[{"name":"self"},{"name":"appinfocreateflags"}],"output":{"name":"bool"}}],[11,"ne","","",51,{"inputs":[{"name":"self"},{"name":"appinfocreateflags"}],"output":{"name":"bool"}}],[11,"clone","","",51,{"inputs":[{"name":"self"}],"output":{"name":"appinfocreateflags"}}],[11,"partial_cmp","","",51,{"inputs":[{"name":"self"},{"name":"appinfocreateflags"}],"output":{"name":"option"}}],[11,"lt","","",51,{"inputs":[{"name":"self"},{"name":"appinfocreateflags"}],"output":{"name":"bool"}}],[11,"le","","",51,{"inputs":[{"name":"self"},{"name":"appinfocreateflags"}],"output":{"name":"bool"}}],[11,"gt","","",51,{"inputs":[{"name":"self"},{"name":"appinfocreateflags"}],"output":{"name":"bool"}}],[11,"ge","","",51,{"inputs":[{"name":"self"},{"name":"appinfocreateflags"}],"output":{"name":"bool"}}],[11,"cmp","","",51,{"inputs":[{"name":"self"},{"name":"appinfocreateflags"}],"output":{"name":"ordering"}}],[11,"hash","","",51,null],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",51,{"inputs":[],"output":{"name":"appinfocreateflags"}}],[11,"all","","Returns the set containing all flags.",51,{"inputs":[],"output":{"name":"appinfocreateflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",51,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",51,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",51,{"inputs":[{"name":"u32"}],"output":{"name":"appinfocreateflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",51,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",51,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",51,{"inputs":[{"name":"self"},{"name":"appinfocreateflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",51,{"inputs":[{"name":"self"},{"name":"appinfocreateflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",51,{"inputs":[{"name":"self"},{"name":"appinfocreateflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",51,{"inputs":[{"name":"self"},{"name":"appinfocreateflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",51,{"inputs":[{"name":"self"},{"name":"appinfocreateflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",51,{"inputs":[{"name":"self"},{"name":"appinfocreateflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",51,{"inputs":[{"name":"self"},{"name":"appinfocreateflags"}],"output":{"name":"appinfocreateflags"}}],[11,"bitor_assign","","Adds the set of flags.",51,{"inputs":[{"name":"self"},{"name":"appinfocreateflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",51,{"inputs":[{"name":"self"},{"name":"appinfocreateflags"}],"output":{"name":"appinfocreateflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",51,{"inputs":[{"name":"self"},{"name":"appinfocreateflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",51,{"inputs":[{"name":"self"},{"name":"appinfocreateflags"}],"output":{"name":"appinfocreateflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",51,{"inputs":[{"name":"self"},{"name":"appinfocreateflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",51,{"inputs":[{"name":"self"},{"name":"appinfocreateflags"}],"output":{"name":"appinfocreateflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",51,{"inputs":[{"name":"self"},{"name":"appinfocreateflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",51,{"inputs":[{"name":"self"}],"output":{"name":"appinfocreateflags"}}],[11,"extend","","",51,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",51,{"inputs":[{"name":"t"}],"output":{"name":"appinfocreateflags"}}],[11,"static_type","","",51,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",51,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",51,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",51,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"eq","","",52,{"inputs":[{"name":"self"},{"name":"applicationflags"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"self"},{"name":"applicationflags"}],"output":{"name":"bool"}}],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"applicationflags"}}],[11,"partial_cmp","","",52,{"inputs":[{"name":"self"},{"name":"applicationflags"}],"output":{"name":"option"}}],[11,"lt","","",52,{"inputs":[{"name":"self"},{"name":"applicationflags"}],"output":{"name":"bool"}}],[11,"le","","",52,{"inputs":[{"name":"self"},{"name":"applicationflags"}],"output":{"name":"bool"}}],[11,"gt","","",52,{"inputs":[{"name":"self"},{"name":"applicationflags"}],"output":{"name":"bool"}}],[11,"ge","","",52,{"inputs":[{"name":"self"},{"name":"applicationflags"}],"output":{"name":"bool"}}],[11,"cmp","","",52,{"inputs":[{"name":"self"},{"name":"applicationflags"}],"output":{"name":"ordering"}}],[11,"hash","","",52,null],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",52,{"inputs":[],"output":{"name":"applicationflags"}}],[11,"all","","Returns the set containing all flags.",52,{"inputs":[],"output":{"name":"applicationflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",52,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",52,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",52,{"inputs":[{"name":"u32"}],"output":{"name":"applicationflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",52,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",52,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",52,{"inputs":[{"name":"self"},{"name":"applicationflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",52,{"inputs":[{"name":"self"},{"name":"applicationflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",52,{"inputs":[{"name":"self"},{"name":"applicationflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",52,{"inputs":[{"name":"self"},{"name":"applicationflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",52,{"inputs":[{"name":"self"},{"name":"applicationflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",52,{"inputs":[{"name":"self"},{"name":"applicationflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",52,{"inputs":[{"name":"self"},{"name":"applicationflags"}],"output":{"name":"applicationflags"}}],[11,"bitor_assign","","Adds the set of flags.",52,{"inputs":[{"name":"self"},{"name":"applicationflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",52,{"inputs":[{"name":"self"},{"name":"applicationflags"}],"output":{"name":"applicationflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",52,{"inputs":[{"name":"self"},{"name":"applicationflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",52,{"inputs":[{"name":"self"},{"name":"applicationflags"}],"output":{"name":"applicationflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",52,{"inputs":[{"name":"self"},{"name":"applicationflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",52,{"inputs":[{"name":"self"},{"name":"applicationflags"}],"output":{"name":"applicationflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",52,{"inputs":[{"name":"self"},{"name":"applicationflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",52,{"inputs":[{"name":"self"}],"output":{"name":"applicationflags"}}],[11,"extend","","",52,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",52,{"inputs":[{"name":"t"}],"output":{"name":"applicationflags"}}],[11,"static_type","","",52,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",52,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",52,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",52,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"eq","","",53,{"inputs":[{"name":"self"},{"name":"filecreateflags"}],"output":{"name":"bool"}}],[11,"ne","","",53,{"inputs":[{"name":"self"},{"name":"filecreateflags"}],"output":{"name":"bool"}}],[11,"clone","","",53,{"inputs":[{"name":"self"}],"output":{"name":"filecreateflags"}}],[11,"partial_cmp","","",53,{"inputs":[{"name":"self"},{"name":"filecreateflags"}],"output":{"name":"option"}}],[11,"lt","","",53,{"inputs":[{"name":"self"},{"name":"filecreateflags"}],"output":{"name":"bool"}}],[11,"le","","",53,{"inputs":[{"name":"self"},{"name":"filecreateflags"}],"output":{"name":"bool"}}],[11,"gt","","",53,{"inputs":[{"name":"self"},{"name":"filecreateflags"}],"output":{"name":"bool"}}],[11,"ge","","",53,{"inputs":[{"name":"self"},{"name":"filecreateflags"}],"output":{"name":"bool"}}],[11,"cmp","","",53,{"inputs":[{"name":"self"},{"name":"filecreateflags"}],"output":{"name":"ordering"}}],[11,"hash","","",53,null],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",53,{"inputs":[],"output":{"name":"filecreateflags"}}],[11,"all","","Returns the set containing all flags.",53,{"inputs":[],"output":{"name":"filecreateflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",53,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",53,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",53,{"inputs":[{"name":"u32"}],"output":{"name":"filecreateflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",53,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",53,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",53,{"inputs":[{"name":"self"},{"name":"filecreateflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",53,{"inputs":[{"name":"self"},{"name":"filecreateflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",53,{"inputs":[{"name":"self"},{"name":"filecreateflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",53,{"inputs":[{"name":"self"},{"name":"filecreateflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",53,{"inputs":[{"name":"self"},{"name":"filecreateflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",53,{"inputs":[{"name":"self"},{"name":"filecreateflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",53,{"inputs":[{"name":"self"},{"name":"filecreateflags"}],"output":{"name":"filecreateflags"}}],[11,"bitor_assign","","Adds the set of flags.",53,{"inputs":[{"name":"self"},{"name":"filecreateflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",53,{"inputs":[{"name":"self"},{"name":"filecreateflags"}],"output":{"name":"filecreateflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",53,{"inputs":[{"name":"self"},{"name":"filecreateflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",53,{"inputs":[{"name":"self"},{"name":"filecreateflags"}],"output":{"name":"filecreateflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",53,{"inputs":[{"name":"self"},{"name":"filecreateflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",53,{"inputs":[{"name":"self"},{"name":"filecreateflags"}],"output":{"name":"filecreateflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",53,{"inputs":[{"name":"self"},{"name":"filecreateflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",53,{"inputs":[{"name":"self"}],"output":{"name":"filecreateflags"}}],[11,"extend","","",53,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",53,{"inputs":[{"name":"t"}],"output":{"name":"filecreateflags"}}],[11,"static_type","","",53,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",53,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",53,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",53,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"eq","","",54,{"inputs":[{"name":"self"},{"name":"filequeryinfoflags"}],"output":{"name":"bool"}}],[11,"ne","","",54,{"inputs":[{"name":"self"},{"name":"filequeryinfoflags"}],"output":{"name":"bool"}}],[11,"clone","","",54,{"inputs":[{"name":"self"}],"output":{"name":"filequeryinfoflags"}}],[11,"partial_cmp","","",54,{"inputs":[{"name":"self"},{"name":"filequeryinfoflags"}],"output":{"name":"option"}}],[11,"lt","","",54,{"inputs":[{"name":"self"},{"name":"filequeryinfoflags"}],"output":{"name":"bool"}}],[11,"le","","",54,{"inputs":[{"name":"self"},{"name":"filequeryinfoflags"}],"output":{"name":"bool"}}],[11,"gt","","",54,{"inputs":[{"name":"self"},{"name":"filequeryinfoflags"}],"output":{"name":"bool"}}],[11,"ge","","",54,{"inputs":[{"name":"self"},{"name":"filequeryinfoflags"}],"output":{"name":"bool"}}],[11,"cmp","","",54,{"inputs":[{"name":"self"},{"name":"filequeryinfoflags"}],"output":{"name":"ordering"}}],[11,"hash","","",54,null],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",54,{"inputs":[],"output":{"name":"filequeryinfoflags"}}],[11,"all","","Returns the set containing all flags.",54,{"inputs":[],"output":{"name":"filequeryinfoflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",54,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",54,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",54,{"inputs":[{"name":"u32"}],"output":{"name":"filequeryinfoflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",54,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",54,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",54,{"inputs":[{"name":"self"},{"name":"filequeryinfoflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",54,{"inputs":[{"name":"self"},{"name":"filequeryinfoflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",54,{"inputs":[{"name":"self"},{"name":"filequeryinfoflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",54,{"inputs":[{"name":"self"},{"name":"filequeryinfoflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",54,{"inputs":[{"name":"self"},{"name":"filequeryinfoflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",54,{"inputs":[{"name":"self"},{"name":"filequeryinfoflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",54,{"inputs":[{"name":"self"},{"name":"filequeryinfoflags"}],"output":{"name":"filequeryinfoflags"}}],[11,"bitor_assign","","Adds the set of flags.",54,{"inputs":[{"name":"self"},{"name":"filequeryinfoflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",54,{"inputs":[{"name":"self"},{"name":"filequeryinfoflags"}],"output":{"name":"filequeryinfoflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",54,{"inputs":[{"name":"self"},{"name":"filequeryinfoflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",54,{"inputs":[{"name":"self"},{"name":"filequeryinfoflags"}],"output":{"name":"filequeryinfoflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",54,{"inputs":[{"name":"self"},{"name":"filequeryinfoflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",54,{"inputs":[{"name":"self"},{"name":"filequeryinfoflags"}],"output":{"name":"filequeryinfoflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",54,{"inputs":[{"name":"self"},{"name":"filequeryinfoflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",54,{"inputs":[{"name":"self"}],"output":{"name":"filequeryinfoflags"}}],[11,"extend","","",54,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",54,{"inputs":[{"name":"t"}],"output":{"name":"filequeryinfoflags"}}],[11,"static_type","","",54,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",54,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",54,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",54,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"eq","","",55,{"inputs":[{"name":"self"},{"name":"resourcelookupflags"}],"output":{"name":"bool"}}],[11,"ne","","",55,{"inputs":[{"name":"self"},{"name":"resourcelookupflags"}],"output":{"name":"bool"}}],[11,"clone","","",55,{"inputs":[{"name":"self"}],"output":{"name":"resourcelookupflags"}}],[11,"partial_cmp","","",55,{"inputs":[{"name":"self"},{"name":"resourcelookupflags"}],"output":{"name":"option"}}],[11,"lt","","",55,{"inputs":[{"name":"self"},{"name":"resourcelookupflags"}],"output":{"name":"bool"}}],[11,"le","","",55,{"inputs":[{"name":"self"},{"name":"resourcelookupflags"}],"output":{"name":"bool"}}],[11,"gt","","",55,{"inputs":[{"name":"self"},{"name":"resourcelookupflags"}],"output":{"name":"bool"}}],[11,"ge","","",55,{"inputs":[{"name":"self"},{"name":"resourcelookupflags"}],"output":{"name":"bool"}}],[11,"cmp","","",55,{"inputs":[{"name":"self"},{"name":"resourcelookupflags"}],"output":{"name":"ordering"}}],[11,"hash","","",55,null],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",55,{"inputs":[],"output":{"name":"resourcelookupflags"}}],[11,"all","","Returns the set containing all flags.",55,{"inputs":[],"output":{"name":"resourcelookupflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",55,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",55,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",55,{"inputs":[{"name":"u32"}],"output":{"name":"resourcelookupflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",55,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",55,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",55,{"inputs":[{"name":"self"},{"name":"resourcelookupflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",55,{"inputs":[{"name":"self"},{"name":"resourcelookupflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",55,{"inputs":[{"name":"self"},{"name":"resourcelookupflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",55,{"inputs":[{"name":"self"},{"name":"resourcelookupflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",55,{"inputs":[{"name":"self"},{"name":"resourcelookupflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",55,{"inputs":[{"name":"self"},{"name":"resourcelookupflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",55,{"inputs":[{"name":"self"},{"name":"resourcelookupflags"}],"output":{"name":"resourcelookupflags"}}],[11,"bitor_assign","","Adds the set of flags.",55,{"inputs":[{"name":"self"},{"name":"resourcelookupflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",55,{"inputs":[{"name":"self"},{"name":"resourcelookupflags"}],"output":{"name":"resourcelookupflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",55,{"inputs":[{"name":"self"},{"name":"resourcelookupflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",55,{"inputs":[{"name":"self"},{"name":"resourcelookupflags"}],"output":{"name":"resourcelookupflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",55,{"inputs":[{"name":"self"},{"name":"resourcelookupflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",55,{"inputs":[{"name":"self"},{"name":"resourcelookupflags"}],"output":{"name":"resourcelookupflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",55,{"inputs":[{"name":"self"},{"name":"resourcelookupflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",55,{"inputs":[{"name":"self"}],"output":{"name":"resourcelookupflags"}}],[11,"extend","","",55,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",55,{"inputs":[{"name":"t"}],"output":{"name":"resourcelookupflags"}}],[11,"static_type","","",55,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",55,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",55,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",55,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"eq","","",56,{"inputs":[{"name":"self"},{"name":"settingsbindflags"}],"output":{"name":"bool"}}],[11,"ne","","",56,{"inputs":[{"name":"self"},{"name":"settingsbindflags"}],"output":{"name":"bool"}}],[11,"clone","","",56,{"inputs":[{"name":"self"}],"output":{"name":"settingsbindflags"}}],[11,"partial_cmp","","",56,{"inputs":[{"name":"self"},{"name":"settingsbindflags"}],"output":{"name":"option"}}],[11,"lt","","",56,{"inputs":[{"name":"self"},{"name":"settingsbindflags"}],"output":{"name":"bool"}}],[11,"le","","",56,{"inputs":[{"name":"self"},{"name":"settingsbindflags"}],"output":{"name":"bool"}}],[11,"gt","","",56,{"inputs":[{"name":"self"},{"name":"settingsbindflags"}],"output":{"name":"bool"}}],[11,"ge","","",56,{"inputs":[{"name":"self"},{"name":"settingsbindflags"}],"output":{"name":"bool"}}],[11,"cmp","","",56,{"inputs":[{"name":"self"},{"name":"settingsbindflags"}],"output":{"name":"ordering"}}],[11,"hash","","",56,null],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",56,{"inputs":[],"output":{"name":"settingsbindflags"}}],[11,"all","","Returns the set containing all flags.",56,{"inputs":[],"output":{"name":"settingsbindflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",56,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",56,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",56,{"inputs":[{"name":"u32"}],"output":{"name":"settingsbindflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",56,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",56,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",56,{"inputs":[{"name":"self"},{"name":"settingsbindflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",56,{"inputs":[{"name":"self"},{"name":"settingsbindflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",56,{"inputs":[{"name":"self"},{"name":"settingsbindflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",56,{"inputs":[{"name":"self"},{"name":"settingsbindflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",56,{"inputs":[{"name":"self"},{"name":"settingsbindflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",56,{"inputs":[{"name":"self"},{"name":"settingsbindflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",56,{"inputs":[{"name":"self"},{"name":"settingsbindflags"}],"output":{"name":"settingsbindflags"}}],[11,"bitor_assign","","Adds the set of flags.",56,{"inputs":[{"name":"self"},{"name":"settingsbindflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",56,{"inputs":[{"name":"self"},{"name":"settingsbindflags"}],"output":{"name":"settingsbindflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",56,{"inputs":[{"name":"self"},{"name":"settingsbindflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",56,{"inputs":[{"name":"self"},{"name":"settingsbindflags"}],"output":{"name":"settingsbindflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",56,{"inputs":[{"name":"self"},{"name":"settingsbindflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",56,{"inputs":[{"name":"self"},{"name":"settingsbindflags"}],"output":{"name":"settingsbindflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",56,{"inputs":[{"name":"self"},{"name":"settingsbindflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",56,{"inputs":[{"name":"self"}],"output":{"name":"settingsbindflags"}}],[11,"extend","","",56,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",56,{"inputs":[{"name":"t"}],"output":{"name":"settingsbindflags"}}],[11,"static_type","","",56,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",56,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",56,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",56,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"eq","","",57,{"inputs":[{"name":"self"},{"name":"tlscertificateflags"}],"output":{"name":"bool"}}],[11,"ne","","",57,{"inputs":[{"name":"self"},{"name":"tlscertificateflags"}],"output":{"name":"bool"}}],[11,"clone","","",57,{"inputs":[{"name":"self"}],"output":{"name":"tlscertificateflags"}}],[11,"partial_cmp","","",57,{"inputs":[{"name":"self"},{"name":"tlscertificateflags"}],"output":{"name":"option"}}],[11,"lt","","",57,{"inputs":[{"name":"self"},{"name":"tlscertificateflags"}],"output":{"name":"bool"}}],[11,"le","","",57,{"inputs":[{"name":"self"},{"name":"tlscertificateflags"}],"output":{"name":"bool"}}],[11,"gt","","",57,{"inputs":[{"name":"self"},{"name":"tlscertificateflags"}],"output":{"name":"bool"}}],[11,"ge","","",57,{"inputs":[{"name":"self"},{"name":"tlscertificateflags"}],"output":{"name":"bool"}}],[11,"cmp","","",57,{"inputs":[{"name":"self"},{"name":"tlscertificateflags"}],"output":{"name":"ordering"}}],[11,"hash","","",57,null],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",57,{"inputs":[],"output":{"name":"tlscertificateflags"}}],[11,"all","","Returns the set containing all flags.",57,{"inputs":[],"output":{"name":"tlscertificateflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",57,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",57,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",57,{"inputs":[{"name":"u32"}],"output":{"name":"tlscertificateflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",57,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",57,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",57,{"inputs":[{"name":"self"},{"name":"tlscertificateflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",57,{"inputs":[{"name":"self"},{"name":"tlscertificateflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",57,{"inputs":[{"name":"self"},{"name":"tlscertificateflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",57,{"inputs":[{"name":"self"},{"name":"tlscertificateflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",57,{"inputs":[{"name":"self"},{"name":"tlscertificateflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",57,{"inputs":[{"name":"self"},{"name":"tlscertificateflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",57,{"inputs":[{"name":"self"},{"name":"tlscertificateflags"}],"output":{"name":"tlscertificateflags"}}],[11,"bitor_assign","","Adds the set of flags.",57,{"inputs":[{"name":"self"},{"name":"tlscertificateflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",57,{"inputs":[{"name":"self"},{"name":"tlscertificateflags"}],"output":{"name":"tlscertificateflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",57,{"inputs":[{"name":"self"},{"name":"tlscertificateflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",57,{"inputs":[{"name":"self"},{"name":"tlscertificateflags"}],"output":{"name":"tlscertificateflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",57,{"inputs":[{"name":"self"},{"name":"tlscertificateflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",57,{"inputs":[{"name":"self"},{"name":"tlscertificateflags"}],"output":{"name":"tlscertificateflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",57,{"inputs":[{"name":"self"},{"name":"tlscertificateflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",57,{"inputs":[{"name":"self"}],"output":{"name":"tlscertificateflags"}}],[11,"extend","","",57,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",57,{"inputs":[{"name":"t"}],"output":{"name":"tlscertificateflags"}}],[11,"static_type","","",57,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",57,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",57,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",57,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[17,"APP_INFO_CREATE_NONE","","",null,null],[17,"APP_INFO_CREATE_NEEDS_TERMINAL","","",null,null],[17,"APP_INFO_CREATE_SUPPORTS_URIS","","",null,null],[17,"APP_INFO_CREATE_SUPPORTS_STARTUP_NOTIFICATION","","",null,null],[17,"APPLICATION_FLAGS_NONE","","",null,null],[17,"APPLICATION_IS_SERVICE","","",null,null],[17,"APPLICATION_IS_LAUNCHER","","",null,null],[17,"APPLICATION_HANDLES_OPEN","","",null,null],[17,"APPLICATION_HANDLES_COMMAND_LINE","","",null,null],[17,"APPLICATION_SEND_ENVIRONMENT","","",null,null],[17,"APPLICATION_NON_UNIQUE","","",null,null],[17,"APPLICATION_CAN_OVERRIDE_APP_ID","","",null,null],[17,"FILE_CREATE_NONE","","",null,null],[17,"FILE_CREATE_PRIVATE","","",null,null],[17,"FILE_CREATE_REPLACE_DESTINATION","","",null,null],[17,"FILE_QUERY_INFO_NONE","","",null,null],[17,"FILE_QUERY_INFO_NOFOLLOW_SYMLINKS","","",null,null],[17,"RESOURCE_LOOKUP_FLAGS_NONE","","",null,null],[17,"SETTINGS_BIND_DEFAULT","","",null,null],[17,"SETTINGS_BIND_GET","","",null,null],[17,"SETTINGS_BIND_SET","","",null,null],[17,"SETTINGS_BIND_NO_SENSITIVITY","","",null,null],[17,"SETTINGS_BIND_GET_NO_CHANGES","","",null,null],[17,"SETTINGS_BIND_INVERT_BOOLEAN","","",null,null],[17,"TLS_CERTIFICATE_UNKNOWN_CA","","",null,null],[17,"TLS_CERTIFICATE_BAD_IDENTITY","","",null,null],[17,"TLS_CERTIFICATE_NOT_ACTIVATED","","",null,null],[17,"TLS_CERTIFICATE_EXPIRED","","",null,null],[17,"TLS_CERTIFICATE_REVOKED","","",null,null],[17,"TLS_CERTIFICATE_INSECURE","","",null,null],[17,"TLS_CERTIFICATE_GENERIC_ERROR","","",null,null],[17,"TLS_CERTIFICATE_VALIDATE_ALL","","",null,null],[8,"ActionExt","","",null,null],[10,"activate","","",4,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"change_state","","",4,{"inputs":[{"name":"self"},{"name":"variant"}],"output":null}],[10,"get_enabled","","",4,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_name","","",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_parameter_type","","",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_state","","",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_state_hint","","",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_state_type","","",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_property_enabled_notify","","",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_name_notify","","",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_parameter_type_notify","","",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_state_notify","","",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_state_type_notify","","",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ActionGroupExt","","",null,null],[10,"action_added","","",5,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"action_enabled_changed","","",5,{"inputs":[{"name":"self"},{"name":"str"},{"name":"bool"}],"output":null}],[10,"action_removed","","",5,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"action_state_changed","","",5,{"inputs":[{"name":"self"},{"name":"str"},{"name":"variant"}],"output":null}],[10,"activate_action","","",5,{"inputs":[{"name":"self"},{"name":"str"},{"name":"p"}],"output":null}],[10,"change_action_state","","",5,{"inputs":[{"name":"self"},{"name":"str"},{"name":"variant"}],"output":null}],[10,"get_action_enabled","","",5,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"get_action_parameter_type","","",5,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_action_state","","",5,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_action_state_hint","","",5,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_action_state_type","","",5,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"has_action","","",5,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"list_actions","","",5,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"connect_action_added","","",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_action_enabled_changed","","",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_action_removed","","",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_action_state_changed","","",5,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ActionMapExt","","",null,null],[10,"add_action","","",6,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"lookup_action","","",6,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"remove_action","","",6,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[8,"AppInfoExt","","",null,null],[10,"add_supports_type","","",7,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"can_delete","","",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"can_remove_supports_type","","",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"delete","","",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"dup","","",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"equal","","",7,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"get_commandline","","",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_description","","",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_display_name","","",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_executable","","",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_icon","","",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_id","","",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_name","","",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_supported_types","","",7,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"launch","","",7,null],[10,"launch_uris","","",7,null],[10,"remove_supports_type","","",7,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"set_as_default_for_extension","","",7,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"set_as_default_for_type","","",7,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"set_as_last_used_for_type","","",7,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"should_show","","",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"supports_files","","",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"supports_uris","","",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"AppLaunchContextExt","","",null,null],[10,"get_display","","",8,null],[10,"get_environment","","",8,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_startup_notify_id","","",8,null],[10,"launch_failed","","",8,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"setenv","","",8,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":null}],[10,"unsetenv","","",8,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"connect_launch_failed","","",8,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_launched","","",8,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ApplicationExt","","",null,null],[10,"activate","","",9,{"inputs":[{"name":"self"}],"output":null}],[10,"bind_busy_property","","",9,{"inputs":[{"name":"self"},{"name":"p"},{"name":"str"}],"output":null}],[10,"get_application_id","","",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_dbus_object_path","","",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_flags","","",9,{"inputs":[{"name":"self"}],"output":{"name":"applicationflags"}}],[10,"get_inactivity_timeout","","",9,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_is_busy","","",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_is_registered","","",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_is_remote","","",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_resource_base_path","","",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"hold","","",9,{"inputs":[{"name":"self"}],"output":null}],[10,"mark_busy","","",9,{"inputs":[{"name":"self"}],"output":null}],[10,"open","","",9,null],[10,"quit","","",9,{"inputs":[{"name":"self"}],"output":null}],[10,"register","","",9,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"release","","",9,{"inputs":[{"name":"self"}],"output":null}],[10,"run","","",9,null],[10,"send_notification","","",9,{"inputs":[{"name":"self"},{"name":"p"},{"name":"notification"}],"output":null}],[10,"set_action_group","","",9,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_application_id","","",9,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_default","","",9,{"inputs":[{"name":"self"}],"output":null}],[10,"set_flags","","",9,{"inputs":[{"name":"self"},{"name":"applicationflags"}],"output":null}],[10,"set_inactivity_timeout","","",9,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"set_resource_base_path","","",9,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"unbind_busy_property","","",9,{"inputs":[{"name":"self"},{"name":"p"},{"name":"str"}],"output":null}],[10,"unmark_busy","","",9,{"inputs":[{"name":"self"}],"output":null}],[10,"withdraw_notification","","",9,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_property_action_group","","",9,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_application_id","","",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_application_id","","",9,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_flags","","",9,{"inputs":[{"name":"self"}],"output":{"name":"applicationflags"}}],[10,"set_property_flags","","",9,{"inputs":[{"name":"self"},{"name":"applicationflags"}],"output":null}],[10,"get_property_inactivity_timeout","","",9,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_inactivity_timeout","","",9,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_is_registered","","",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_is_remote","","",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_resource_base_path","","",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_resource_base_path","","",9,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"connect_activate","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_shutdown","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_startup","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_action_group_notify","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_application_id_notify","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_flags_notify","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_inactivity_timeout_notify","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_is_busy_notify","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_is_registered_notify","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_is_remote_notify","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_resource_base_path_notify","","",9,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CancellableExt","","",null,null],[10,"cancel","","",10,{"inputs":[{"name":"self"}],"output":null}],[10,"disconnect","","",10,{"inputs":[{"name":"self"},{"name":"c_ulong"}],"output":null}],[10,"get_fd","","",10,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"is_cancelled","","",10,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"pop_current","","",10,{"inputs":[{"name":"self"}],"output":null}],[10,"push_current","","",10,{"inputs":[{"name":"self"}],"output":null}],[10,"release_fd","","",10,{"inputs":[{"name":"self"}],"output":null}],[10,"reset","","",10,{"inputs":[{"name":"self"}],"output":null}],[10,"set_error_if_cancelled","","",10,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"connect_cancelled","","",10,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"FileExt","","",null,null],[10,"delete","","",11,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"dup","","",11,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"equal","","",11,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"get_basename","","",11,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_child","","",11,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[10,"get_child_for_display_name","","",11,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"get_parent","","",11,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_parse_name","","",11,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_path","","",11,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_relative_path","","",11,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[10,"get_uri","","",11,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_uri_scheme","","",11,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"has_parent","","",11,{"inputs":[{"name":"self"},{"name":"q"}],"output":{"name":"bool"}}],[10,"has_prefix","","",11,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"has_uri_scheme","","",11,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"is_native","","",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"load_contents","","",11,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"make_directory","","",11,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"make_directory_with_parents","","",11,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"make_symbolic_link","","",11,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":{"name":"result"}}],[10,"query_default_handler","","",11,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"query_exists","","",11,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"query_file_type","","",11,{"inputs":[{"name":"self"},{"name":"filequeryinfoflags"},{"name":"p"}],"output":{"name":"filetype"}}],[10,"query_filesystem_info","","",11,{"inputs":[{"name":"self"},{"name":"str"},{"name":"p"}],"output":{"name":"result"}}],[10,"query_info","","",11,{"inputs":[{"name":"self"},{"name":"str"},{"name":"filequeryinfoflags"},{"name":"p"}],"output":{"name":"result"}}],[10,"replace_contents","","",11,null],[10,"resolve_relative_path","","",11,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[10,"set_attribute_byte_string","","",11,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"},{"name":"filequeryinfoflags"},{"name":"p"}],"output":{"name":"result"}}],[10,"set_attribute_int32","","",11,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"},{"name":"filequeryinfoflags"},{"name":"p"}],"output":{"name":"result"}}],[10,"set_attribute_int64","","",11,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i64"},{"name":"filequeryinfoflags"},{"name":"p"}],"output":{"name":"result"}}],[10,"set_attribute_string","","",11,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"},{"name":"filequeryinfoflags"},{"name":"p"}],"output":{"name":"result"}}],[10,"set_attribute_uint32","","",11,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u32"},{"name":"filequeryinfoflags"},{"name":"p"}],"output":{"name":"result"}}],[10,"set_attribute_uint64","","",11,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u64"},{"name":"filequeryinfoflags"},{"name":"p"}],"output":{"name":"result"}}],[10,"set_attributes_from_info","","",11,{"inputs":[{"name":"self"},{"name":"fileinfo"},{"name":"filequeryinfoflags"},{"name":"p"}],"output":{"name":"result"}}],[10,"set_display_name","","",11,{"inputs":[{"name":"self"},{"name":"str"},{"name":"p"}],"output":{"name":"result"}}],[10,"supports_thread_contexts","","",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"trash","","",11,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[8,"FileInfoExt","","",null,null],[10,"clear_status","","",12,{"inputs":[{"name":"self"}],"output":null}],[10,"copy_into","","",12,{"inputs":[{"name":"self"},{"name":"fileinfo"}],"output":null}],[10,"dup","","",12,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_attribute_as_string","","",12,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_attribute_boolean","","",12,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"get_attribute_byte_string","","",12,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_attribute_int32","","",12,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"i32"}}],[10,"get_attribute_int64","","",12,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"i64"}}],[10,"get_attribute_object","","",12,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_attribute_string","","",12,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_attribute_stringv","","",12,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"vec"}}],[10,"get_attribute_uint32","","",12,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"u32"}}],[10,"get_attribute_uint64","","",12,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"u64"}}],[10,"get_content_type","","",12,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_display_name","","",12,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_edit_name","","",12,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_etag","","",12,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_file_type","","",12,{"inputs":[{"name":"self"}],"output":{"name":"filetype"}}],[10,"get_icon","","",12,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_is_backup","","",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_is_hidden","","",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_is_symlink","","",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_name","","",12,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_size","","",12,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[10,"get_sort_order","","",12,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_symbolic_icon","","",12,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_symlink_target","","",12,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"has_attribute","","",12,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"has_namespace","","",12,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"list_attributes","","",12,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"vec"}}],[10,"remove_attribute","","",12,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_attribute_boolean","","",12,{"inputs":[{"name":"self"},{"name":"str"},{"name":"bool"}],"output":null}],[10,"set_attribute_byte_string","","",12,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":null}],[10,"set_attribute_int32","","",12,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"}],"output":null}],[10,"set_attribute_int64","","",12,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i64"}],"output":null}],[10,"set_attribute_object","","",12,{"inputs":[{"name":"self"},{"name":"str"},{"name":"p"}],"output":null}],[10,"set_attribute_string","","",12,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":null}],[10,"set_attribute_stringv","","",12,null],[10,"set_attribute_uint32","","",12,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u32"}],"output":null}],[10,"set_attribute_uint64","","",12,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u64"}],"output":null}],[10,"set_content_type","","",12,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_display_name","","",12,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_edit_name","","",12,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_file_type","","",12,{"inputs":[{"name":"self"},{"name":"filetype"}],"output":null}],[10,"set_icon","","",12,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_is_hidden","","",12,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_is_symlink","","",12,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_name","","",12,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_size","","",12,{"inputs":[{"name":"self"},{"name":"i64"}],"output":null}],[10,"set_sort_order","","",12,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_symbolic_icon","","",12,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_symlink_target","","",12,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"unset_attribute_mask","","",12,{"inputs":[{"name":"self"}],"output":null}],[8,"IconExt","","",null,null],[10,"equal","","",13,{"inputs":[{"name":"self"},{"name":"q"}],"output":{"name":"bool"}}],[10,"serialize","","",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"to_string","","",13,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"MenuExt","","",null,null],[10,"append","","",14,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":null}],[10,"append_item","","",14,{"inputs":[{"name":"self"},{"name":"menuitem"}],"output":null}],[10,"append_section","","",14,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":null}],[10,"append_submenu","","",14,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":null}],[10,"freeze","","",14,{"inputs":[{"name":"self"}],"output":null}],[10,"insert","","",14,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"p"},{"name":"q"}],"output":null}],[10,"insert_item","","",14,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"menuitem"}],"output":null}],[10,"insert_section","","",14,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"p"},{"name":"q"}],"output":null}],[10,"insert_submenu","","",14,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"p"},{"name":"q"}],"output":null}],[10,"prepend","","",14,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":null}],[10,"prepend_item","","",14,{"inputs":[{"name":"self"},{"name":"menuitem"}],"output":null}],[10,"prepend_section","","",14,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":null}],[10,"prepend_submenu","","",14,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":null}],[10,"remove","","",14,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"remove_all","","",14,{"inputs":[{"name":"self"}],"output":null}],[8,"MenuAttributeIterExt","","",null,null],[10,"get_name","","",15,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_next","","",15,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_value","","",15,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"next","","",15,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"MenuItemExt","","",null,null],[10,"get_attribute_value","","",16,{"inputs":[{"name":"self"},{"name":"str"},{"name":"p"}],"output":{"name":"option"}}],[10,"get_link","","",16,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"set_action_and_target_value","","",16,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":null}],[10,"set_attribute_value","","",16,{"inputs":[{"name":"self"},{"name":"str"},{"name":"p"}],"output":null}],[10,"set_detailed_action","","",16,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_icon","","",16,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_label","","",16,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_link","","",16,{"inputs":[{"name":"self"},{"name":"str"},{"name":"q"}],"output":null}],[10,"set_section","","",16,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_submenu","","",16,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[8,"MenuLinkIterExt","","",null,null],[10,"get_name","","",17,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_next","","",17,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_value","","",17,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"next","","",17,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"MenuModelExt","","",null,null],[10,"get_item_attribute_value","","",18,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"str"},{"name":"p"}],"output":{"name":"option"}}],[10,"get_item_link","","",18,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_n_items","","",18,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"is_mutable","","",18,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"items_changed","","",18,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"iterate_item_attributes","","",18,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[10,"iterate_item_links","","",18,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[10,"connect_items_changed","","",18,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"NotificationExt","","",null,null],[10,"add_button","","",19,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":null}],[10,"add_button_with_target_value","","",19,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"},{"name":"p"}],"output":null}],[10,"set_body","","",19,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_default_action","","",19,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_default_action_and_target_value","","",19,{"inputs":[{"name":"self"},{"name":"str"},{"name":"p"}],"output":null}],[10,"set_icon","","",19,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_priority","","",19,{"inputs":[{"name":"self"},{"name":"notificationpriority"}],"output":null}],[10,"set_title","","",19,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_urgent","","",19,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[8,"PermissionExt","","",null,null],[10,"acquire","","",20,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"get_allowed","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_can_acquire","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_can_release","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"impl_update","","",20,{"inputs":[{"name":"self"},{"name":"bool"},{"name":"bool"},{"name":"bool"}],"output":null}],[10,"release","","",20,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"get_property_allowed","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_can_acquire","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_can_release","","",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"connect_property_allowed_notify","","",20,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_can_acquire_notify","","",20,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_can_release_notify","","",20,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"SettingsExt","","",null,null],[10,"apply","","",21,{"inputs":[{"name":"self"}],"output":null}],[10,"bind","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"p"},{"name":"str"},{"name":"settingsbindflags"}],"output":null}],[10,"bind_writable","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"p"},{"name":"str"},{"name":"bool"}],"output":null}],[10,"create_action","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"delay","","",21,{"inputs":[{"name":"self"}],"output":null}],[10,"get_boolean","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"get_child","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_default_value","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_double","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"f64"}}],[10,"get_enum","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"i32"}}],[10,"get_flags","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"u32"}}],[10,"get_has_unapplied","","",21,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_int","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"i32"}}],[10,"get_int64","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"i64"}}],[10,"get_range","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_string","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_strv","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"vec"}}],[10,"get_uint","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"u32"}}],[10,"get_uint64","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"u64"}}],[10,"get_user_value","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_value","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"is_writable","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"list_children","","",21,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"list_keys","","",21,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"range_check","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"variant"}],"output":{"name":"bool"}}],[10,"reset","","",21,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"revert","","",21,{"inputs":[{"name":"self"}],"output":null}],[10,"set_boolean","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"bool"}],"output":{"name":"bool"}}],[10,"set_double","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"f64"}],"output":{"name":"bool"}}],[10,"set_enum","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"}],"output":{"name":"bool"}}],[10,"set_flags","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u32"}],"output":{"name":"bool"}}],[10,"set_int","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"}],"output":{"name":"bool"}}],[10,"set_int64","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i64"}],"output":{"name":"bool"}}],[10,"set_string","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":{"name":"bool"}}],[10,"set_strv","","",21,null],[10,"set_uint","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u32"}],"output":{"name":"bool"}}],[10,"set_uint64","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"u64"}],"output":{"name":"bool"}}],[10,"set_value","","",21,{"inputs":[{"name":"self"},{"name":"str"},{"name":"variant"}],"output":{"name":"bool"}}],[10,"get_property_delay_apply","","",21,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_has_unapplied","","",21,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_path","","",21,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_property_schema","","",21,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_property_schema_id","","",21,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_changed","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_writable_change_event","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_writable_changed","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_delay_apply_notify","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_has_unapplied_notify","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_path_notify","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_schema_notify","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_schema_id_notify","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_settings_schema_notify","","",21,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"SimpleActionExt","","",null,null],[10,"set_enabled","","",22,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_state","","",22,{"inputs":[{"name":"self"},{"name":"variant"}],"output":null}],[10,"set_state_hint","","",22,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"connect_activate","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_change_state","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_enabled_notify","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_name_notify","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_state_type_notify","","",22,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"SimpleActionGroupExt","","",null,null],[10,"insert","","",23,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"lookup","","",23,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"remove","","",23,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[8,"ThemedIconExt","","",null,null],[10,"append_name","","",24,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"get_names","","",24,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"prepend_name","","",24,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"get_property_use_default_fallbacks","","",24,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"connect_property_name_notify","","",24,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_names_notify","","",24,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_default_fallbacks_notify","","",24,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"TlsCertificateExt","","",null,null],[10,"get_issuer","","",25,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"is_same","","",25,{"inputs":[{"name":"self"},{"name":"tlscertificate"}],"output":{"name":"bool"}}],[10,"get_property_certificate_pem","","",25,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_property_certificate_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_certificate_pem_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_issuer_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_private_key_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_private_key_pem_notify","","",25,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[11,"new","","Creates an error with supplied error enum variant and message.",58,{"inputs":[{"name":"t"},{"name":"str"}],"output":{"name":"error"}}],[11,"is","","Checks if the error domain matches `T`.",58,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"kind","","Tries to convert to a specific error enum.",58,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"wrap","","",58,null],[11,"static_type","","",58,{"inputs":[],"output":{"name":"type"}}],[11,"static_type","","",59,{"inputs":[],"output":{"name":"type"}}],[11,"clone","gio::signal","",3,{"inputs":[{"name":"self"}],"output":{"name":"inhibit"}}],[11,"clone","gio","",59,{"inputs":[{"name":"self"}],"output":{"name":"object"}}],[11,"clone","","",58,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"description","","",58,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",59,null],[11,"default","gio::signal","",3,{"inputs":[],"output":{"name":"inhibit"}}],[11,"eq","gio","",59,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"eq","gio::signal","",3,{"inputs":[{"name":"self"},{"name":"inhibit"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"inhibit"}],"output":{"name":"bool"}}],[11,"fmt","gio","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","gio::signal","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","gio","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[4,"FileType"],[4,"NotificationPriority"],[4,"ResourceError"],[3,"Inhibit"],[8,"ActionExt"],[8,"ActionGroupExt"],[8,"ActionMapExt"],[8,"AppInfoExt"],[8,"AppLaunchContextExt"],[8,"ApplicationExt"],[8,"CancellableExt"],[8,"FileExt"],[8,"FileInfoExt"],[8,"IconExt"],[8,"MenuExt"],[8,"MenuAttributeIterExt"],[8,"MenuItemExt"],[8,"MenuLinkIterExt"],[8,"MenuModelExt"],[8,"NotificationExt"],[8,"PermissionExt"],[8,"SettingsExt"],[8,"SimpleActionExt"],[8,"SimpleActionGroupExt"],[8,"ThemedIconExt"],[8,"TlsCertificateExt"],[8,"ApplicationExtManual"],[3,"Action"],[3,"ActionGroup"],[3,"ActionMap"],[3,"AppInfo"],[3,"AppLaunchContext"],[3,"Application"],[3,"Cancellable"],[3,"File"],[3,"FileInfo"],[3,"Icon"],[3,"Menu"],[3,"MenuAttributeIter"],[3,"MenuItem"],[3,"MenuLinkIter"],[3,"MenuModel"],[3,"Notification"],[3,"Permission"],[3,"Settings"],[3,"SimpleAction"],[3,"SimpleActionGroup"],[3,"SimplePermission"],[3,"ThemedIcon"],[3,"TlsCertificate"],[3,"Resource"],[3,"AppInfoCreateFlags"],[3,"ApplicationFlags"],[3,"FileCreateFlags"],[3,"FileQueryInfoFlags"],[3,"ResourceLookupFlags"],[3,"SettingsBindFlags"],[3,"TlsCertificateFlags"],[3,"Error"],[3,"Object"]]};
searchIndex["pango"] = {"doc":"","items":[[3,"Error","pango","A generic error capable of representing various error domains (types).",null,null],[17,"SCALE","","",null,null],[3,"Context","","",null,null],[3,"EngineShape","","",null,null],[3,"Font","","",null,null],[3,"FontFace","","",null,null],[3,"FontFamily","","",null,null],[3,"FontMap","","",null,null],[3,"Fontset","","",null,null],[3,"Layout","","",null,null],[3,"Renderer","","",null,null],[3,"AttrList","","",null,null],[3,"Attribute","","",null,null],[3,"Color","","",null,null],[3,"Coverage","","",null,null],[3,"FontDescription","","",null,null],[3,"FontMetrics","","",null,null],[3,"GlyphItem","","",null,null],[3,"GlyphItemIter","","",null,null],[3,"GlyphString","","",null,null],[3,"LayoutIter","","",null,null],[3,"LayoutLine","","",null,null],[3,"Matrix","","",null,null],[3,"TabArray","","",null,null],[3,"FontMask","","",null,null],[4,"Alignment","","",null,null],[13,"Left","","",0,null],[13,"Center","","",0,null],[13,"Right","","",0,null],[4,"AttrType","","",null,null],[13,"Invalid","","",1,null],[13,"Language","","",1,null],[13,"Family","","",1,null],[13,"Style","","",1,null],[13,"Weight","","",1,null],[13,"Variant","","",1,null],[13,"Stretch","","",1,null],[13,"Size","","",1,null],[13,"FontDesc","","",1,null],[13,"Foreground","","",1,null],[13,"Background","","",1,null],[13,"Underline","","",1,null],[13,"Strikethrough","","",1,null],[13,"Rise","","",1,null],[13,"Shape","","",1,null],[13,"Scale","","",1,null],[13,"Fallback","","",1,null],[13,"LetterSpacing","","",1,null],[13,"UnderlineColor","","",1,null],[13,"StrikethroughColor","","",1,null],[13,"AbsoluteSize","","",1,null],[13,"Gravity","","",1,null],[13,"GravityHint","","",1,null],[13,"FontFeatures","","",1,null],[13,"ForegroundAlpha","","",1,null],[13,"BackgroundAlpha","","",1,null],[4,"BidiType","","",null,null],[13,"L","","",2,null],[13,"Lre","","",2,null],[13,"Lro","","",2,null],[13,"R","","",2,null],[13,"Al","","",2,null],[13,"Rle","","",2,null],[13,"Rlo","","",2,null],[13,"Pdf","","",2,null],[13,"En","","",2,null],[13,"Es","","",2,null],[13,"Et","","",2,null],[13,"An","","",2,null],[13,"Cs","","",2,null],[13,"Nsm","","",2,null],[13,"Bn","","",2,null],[13,"B","","",2,null],[13,"S","","",2,null],[13,"Ws","","",2,null],[13,"On","","",2,null],[4,"CoverageLevel","","",null,null],[13,"None","","",3,null],[13,"Fallback","","",3,null],[13,"Approximate","","",3,null],[13,"Exact","","",3,null],[4,"Direction","","",null,null],[13,"Ltr","","",4,null],[13,"Rtl","","",4,null],[13,"TtbLtr","","",4,null],[13,"TtbRtl","","",4,null],[13,"WeakLtr","","",4,null],[13,"WeakRtl","","",4,null],[13,"Neutral","","",4,null],[4,"EllipsizeMode","","",null,null],[13,"None","","",5,null],[13,"Start","","",5,null],[13,"Middle","","",5,null],[13,"End","","",5,null],[4,"Gravity","","",null,null],[13,"South","","",6,null],[13,"East","","",6,null],[13,"North","","",6,null],[13,"West","","",6,null],[13,"Auto","","",6,null],[4,"GravityHint","","",null,null],[13,"Natural","","",7,null],[13,"Strong","","",7,null],[13,"Line","","",7,null],[4,"RenderPart","","",null,null],[13,"Foreground","","",8,null],[13,"Background","","",8,null],[13,"Underline","","",8,null],[13,"Strikethrough","","",8,null],[4,"Script","","",null,null],[13,"InvalidCode","","",9,null],[13,"Common","","",9,null],[13,"Inherited","","",9,null],[13,"Arabic","","",9,null],[13,"Armenian","","",9,null],[13,"Bengali","","",9,null],[13,"Bopomofo","","",9,null],[13,"Cherokee","","",9,null],[13,"Coptic","","",9,null],[13,"Cyrillic","","",9,null],[13,"Deseret","","",9,null],[13,"Devanagari","","",9,null],[13,"Ethiopic","","",9,null],[13,"Georgian","","",9,null],[13,"Gothic","","",9,null],[13,"Greek","","",9,null],[13,"Gujarati","","",9,null],[13,"Gurmukhi","","",9,null],[13,"Han","","",9,null],[13,"Hangul","","",9,null],[13,"Hebrew","","",9,null],[13,"Hiragana","","",9,null],[13,"Kannada","","",9,null],[13,"Katakana","","",9,null],[13,"Khmer","","",9,null],[13,"Lao","","",9,null],[13,"Latin","","",9,null],[13,"Malayalam","","",9,null],[13,"Mongolian","","",9,null],[13,"Myanmar","","",9,null],[13,"Ogham","","",9,null],[13,"OldItalic","","",9,null],[13,"Oriya","","",9,null],[13,"Runic","","",9,null],[13,"Sinhala","","",9,null],[13,"Syriac","","",9,null],[13,"Tamil","","",9,null],[13,"Telugu","","",9,null],[13,"Thaana","","",9,null],[13,"Thai","","",9,null],[13,"Tibetan","","",9,null],[13,"CanadianAboriginal","","",9,null],[13,"Yi","","",9,null],[13,"Tagalog","","",9,null],[13,"Hanunoo","","",9,null],[13,"Buhid","","",9,null],[13,"Tagbanwa","","",9,null],[13,"Braille","","",9,null],[13,"Cypriot","","",9,null],[13,"Limbu","","",9,null],[13,"Osmanya","","",9,null],[13,"Shavian","","",9,null],[13,"LinearB","","",9,null],[13,"TaiLe","","",9,null],[13,"Ugaritic","","",9,null],[13,"NewTaiLue","","",9,null],[13,"Buginese","","",9,null],[13,"Glagolitic","","",9,null],[13,"Tifinagh","","",9,null],[13,"SylotiNagri","","",9,null],[13,"OldPersian","","",9,null],[13,"Kharoshthi","","",9,null],[13,"Unknown","","",9,null],[13,"Balinese","","",9,null],[13,"Cuneiform","","",9,null],[13,"Phoenician","","",9,null],[13,"PhagsPa","","",9,null],[13,"Nko","","",9,null],[13,"KayahLi","","",9,null],[13,"Lepcha","","",9,null],[13,"Rejang","","",9,null],[13,"Sundanese","","",9,null],[13,"Saurashtra","","",9,null],[13,"Cham","","",9,null],[13,"OlChiki","","",9,null],[13,"Vai","","",9,null],[13,"Carian","","",9,null],[13,"Lycian","","",9,null],[13,"Lydian","","",9,null],[13,"Batak","","",9,null],[13,"Brahmi","","",9,null],[13,"Mandaic","","",9,null],[13,"Chakma","","",9,null],[13,"MeroiticCursive","","",9,null],[13,"MeroiticHieroglyphs","","",9,null],[13,"Miao","","",9,null],[13,"Sharada","","",9,null],[13,"SoraSompeng","","",9,null],[13,"Takri","","",9,null],[13,"BassaVah","","",9,null],[13,"CaucasianAlbanian","","",9,null],[13,"Duployan","","",9,null],[13,"Elbasan","","",9,null],[13,"Grantha","","",9,null],[13,"Khojki","","",9,null],[13,"Khudawadi","","",9,null],[13,"LinearA","","",9,null],[13,"Mahajani","","",9,null],[13,"Manichaean","","",9,null],[13,"MendeKikakui","","",9,null],[13,"Modi","","",9,null],[13,"Mro","","",9,null],[13,"Nabataean","","",9,null],[13,"OldNorthArabian","","",9,null],[13,"OldPermic","","",9,null],[13,"PahawhHmong","","",9,null],[13,"Palmyrene","","",9,null],[13,"PauCinHau","","",9,null],[13,"PsalterPahlavi","","",9,null],[13,"Siddham","","",9,null],[13,"Tirhuta","","",9,null],[13,"WarangCiti","","",9,null],[13,"Ahom","","",9,null],[13,"AnatolianHieroglyphs","","",9,null],[13,"Hatran","","",9,null],[13,"Multani","","",9,null],[13,"OldHungarian","","",9,null],[13,"Signwriting","","",9,null],[4,"Stretch","","",null,null],[13,"UltraCondensed","","",10,null],[13,"ExtraCondensed","","",10,null],[13,"Condensed","","",10,null],[13,"SemiCondensed","","",10,null],[13,"Normal","","",10,null],[13,"SemiExpanded","","",10,null],[13,"Expanded","","",10,null],[13,"ExtraExpanded","","",10,null],[13,"UltraExpanded","","",10,null],[4,"Style","","",null,null],[13,"Normal","","",11,null],[13,"Oblique","","",11,null],[13,"Italic","","",11,null],[4,"TabAlign","","",null,null],[13,"Left","","",12,null],[4,"Underline","","",null,null],[13,"None","","",13,null],[13,"Single","","",13,null],[13,"Double","","",13,null],[13,"Low","","",13,null],[13,"Error","","",13,null],[4,"Variant","","",null,null],[13,"Normal","","",14,null],[13,"SmallCaps","","",14,null],[4,"Weight","","",null,null],[13,"Thin","","",15,null],[13,"Ultralight","","",15,null],[13,"Light","","",15,null],[13,"Semilight","","",15,null],[13,"Book","","",15,null],[13,"Normal","","",15,null],[13,"Medium","","",15,null],[13,"Semibold","","",15,null],[13,"Bold","","",15,null],[13,"Ultrabold","","",15,null],[13,"Heavy","","",15,null],[13,"Ultraheavy","","",15,null],[4,"WrapMode","","",null,null],[13,"Word","","",16,null],[13,"Char","","",16,null],[13,"WordChar","","",16,null],[5,"config_key_get","","",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"config_key_get_system","","",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"extents_to_pixels","","",null,{"inputs":[{"name":"p"},{"name":"q"}],"output":null}],[5,"find_base_dir","","",null,{"inputs":[{"name":"str"}],"output":{"name":"direction"}}],[5,"find_paragraph_boundary","","",null,null],[5,"get_lib_subdirectory","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"get_sysconf_subdirectory","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"is_zero_width","","",null,{"inputs":[{"name":"char"}],"output":{"name":"bool"}}],[5,"lookup_aliases","","",null,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[5,"parse_enum","","",null,{"inputs":[{"name":"type"},{"name":"p"},{"name":"bool"}],"output":{"name":"option"}}],[5,"parse_markup","","",null,{"inputs":[{"name":"str"},{"name":"char"}],"output":{"name":"result"}}],[5,"parse_stretch","","",null,{"inputs":[{"name":"str"},{"name":"bool"}],"output":{"name":"option"}}],[5,"parse_style","","",null,{"inputs":[{"name":"str"},{"name":"bool"}],"output":{"name":"option"}}],[5,"parse_variant","","",null,{"inputs":[{"name":"str"},{"name":"bool"}],"output":{"name":"option"}}],[5,"parse_weight","","",null,{"inputs":[{"name":"str"},{"name":"bool"}],"output":{"name":"option"}}],[5,"quantize_line_geometry","","",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":null}],[5,"split_file_list","","",null,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[5,"trim_string","","",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"unichar_direction","","",null,{"inputs":[{"name":"char"}],"output":{"name":"direction"}}],[5,"units_from_double","","",null,{"inputs":[{"name":"f64"}],"output":{"name":"i32"}}],[5,"units_to_double","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"f64"}}],[5,"version","","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"version_check","","",null,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[5,"version_string","","",null,{"inputs":[],"output":{"name":"option"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"context"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",17,null],[11,"static_type","","",17,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",17,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","",17,{"inputs":[],"output":{"name":"context"}}],[11,"default","","",17,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"engineshape"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",18,null],[11,"static_type","","",18,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",18,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"font"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",19,null],[11,"static_type","","",19,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",19,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"fontface"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",20,null],[11,"static_type","","",20,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",20,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"fontfamily"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",21,null],[11,"static_type","","",21,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",21,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"fontmap"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",22,null],[11,"static_type","","",22,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",22,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"fontset"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",23,null],[11,"static_type","","",23,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",23,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"layout"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",24,null],[11,"static_type","","",24,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",24,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","",24,{"inputs":[{"name":"context"}],"output":{"name":"layout"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"renderer"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",25,null],[11,"static_type","","",25,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",25,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"attrlist"}}],[11,"static_type","","",26,{"inputs":[],"output":{"name":"type"}}],[11,"new","","",26,{"inputs":[],"output":{"name":"attrlist"}}],[11,"copy","","",26,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"splice","","",26,{"inputs":[{"name":"self"},{"name":"attrlist"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"default","","",26,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"attribute"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"init","","",27,{"inputs":[{"name":"self"},{"name":"attrclass"}],"output":null}],[11,"eq","","",27,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"color"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"static_type","","",28,{"inputs":[],"output":{"name":"type"}}],[11,"parse","","",28,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"coverage"}}],[11,"copy","","",29,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get","","",29,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"coveragelevel"}}],[11,"max","","",29,{"inputs":[{"name":"self"},{"name":"coverage"}],"output":null}],[11,"set","","",29,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"coveragelevel"}],"output":null}],[11,"to_bytes","","",29,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"from_bytes","","",29,null],[11,"new","","",29,{"inputs":[],"output":{"name":"coverage"}}],[11,"default","","",29,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"fontdescription"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"static_type","","",30,{"inputs":[],"output":{"name":"type"}}],[11,"new","","",30,{"inputs":[],"output":{"name":"fontdescription"}}],[11,"better_match","","",30,{"inputs":[{"name":"self"},{"name":"p"},{"name":"fontdescription"}],"output":{"name":"bool"}}],[11,"get_family","","",30,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_gravity","","",30,{"inputs":[{"name":"self"}],"output":{"name":"gravity"}}],[11,"get_set_fields","","",30,{"inputs":[{"name":"self"}],"output":{"name":"fontmask"}}],[11,"get_size","","",30,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_size_is_absolute","","",30,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get_stretch","","",30,{"inputs":[{"name":"self"}],"output":{"name":"stretch"}}],[11,"get_style","","",30,{"inputs":[{"name":"self"}],"output":{"name":"style"}}],[11,"get_variant","","",30,{"inputs":[{"name":"self"}],"output":{"name":"variant"}}],[11,"get_weight","","",30,{"inputs":[{"name":"self"}],"output":{"name":"weight"}}],[11,"hash","","",30,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"merge","","",30,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"}],"output":null}],[11,"set_absolute_size","","",30,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[11,"set_family","","",30,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[11,"set_gravity","","",30,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[11,"set_size","","",30,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"set_stretch","","",30,{"inputs":[{"name":"self"},{"name":"stretch"}],"output":null}],[11,"set_style","","",30,{"inputs":[{"name":"self"},{"name":"style"}],"output":null}],[11,"set_variant","","",30,{"inputs":[{"name":"self"},{"name":"variant"}],"output":null}],[11,"set_weight","","",30,{"inputs":[{"name":"self"},{"name":"weight"}],"output":null}],[11,"to_filename","","",30,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"unset_fields","","",30,{"inputs":[{"name":"self"},{"name":"fontmask"}],"output":null}],[11,"from_string","","",30,{"inputs":[{"name":"str"}],"output":{"name":"fontdescription"}}],[11,"default","","",30,{"inputs":[],"output":{"name":"self"}}],[11,"eq","","",30,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"fontmetrics"}}],[11,"static_type","","",31,{"inputs":[],"output":{"name":"type"}}],[11,"new","","",31,{"inputs":[],"output":{"name":"fontmetrics"}}],[11,"get_approximate_char_width","","",31,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_approximate_digit_width","","",31,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_ascent","","",31,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_descent","","",31,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_strikethrough_position","","",31,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_strikethrough_thickness","","",31,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_underline_position","","",31,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_underline_thickness","","",31,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"default","","",31,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"glyphitem"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"static_type","","",32,{"inputs":[],"output":{"name":"type"}}],[11,"apply_attrs","","",32,{"inputs":[{"name":"self"},{"name":"str"},{"name":"attrlist"}],"output":{"name":"vec"}}],[11,"split","","",32,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"}],"output":{"name":"option"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"glyphitemiter"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"static_type","","",33,{"inputs":[],"output":{"name":"type"}}],[11,"init_end","","",33,{"inputs":[{"name":"self"},{"name":"glyphitem"},{"name":"str"}],"output":{"name":"bool"}}],[11,"init_start","","",33,{"inputs":[{"name":"self"},{"name":"glyphitem"},{"name":"str"}],"output":{"name":"bool"}}],[11,"next_cluster","","",33,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"prev_cluster","","",33,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"glyphstring"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"static_type","","",34,{"inputs":[],"output":{"name":"type"}}],[11,"new","","",34,{"inputs":[],"output":{"name":"glyphstring"}}],[11,"extents","","",34,null],[11,"extents_range","","",34,null],[11,"get_width","","",34,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"set_size","","",34,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"default","","",34,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"layoutiter"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"static_type","","",35,{"inputs":[],"output":{"name":"type"}}],[11,"at_last_line","","",35,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get_baseline","","",35,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_char_extents","","",35,{"inputs":[{"name":"self"}],"output":{"name":"rectangle"}}],[11,"get_cluster_extents","","",35,null],[11,"get_index","","",35,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_layout","","",35,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_layout_extents","","",35,null],[11,"get_line","","",35,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_line_extents","","",35,null],[11,"get_line_readonly","","",35,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_line_yrange","","",35,null],[11,"get_run","","",35,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_run_extents","","",35,null],[11,"get_run_readonly","","",35,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next_char","","",35,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"next_cluster","","",35,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"next_line","","",35,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"next_run","","",35,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"layoutline"}}],[11,"static_type","","",36,{"inputs":[],"output":{"name":"type"}}],[11,"get_extents","","",36,null],[11,"get_pixel_extents","","",36,null],[11,"get_x_ranges","","",36,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"vec"}}],[11,"index_to_x","","",36,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"bool"}],"output":{"name":"i32"}}],[11,"x_to_index","","",36,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"matrix"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"static_type","","",37,{"inputs":[],"output":{"name":"type"}}],[11,"concat","","",37,{"inputs":[{"name":"self"},{"name":"matrix"}],"output":null}],[11,"get_font_scale_factor","","",37,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[11,"get_font_scale_factors","","",37,null],[11,"rotate","","",37,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[11,"scale","","",37,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"transform_distance","","",37,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"transform_point","","",37,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"translate","","",37,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"tabarray"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"static_type","","",38,{"inputs":[],"output":{"name":"type"}}],[11,"new","","",38,{"inputs":[{"name":"i32"},{"name":"bool"}],"output":{"name":"tabarray"}}],[11,"get_positions_in_pixels","","",38,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get_size","","",38,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_tab","","",38,null],[11,"resize","","",38,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"set_tab","","",38,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"tabalign"},{"name":"i32"}],"output":null}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"alignment"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"alignment"}],"output":{"name":"bool"}}],[11,"hash","","",0,null],[11,"static_type","","",0,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",0,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",0,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",0,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"attrtype"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"attrtype"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"attrtype"}],"output":{"name":"bool"}}],[11,"hash","","",1,null],[11,"static_type","","",1,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",1,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",1,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",1,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"biditype"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"biditype"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"biditype"}],"output":{"name":"bool"}}],[11,"hash","","",2,null],[11,"static_type","","",2,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",2,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",2,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",2,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"coveragelevel"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"coveragelevel"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"coveragelevel"}],"output":{"name":"bool"}}],[11,"hash","","",3,null],[11,"static_type","","",3,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",3,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",3,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",3,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"direction"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"direction"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"direction"}],"output":{"name":"bool"}}],[11,"hash","","",4,null],[11,"static_type","","",4,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",4,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",4,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",4,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"ellipsizemode"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"ellipsizemode"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"ellipsizemode"}],"output":{"name":"bool"}}],[11,"hash","","",5,null],[11,"static_type","","",5,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",5,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",5,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",5,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"gravity"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"hash","","",6,null],[11,"static_type","","",6,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",6,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",6,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",6,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"gravityhint"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"gravityhint"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"self"},{"name":"gravityhint"}],"output":{"name":"bool"}}],[11,"hash","","",7,null],[11,"static_type","","",7,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",7,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",7,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",7,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"renderpart"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"renderpart"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"self"},{"name":"renderpart"}],"output":{"name":"bool"}}],[11,"hash","","",8,null],[11,"static_type","","",8,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",8,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",8,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",8,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"script"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"script"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"self"},{"name":"script"}],"output":{"name":"bool"}}],[11,"hash","","",9,null],[11,"static_type","","",9,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",9,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",9,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",9,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"stretch"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"stretch"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"self"},{"name":"stretch"}],"output":{"name":"bool"}}],[11,"hash","","",10,null],[11,"static_type","","",10,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",10,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",10,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",10,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"style"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"style"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"self"},{"name":"style"}],"output":{"name":"bool"}}],[11,"hash","","",11,null],[11,"static_type","","",11,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",11,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",11,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",11,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"tabalign"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"tabalign"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"self"},{"name":"tabalign"}],"output":{"name":"bool"}}],[11,"hash","","",12,null],[11,"static_type","","",12,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",12,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",12,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",12,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"underline"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"underline"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"self"},{"name":"underline"}],"output":{"name":"bool"}}],[11,"hash","","",13,null],[11,"static_type","","",13,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",13,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",13,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",13,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"variant"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"variant"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"self"},{"name":"variant"}],"output":{"name":"bool"}}],[11,"hash","","",14,null],[11,"static_type","","",14,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",14,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",14,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",14,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"weight"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"weight"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"self"},{"name":"weight"}],"output":{"name":"bool"}}],[11,"hash","","",15,null],[11,"static_type","","",15,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",15,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",15,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",15,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"wrapmode"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"wrapmode"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"self"},{"name":"wrapmode"}],"output":{"name":"bool"}}],[11,"hash","","",16,null],[11,"static_type","","",16,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",16,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",16,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",16,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"eq","","",39,{"inputs":[{"name":"self"},{"name":"fontmask"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"self"},{"name":"fontmask"}],"output":{"name":"bool"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"fontmask"}}],[11,"partial_cmp","","",39,{"inputs":[{"name":"self"},{"name":"fontmask"}],"output":{"name":"option"}}],[11,"lt","","",39,{"inputs":[{"name":"self"},{"name":"fontmask"}],"output":{"name":"bool"}}],[11,"le","","",39,{"inputs":[{"name":"self"},{"name":"fontmask"}],"output":{"name":"bool"}}],[11,"gt","","",39,{"inputs":[{"name":"self"},{"name":"fontmask"}],"output":{"name":"bool"}}],[11,"ge","","",39,{"inputs":[{"name":"self"},{"name":"fontmask"}],"output":{"name":"bool"}}],[11,"cmp","","",39,{"inputs":[{"name":"self"},{"name":"fontmask"}],"output":{"name":"ordering"}}],[11,"hash","","",39,null],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",39,{"inputs":[],"output":{"name":"fontmask"}}],[11,"all","","Returns the set containing all flags.",39,{"inputs":[],"output":{"name":"fontmask"}}],[11,"bits","","Returns the raw value of the flags currently stored.",39,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",39,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",39,{"inputs":[{"name":"u32"}],"output":{"name":"fontmask"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",39,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",39,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",39,{"inputs":[{"name":"self"},{"name":"fontmask"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",39,{"inputs":[{"name":"self"},{"name":"fontmask"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",39,{"inputs":[{"name":"self"},{"name":"fontmask"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",39,{"inputs":[{"name":"self"},{"name":"fontmask"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",39,{"inputs":[{"name":"self"},{"name":"fontmask"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",39,{"inputs":[{"name":"self"},{"name":"fontmask"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",39,{"inputs":[{"name":"self"},{"name":"fontmask"}],"output":{"name":"fontmask"}}],[11,"bitor_assign","","Adds the set of flags.",39,{"inputs":[{"name":"self"},{"name":"fontmask"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",39,{"inputs":[{"name":"self"},{"name":"fontmask"}],"output":{"name":"fontmask"}}],[11,"bitxor_assign","","Toggles the set of flags.",39,{"inputs":[{"name":"self"},{"name":"fontmask"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",39,{"inputs":[{"name":"self"},{"name":"fontmask"}],"output":{"name":"fontmask"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",39,{"inputs":[{"name":"self"},{"name":"fontmask"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",39,{"inputs":[{"name":"self"},{"name":"fontmask"}],"output":{"name":"fontmask"}}],[11,"sub_assign","","Disables all flags enabled in the set.",39,{"inputs":[{"name":"self"},{"name":"fontmask"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",39,{"inputs":[{"name":"self"}],"output":{"name":"fontmask"}}],[11,"extend","","",39,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",39,{"inputs":[{"name":"t"}],"output":{"name":"fontmask"}}],[11,"static_type","","",39,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",39,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",39,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",39,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[0,"functions","","",null,null],[5,"config_key_get","pango::functions","",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"config_key_get_system","","",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"extents_to_pixels","","",null,{"inputs":[{"name":"p"},{"name":"q"}],"output":null}],[5,"find_base_dir","","",null,{"inputs":[{"name":"str"}],"output":{"name":"direction"}}],[5,"find_paragraph_boundary","","",null,null],[5,"get_lib_subdirectory","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"get_sysconf_subdirectory","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"is_zero_width","","",null,{"inputs":[{"name":"char"}],"output":{"name":"bool"}}],[5,"lookup_aliases","","",null,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[5,"parse_enum","","",null,{"inputs":[{"name":"type"},{"name":"p"},{"name":"bool"}],"output":{"name":"option"}}],[5,"parse_markup","","",null,{"inputs":[{"name":"str"},{"name":"char"}],"output":{"name":"result"}}],[5,"parse_stretch","","",null,{"inputs":[{"name":"str"},{"name":"bool"}],"output":{"name":"option"}}],[5,"parse_style","","",null,{"inputs":[{"name":"str"},{"name":"bool"}],"output":{"name":"option"}}],[5,"parse_variant","","",null,{"inputs":[{"name":"str"},{"name":"bool"}],"output":{"name":"option"}}],[5,"parse_weight","","",null,{"inputs":[{"name":"str"},{"name":"bool"}],"output":{"name":"option"}}],[5,"quantize_line_geometry","","",null,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":null}],[5,"split_file_list","","",null,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[5,"trim_string","","",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"unichar_direction","","",null,{"inputs":[{"name":"char"}],"output":{"name":"direction"}}],[5,"units_from_double","","",null,{"inputs":[{"name":"f64"}],"output":{"name":"i32"}}],[5,"units_to_double","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"f64"}}],[5,"version","","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"version_check","","",null,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[5,"version_string","","",null,{"inputs":[],"output":{"name":"option"}}],[0,"prelude","pango","Traits and essential types inteded for blanket imports.",null,null],[8,"ContextExt","pango::prelude","",null,null],[10,"changed","","",40,{"inputs":[{"name":"self"}],"output":null}],[10,"get_base_dir","","",40,{"inputs":[{"name":"self"}],"output":{"name":"direction"}}],[10,"get_base_gravity","","",40,{"inputs":[{"name":"self"}],"output":{"name":"gravity"}}],[10,"get_font_description","","",40,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_font_map","","",40,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_gravity","","",40,{"inputs":[{"name":"self"}],"output":{"name":"gravity"}}],[10,"get_gravity_hint","","",40,{"inputs":[{"name":"self"}],"output":{"name":"gravityhint"}}],[10,"get_language","","",40,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_matrix","","",40,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_metrics","","",40,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":{"name":"option"}}],[10,"get_serial","","",40,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"list_families","","",40,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"load_font","","",40,{"inputs":[{"name":"self"},{"name":"fontdescription"}],"output":{"name":"option"}}],[10,"load_fontset","","",40,{"inputs":[{"name":"self"},{"name":"fontdescription"},{"name":"language"}],"output":{"name":"option"}}],[10,"set_base_dir","","",40,{"inputs":[{"name":"self"},{"name":"direction"}],"output":null}],[10,"set_base_gravity","","",40,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[10,"set_font_description","","",40,{"inputs":[{"name":"self"},{"name":"fontdescription"}],"output":null}],[10,"set_font_map","","",40,{"inputs":[{"name":"self"},{"name":"fontmap"}],"output":null}],[10,"set_gravity_hint","","",40,{"inputs":[{"name":"self"},{"name":"gravityhint"}],"output":null}],[10,"set_language","","",40,{"inputs":[{"name":"self"},{"name":"language"}],"output":null}],[10,"set_matrix","","",40,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[8,"FontExt","","",null,null],[10,"describe","","",41,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"describe_with_absolute_size","","",41,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"find_shaper","","",41,{"inputs":[{"name":"self"},{"name":"language"},{"name":"u32"}],"output":{"name":"option"}}],[10,"get_coverage","","",41,{"inputs":[{"name":"self"},{"name":"language"}],"output":{"name":"option"}}],[10,"get_font_map","","",41,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_glyph_extents","","",41,null],[10,"get_metrics","","",41,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[8,"FontFaceExt","","",null,null],[10,"describe","","",42,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_face_name","","",42,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"is_synthesized","","",42,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"list_sizes","","",42,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[8,"FontFamilyExt","","",null,null],[10,"get_name","","",43,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"is_monospace","","",43,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"list_faces","","",43,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[8,"FontMapExt","","",null,null],[10,"changed","","",44,{"inputs":[{"name":"self"}],"output":null}],[10,"create_context","","",44,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_serial","","",44,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_shape_engine_type","","",44,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"list_families","","",44,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"load_font","","",44,{"inputs":[{"name":"self"},{"name":"context"},{"name":"fontdescription"}],"output":{"name":"option"}}],[10,"load_fontset","","",44,{"inputs":[{"name":"self"},{"name":"context"},{"name":"fontdescription"},{"name":"language"}],"output":{"name":"option"}}],[8,"FontsetExt","","",null,null],[10,"get_font","","",45,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[10,"get_metrics","","",45,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"LayoutExt","","",null,null],[10,"context_changed","","",46,{"inputs":[{"name":"self"}],"output":null}],[10,"copy","","",46,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_alignment","","",46,{"inputs":[{"name":"self"}],"output":{"name":"alignment"}}],[10,"get_attributes","","",46,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_auto_dir","","",46,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_baseline","","",46,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_character_count","","",46,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_context","","",46,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_cursor_pos","","",46,null],[10,"get_ellipsize","","",46,{"inputs":[{"name":"self"}],"output":{"name":"ellipsizemode"}}],[10,"get_extents","","",46,null],[10,"get_font_description","","",46,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_height","","",46,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_indent","","",46,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_iter","","",46,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_justify","","",46,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_line","","",46,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_line_count","","",46,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_line_readonly","","",46,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_lines","","",46,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_lines_readonly","","",46,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_pixel_extents","","",46,null],[10,"get_pixel_size","","",46,null],[10,"get_serial","","",46,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_single_paragraph_mode","","",46,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_size","","",46,null],[10,"get_spacing","","",46,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_tabs","","",46,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_text","","",46,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_unknown_glyphs_count","","",46,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_width","","",46,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_wrap","","",46,{"inputs":[{"name":"self"}],"output":{"name":"wrapmode"}}],[10,"index_to_line_x","","",46,null],[10,"index_to_pos","","",46,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"rectangle"}}],[10,"is_ellipsized","","",46,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_wrapped","","",46,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"move_cursor_visually","","",46,null],[10,"set_alignment","","",46,{"inputs":[{"name":"self"},{"name":"alignment"}],"output":null}],[10,"set_attributes","","",46,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_auto_dir","","",46,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_ellipsize","","",46,{"inputs":[{"name":"self"},{"name":"ellipsizemode"}],"output":null}],[10,"set_font_description","","",46,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_height","","",46,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_indent","","",46,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_justify","","",46,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_markup","","",46,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_markup_with_accel","","",46,{"inputs":[{"name":"self"},{"name":"str"},{"name":"char"}],"output":{"name":"char"}}],[10,"set_single_paragraph_mode","","",46,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_spacing","","",46,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_tabs","","",46,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_text","","",46,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_width","","",46,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_wrap","","",46,{"inputs":[{"name":"self"},{"name":"wrapmode"}],"output":null}],[10,"xy_to_index","","",46,null],[8,"RendererExt","","",null,null],[10,"activate","","",47,{"inputs":[{"name":"self"}],"output":null}],[10,"deactivate","","",47,{"inputs":[{"name":"self"}],"output":null}],[10,"draw_error_underline","","",47,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"draw_glyph","","",47,{"inputs":[{"name":"self"},{"name":"font"},{"name":"glyph"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"draw_glyph_item","","",47,{"inputs":[{"name":"self"},{"name":"p"},{"name":"glyphitem"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"draw_glyphs","","",47,{"inputs":[{"name":"self"},{"name":"font"},{"name":"glyphstring"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"draw_layout","","",47,{"inputs":[{"name":"self"},{"name":"layout"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"draw_layout_line","","",47,{"inputs":[{"name":"self"},{"name":"layoutline"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"draw_rectangle","","",47,{"inputs":[{"name":"self"},{"name":"renderpart"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"draw_trapezoid","","",47,{"inputs":[{"name":"self"},{"name":"renderpart"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"get_alpha","","",47,{"inputs":[{"name":"self"},{"name":"renderpart"}],"output":{"name":"u16"}}],[10,"get_color","","",47,{"inputs":[{"name":"self"},{"name":"renderpart"}],"output":{"name":"option"}}],[10,"get_layout","","",47,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_layout_line","","",47,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_matrix","","",47,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"part_changed","","",47,{"inputs":[{"name":"self"},{"name":"renderpart"}],"output":null}],[10,"set_alpha","","",47,{"inputs":[{"name":"self"},{"name":"renderpart"},{"name":"u16"}],"output":null}],[10,"set_color","","",47,{"inputs":[{"name":"self"},{"name":"renderpart"},{"name":"p"}],"output":null}],[10,"set_matrix","","",47,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[0,"attr_class","pango","",null,null],[3,"AttrClass","pango::attr_class","",null,null],[11,"eq","","",48,{"inputs":[{"name":"self"},{"name":"attrclass"}],"output":{"name":"bool"}}],[0,"attr_list","pango","",null,null],[11,"change","","",26,{"inputs":[{"name":"self"},{"name":"attribute"}],"output":null}],[11,"insert","","",26,{"inputs":[{"name":"self"},{"name":"attribute"}],"output":null}],[11,"insert_before","","",26,{"inputs":[{"name":"self"},{"name":"attribute"}],"output":null}],[0,"attribute","","",null,null],[11,"new_background_alpha","","",27,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"new_background","","",27,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"option"}}],[11,"new_fallback","","",27,{"inputs":[{"name":"bool"}],"output":{"name":"option"}}],[11,"new_family","","",27,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[11,"new_foreground_alpha","","",27,{"inputs":[{"name":"u16"}],"output":{"name":"option"}}],[11,"new_foreground","","",27,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"option"}}],[11,"new_gravity_hint","","",27,{"inputs":[{"name":"gravityhint"}],"output":{"name":"option"}}],[11,"new_gravity","","",27,{"inputs":[{"name":"gravity"}],"output":{"name":"option"}}],[11,"new_letter_spacing","","",27,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"new_rise","","",27,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"new_scale","","",27,{"inputs":[{"name":"f64"}],"output":{"name":"option"}}],[11,"new_stretch","","",27,{"inputs":[{"name":"stretch"}],"output":{"name":"option"}}],[11,"new_strikethrough_color","","",27,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"option"}}],[11,"new_strikethrough","","",27,{"inputs":[{"name":"bool"}],"output":{"name":"option"}}],[11,"new_style","","",27,{"inputs":[{"name":"style"}],"output":{"name":"option"}}],[11,"new_underline_color","","",27,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"option"}}],[11,"new_underline","","",27,{"inputs":[{"name":"underline"}],"output":{"name":"option"}}],[11,"new_variant","","",27,{"inputs":[{"name":"variant"}],"output":{"name":"option"}}],[11,"new_weight","","",27,{"inputs":[{"name":"weight"}],"output":{"name":"option"}}],[11,"get_attr_class","","",27,{"inputs":[{"name":"self"}],"output":{"name":"attrclass"}}],[11,"get_start_index","","",27,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_end_index","","",27,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"set_start_index","","",27,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"set_end_index","","",27,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[0,"font_description","","",null,null],[11,"set_family_static","","",30,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[0,"item","","",null,null],[3,"Item","pango::item","",null,null],[11,"new","","",49,{"inputs":[],"output":{"name":"option"}}],[11,"copy","","",49,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"split","","",49,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[11,"drop","","",49,{"inputs":[{"name":"self"}],"output":null}],[0,"language","pango","",null,null],[3,"Language","pango::language","",null,null],[11,"default","","",50,{"inputs":[],"output":{"name":"language"}}],[11,"from_string","","",50,{"inputs":[{"name":"str"}],"output":{"name":"language"}}],[11,"to_string","","",50,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"matches","","",50,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"includes_script","","",50,{"inputs":[{"name":"self"},{"name":"script"}],"output":{"name":"bool"}}],[11,"get_scripts","","",50,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"get_sample_string","","",50,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[0,"matrix","pango","",null,null],[0,"rectangle","","",null,null],[3,"Rectangle","pango::rectangle","",null,null],[12,"x","","",51,null],[12,"y","","",51,null],[12,"width","","",51,null],[12,"height","","",51,null],[11,"clone","","",51,{"inputs":[{"name":"self"}],"output":{"name":"rectangle"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",51,{"inputs":[{"name":"self"},{"name":"rectangle"}],"output":{"name":"bool"}}],[11,"ne","","",51,{"inputs":[{"name":"self"},{"name":"rectangle"}],"output":{"name":"bool"}}],[11,"hash","","",51,null],[11,"new","","",51,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"rectangle"}}],[6,"Glyph","pango","",null,null],[6,"LayoutRun","","",null,null],[17,"FONT_MASK_FAMILY","","",null,null],[17,"FONT_MASK_STYLE","","",null,null],[17,"FONT_MASK_VARIANT","","",null,null],[17,"FONT_MASK_WEIGHT","","",null,null],[17,"FONT_MASK_STRETCH","","",null,null],[17,"FONT_MASK_SIZE","","",null,null],[17,"FONT_MASK_GRAVITY","","",null,null],[8,"ContextExt","","",null,null],[10,"changed","","",40,{"inputs":[{"name":"self"}],"output":null}],[10,"get_base_dir","","",40,{"inputs":[{"name":"self"}],"output":{"name":"direction"}}],[10,"get_base_gravity","","",40,{"inputs":[{"name":"self"}],"output":{"name":"gravity"}}],[10,"get_font_description","","",40,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_font_map","","",40,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_gravity","","",40,{"inputs":[{"name":"self"}],"output":{"name":"gravity"}}],[10,"get_gravity_hint","","",40,{"inputs":[{"name":"self"}],"output":{"name":"gravityhint"}}],[10,"get_language","","",40,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_matrix","","",40,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_metrics","","",40,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":{"name":"option"}}],[10,"get_serial","","",40,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"list_families","","",40,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"load_font","","",40,{"inputs":[{"name":"self"},{"name":"fontdescription"}],"output":{"name":"option"}}],[10,"load_fontset","","",40,{"inputs":[{"name":"self"},{"name":"fontdescription"},{"name":"language"}],"output":{"name":"option"}}],[10,"set_base_dir","","",40,{"inputs":[{"name":"self"},{"name":"direction"}],"output":null}],[10,"set_base_gravity","","",40,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[10,"set_font_description","","",40,{"inputs":[{"name":"self"},{"name":"fontdescription"}],"output":null}],[10,"set_font_map","","",40,{"inputs":[{"name":"self"},{"name":"fontmap"}],"output":null}],[10,"set_gravity_hint","","",40,{"inputs":[{"name":"self"},{"name":"gravityhint"}],"output":null}],[10,"set_language","","",40,{"inputs":[{"name":"self"},{"name":"language"}],"output":null}],[10,"set_matrix","","",40,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[8,"FontExt","","",null,null],[10,"describe","","",41,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"describe_with_absolute_size","","",41,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"find_shaper","","",41,{"inputs":[{"name":"self"},{"name":"language"},{"name":"u32"}],"output":{"name":"option"}}],[10,"get_coverage","","",41,{"inputs":[{"name":"self"},{"name":"language"}],"output":{"name":"option"}}],[10,"get_font_map","","",41,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_glyph_extents","","",41,null],[10,"get_metrics","","",41,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[8,"FontFaceExt","","",null,null],[10,"describe","","",42,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_face_name","","",42,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"is_synthesized","","",42,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"list_sizes","","",42,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[8,"FontFamilyExt","","",null,null],[10,"get_name","","",43,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"is_monospace","","",43,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"list_faces","","",43,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[8,"FontMapExt","","",null,null],[10,"changed","","",44,{"inputs":[{"name":"self"}],"output":null}],[10,"create_context","","",44,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_serial","","",44,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_shape_engine_type","","",44,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"list_families","","",44,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"load_font","","",44,{"inputs":[{"name":"self"},{"name":"context"},{"name":"fontdescription"}],"output":{"name":"option"}}],[10,"load_fontset","","",44,{"inputs":[{"name":"self"},{"name":"context"},{"name":"fontdescription"},{"name":"language"}],"output":{"name":"option"}}],[8,"FontsetExt","","",null,null],[10,"get_font","","",45,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[10,"get_metrics","","",45,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"LayoutExt","","",null,null],[10,"context_changed","","",46,{"inputs":[{"name":"self"}],"output":null}],[10,"copy","","",46,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_alignment","","",46,{"inputs":[{"name":"self"}],"output":{"name":"alignment"}}],[10,"get_attributes","","",46,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_auto_dir","","",46,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_baseline","","",46,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_character_count","","",46,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_context","","",46,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_cursor_pos","","",46,null],[10,"get_ellipsize","","",46,{"inputs":[{"name":"self"}],"output":{"name":"ellipsizemode"}}],[10,"get_extents","","",46,null],[10,"get_font_description","","",46,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_height","","",46,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_indent","","",46,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_iter","","",46,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_justify","","",46,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_line","","",46,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_line_count","","",46,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_line_readonly","","",46,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_lines","","",46,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_lines_readonly","","",46,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_pixel_extents","","",46,null],[10,"get_pixel_size","","",46,null],[10,"get_serial","","",46,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_single_paragraph_mode","","",46,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_size","","",46,null],[10,"get_spacing","","",46,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_tabs","","",46,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_text","","",46,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_unknown_glyphs_count","","",46,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_width","","",46,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_wrap","","",46,{"inputs":[{"name":"self"}],"output":{"name":"wrapmode"}}],[10,"index_to_line_x","","",46,null],[10,"index_to_pos","","",46,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"rectangle"}}],[10,"is_ellipsized","","",46,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_wrapped","","",46,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"move_cursor_visually","","",46,null],[10,"set_alignment","","",46,{"inputs":[{"name":"self"},{"name":"alignment"}],"output":null}],[10,"set_attributes","","",46,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_auto_dir","","",46,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_ellipsize","","",46,{"inputs":[{"name":"self"},{"name":"ellipsizemode"}],"output":null}],[10,"set_font_description","","",46,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_height","","",46,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_indent","","",46,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_justify","","",46,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_markup","","",46,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_markup_with_accel","","",46,{"inputs":[{"name":"self"},{"name":"str"},{"name":"char"}],"output":{"name":"char"}}],[10,"set_single_paragraph_mode","","",46,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_spacing","","",46,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_tabs","","",46,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_text","","",46,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_width","","",46,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_wrap","","",46,{"inputs":[{"name":"self"},{"name":"wrapmode"}],"output":null}],[10,"xy_to_index","","",46,null],[8,"RendererExt","","",null,null],[10,"activate","","",47,{"inputs":[{"name":"self"}],"output":null}],[10,"deactivate","","",47,{"inputs":[{"name":"self"}],"output":null}],[10,"draw_error_underline","","",47,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"draw_glyph","","",47,{"inputs":[{"name":"self"},{"name":"font"},{"name":"glyph"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"draw_glyph_item","","",47,{"inputs":[{"name":"self"},{"name":"p"},{"name":"glyphitem"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"draw_glyphs","","",47,{"inputs":[{"name":"self"},{"name":"font"},{"name":"glyphstring"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"draw_layout","","",47,{"inputs":[{"name":"self"},{"name":"layout"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"draw_layout_line","","",47,{"inputs":[{"name":"self"},{"name":"layoutline"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"draw_rectangle","","",47,{"inputs":[{"name":"self"},{"name":"renderpart"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"draw_trapezoid","","",47,{"inputs":[{"name":"self"},{"name":"renderpart"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"get_alpha","","",47,{"inputs":[{"name":"self"},{"name":"renderpart"}],"output":{"name":"u16"}}],[10,"get_color","","",47,{"inputs":[{"name":"self"},{"name":"renderpart"}],"output":{"name":"option"}}],[10,"get_layout","","",47,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_layout_line","","",47,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_matrix","","",47,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"part_changed","","",47,{"inputs":[{"name":"self"},{"name":"renderpart"}],"output":null}],[10,"set_alpha","","",47,{"inputs":[{"name":"self"},{"name":"renderpart"},{"name":"u16"}],"output":null}],[10,"set_color","","",47,{"inputs":[{"name":"self"},{"name":"renderpart"},{"name":"p"}],"output":null}],[10,"set_matrix","","",47,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[11,"new","","Creates an error with supplied error enum variant and message.",52,{"inputs":[{"name":"t"},{"name":"str"}],"output":{"name":"error"}}],[11,"is","","Checks if the error domain matches `T`.",52,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"kind","","Tries to convert to a specific error enum.",52,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"wrap","","",52,null],[11,"static_type","","",52,{"inputs":[],"output":{"name":"type"}}],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"description","","",52,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[4,"Alignment"],[4,"AttrType"],[4,"BidiType"],[4,"CoverageLevel"],[4,"Direction"],[4,"EllipsizeMode"],[4,"Gravity"],[4,"GravityHint"],[4,"RenderPart"],[4,"Script"],[4,"Stretch"],[4,"Style"],[4,"TabAlign"],[4,"Underline"],[4,"Variant"],[4,"Weight"],[4,"WrapMode"],[3,"Context"],[3,"EngineShape"],[3,"Font"],[3,"FontFace"],[3,"FontFamily"],[3,"FontMap"],[3,"Fontset"],[3,"Layout"],[3,"Renderer"],[3,"AttrList"],[3,"Attribute"],[3,"Color"],[3,"Coverage"],[3,"FontDescription"],[3,"FontMetrics"],[3,"GlyphItem"],[3,"GlyphItemIter"],[3,"GlyphString"],[3,"LayoutIter"],[3,"LayoutLine"],[3,"Matrix"],[3,"TabArray"],[3,"FontMask"],[8,"ContextExt"],[8,"FontExt"],[8,"FontFaceExt"],[8,"FontFamilyExt"],[8,"FontMapExt"],[8,"FontsetExt"],[8,"LayoutExt"],[8,"RendererExt"],[3,"AttrClass"],[3,"Item"],[3,"Language"],[3,"Rectangle"],[3,"Error"]]};
searchIndex["gdk_pixbuf"] = {"doc":"","items":[[6,"Colorspace","gdk_pixbuf","",null,null],[4,"InterpType","","",null,null],[13,"Nearest","","",0,null],[13,"Tiles","","",0,null],[13,"Bilinear","","",0,null],[13,"Hyper","","",0,null],[4,"PixbufAlphaMode","","",null,null],[13,"Bilevel","","",1,null],[13,"Full","","",1,null],[4,"PixbufError","","",null,null],[13,"CorruptImage","","",2,null],[13,"InsufficientMemory","","",2,null],[13,"BadOption","","",2,null],[13,"UnknownType","","",2,null],[13,"UnsupportedOperation","","",2,null],[13,"Failed","","",2,null],[13,"IncompleteAnimation","","",2,null],[3,"PixbufAnimation","","An opaque struct representing an animation.",null,null],[3,"PixbufAnimationIter","","An opaque struct representing an iterator which points to a certain position in an animation.",null,null],[3,"PixbufSimpleAnim","","An opaque struct representing a simple animation.",null,null],[3,"PixbufFormat","","",null,null],[3,"PixbufLoader","","The `PixbufLoader` struct contains only private fields.",null,null],[3,"Pixbuf","","This is the main structure in the gdk-pixbuf library. It is used to represent images. It contains information about the image's pixel data, its color space, bits per sample, width and height, and the rowstride (the number of bytes between the start of one row and the start of the next).",null,null],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"pixbufanimationiter"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",3,null],[11,"static_type","","",3,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"advance","","Possibly advances an animation to a new frame. Chooses the frame based on the start time passed to `PixbufAnimationExt::get_iter`.",3,{"inputs":[{"name":"self"},{"name":"timeval"}],"output":{"name":"bool"}}],[11,"get_pixbuf","","Gets the current pixbuf which should be displayed; the pixbuf might not be the same size as the animation itself (`PixbufAnimationExt::get_width`, `PixbufAnimationExt::get_height`). This pixbuf should be displayed for `PixbufAnimationIter::get_delay_time` milliseconds. The caller of this function does not own a reference to the returned pixbuf; the returned pixbuf will become invalid when the iterator advances to the next frame, which may happen anytime you call `PixbufAnimationIter::advance`. Copy the pixbuf to keep it (don't just add a reference), as it may get recycled as you advance the iterator.",3,{"inputs":[{"name":"self"}],"output":{"name":"pixbuf"}}],[11,"get_delay_time","","Gets the number of milliseconds the current pixbuf should be displayed, or -1 if the current pixbuf should be displayed forever. `g_timeout_add` conveniently takes a timeout in milliseconds, so you can use a timeout to schedule the next update.",3,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"on_currently_loading_frame","","Used to determine how to respond to the area_updated signal on `PixbufLoader` when loading an animation. area_updated is emitted for an area of the frame currently streaming in to the loader. So if you're on the currently loading frame, you need to redraw the screen for the updated area.",3,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"pixbufanimation"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",4,null],[11,"static_type","","",4,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new_from_file","","Creates a new animation by loading it from a file. The file format is detected automatically. If the file's format does not support multi-frame images, then an animation with a single frame will be created. Possible errors are in the `GDK_PIXBUF_ERROR` and `G_FILE_ERROR` domains. ## `filename` Name of file to load, in the GLib file name encoding",4,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new_from_resource","","Creates a new pixbuf animation by loading an image from an resource.",4,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"pixbufsimpleanim"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",5,null],[11,"static_type","","",5,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new, empty animation. ## `width` the width of the animation ## `height` the height of the animation ## `rate` the speed of the animation, in frames per second",5,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"f32"}],"output":{"name":"pixbufsimpleanim"}}],[11,"add_frame","","Adds a new frame to `self`. The `pixbuf` must have the dimensions specified when the animation was constructed. ## `pixbuf` the pixbuf to add",5,{"inputs":[{"name":"self"},{"name":"pixbuf"}],"output":null}],[11,"set_loop","","Sets whether `self` should loop indefinitely when it reaches the end. ## `loop_` whether to loop the animation",5,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_loop","","Gets whether `self` should loop indefinitely when it reaches the end.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get_name","","Returns the name of the format.",6,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_description","","Returns a description of the format.",6,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_mime_types","","Returns the mime types supported by the format.",6,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"get_extensions","","Returns the filename extensions typically used for files in the given format.",6,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"is_writable","","Returns whether pixbufs can be saved in the given format.",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_scalable","","Returns whether this image format is scalable. If a file is in a scalable format, it is preferable to load it at the desired size, rather than loading it at the default size and scaling the resulting pixbuf to the desired size.",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_disabled","","Returns whether this image format is disabled. See `PixbufFormat::set_disabled`.",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_disabled","","Disables or enables an image format. If a format is disabled, gdk-pixbuf won't use the image loader for this format to load images. Applications can use this to avoid using image loaders with an inappropriate license, see `PixbufFormat::get_license`. ## `disabled` `true` to disable the format `self`",6,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"get_license","","Returns information about the license of the image loader for the format. The returned string should be a shorthand for a wellknown license, e.g. \"LGPL\", \"GPL\", \"QPL\", \"GPL/QPL\", or \"other\" to indicate some other license. This string should be freed with `g_free` when it's no longer needed.",6,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_glib_none","","",6,{"inputs":[{"name":"self"}],"output":{"name":"stash"}}],[11,"from_glib_none","","",6,null],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"pixbufloader"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",7,null],[11,"static_type","","",7,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new pixbuf loader object.",7,{"inputs":[],"output":{"name":"pixbufloader"}}],[11,"new_with_type","","Creates a new pixbuf loader object that always attempts to parse image data as if it were an image of type `image_type`, instead of identifying the type automatically. Useful if you want an error if the image isn't the expected type, for loading image formats that can't be reliably identified by looking at the data, or if the user manually forces a specific type.",7,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new_with_mime_type","","Creates a new pixbuf loader object that always attempts to parse image data as if it were an image of mime type `mime_type`, instead of identifying the type automatically. Useful if you want an error if the image isn't the expected mime type, for loading image formats that can't be reliably identified by looking at the data, or if the user manually forces a specific mime type.",7,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"get_format","","Obtains the available information about the format of the currently loading image file.",7,{"inputs":[{"name":"self"}],"output":{"name":"pixbufformat"}}],[11,"loader_write","","",7,null],[11,"set_size","","Causes the image to be scaled while it is loaded. The desired image size can be determined relative to the original size of the image by calling `PixbufLoader::set_size` from a signal handler for the ::size-prepared signal.",7,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"get_pixbuf","","Queries the `Pixbuf` that a pixbuf loader is currently creating. In general it only makes sense to call this function after the \"area-prepared\" signal has been emitted by the loader; this means that enough data has been read to know the size of the image that will be allocated. If the loader has not received enough data via `PixbufLoader::write`, then this function returns `None`. The returned pixbuf will be the same in all future calls to the loader, so simply calling `gobject::Object::ref` should be sufficient to continue using it. Additionally, if the loader is an animation, it will return the \"static image\" of the animation (see `PixbufAnimationExt::get_static_image`).",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_animation","","Queries the `PixbufAnimation` that a pixbuf loader is currently creating. In general it only makes sense to call this function after the \"area-prepared\" signal has been emitted by the loader. If the loader doesn't have enough bytes yet (hasn't emitted the \"area-prepared\" signal) this function will return `None`.",7,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"close","","Informs a pixbuf loader that no further writes with `PixbufLoader::write` will occur, so that it can free its internal loading structures. Also, tries to parse any data that hasn't yet been parsed; if the remaining data is partial or corrupt, an error will be returned. If `false` is returned, `error` will be set to an error from the `GDK_PIXBUF_ERROR` or `G_FILE_ERROR` domains. If you're just cancelling a load rather than expecting it to be finished, passing `None` for `error` to ignore it is reasonable.",7,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"pixbuf"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",8,null],[11,"static_type","","",8,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Pixbuf` structure and allocates a buffer for it. The buffer has an optimal rowstride. Note that the buffer is not cleared; you will have to fill it completely yourself. ## `colorspace` Color space for image ## `has_alpha` Whether the image should have transparency information ## `bits_per_sample` Number of bits per color sample ## `width` Width of image in pixels, must be > 0 ## `height` Height of image in pixels, must be > 0",8,{"inputs":[{"name":"colorspace"},{"name":"bool"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[11,"new_from_vec","","",8,{"inputs":[{"name":"vec"},{"name":"colorspace"},{"name":"bool"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"pixbuf"}}],[11,"new_from_file","","Creates a new pixbuf by loading an image from a file. The file format is detected automatically. If `None` is returned, then `error` will be set. Possible errors are in the `GDK_PIXBUF_ERROR` and `G_FILE_ERROR` domains. ## `filename` Name of file to load, in the GLib file name encoding",8,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new_from_file_at_size","","Creates a new pixbuf by loading an image from a file. The file format is detected automatically. If `None` is returned, then `error` will be set. Possible errors are in the `GDK_PIXBUF_ERROR` and `G_FILE_ERROR` domains.",8,{"inputs":[{"name":"str"},{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[11,"new_from_file_at_scale","","Creates a new pixbuf by loading an image from a file. The file format is detected automatically. If `None` is returned, then `error` will be set. Possible errors are in the `GDK_PIXBUF_ERROR` and `G_FILE_ERROR` domains. The image will be scaled to fit in the requested size, optionally preserving the image's aspect ratio.",8,{"inputs":[{"name":"str"},{"name":"i32"},{"name":"i32"},{"name":"bool"}],"output":{"name":"result"}}],[11,"new_from_xpm_data","","Creates a new pixbuf by parsing XPM data in memory. This data is commonly the result of including an XPM file into a program's C source. ## `data` Pointer to inline XPM data.",8,null],[11,"get_file_info","","Parses an image file far enough to determine its format and size. ## `filename` The name of the file to identify. ## `width` Return location for the width of the  image, or `None` ## `height` Return location for the height of the  image, or `None`",8,{"inputs":[{"name":"str"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[11,"new_from_resource","","Creates a new pixbuf by loading an image from an resource.",8,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new_from_resource_at_scale","","Creates a new pixbuf by loading an image from an resource.",8,{"inputs":[{"name":"str"},{"name":"i32"},{"name":"i32"},{"name":"bool"}],"output":{"name":"result"}}],[11,"new_subpixbuf","","Creates a new pixbuf which represents a sub-region of `self`. The new pixbuf shares its pixels with the original pixbuf, so writing to one affects both. The new pixbuf holds a reference to `self`, so `self` will not be finalized until the new pixbuf is finalized.",8,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"pixbuf"}}],[11,"get_colorspace","","Queries the color space of a pixbuf.",8,{"inputs":[{"name":"self"}],"output":{"name":"colorspace"}}],[11,"get_n_channels","","Queries the number of channels of a pixbuf.",8,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_has_alpha","","Queries whether a pixbuf has an alpha channel (opacity information).",8,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get_bits_per_sample","","Queries the number of bits per color sample in a pixbuf.",8,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_pixels","","Queries a pointer to the pixel data of a pixbuf.",8,null],[11,"get_width","","Queries the width of a pixbuf.",8,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_height","","Queries the height of a pixbuf.",8,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_rowstride","","Queries the rowstride of a pixbuf, which is the number of bytes between the start of a row and the start of the next row.",8,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_byte_length","","Returns the length of the pixel data, in bytes.",8,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"get_option","","Looks up `key` in the list of options that may have been attached to the `self` when it was loaded, or that may have been attached by another function using `gdk_pixbuf_set_option`.",8,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"scale_simple","","Create a new `Pixbuf` containing a copy of `self` scaled to `dest_width` x `dest_height`. Leaves `self` unaffected. `interp_type` should be `InterpType::Nearest` if you want maximum speed (but when scaling down `InterpType::Nearest` is usually unusably ugly). The default `interp_type` should be `InterpType::Bilinear` which offers reasonable quality and speed.",8,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"interptype"}],"output":{"name":"result"}}],[11,"scale","","Creates a transformation of the source image `self` by scaling by `scale_x` and `scale_y` then translating by `offset_x` and `offset_y`, then renders the rectangle (`dest_x`, `dest_y`, `dest_width`, `dest_height`) of the resulting image onto the destination image replacing the previous contents.",8,{"inputs":[{"name":"self"},{"name":"pixbuf"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"interptype"}],"output":null}],[11,"composite","","Creates a transformation of the source image `self` by scaling by `scale_x` and `scale_y` then translating by `offset_x` and `offset_y`. This gives an image in the coordinates of the destination pixbuf. The rectangle (`dest_x`, `dest_y`, `dest_width`, `dest_height`) is then composited onto the corresponding rectangle of the original destination image.",8,{"inputs":[{"name":"self"},{"name":"pixbuf"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"interptype"},{"name":"i32"}],"output":null}],[11,"flip","","Flips a pixbuf horizontally or vertically and returns the result in a new pixbuf. ## `horizontal` `true` to flip horizontally, `false` to flip vertically",8,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"result"}}],[11,"put_pixel","","",8,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":null}],[11,"copy","","Creates a new `Pixbuf` with a copy of the information in the specified `self`.",8,{"inputs":[{"name":"self"}],"output":{"name":"pixbuf"}}],[11,"copy_options","","",8,{"inputs":[{"name":"self"},{"name":"pixbuf"}],"output":{"name":"result"}}],[0,"prelude","","Traits inteded for blanket imports.",null,null],[8,"PixbufAnimationExt","gdk_pixbuf::prelude","Trait containing all `PixbufAnimation` methods.",null,null],[10,"get_width","","Queries the width of the bounding box of a pixbuf animation.",9,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_height","","Queries the height of the bounding box of a pixbuf animation.",9,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_iter","","Get an iterator for displaying an animation. The iterator provides the frames that should be displayed at a given time. It should be freed after use with `gobject::Object::unref`.",9,{"inputs":[{"name":"self"},{"name":"timeval"}],"output":{"name":"pixbufanimationiter"}}],[10,"is_static_image","","If you load a file with `PixbufAnimation::new_from_file` and it turns out to be a plain, unanimated image, then this function will return `true`. Use `PixbufAnimationExt::get_static_image` to retrieve the image.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_static_image","","If an animation is really just a plain image (has only one frame), this function returns that image. If the animation is an animation, this function returns a reasonable thing to display as a static unanimated image, which might be the first frame, or something more sophisticated. If an animation hasn't loaded any frames yet, this function will return `None`.",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"PixbufAnimationExt","gdk_pixbuf","Trait containing all `PixbufAnimation` methods.",null,null],[10,"get_width","","Queries the width of the bounding box of a pixbuf animation.",9,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_height","","Queries the height of the bounding box of a pixbuf animation.",9,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_iter","","Get an iterator for displaying an animation. The iterator provides the frames that should be displayed at a given time. It should be freed after use with `gobject::Object::unref`.",9,{"inputs":[{"name":"self"},{"name":"timeval"}],"output":{"name":"pixbufanimationiter"}}],[10,"is_static_image","","If you load a file with `PixbufAnimation::new_from_file` and it turns out to be a plain, unanimated image, then this function will return `true`. Use `PixbufAnimationExt::get_static_image` to retrieve the image.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_static_image","","If an animation is really just a plain image (has only one frame), this function returns that image. If the animation is an animation, this function returns a reasonable thing to display as a static unanimated image, which might be the first frame, or something more sophisticated. If an animation hasn't loaded any frames yet, this function will return `None`.",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"gdkpixbuferror"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"gdkpixbufalphamode"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"gdkinterptype"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"gdkpixbufalphamode"}],"output":{"name":"bool"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"gdkpixbuferror"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"gdkinterptype"}],"output":{"name":"bool"}}]],"paths":[[4,"InterpType"],[4,"PixbufAlphaMode"],[4,"PixbufError"],[3,"PixbufAnimationIter"],[3,"PixbufAnimation"],[3,"PixbufSimpleAnim"],[3,"PixbufFormat"],[3,"PixbufLoader"],[3,"Pixbuf"],[8,"PixbufAnimationExt"]]};
searchIndex["gdk"] = {"doc":"","items":[[3,"Color","gdk","",null,null],[12,"pixel","","",0,null],[12,"red","","",0,null],[12,"green","","",0,null],[12,"blue","","",0,null],[3,"Error","","A generic error capable of representing various error domains (types).",null,null],[3,"AppLaunchContext","","`AppLaunchContext` is an implementation of `gio::AppLaunchContext` that handles launching an application in a graphical context. It provides startup notification and allows to launch applications on a specific screen or workspace.",null,null],[3,"Cursor","","A `Cursor` represents a cursor. Its contents are private.",null,null],[3,"Device","","The `Device` object represents a single input device, such as a keyboard, a mouse, a touchpad, etc.",null,null],[3,"DeviceManager","","In addition to a single pointer and keyboard for user interface input, GDK contains support for a variety of input devices, including graphics tablets, touchscreens and multiple pointers/keyboards interacting simultaneously with the user interface. Such input devices often have additional features, such as sub-pixel positioning information and additional device-dependent information.",null,null],[3,"DeviceTool","","",null,null],[3,"Display","","`Display` objects purpose are two fold:",null,null],[3,"DisplayManager","","The purpose of the `DisplayManager` singleton object is to offer notification when displays appear or disappear or the default display changes.",null,null],[3,"DragContext","","",null,null],[3,"DrawingContext","","",null,null],[3,"FrameClock","","A `FrameClock` tells the application when to update and repaint a window. This may be synced to the vertical refresh rate of the monitor, for example. Even when the frame clock uses a simple timer rather than a hardware-based vertical sync, the frame clock helps because it ensures everything paints at the same time (reducing the total number of frames). The frame clock can also automatically stop painting when it knows the frames will not be visible, or scale back animation framerates.",null,null],[3,"GLContext","","`GLContext` is an object representing the platform-specific OpenGL drawing context.",null,null],[3,"Monitor","","",null,null],[3,"Screen","","`Screen` objects are the GDK representation of the screen on which windows can be displayed and on which the pointer moves. X originally identified screens with physical screens, but nowadays it is more common to have a single `Screen` which combines several physical monitors (see `Screen::get_n_monitors`).",null,null],[3,"Seat","","",null,null],[3,"Visual","","A `Visual` contains information about a particular visual.",null,null],[3,"Window","","",null,null],[3,"FrameTimings","","A `FrameTimings` object holds timing information for a single frame of the application’s displays. To retrieve `FrameTimings` objects, use `FrameClock::get_timings` or `FrameClock::get_current_timings`. The information in `FrameTimings` is useful for precise synchronization of video with the event or audio streams, and for measuring quality metrics for the application’s display, such as latency and jitter.",null,null],[3,"AnchorHints","","",null,null],[3,"AxisFlags","","",null,null],[3,"DragAction","","",null,null],[3,"EventMask","","",null,null],[3,"FrameClockPhase","","",null,null],[3,"ModifierType","","",null,null],[3,"SeatCapabilities","","",null,null],[3,"WMDecoration","","",null,null],[3,"WMFunction","","",null,null],[3,"WindowHints","","",null,null],[3,"WindowState","","",null,null],[3,"Atom","","",null,null],[3,"Event","","A generic GDK event.",null,null],[3,"EventButton","","Used for button press and button release events. The `type` field will be one of `EventType::ButtonPress`, `EventType::2buttonPress`, `EventType::3buttonPress` or `EventType::ButtonRelease`,",null,null],[3,"EventConfigure","","Generated when a window size or position has changed.",null,null],[3,"EventCrossing","","Generated when the pointer enters or leaves a window.",null,null],[3,"EventDND","","Generated during DND operations.",null,null],[3,"EventExpose","","Generated when all or part of a window becomes visible and needs to be redrawn.",null,null],[3,"EventFocus","","Describes a change of keyboard focus.",null,null],[3,"EventGrabBroken","","Generated when a pointer or keyboard grab is broken. On X11, this happens when the grab window becomes unviewable (i.e. it or one of its ancestors is unmapped), or if the same application grabs the pointer or keyboard again. Note that implicit grabs (which are initiated by button presses) can also cause `EventGrabBroken` events.",null,null],[3,"EventKey","","Describes a key press or key release event.",null,null],[3,"EventMotion","","Generated when the pointer moves.",null,null],[3,"EventOwnerChange","","Generated when the owner of a selection changes. On X11, this information is only available if the X server supports the XFIXES extension.",null,null],[3,"EventProperty","","Describes a property change on a window.",null,null],[3,"EventProximity","","Proximity events are generated when using GDK’s wrapper for the XInput extension. The XInput extension is an add-on for standard X that allows you to use nonstandard devices such as graphics tablets. A proximity event indicates that the stylus has moved in or out of contact with the tablet, or perhaps that the user’s finger has moved in or out of contact with a touch screen.",null,null],[3,"EventScroll","","Generated from button presses for the buttons 4 to 7. Wheel mice are usually configured to generate button press events for buttons 4 and 5 when the wheel is turned.",null,null],[3,"EventSelection","","Generated when a selection is requested or ownership of a selection is taken over by another client application.",null,null],[3,"EventSetting","","Generated when a setting is modified.",null,null],[3,"EventTouch","","Used for touch events. `type` field will be one of `EventType::TouchBegin`, `EventType::TouchUpdate`, `EventType::TouchEnd` or `EventType::TouchCancel`.",null,null],[3,"EventVisibility","","`[Deprecated since 3.12]` Generated when the window visibility status has changed.",null,null],[3,"EventWindowState","","Generated when the state of a toplevel window changes.",null,null],[3,"Geometry","","",null,null],[12,"min_width","","",1,null],[12,"min_height","","",1,null],[12,"max_width","","",1,null],[12,"max_height","","",1,null],[12,"base_width","","",1,null],[12,"base_height","","",1,null],[12,"width_inc","","",1,null],[12,"height_inc","","",1,null],[12,"min_aspect","","",1,null],[12,"max_aspect","","",1,null],[12,"win_gravity","","",1,null],[3,"Rectangle","","",null,null],[12,"x","","",2,null],[12,"y","","",2,null],[12,"width","","",2,null],[12,"height","","",2,null],[3,"RGBA","","",null,null],[12,"red","","",3,null],[12,"green","","",3,null],[12,"blue","","",3,null],[12,"alpha","","",3,null],[3,"RgbaParseError","","",null,null],[3,"WindowAttr","","",null,null],[12,"title","","",4,null],[12,"event_mask","","",4,null],[12,"x","","",4,null],[12,"y","","",4,null],[12,"width","","",4,null],[12,"height","","",4,null],[12,"wclass","","",4,null],[12,"visual","","",4,null],[12,"window_type","","",4,null],[12,"cursor","","",4,null],[12,"override_redirect","","",4,null],[12,"type_hint","","",4,null],[4,"AxisUse","","An enumeration describing the way in which a device axis (valuator) maps onto the predefined valuator types that GTK+ understands.",null,null],[13,"Ignore","","",5,null],[13,"X","","",5,null],[13,"Y","","",5,null],[13,"Pressure","","",5,null],[13,"Xtilt","","",5,null],[13,"Ytilt","","",5,null],[13,"Wheel","","",5,null],[13,"Distance","","",5,null],[13,"Rotation","","",5,null],[13,"Slider","","",5,null],[13,"Last","","",5,null],[4,"ByteOrder","","A set of values describing the possible byte-orders for storing pixel values in memory.",null,null],[13,"LsbFirst","","",6,null],[13,"MsbFirst","","",6,null],[4,"CrossingMode","","Specifies the crossing mode for `EventCrossing`.",null,null],[13,"Normal","","",7,null],[13,"Grab","","",7,null],[13,"Ungrab","","",7,null],[13,"GtkGrab","","",7,null],[13,"GtkUngrab","","",7,null],[13,"StateChanged","","",7,null],[13,"TouchBegin","","",7,null],[13,"TouchEnd","","",7,null],[13,"DeviceSwitch","","",7,null],[4,"CursorType","","The standard cursors available.",null,null],[13,"XCursor","","",8,null],[13,"Arrow","","",8,null],[13,"BasedArrowDown","","",8,null],[13,"BasedArrowUp","","",8,null],[13,"Boat","","",8,null],[13,"Bogosity","","",8,null],[13,"BottomLeftCorner","","",8,null],[13,"BottomRightCorner","","",8,null],[13,"BottomSide","","",8,null],[13,"BottomTee","","",8,null],[13,"BoxSpiral","","",8,null],[13,"CenterPtr","","",8,null],[13,"Circle","","",8,null],[13,"Clock","","",8,null],[13,"CoffeeMug","","",8,null],[13,"Cross","","",8,null],[13,"CrossReverse","","",8,null],[13,"Crosshair","","",8,null],[13,"DiamondCross","","",8,null],[13,"Dot","","",8,null],[13,"Dotbox","","",8,null],[13,"DoubleArrow","","",8,null],[13,"DraftLarge","","",8,null],[13,"DraftSmall","","",8,null],[13,"DrapedBox","","",8,null],[13,"Exchange","","",8,null],[13,"Fleur","","",8,null],[13,"Gobbler","","",8,null],[13,"Gumby","","",8,null],[13,"Hand1","","",8,null],[13,"Hand2","","",8,null],[13,"Heart","","",8,null],[13,"Icon","","",8,null],[13,"IronCross","","",8,null],[13,"LeftPtr","","",8,null],[13,"LeftSide","","",8,null],[13,"LeftTee","","",8,null],[13,"Leftbutton","","",8,null],[13,"LlAngle","","",8,null],[13,"LrAngle","","",8,null],[13,"Man","","",8,null],[13,"Middlebutton","","",8,null],[13,"Mouse","","",8,null],[13,"Pencil","","",8,null],[13,"Pirate","","",8,null],[13,"Plus","","",8,null],[13,"QuestionArrow","","",8,null],[13,"RightPtr","","",8,null],[13,"RightSide","","",8,null],[13,"RightTee","","",8,null],[13,"Rightbutton","","",8,null],[13,"RtlLogo","","",8,null],[13,"Sailboat","","",8,null],[13,"SbDownArrow","","",8,null],[13,"SbHDoubleArrow","","",8,null],[13,"SbLeftArrow","","",8,null],[13,"SbRightArrow","","",8,null],[13,"SbUpArrow","","",8,null],[13,"SbVDoubleArrow","","",8,null],[13,"Shuttle","","",8,null],[13,"Sizing","","",8,null],[13,"Spider","","",8,null],[13,"Spraycan","","",8,null],[13,"Star","","",8,null],[13,"Target","","",8,null],[13,"Tcross","","",8,null],[13,"TopLeftArrow","","",8,null],[13,"TopLeftCorner","","",8,null],[13,"TopRightCorner","","",8,null],[13,"TopSide","","",8,null],[13,"TopTee","","",8,null],[13,"Trek","","",8,null],[13,"UlAngle","","",8,null],[13,"Umbrella","","",8,null],[13,"UrAngle","","",8,null],[13,"Watch","","",8,null],[13,"Xterm","","",8,null],[13,"LastCursor","","",8,null],[13,"BlankCursor","","",8,null],[13,"CursorIsPixmap","","",8,null],[4,"DeviceToolType","","",null,null],[13,"Unknown","","",9,null],[13,"Pen","","",9,null],[13,"Eraser","","",9,null],[13,"Brush","","",9,null],[13,"Pencil","","",9,null],[13,"Airbrush","","",9,null],[13,"Mouse","","",9,null],[13,"Lens","","",9,null],[4,"DeviceType","","Indicates the device type. See [above][`DeviceManager`.description] for more information about the meaning of these device types.",null,null],[13,"Master","","",10,null],[13,"Slave","","",10,null],[13,"Floating","","",10,null],[4,"DragCancelReason","","",null,null],[13,"NoTarget","","",11,null],[13,"UserCancelled","","",11,null],[13,"Error","","",11,null],[4,"DragProtocol","","Used in `DragContext` to indicate the protocol according to which DND is done.",null,null],[13,"None","","",12,null],[13,"Motif","","",12,null],[13,"Xdnd","","",12,null],[13,"Rootwin","","",12,null],[13,"Win32Dropfiles","","",12,null],[13,"Ole2","","",12,null],[13,"Local","","",12,null],[13,"Wayland","","",12,null],[4,"EventType","","Specifies the type of the event.",null,null],[13,"Nothing","","",13,null],[13,"Delete","","",13,null],[13,"Destroy","","",13,null],[13,"Expose","","",13,null],[13,"MotionNotify","","",13,null],[13,"ButtonPress","","",13,null],[13,"DoubleButtonPress","","",13,null],[13,"TripleButtonPress","","",13,null],[13,"ButtonRelease","","",13,null],[13,"KeyPress","","",13,null],[13,"KeyRelease","","",13,null],[13,"EnterNotify","","",13,null],[13,"LeaveNotify","","",13,null],[13,"FocusChange","","",13,null],[13,"Configure","","",13,null],[13,"Map","","",13,null],[13,"Unmap","","",13,null],[13,"PropertyNotify","","",13,null],[13,"SelectionClear","","",13,null],[13,"SelectionRequest","","",13,null],[13,"SelectionNotify","","",13,null],[13,"ProximityIn","","",13,null],[13,"ProximityOut","","",13,null],[13,"DragEnter","","",13,null],[13,"DragLeave","","",13,null],[13,"DragMotion","","",13,null],[13,"DragStatus","","",13,null],[13,"DropStart","","",13,null],[13,"DropFinished","","",13,null],[13,"ClientEvent","","",13,null],[13,"VisibilityNotify","","",13,null],[13,"Scroll","","",13,null],[13,"WindowState","","",13,null],[13,"Setting","","",13,null],[13,"OwnerChange","","",13,null],[13,"GrabBroken","","",13,null],[13,"Damage","","",13,null],[13,"TouchBegin","","",13,null],[13,"TouchUpdate","","",13,null],[13,"TouchEnd","","",13,null],[13,"TouchCancel","","",13,null],[13,"TouchpadSwipe","","",13,null],[13,"TouchpadPinch","","",13,null],[13,"PadButtonPress","","",13,null],[13,"PadButtonRelease","","",13,null],[13,"PadRing","","",13,null],[13,"PadStrip","","",13,null],[13,"PadGroupMode","","",13,null],[4,"FullscreenMode","","Indicates which monitor (in a multi-head setup) a window should span over when in fullscreen mode.",null,null],[13,"CurrentMonitor","","",14,null],[13,"AllMonitors","","",14,null],[4,"GLError","","Error enumeration for `GLContext`.",null,null],[13,"NotAvailable","","",15,null],[13,"UnsupportedFormat","","",15,null],[13,"UnsupportedProfile","","",15,null],[4,"GrabOwnership","","Defines how device grabs interact with other devices.",null,null],[13,"None","","",16,null],[13,"Window","","",16,null],[13,"Application","","",16,null],[4,"GrabStatus","","Returned by `Device::grab`, `gdk_pointer_grab` and `gdk_keyboard_grab` to indicate success or the reason for the failure of the grab attempt.",null,null],[13,"Success","","",17,null],[13,"AlreadyGrabbed","","",17,null],[13,"InvalidTime","","",17,null],[13,"NotViewable","","",17,null],[13,"Frozen","","",17,null],[13,"Failed","","",17,null],[4,"Gravity","","Defines the reference point of a window and the meaning of coordinates passed to `gtk_window_move`. See `gtk_window_move` and the \"implementation notes\" section of the Extended Window Manager Hints specification for more details.",null,null],[13,"NorthWest","","",18,null],[13,"North","","",18,null],[13,"NorthEast","","",18,null],[13,"West","","",18,null],[13,"Center","","",18,null],[13,"East","","",18,null],[13,"SouthWest","","",18,null],[13,"South","","",18,null],[13,"SouthEast","","",18,null],[13,"Static","","",18,null],[4,"InputMode","","An enumeration that describes the mode of an input device.",null,null],[13,"Disabled","","",19,null],[13,"Screen","","",19,null],[13,"Window","","",19,null],[4,"InputSource","","An enumeration describing the type of an input device in general terms.",null,null],[13,"Mouse","","",20,null],[13,"Pen","","",20,null],[13,"Eraser","","",20,null],[13,"Cursor","","",20,null],[13,"Keyboard","","",20,null],[13,"Touchscreen","","",20,null],[13,"Touchpad","","",20,null],[13,"Trackpoint","","",20,null],[13,"TabletPad","","",20,null],[4,"ModifierIntent","","This enum is used with `Keymap::get_modifier_mask` in order to determine what modifiers the currently used windowing system backend uses for particular purposes. For example, on X11/Windows, the Control key is used for invoking menu shortcuts (accelerators), whereas on Apple computers it’s the Command key (which correspond to `ModifierType::ControlMask` and `ModifierType::Mod2Mask`, respectively).",null,null],[13,"PrimaryAccelerator","","",21,null],[13,"ContextMenu","","",21,null],[13,"ExtendSelection","","",21,null],[13,"ModifySelection","","",21,null],[13,"NoTextInput","","",21,null],[13,"ShiftGroup","","",21,null],[13,"DefaultModMask","","",21,null],[4,"NotifyType","","Specifies the kind of crossing for `EventCrossing`.",null,null],[13,"Ancestor","","",22,null],[13,"Virtual","","",22,null],[13,"Inferior","","",22,null],[13,"Nonlinear","","",22,null],[13,"NonlinearVirtual","","",22,null],[13,"Unknown","","",22,null],[4,"OwnerChange","","Specifies why a selection ownership was changed.",null,null],[13,"NewOwner","","",23,null],[13,"Destroy","","",23,null],[13,"Close","","",23,null],[4,"PropertyState","","Specifies the type of a property change for a `EventProperty`.",null,null],[13,"NewValue","","",24,null],[13,"Delete","","",24,null],[4,"ScrollDirection","","Specifies the direction for `EventScroll`.",null,null],[13,"Up","","",25,null],[13,"Down","","",25,null],[13,"Left","","",25,null],[13,"Right","","",25,null],[13,"Smooth","","",25,null],[4,"SettingAction","","Specifies the kind of modification applied to a setting in a `EventSetting`.",null,null],[13,"New","","",26,null],[13,"Changed","","",26,null],[13,"Deleted","","",26,null],[4,"SubpixelLayout","","",null,null],[13,"Unknown","","",27,null],[13,"None","","",27,null],[13,"HorizontalRgb","","",27,null],[13,"HorizontalBgr","","",27,null],[13,"VerticalRgb","","",27,null],[13,"VerticalBgr","","",27,null],[4,"VisibilityState","","Specifies the visiblity status of a window for a `EventVisibility`.",null,null],[13,"Unobscured","","",28,null],[13,"Partial","","",28,null],[13,"FullyObscured","","",28,null],[4,"VisualType","","A set of values that describe the manner in which the pixel values for a visual are converted into RGB values for display.",null,null],[13,"StaticGray","","",29,null],[13,"Grayscale","","",29,null],[13,"StaticColor","","",29,null],[13,"PseudoColor","","",29,null],[13,"TrueColor","","",29,null],[13,"DirectColor","","",29,null],[4,"WindowEdge","","Determines a window edge or corner.",null,null],[13,"NorthWest","","",30,null],[13,"North","","",30,null],[13,"NorthEast","","",30,null],[13,"West","","",30,null],[13,"East","","",30,null],[13,"SouthWest","","",30,null],[13,"South","","",30,null],[13,"SouthEast","","",30,null],[4,"WindowType","","Describes the kind of window.",null,null],[13,"Root","","",31,null],[13,"Toplevel","","",31,null],[13,"Child","","",31,null],[13,"Temp","","",31,null],[13,"Foreign","","",31,null],[13,"Offscreen","","",31,null],[13,"Subsurface","","",31,null],[4,"WindowTypeHint","","These are hints for the window manager that indicate what type of function the window has. The window manager can use this when determining decoration and behaviour of the window. The hint must be set before mapping the window.",null,null],[13,"Normal","","",32,null],[13,"Dialog","","",32,null],[13,"Menu","","",32,null],[13,"Toolbar","","",32,null],[13,"Splashscreen","","",32,null],[13,"Utility","","",32,null],[13,"Dock","","",32,null],[13,"Desktop","","",32,null],[13,"DropdownMenu","","",32,null],[13,"PopupMenu","","",32,null],[13,"Tooltip","","",32,null],[13,"Notification","","",32,null],[13,"Combo","","",32,null],[13,"Dnd","","",32,null],[4,"WindowWindowClass","","`WindowWindowClass::InputOutput` windows are the standard kind of window you might expect. Such windows receive events and are also displayed on screen. `WindowWindowClass::InputOnly` windows are invisible; they are usually placed above other windows in order to trap or filter the events. You can’t draw on `WindowWindowClass::InputOnly` windows.",null,null],[13,"InputOutput","","",33,null],[13,"InputOnly","","",33,null],[5,"beep","","",null,{"inputs":[],"output":null}],[5,"error_trap_pop","","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"error_trap_pop_ignored","","",null,{"inputs":[],"output":null}],[5,"error_trap_push","","",null,{"inputs":[],"output":null}],[5,"events_get_angle","","",null,{"inputs":[{"name":"event"},{"name":"event"}],"output":{"name":"option"}}],[5,"events_get_center","","",null,{"inputs":[{"name":"event"},{"name":"event"}],"output":{"name":"option"}}],[5,"events_get_distance","","",null,{"inputs":[{"name":"event"},{"name":"event"}],"output":{"name":"option"}}],[5,"events_pending","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"flush","","",null,{"inputs":[],"output":null}],[5,"get_display","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"get_display_arg_name","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"get_program_class","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"get_show_events","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"keyboard_grab","","",null,{"inputs":[{"name":"window"},{"name":"bool"},{"name":"u32"}],"output":{"name":"grabstatus"}}],[5,"keyboard_ungrab","","",null,{"inputs":[{"name":"u32"}],"output":null}],[5,"keyval_convert_case","","",null,null],[5,"keyval_from_name","","",null,{"inputs":[{"name":"str"}],"output":{"name":"u32"}}],[5,"keyval_is_lower","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"bool"}}],[5,"keyval_is_upper","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"bool"}}],[5,"keyval_to_lower","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"u32"}}],[5,"keyval_to_upper","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"u32"}}],[5,"list_visuals","","",null,{"inputs":[],"output":{"name":"vec"}}],[5,"notify_startup_complete","","",null,{"inputs":[],"output":null}],[5,"notify_startup_complete_with_id","","",null,{"inputs":[{"name":"str"}],"output":null}],[5,"pango_context_get","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"pango_context_get_for_display","","",null,{"inputs":[{"name":"display"}],"output":{"name":"option"}}],[5,"pango_context_get_for_screen","","",null,{"inputs":[{"name":"screen"}],"output":{"name":"option"}}],[5,"pixbuf_get_from_surface","","",null,{"inputs":[{"name":"surface"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[5,"pointer_grab","","",null,{"inputs":[{"name":"window"},{"name":"bool"},{"name":"eventmask"},{"name":"p"},{"name":"q"},{"name":"u32"}],"output":{"name":"grabstatus"}}],[5,"pointer_is_grabbed","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"pointer_ungrab","","",null,{"inputs":[{"name":"u32"}],"output":null}],[5,"pre_parse_libgtk_only","","",null,{"inputs":[],"output":null}],[5,"property_delete","","",null,{"inputs":[{"name":"window"},{"name":"atom"}],"output":null}],[5,"property_get","","",null,{"inputs":[{"name":"window"},{"name":"atom"},{"name":"atom"},{"name":"c_ulong"},{"name":"c_ulong"},{"name":"i32"}],"output":{"name":"option"}}],[5,"query_depths","","",null,{"inputs":[],"output":{"name":"vec"}}],[5,"selection_convert","","",null,{"inputs":[{"name":"window"},{"name":"atom"},{"name":"atom"},{"name":"u32"}],"output":null}],[5,"selection_owner_get","","",null,{"inputs":[{"name":"atom"}],"output":{"name":"option"}}],[5,"selection_owner_get_for_display","","",null,{"inputs":[{"name":"display"},{"name":"atom"}],"output":{"name":"option"}}],[5,"selection_owner_set","","",null,{"inputs":[{"name":"p"},{"name":"atom"},{"name":"u32"},{"name":"bool"}],"output":{"name":"bool"}}],[5,"selection_owner_set_for_display","","",null,{"inputs":[{"name":"display"},{"name":"p"},{"name":"atom"},{"name":"u32"},{"name":"bool"}],"output":{"name":"bool"}}],[5,"selection_send_notify","","",null,{"inputs":[{"name":"window"},{"name":"atom"},{"name":"atom"},{"name":"atom"},{"name":"u32"}],"output":null}],[5,"selection_send_notify_for_display","","",null,{"inputs":[{"name":"display"},{"name":"window"},{"name":"atom"},{"name":"atom"},{"name":"atom"},{"name":"u32"}],"output":null}],[5,"set_allowed_backends","","",null,{"inputs":[{"name":"str"}],"output":null}],[5,"set_double_click_time","","",null,{"inputs":[{"name":"u32"}],"output":null}],[5,"set_program_class","","",null,{"inputs":[{"name":"str"}],"output":null}],[5,"set_show_events","","",null,{"inputs":[{"name":"bool"}],"output":null}],[5,"synthesize_window_state","","",null,{"inputs":[{"name":"window"},{"name":"windowstate"},{"name":"windowstate"}],"output":null}],[5,"test_render_sync","","",null,{"inputs":[{"name":"window"}],"output":null}],[5,"test_simulate_button","","",null,{"inputs":[{"name":"window"},{"name":"i32"},{"name":"i32"},{"name":"u32"},{"name":"modifiertype"},{"name":"eventtype"}],"output":{"name":"bool"}}],[5,"test_simulate_key","","",null,{"inputs":[{"name":"window"},{"name":"i32"},{"name":"i32"},{"name":"u32"},{"name":"modifiertype"},{"name":"eventtype"}],"output":{"name":"bool"}}],[5,"text_property_to_utf8_list_for_display","","",null,null],[5,"threads_enter","","",null,{"inputs":[],"output":null}],[5,"threads_init","","",null,{"inputs":[],"output":null}],[5,"threads_leave","","",null,{"inputs":[],"output":null}],[5,"unicode_to_keyval","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"u32"}}],[5,"utf8_to_string_target","","",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[5,"init","","",null,{"inputs":[],"output":null}],[5,"set_initialized","","Informs this crate that GDK has been initialized and the current thread is the main one.",null,{"inputs":[],"output":null}],[5,"keyval_name","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[5,"keyval_to_unicode","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"static_type","","",34,{"inputs":[],"output":{"name":"type"}}],[11,"get_event_type","","Returns the event type.",34,{"inputs":[{"name":"self"}],"output":{"name":"eventtype"}}],[11,"get_window","","Returns the associated `Window` if applicable.",34,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_send_event","","Returns whether the event was sent explicitly.",34,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is","","Returns `true` if the event type matches `T`.",34,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"downcast","","Tries to downcast to a specific event type.",34,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"to_glib_none","","",34,{"inputs":[{"name":"self"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",34,{"inputs":[{"name":"self"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",34,null],[11,"from_glib_full","","",34,null],[11,"as_ref","","",34,{"inputs":[{"name":"self"}],"output":{"name":"gdkeventany"}}],[11,"as_mut","","",34,{"inputs":[{"name":"self"}],"output":{"name":"gdkeventany"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"applaunchcontext"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",35,null],[11,"static_type","","",35,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",35,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AppLaunchContext`.",35,{"inputs":[],"output":{"name":"applaunchcontext"}}],[11,"default","","",35,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"cursor"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",36,null],[11,"static_type","","",36,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",36,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new cursor from the set of builtin cursors for the default display. See `Cursor::new_for_display`.",36,{"inputs":[{"name":"cursortype"}],"output":{"name":"cursor"}}],[11,"new_for_display","","Creates a new cursor from the set of builtin cursors. Some useful ones are: -  `CursorType::RightPtr` (right-facing arrow) -  `CursorType::Crosshair` (crosshair) -  `CursorType::Xterm` (I-beam) -  `CursorType::Watch` (busy) -  `CursorType::Fleur` (for moving objects) -  `CursorType::Hand1` (a right-pointing hand) -  `CursorType::Hand2` (a left-pointing hand) -  `CursorType::LeftSide` (resize left side) -  `CursorType::RightSide` (resize right side) -  `CursorType::TopLeftCorner` (resize northwest corner) -  `CursorType::TopRightCorner` (resize northeast corner) -  `CursorType::BottomLeftCorner` (resize southwest corner) -  `CursorType::BottomRightCorner` (resize southeast corner) -  `CursorType::TopSide` (resize top side) -  `CursorType::BottomSide` (resize bottom side) -  `CursorType::SbHDoubleArrow` (move vertical splitter) -  `CursorType::SbVDoubleArrow` (move horizontal splitter) - `CursorType::BlankCursor` (Blank cursor). Since 2.16 ## `display` the `Display` for which the cursor will be created ## `cursor_type` cursor to create",36,{"inputs":[{"name":"display"},{"name":"cursortype"}],"output":{"name":"cursor"}}],[11,"new_from_name","","Creates a new cursor by looking up `name` in the current cursor theme. ## `display` the `Display` for which the cursor will be created ## `name` the name of the cursor",36,{"inputs":[{"name":"display"},{"name":"str"}],"output":{"name":"cursor"}}],[11,"new_from_pixbuf","","Creates a new cursor from a pixbuf.",36,{"inputs":[{"name":"display"},{"name":"pixbuf"},{"name":"i32"},{"name":"i32"}],"output":{"name":"cursor"}}],[11,"new_from_surface","","Creates a new cursor from a cairo image surface.",36,{"inputs":[{"name":"display"},{"name":"surface"},{"name":"f64"},{"name":"f64"}],"output":{"name":"cursor"}}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"device"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",37,null],[11,"static_type","","",37,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",37,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"grab_info_libgtk_only","","Determines information about the current keyboard grab. This is not public API and must not be used by applications.",37,{"inputs":[{"name":"display"},{"name":"p"}],"output":{"name":"option"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"devicemanager"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",38,null],[11,"static_type","","",38,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",38,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"devicetool"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",39,null],[11,"static_type","","",39,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",39,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"display"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",40,null],[11,"static_type","","",40,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",40,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"get_default","","Gets the default `Display`. This is a convenience function for: `gdk_display_manager_get_default_display (gdk_display_manager_get ())`.",40,{"inputs":[],"output":{"name":"option"}}],[11,"open","","Opens a display. ## `display_name` the name of the display to open",40,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[11,"open_default_libgtk_only","","Opens the default display specified by command line arguments or environment variables, sets it as the default display, and returns it. `gdk_parse_args` must have been called first. If the default display has previously been set, simply returns that. An internal function that should not be used by applications.",40,{"inputs":[],"output":{"name":"option"}}],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"displaymanager"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",41,null],[11,"static_type","","",41,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",41,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"get","","Gets the singleton `DisplayManager` object.",41,{"inputs":[],"output":{"name":"displaymanager"}}],[11,"clone","","",42,{"inputs":[{"name":"self"}],"output":{"name":"dragcontext"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",42,null],[11,"static_type","","",42,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",42,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"drawingcontext"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",43,null],[11,"static_type","","",43,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",43,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",44,{"inputs":[{"name":"self"}],"output":{"name":"frameclock"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",44,null],[11,"static_type","","",44,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",44,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",45,{"inputs":[{"name":"self"}],"output":{"name":"glcontext"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",45,null],[11,"static_type","","",45,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",45,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clear_current","","Clears the current `GLContext`.",45,{"inputs":[],"output":null}],[11,"get_current","","Retrieves the current `GLContext`.",45,{"inputs":[],"output":{"name":"option"}}],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"monitor"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",46,null],[11,"static_type","","",46,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",46,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"screen"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",47,null],[11,"static_type","","",47,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",47,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"get_default","","Gets the default screen for the default display. (See gdk_display_get_default ()).",47,{"inputs":[],"output":{"name":"option"}}],[11,"height","","Returns the height of the default screen in pixels.",47,{"inputs":[],"output":{"name":"i32"}}],[11,"height_mm","","Returns the height of the default screen in millimeters. Note that on many X servers this value will not be correct.",47,{"inputs":[],"output":{"name":"i32"}}],[11,"width","","Returns the width of the default screen in pixels.",47,{"inputs":[],"output":{"name":"i32"}}],[11,"width_mm","","Returns the width of the default screen in millimeters. Note that on many X servers this value will not be correct.",47,{"inputs":[],"output":{"name":"i32"}}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"seat"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",48,null],[11,"static_type","","",48,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",48,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",49,{"inputs":[{"name":"self"}],"output":{"name":"visual"}}],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",49,null],[11,"static_type","","",49,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",49,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"get_best","","Get the visual with the most available colors for the default GDK screen. The return value should not be freed.",49,{"inputs":[],"output":{"name":"visual"}}],[11,"get_best_depth","","Get the best available depth for the default GDK screen. “Best” means “largest,” i.e. 32 preferred over 24 preferred over 8 bits per pixel.",49,{"inputs":[],"output":{"name":"i32"}}],[11,"get_best_type","","Return the best available visual type for the default GDK screen.",49,{"inputs":[],"output":{"name":"visualtype"}}],[11,"get_best_with_both","","Combines `Visual::get_best_with_depth` and `Visual::get_best_with_type`. ## `depth` a bit depth ## `visual_type` a visual type",49,{"inputs":[{"name":"i32"},{"name":"visualtype"}],"output":{"name":"option"}}],[11,"get_best_with_depth","","Get the best visual with depth `depth` for the default GDK screen. Color visuals and visuals with mutable colormaps are preferred over grayscale or fixed-colormap visuals. The return value should not be freed. `None` may be returned if no visual supports `depth`. ## `depth` a bit depth",49,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"get_best_with_type","","Get the best visual of the given `visual_type` for the default GDK screen. Visuals with higher color depths are considered better. The return value should not be freed. `None` may be returned if no visual has type `visual_type`. ## `visual_type` a visual type",49,{"inputs":[{"name":"visualtype"}],"output":{"name":"option"}}],[11,"get_system","","Get the system’s default visual for the default GDK screen. This is the visual for the root window of the display. The return value should not be freed.",49,{"inputs":[],"output":{"name":"visual"}}],[11,"clone","","",50,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"fmt","","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",50,null],[11,"static_type","","",50,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",50,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"at_pointer","","Obtains the window underneath the mouse pointer, returning the location of that window in `win_x`, `win_y`. Returns `None` if the window under the mouse pointer is not known to GDK (if the window belongs to another application and a `Window` hasn’t been created for it with `gdk_window_foreign_new`)",50,null],[11,"constrain_size","","Constrains a desired width and height according to a set of geometry hints (such as minimum and maximum size). ## `geometry` a `Geometry` structure ## `flags` a mask indicating what portions of `geometry` are set ## `width` desired width of window ## `height` desired height of the window ## `new_width` location to store resulting width ## `new_height` location to store resulting height",50,null],[11,"process_all_updates","","Calls `Window::process_updates` for all windows (see `Window`) in the application.",50,{"inputs":[],"output":null}],[11,"set_debug_updates","","With update debugging enabled, calls to `Window::invalidate_region` clear the invalidated region of the screen to a noticeable color, and GDK pauses for a short time before sending exposes to windows during `Window::process_updates`. The net effect is that you can see the invalid region for each window and watch redraws as they occur. This allows you to diagnose inefficiencies in your application.",50,{"inputs":[{"name":"bool"}],"output":null}],[11,"clone","","",51,{"inputs":[{"name":"self"}],"output":{"name":"frametimings"}}],[11,"static_type","","",51,{"inputs":[],"output":{"name":"type"}}],[11,"get_complete","","The timing information in a `FrameTimings` is filled in incrementally as the frame as drawn and passed off to the window system for processing and display to the user. The accessor functions for `FrameTimings` can return 0 to indicate an unavailable value for two reasons: either because the information is not yet available, or because it isn't available at all. Once `FrameTimings::get_complete` returns `true` for a frame, you can be certain that no further values will become available and be stored in the `FrameTimings`.",51,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get_frame_counter","","Gets the frame counter value of the `FrameClock` when this this frame was drawn.",51,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"get_frame_time","","Returns the frame time for the frame. This is the time value that is typically used to time animations for the frame. See `FrameClock::get_frame_time`.",51,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"get_predicted_presentation_time","","Gets the predicted time at which this frame will be displayed. Although no predicted time may be available, if one is available, it will be available while the frame is being generated, in contrast to `FrameTimings::get_presentation_time`, which is only available after the frame has been presented. In general, if you are simply animating, you should use `FrameClock::get_frame_time` rather than this function, but this function is useful for applications that want exact control over latency. For example, a movie player may want this information for Audio/Video synchronization.",51,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"get_presentation_time","","Reurns the presentation time. This is the time at which the frame became visible to the user.",51,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"get_refresh_interval","","Gets the natural interval between presentation times for the display that this frame was displayed on. Frame presentation usually happens during the “vertical blanking interval”.",51,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"axisuse"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"axisuse"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"axisuse"}],"output":{"name":"bool"}}],[11,"hash","","",5,null],[11,"static_type","","",5,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",5,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",5,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",5,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"byteorder"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"byteorder"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"self"},{"name":"byteorder"}],"output":{"name":"bool"}}],[11,"hash","","",6,null],[11,"static_type","","",6,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",6,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",6,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",6,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"crossingmode"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"crossingmode"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"self"},{"name":"crossingmode"}],"output":{"name":"bool"}}],[11,"hash","","",7,null],[11,"static_type","","",7,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",7,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",7,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",7,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"cursortype"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"cursortype"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"self"},{"name":"cursortype"}],"output":{"name":"bool"}}],[11,"hash","","",8,null],[11,"static_type","","",8,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",8,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",8,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",8,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"devicetooltype"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"devicetooltype"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"self"},{"name":"devicetooltype"}],"output":{"name":"bool"}}],[11,"hash","","",9,null],[11,"static_type","","",9,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",9,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",9,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",9,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"devicetype"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":{"name":"bool"}}],[11,"hash","","",10,null],[11,"static_type","","",10,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",10,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",10,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",10,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"dragcancelreason"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"dragcancelreason"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"self"},{"name":"dragcancelreason"}],"output":{"name":"bool"}}],[11,"hash","","",11,null],[11,"static_type","","",11,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",11,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",11,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",11,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"dragprotocol"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"dragprotocol"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"self"},{"name":"dragprotocol"}],"output":{"name":"bool"}}],[11,"hash","","",12,null],[11,"static_type","","",12,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",12,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",12,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",12,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"eventtype"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"eventtype"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"self"},{"name":"eventtype"}],"output":{"name":"bool"}}],[11,"hash","","",13,null],[11,"static_type","","",13,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",13,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",13,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",13,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"fullscreenmode"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"fullscreenmode"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"self"},{"name":"fullscreenmode"}],"output":{"name":"bool"}}],[11,"hash","","",14,null],[11,"static_type","","",14,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",14,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",14,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",14,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"glerror"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"glerror"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"self"},{"name":"glerror"}],"output":{"name":"bool"}}],[11,"hash","","",15,null],[11,"domain","","",15,{"inputs":[],"output":{"name":"gquark"}}],[11,"code","","",15,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from","","",15,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"static_type","","",15,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",15,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",15,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",15,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"grabownership"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"grabownership"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"self"},{"name":"grabownership"}],"output":{"name":"bool"}}],[11,"hash","","",16,null],[11,"static_type","","",16,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",16,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",16,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",16,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"grabstatus"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",17,{"inputs":[{"name":"self"},{"name":"grabstatus"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"self"},{"name":"grabstatus"}],"output":{"name":"bool"}}],[11,"hash","","",17,null],[11,"static_type","","",17,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",17,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",17,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",17,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"gravity"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",18,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":{"name":"bool"}}],[11,"hash","","",18,null],[11,"static_type","","",18,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",18,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",18,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",18,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"inputmode"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",19,{"inputs":[{"name":"self"},{"name":"inputmode"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"self"},{"name":"inputmode"}],"output":{"name":"bool"}}],[11,"hash","","",19,null],[11,"static_type","","",19,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",19,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",19,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",19,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"inputsource"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",20,{"inputs":[{"name":"self"},{"name":"inputsource"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"self"},{"name":"inputsource"}],"output":{"name":"bool"}}],[11,"hash","","",20,null],[11,"static_type","","",20,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",20,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",20,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",20,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"modifierintent"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",21,{"inputs":[{"name":"self"},{"name":"modifierintent"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"self"},{"name":"modifierintent"}],"output":{"name":"bool"}}],[11,"hash","","",21,null],[11,"static_type","","",21,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",21,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",21,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",21,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"notifytype"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",22,{"inputs":[{"name":"self"},{"name":"notifytype"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"self"},{"name":"notifytype"}],"output":{"name":"bool"}}],[11,"hash","","",22,null],[11,"static_type","","",22,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",22,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",22,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",22,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"ownerchange"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",23,{"inputs":[{"name":"self"},{"name":"ownerchange"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"self"},{"name":"ownerchange"}],"output":{"name":"bool"}}],[11,"hash","","",23,null],[11,"static_type","","",23,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",23,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",23,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",23,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"propertystate"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",24,{"inputs":[{"name":"self"},{"name":"propertystate"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"self"},{"name":"propertystate"}],"output":{"name":"bool"}}],[11,"hash","","",24,null],[11,"static_type","","",24,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",24,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",24,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",24,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"scrolldirection"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",25,{"inputs":[{"name":"self"},{"name":"scrolldirection"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"self"},{"name":"scrolldirection"}],"output":{"name":"bool"}}],[11,"hash","","",25,null],[11,"static_type","","",25,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",25,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",25,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",25,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"settingaction"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",26,{"inputs":[{"name":"self"},{"name":"settingaction"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"self"},{"name":"settingaction"}],"output":{"name":"bool"}}],[11,"hash","","",26,null],[11,"static_type","","",26,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",26,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",26,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",26,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"subpixellayout"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",27,{"inputs":[{"name":"self"},{"name":"subpixellayout"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"self"},{"name":"subpixellayout"}],"output":{"name":"bool"}}],[11,"hash","","",27,null],[11,"static_type","","",27,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",27,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",27,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",27,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"visibilitystate"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",28,{"inputs":[{"name":"self"},{"name":"visibilitystate"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"self"},{"name":"visibilitystate"}],"output":{"name":"bool"}}],[11,"hash","","",28,null],[11,"static_type","","",28,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",28,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",28,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",28,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"visualtype"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",29,{"inputs":[{"name":"self"},{"name":"visualtype"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"self"},{"name":"visualtype"}],"output":{"name":"bool"}}],[11,"hash","","",29,null],[11,"static_type","","",29,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",29,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",29,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",29,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"windowedge"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",30,{"inputs":[{"name":"self"},{"name":"windowedge"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"self"},{"name":"windowedge"}],"output":{"name":"bool"}}],[11,"hash","","",30,null],[11,"static_type","","",30,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",30,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",30,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",30,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"windowtype"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",31,{"inputs":[{"name":"self"},{"name":"windowtype"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"self"},{"name":"windowtype"}],"output":{"name":"bool"}}],[11,"hash","","",31,null],[11,"static_type","","",31,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",31,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",31,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",31,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"windowtypehint"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"self"},{"name":"windowtypehint"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"self"},{"name":"windowtypehint"}],"output":{"name":"bool"}}],[11,"hash","","",32,null],[11,"static_type","","",32,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",32,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",32,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",32,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"windowwindowclass"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",33,{"inputs":[{"name":"self"},{"name":"windowwindowclass"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"self"},{"name":"windowwindowclass"}],"output":{"name":"bool"}}],[11,"hash","","",33,null],[11,"static_type","","",33,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",33,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",33,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",33,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"eq","","",52,{"inputs":[{"name":"self"},{"name":"anchorhints"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"self"},{"name":"anchorhints"}],"output":{"name":"bool"}}],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"anchorhints"}}],[11,"partial_cmp","","",52,{"inputs":[{"name":"self"},{"name":"anchorhints"}],"output":{"name":"option"}}],[11,"lt","","",52,{"inputs":[{"name":"self"},{"name":"anchorhints"}],"output":{"name":"bool"}}],[11,"le","","",52,{"inputs":[{"name":"self"},{"name":"anchorhints"}],"output":{"name":"bool"}}],[11,"gt","","",52,{"inputs":[{"name":"self"},{"name":"anchorhints"}],"output":{"name":"bool"}}],[11,"ge","","",52,{"inputs":[{"name":"self"},{"name":"anchorhints"}],"output":{"name":"bool"}}],[11,"cmp","","",52,{"inputs":[{"name":"self"},{"name":"anchorhints"}],"output":{"name":"ordering"}}],[11,"hash","","",52,null],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",52,{"inputs":[],"output":{"name":"anchorhints"}}],[11,"all","","Returns the set containing all flags.",52,{"inputs":[],"output":{"name":"anchorhints"}}],[11,"bits","","Returns the raw value of the flags currently stored.",52,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",52,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",52,{"inputs":[{"name":"u32"}],"output":{"name":"anchorhints"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",52,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",52,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",52,{"inputs":[{"name":"self"},{"name":"anchorhints"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",52,{"inputs":[{"name":"self"},{"name":"anchorhints"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",52,{"inputs":[{"name":"self"},{"name":"anchorhints"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",52,{"inputs":[{"name":"self"},{"name":"anchorhints"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",52,{"inputs":[{"name":"self"},{"name":"anchorhints"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",52,{"inputs":[{"name":"self"},{"name":"anchorhints"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",52,{"inputs":[{"name":"self"},{"name":"anchorhints"}],"output":{"name":"anchorhints"}}],[11,"bitor_assign","","Adds the set of flags.",52,{"inputs":[{"name":"self"},{"name":"anchorhints"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",52,{"inputs":[{"name":"self"},{"name":"anchorhints"}],"output":{"name":"anchorhints"}}],[11,"bitxor_assign","","Toggles the set of flags.",52,{"inputs":[{"name":"self"},{"name":"anchorhints"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",52,{"inputs":[{"name":"self"},{"name":"anchorhints"}],"output":{"name":"anchorhints"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",52,{"inputs":[{"name":"self"},{"name":"anchorhints"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",52,{"inputs":[{"name":"self"},{"name":"anchorhints"}],"output":{"name":"anchorhints"}}],[11,"sub_assign","","Disables all flags enabled in the set.",52,{"inputs":[{"name":"self"},{"name":"anchorhints"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",52,{"inputs":[{"name":"self"}],"output":{"name":"anchorhints"}}],[11,"extend","","",52,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",52,{"inputs":[{"name":"t"}],"output":{"name":"anchorhints"}}],[11,"static_type","","",52,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",52,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",52,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",52,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"eq","","",53,{"inputs":[{"name":"self"},{"name":"axisflags"}],"output":{"name":"bool"}}],[11,"ne","","",53,{"inputs":[{"name":"self"},{"name":"axisflags"}],"output":{"name":"bool"}}],[11,"clone","","",53,{"inputs":[{"name":"self"}],"output":{"name":"axisflags"}}],[11,"partial_cmp","","",53,{"inputs":[{"name":"self"},{"name":"axisflags"}],"output":{"name":"option"}}],[11,"lt","","",53,{"inputs":[{"name":"self"},{"name":"axisflags"}],"output":{"name":"bool"}}],[11,"le","","",53,{"inputs":[{"name":"self"},{"name":"axisflags"}],"output":{"name":"bool"}}],[11,"gt","","",53,{"inputs":[{"name":"self"},{"name":"axisflags"}],"output":{"name":"bool"}}],[11,"ge","","",53,{"inputs":[{"name":"self"},{"name":"axisflags"}],"output":{"name":"bool"}}],[11,"cmp","","",53,{"inputs":[{"name":"self"},{"name":"axisflags"}],"output":{"name":"ordering"}}],[11,"hash","","",53,null],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",53,{"inputs":[],"output":{"name":"axisflags"}}],[11,"all","","Returns the set containing all flags.",53,{"inputs":[],"output":{"name":"axisflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",53,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",53,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",53,{"inputs":[{"name":"u32"}],"output":{"name":"axisflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",53,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",53,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",53,{"inputs":[{"name":"self"},{"name":"axisflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",53,{"inputs":[{"name":"self"},{"name":"axisflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",53,{"inputs":[{"name":"self"},{"name":"axisflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",53,{"inputs":[{"name":"self"},{"name":"axisflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",53,{"inputs":[{"name":"self"},{"name":"axisflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",53,{"inputs":[{"name":"self"},{"name":"axisflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",53,{"inputs":[{"name":"self"},{"name":"axisflags"}],"output":{"name":"axisflags"}}],[11,"bitor_assign","","Adds the set of flags.",53,{"inputs":[{"name":"self"},{"name":"axisflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",53,{"inputs":[{"name":"self"},{"name":"axisflags"}],"output":{"name":"axisflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",53,{"inputs":[{"name":"self"},{"name":"axisflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",53,{"inputs":[{"name":"self"},{"name":"axisflags"}],"output":{"name":"axisflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",53,{"inputs":[{"name":"self"},{"name":"axisflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",53,{"inputs":[{"name":"self"},{"name":"axisflags"}],"output":{"name":"axisflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",53,{"inputs":[{"name":"self"},{"name":"axisflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",53,{"inputs":[{"name":"self"}],"output":{"name":"axisflags"}}],[11,"extend","","",53,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",53,{"inputs":[{"name":"t"}],"output":{"name":"axisflags"}}],[11,"static_type","","",53,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",53,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",53,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",53,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"eq","","",54,{"inputs":[{"name":"self"},{"name":"dragaction"}],"output":{"name":"bool"}}],[11,"ne","","",54,{"inputs":[{"name":"self"},{"name":"dragaction"}],"output":{"name":"bool"}}],[11,"clone","","",54,{"inputs":[{"name":"self"}],"output":{"name":"dragaction"}}],[11,"partial_cmp","","",54,{"inputs":[{"name":"self"},{"name":"dragaction"}],"output":{"name":"option"}}],[11,"lt","","",54,{"inputs":[{"name":"self"},{"name":"dragaction"}],"output":{"name":"bool"}}],[11,"le","","",54,{"inputs":[{"name":"self"},{"name":"dragaction"}],"output":{"name":"bool"}}],[11,"gt","","",54,{"inputs":[{"name":"self"},{"name":"dragaction"}],"output":{"name":"bool"}}],[11,"ge","","",54,{"inputs":[{"name":"self"},{"name":"dragaction"}],"output":{"name":"bool"}}],[11,"cmp","","",54,{"inputs":[{"name":"self"},{"name":"dragaction"}],"output":{"name":"ordering"}}],[11,"hash","","",54,null],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",54,{"inputs":[],"output":{"name":"dragaction"}}],[11,"all","","Returns the set containing all flags.",54,{"inputs":[],"output":{"name":"dragaction"}}],[11,"bits","","Returns the raw value of the flags currently stored.",54,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",54,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",54,{"inputs":[{"name":"u32"}],"output":{"name":"dragaction"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",54,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",54,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",54,{"inputs":[{"name":"self"},{"name":"dragaction"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",54,{"inputs":[{"name":"self"},{"name":"dragaction"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",54,{"inputs":[{"name":"self"},{"name":"dragaction"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",54,{"inputs":[{"name":"self"},{"name":"dragaction"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",54,{"inputs":[{"name":"self"},{"name":"dragaction"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",54,{"inputs":[{"name":"self"},{"name":"dragaction"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",54,{"inputs":[{"name":"self"},{"name":"dragaction"}],"output":{"name":"dragaction"}}],[11,"bitor_assign","","Adds the set of flags.",54,{"inputs":[{"name":"self"},{"name":"dragaction"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",54,{"inputs":[{"name":"self"},{"name":"dragaction"}],"output":{"name":"dragaction"}}],[11,"bitxor_assign","","Toggles the set of flags.",54,{"inputs":[{"name":"self"},{"name":"dragaction"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",54,{"inputs":[{"name":"self"},{"name":"dragaction"}],"output":{"name":"dragaction"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",54,{"inputs":[{"name":"self"},{"name":"dragaction"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",54,{"inputs":[{"name":"self"},{"name":"dragaction"}],"output":{"name":"dragaction"}}],[11,"sub_assign","","Disables all flags enabled in the set.",54,{"inputs":[{"name":"self"},{"name":"dragaction"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",54,{"inputs":[{"name":"self"}],"output":{"name":"dragaction"}}],[11,"extend","","",54,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",54,{"inputs":[{"name":"t"}],"output":{"name":"dragaction"}}],[11,"static_type","","",54,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",54,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",54,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",54,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"eq","","",55,{"inputs":[{"name":"self"},{"name":"eventmask"}],"output":{"name":"bool"}}],[11,"ne","","",55,{"inputs":[{"name":"self"},{"name":"eventmask"}],"output":{"name":"bool"}}],[11,"clone","","",55,{"inputs":[{"name":"self"}],"output":{"name":"eventmask"}}],[11,"partial_cmp","","",55,{"inputs":[{"name":"self"},{"name":"eventmask"}],"output":{"name":"option"}}],[11,"lt","","",55,{"inputs":[{"name":"self"},{"name":"eventmask"}],"output":{"name":"bool"}}],[11,"le","","",55,{"inputs":[{"name":"self"},{"name":"eventmask"}],"output":{"name":"bool"}}],[11,"gt","","",55,{"inputs":[{"name":"self"},{"name":"eventmask"}],"output":{"name":"bool"}}],[11,"ge","","",55,{"inputs":[{"name":"self"},{"name":"eventmask"}],"output":{"name":"bool"}}],[11,"cmp","","",55,{"inputs":[{"name":"self"},{"name":"eventmask"}],"output":{"name":"ordering"}}],[11,"hash","","",55,null],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",55,{"inputs":[],"output":{"name":"eventmask"}}],[11,"all","","Returns the set containing all flags.",55,{"inputs":[],"output":{"name":"eventmask"}}],[11,"bits","","Returns the raw value of the flags currently stored.",55,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",55,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",55,{"inputs":[{"name":"u32"}],"output":{"name":"eventmask"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",55,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",55,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",55,{"inputs":[{"name":"self"},{"name":"eventmask"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",55,{"inputs":[{"name":"self"},{"name":"eventmask"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",55,{"inputs":[{"name":"self"},{"name":"eventmask"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",55,{"inputs":[{"name":"self"},{"name":"eventmask"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",55,{"inputs":[{"name":"self"},{"name":"eventmask"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",55,{"inputs":[{"name":"self"},{"name":"eventmask"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",55,{"inputs":[{"name":"self"},{"name":"eventmask"}],"output":{"name":"eventmask"}}],[11,"bitor_assign","","Adds the set of flags.",55,{"inputs":[{"name":"self"},{"name":"eventmask"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",55,{"inputs":[{"name":"self"},{"name":"eventmask"}],"output":{"name":"eventmask"}}],[11,"bitxor_assign","","Toggles the set of flags.",55,{"inputs":[{"name":"self"},{"name":"eventmask"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",55,{"inputs":[{"name":"self"},{"name":"eventmask"}],"output":{"name":"eventmask"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",55,{"inputs":[{"name":"self"},{"name":"eventmask"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",55,{"inputs":[{"name":"self"},{"name":"eventmask"}],"output":{"name":"eventmask"}}],[11,"sub_assign","","Disables all flags enabled in the set.",55,{"inputs":[{"name":"self"},{"name":"eventmask"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",55,{"inputs":[{"name":"self"}],"output":{"name":"eventmask"}}],[11,"extend","","",55,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",55,{"inputs":[{"name":"t"}],"output":{"name":"eventmask"}}],[11,"static_type","","",55,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",55,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",55,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",55,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"eq","","",56,{"inputs":[{"name":"self"},{"name":"frameclockphase"}],"output":{"name":"bool"}}],[11,"ne","","",56,{"inputs":[{"name":"self"},{"name":"frameclockphase"}],"output":{"name":"bool"}}],[11,"clone","","",56,{"inputs":[{"name":"self"}],"output":{"name":"frameclockphase"}}],[11,"partial_cmp","","",56,{"inputs":[{"name":"self"},{"name":"frameclockphase"}],"output":{"name":"option"}}],[11,"lt","","",56,{"inputs":[{"name":"self"},{"name":"frameclockphase"}],"output":{"name":"bool"}}],[11,"le","","",56,{"inputs":[{"name":"self"},{"name":"frameclockphase"}],"output":{"name":"bool"}}],[11,"gt","","",56,{"inputs":[{"name":"self"},{"name":"frameclockphase"}],"output":{"name":"bool"}}],[11,"ge","","",56,{"inputs":[{"name":"self"},{"name":"frameclockphase"}],"output":{"name":"bool"}}],[11,"cmp","","",56,{"inputs":[{"name":"self"},{"name":"frameclockphase"}],"output":{"name":"ordering"}}],[11,"hash","","",56,null],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",56,{"inputs":[],"output":{"name":"frameclockphase"}}],[11,"all","","Returns the set containing all flags.",56,{"inputs":[],"output":{"name":"frameclockphase"}}],[11,"bits","","Returns the raw value of the flags currently stored.",56,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",56,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",56,{"inputs":[{"name":"u32"}],"output":{"name":"frameclockphase"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",56,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",56,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",56,{"inputs":[{"name":"self"},{"name":"frameclockphase"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",56,{"inputs":[{"name":"self"},{"name":"frameclockphase"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",56,{"inputs":[{"name":"self"},{"name":"frameclockphase"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",56,{"inputs":[{"name":"self"},{"name":"frameclockphase"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",56,{"inputs":[{"name":"self"},{"name":"frameclockphase"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",56,{"inputs":[{"name":"self"},{"name":"frameclockphase"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",56,{"inputs":[{"name":"self"},{"name":"frameclockphase"}],"output":{"name":"frameclockphase"}}],[11,"bitor_assign","","Adds the set of flags.",56,{"inputs":[{"name":"self"},{"name":"frameclockphase"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",56,{"inputs":[{"name":"self"},{"name":"frameclockphase"}],"output":{"name":"frameclockphase"}}],[11,"bitxor_assign","","Toggles the set of flags.",56,{"inputs":[{"name":"self"},{"name":"frameclockphase"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",56,{"inputs":[{"name":"self"},{"name":"frameclockphase"}],"output":{"name":"frameclockphase"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",56,{"inputs":[{"name":"self"},{"name":"frameclockphase"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",56,{"inputs":[{"name":"self"},{"name":"frameclockphase"}],"output":{"name":"frameclockphase"}}],[11,"sub_assign","","Disables all flags enabled in the set.",56,{"inputs":[{"name":"self"},{"name":"frameclockphase"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",56,{"inputs":[{"name":"self"}],"output":{"name":"frameclockphase"}}],[11,"extend","","",56,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",56,{"inputs":[{"name":"t"}],"output":{"name":"frameclockphase"}}],[11,"static_type","","",56,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",56,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",56,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",56,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"eq","","",57,{"inputs":[{"name":"self"},{"name":"modifiertype"}],"output":{"name":"bool"}}],[11,"ne","","",57,{"inputs":[{"name":"self"},{"name":"modifiertype"}],"output":{"name":"bool"}}],[11,"clone","","",57,{"inputs":[{"name":"self"}],"output":{"name":"modifiertype"}}],[11,"partial_cmp","","",57,{"inputs":[{"name":"self"},{"name":"modifiertype"}],"output":{"name":"option"}}],[11,"lt","","",57,{"inputs":[{"name":"self"},{"name":"modifiertype"}],"output":{"name":"bool"}}],[11,"le","","",57,{"inputs":[{"name":"self"},{"name":"modifiertype"}],"output":{"name":"bool"}}],[11,"gt","","",57,{"inputs":[{"name":"self"},{"name":"modifiertype"}],"output":{"name":"bool"}}],[11,"ge","","",57,{"inputs":[{"name":"self"},{"name":"modifiertype"}],"output":{"name":"bool"}}],[11,"cmp","","",57,{"inputs":[{"name":"self"},{"name":"modifiertype"}],"output":{"name":"ordering"}}],[11,"hash","","",57,null],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",57,{"inputs":[],"output":{"name":"modifiertype"}}],[11,"all","","Returns the set containing all flags.",57,{"inputs":[],"output":{"name":"modifiertype"}}],[11,"bits","","Returns the raw value of the flags currently stored.",57,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",57,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",57,{"inputs":[{"name":"u32"}],"output":{"name":"modifiertype"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",57,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",57,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",57,{"inputs":[{"name":"self"},{"name":"modifiertype"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",57,{"inputs":[{"name":"self"},{"name":"modifiertype"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",57,{"inputs":[{"name":"self"},{"name":"modifiertype"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",57,{"inputs":[{"name":"self"},{"name":"modifiertype"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",57,{"inputs":[{"name":"self"},{"name":"modifiertype"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",57,{"inputs":[{"name":"self"},{"name":"modifiertype"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",57,{"inputs":[{"name":"self"},{"name":"modifiertype"}],"output":{"name":"modifiertype"}}],[11,"bitor_assign","","Adds the set of flags.",57,{"inputs":[{"name":"self"},{"name":"modifiertype"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",57,{"inputs":[{"name":"self"},{"name":"modifiertype"}],"output":{"name":"modifiertype"}}],[11,"bitxor_assign","","Toggles the set of flags.",57,{"inputs":[{"name":"self"},{"name":"modifiertype"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",57,{"inputs":[{"name":"self"},{"name":"modifiertype"}],"output":{"name":"modifiertype"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",57,{"inputs":[{"name":"self"},{"name":"modifiertype"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",57,{"inputs":[{"name":"self"},{"name":"modifiertype"}],"output":{"name":"modifiertype"}}],[11,"sub_assign","","Disables all flags enabled in the set.",57,{"inputs":[{"name":"self"},{"name":"modifiertype"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",57,{"inputs":[{"name":"self"}],"output":{"name":"modifiertype"}}],[11,"extend","","",57,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",57,{"inputs":[{"name":"t"}],"output":{"name":"modifiertype"}}],[11,"static_type","","",57,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",57,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",57,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",57,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"eq","","",58,{"inputs":[{"name":"self"},{"name":"seatcapabilities"}],"output":{"name":"bool"}}],[11,"ne","","",58,{"inputs":[{"name":"self"},{"name":"seatcapabilities"}],"output":{"name":"bool"}}],[11,"clone","","",58,{"inputs":[{"name":"self"}],"output":{"name":"seatcapabilities"}}],[11,"partial_cmp","","",58,{"inputs":[{"name":"self"},{"name":"seatcapabilities"}],"output":{"name":"option"}}],[11,"lt","","",58,{"inputs":[{"name":"self"},{"name":"seatcapabilities"}],"output":{"name":"bool"}}],[11,"le","","",58,{"inputs":[{"name":"self"},{"name":"seatcapabilities"}],"output":{"name":"bool"}}],[11,"gt","","",58,{"inputs":[{"name":"self"},{"name":"seatcapabilities"}],"output":{"name":"bool"}}],[11,"ge","","",58,{"inputs":[{"name":"self"},{"name":"seatcapabilities"}],"output":{"name":"bool"}}],[11,"cmp","","",58,{"inputs":[{"name":"self"},{"name":"seatcapabilities"}],"output":{"name":"ordering"}}],[11,"hash","","",58,null],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",58,{"inputs":[],"output":{"name":"seatcapabilities"}}],[11,"all","","Returns the set containing all flags.",58,{"inputs":[],"output":{"name":"seatcapabilities"}}],[11,"bits","","Returns the raw value of the flags currently stored.",58,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",58,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",58,{"inputs":[{"name":"u32"}],"output":{"name":"seatcapabilities"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",58,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",58,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",58,{"inputs":[{"name":"self"},{"name":"seatcapabilities"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",58,{"inputs":[{"name":"self"},{"name":"seatcapabilities"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",58,{"inputs":[{"name":"self"},{"name":"seatcapabilities"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",58,{"inputs":[{"name":"self"},{"name":"seatcapabilities"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",58,{"inputs":[{"name":"self"},{"name":"seatcapabilities"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",58,{"inputs":[{"name":"self"},{"name":"seatcapabilities"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",58,{"inputs":[{"name":"self"},{"name":"seatcapabilities"}],"output":{"name":"seatcapabilities"}}],[11,"bitor_assign","","Adds the set of flags.",58,{"inputs":[{"name":"self"},{"name":"seatcapabilities"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",58,{"inputs":[{"name":"self"},{"name":"seatcapabilities"}],"output":{"name":"seatcapabilities"}}],[11,"bitxor_assign","","Toggles the set of flags.",58,{"inputs":[{"name":"self"},{"name":"seatcapabilities"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",58,{"inputs":[{"name":"self"},{"name":"seatcapabilities"}],"output":{"name":"seatcapabilities"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",58,{"inputs":[{"name":"self"},{"name":"seatcapabilities"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",58,{"inputs":[{"name":"self"},{"name":"seatcapabilities"}],"output":{"name":"seatcapabilities"}}],[11,"sub_assign","","Disables all flags enabled in the set.",58,{"inputs":[{"name":"self"},{"name":"seatcapabilities"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",58,{"inputs":[{"name":"self"}],"output":{"name":"seatcapabilities"}}],[11,"extend","","",58,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",58,{"inputs":[{"name":"t"}],"output":{"name":"seatcapabilities"}}],[11,"static_type","","",58,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",58,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",58,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",58,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"eq","","",59,{"inputs":[{"name":"self"},{"name":"wmdecoration"}],"output":{"name":"bool"}}],[11,"ne","","",59,{"inputs":[{"name":"self"},{"name":"wmdecoration"}],"output":{"name":"bool"}}],[11,"clone","","",59,{"inputs":[{"name":"self"}],"output":{"name":"wmdecoration"}}],[11,"partial_cmp","","",59,{"inputs":[{"name":"self"},{"name":"wmdecoration"}],"output":{"name":"option"}}],[11,"lt","","",59,{"inputs":[{"name":"self"},{"name":"wmdecoration"}],"output":{"name":"bool"}}],[11,"le","","",59,{"inputs":[{"name":"self"},{"name":"wmdecoration"}],"output":{"name":"bool"}}],[11,"gt","","",59,{"inputs":[{"name":"self"},{"name":"wmdecoration"}],"output":{"name":"bool"}}],[11,"ge","","",59,{"inputs":[{"name":"self"},{"name":"wmdecoration"}],"output":{"name":"bool"}}],[11,"cmp","","",59,{"inputs":[{"name":"self"},{"name":"wmdecoration"}],"output":{"name":"ordering"}}],[11,"hash","","",59,null],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",59,{"inputs":[],"output":{"name":"wmdecoration"}}],[11,"all","","Returns the set containing all flags.",59,{"inputs":[],"output":{"name":"wmdecoration"}}],[11,"bits","","Returns the raw value of the flags currently stored.",59,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",59,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",59,{"inputs":[{"name":"u32"}],"output":{"name":"wmdecoration"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",59,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",59,{"inputs":[{"name":"self"},{"name":"wmdecoration"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",59,{"inputs":[{"name":"self"},{"name":"wmdecoration"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",59,{"inputs":[{"name":"self"},{"name":"wmdecoration"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",59,{"inputs":[{"name":"self"},{"name":"wmdecoration"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",59,{"inputs":[{"name":"self"},{"name":"wmdecoration"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",59,{"inputs":[{"name":"self"},{"name":"wmdecoration"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",59,{"inputs":[{"name":"self"},{"name":"wmdecoration"}],"output":{"name":"wmdecoration"}}],[11,"bitor_assign","","Adds the set of flags.",59,{"inputs":[{"name":"self"},{"name":"wmdecoration"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",59,{"inputs":[{"name":"self"},{"name":"wmdecoration"}],"output":{"name":"wmdecoration"}}],[11,"bitxor_assign","","Toggles the set of flags.",59,{"inputs":[{"name":"self"},{"name":"wmdecoration"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",59,{"inputs":[{"name":"self"},{"name":"wmdecoration"}],"output":{"name":"wmdecoration"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",59,{"inputs":[{"name":"self"},{"name":"wmdecoration"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",59,{"inputs":[{"name":"self"},{"name":"wmdecoration"}],"output":{"name":"wmdecoration"}}],[11,"sub_assign","","Disables all flags enabled in the set.",59,{"inputs":[{"name":"self"},{"name":"wmdecoration"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",59,{"inputs":[{"name":"self"}],"output":{"name":"wmdecoration"}}],[11,"extend","","",59,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",59,{"inputs":[{"name":"t"}],"output":{"name":"wmdecoration"}}],[11,"static_type","","",59,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",59,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",59,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",59,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"eq","","",60,{"inputs":[{"name":"self"},{"name":"wmfunction"}],"output":{"name":"bool"}}],[11,"ne","","",60,{"inputs":[{"name":"self"},{"name":"wmfunction"}],"output":{"name":"bool"}}],[11,"clone","","",60,{"inputs":[{"name":"self"}],"output":{"name":"wmfunction"}}],[11,"partial_cmp","","",60,{"inputs":[{"name":"self"},{"name":"wmfunction"}],"output":{"name":"option"}}],[11,"lt","","",60,{"inputs":[{"name":"self"},{"name":"wmfunction"}],"output":{"name":"bool"}}],[11,"le","","",60,{"inputs":[{"name":"self"},{"name":"wmfunction"}],"output":{"name":"bool"}}],[11,"gt","","",60,{"inputs":[{"name":"self"},{"name":"wmfunction"}],"output":{"name":"bool"}}],[11,"ge","","",60,{"inputs":[{"name":"self"},{"name":"wmfunction"}],"output":{"name":"bool"}}],[11,"cmp","","",60,{"inputs":[{"name":"self"},{"name":"wmfunction"}],"output":{"name":"ordering"}}],[11,"hash","","",60,null],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",60,{"inputs":[],"output":{"name":"wmfunction"}}],[11,"all","","Returns the set containing all flags.",60,{"inputs":[],"output":{"name":"wmfunction"}}],[11,"bits","","Returns the raw value of the flags currently stored.",60,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",60,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",60,{"inputs":[{"name":"u32"}],"output":{"name":"wmfunction"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",60,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",60,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",60,{"inputs":[{"name":"self"},{"name":"wmfunction"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",60,{"inputs":[{"name":"self"},{"name":"wmfunction"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",60,{"inputs":[{"name":"self"},{"name":"wmfunction"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",60,{"inputs":[{"name":"self"},{"name":"wmfunction"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",60,{"inputs":[{"name":"self"},{"name":"wmfunction"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",60,{"inputs":[{"name":"self"},{"name":"wmfunction"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",60,{"inputs":[{"name":"self"},{"name":"wmfunction"}],"output":{"name":"wmfunction"}}],[11,"bitor_assign","","Adds the set of flags.",60,{"inputs":[{"name":"self"},{"name":"wmfunction"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",60,{"inputs":[{"name":"self"},{"name":"wmfunction"}],"output":{"name":"wmfunction"}}],[11,"bitxor_assign","","Toggles the set of flags.",60,{"inputs":[{"name":"self"},{"name":"wmfunction"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",60,{"inputs":[{"name":"self"},{"name":"wmfunction"}],"output":{"name":"wmfunction"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",60,{"inputs":[{"name":"self"},{"name":"wmfunction"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",60,{"inputs":[{"name":"self"},{"name":"wmfunction"}],"output":{"name":"wmfunction"}}],[11,"sub_assign","","Disables all flags enabled in the set.",60,{"inputs":[{"name":"self"},{"name":"wmfunction"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",60,{"inputs":[{"name":"self"}],"output":{"name":"wmfunction"}}],[11,"extend","","",60,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",60,{"inputs":[{"name":"t"}],"output":{"name":"wmfunction"}}],[11,"static_type","","",60,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",60,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",60,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",60,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"eq","","",61,{"inputs":[{"name":"self"},{"name":"windowhints"}],"output":{"name":"bool"}}],[11,"ne","","",61,{"inputs":[{"name":"self"},{"name":"windowhints"}],"output":{"name":"bool"}}],[11,"clone","","",61,{"inputs":[{"name":"self"}],"output":{"name":"windowhints"}}],[11,"partial_cmp","","",61,{"inputs":[{"name":"self"},{"name":"windowhints"}],"output":{"name":"option"}}],[11,"lt","","",61,{"inputs":[{"name":"self"},{"name":"windowhints"}],"output":{"name":"bool"}}],[11,"le","","",61,{"inputs":[{"name":"self"},{"name":"windowhints"}],"output":{"name":"bool"}}],[11,"gt","","",61,{"inputs":[{"name":"self"},{"name":"windowhints"}],"output":{"name":"bool"}}],[11,"ge","","",61,{"inputs":[{"name":"self"},{"name":"windowhints"}],"output":{"name":"bool"}}],[11,"cmp","","",61,{"inputs":[{"name":"self"},{"name":"windowhints"}],"output":{"name":"ordering"}}],[11,"hash","","",61,null],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",61,{"inputs":[],"output":{"name":"windowhints"}}],[11,"all","","Returns the set containing all flags.",61,{"inputs":[],"output":{"name":"windowhints"}}],[11,"bits","","Returns the raw value of the flags currently stored.",61,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",61,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",61,{"inputs":[{"name":"u32"}],"output":{"name":"windowhints"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",61,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",61,{"inputs":[{"name":"self"},{"name":"windowhints"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",61,{"inputs":[{"name":"self"},{"name":"windowhints"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",61,{"inputs":[{"name":"self"},{"name":"windowhints"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",61,{"inputs":[{"name":"self"},{"name":"windowhints"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",61,{"inputs":[{"name":"self"},{"name":"windowhints"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",61,{"inputs":[{"name":"self"},{"name":"windowhints"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",61,{"inputs":[{"name":"self"},{"name":"windowhints"}],"output":{"name":"windowhints"}}],[11,"bitor_assign","","Adds the set of flags.",61,{"inputs":[{"name":"self"},{"name":"windowhints"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",61,{"inputs":[{"name":"self"},{"name":"windowhints"}],"output":{"name":"windowhints"}}],[11,"bitxor_assign","","Toggles the set of flags.",61,{"inputs":[{"name":"self"},{"name":"windowhints"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",61,{"inputs":[{"name":"self"},{"name":"windowhints"}],"output":{"name":"windowhints"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",61,{"inputs":[{"name":"self"},{"name":"windowhints"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",61,{"inputs":[{"name":"self"},{"name":"windowhints"}],"output":{"name":"windowhints"}}],[11,"sub_assign","","Disables all flags enabled in the set.",61,{"inputs":[{"name":"self"},{"name":"windowhints"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",61,{"inputs":[{"name":"self"}],"output":{"name":"windowhints"}}],[11,"extend","","",61,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",61,{"inputs":[{"name":"t"}],"output":{"name":"windowhints"}}],[11,"static_type","","",61,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",61,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",61,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",61,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"eq","","",62,{"inputs":[{"name":"self"},{"name":"windowstate"}],"output":{"name":"bool"}}],[11,"ne","","",62,{"inputs":[{"name":"self"},{"name":"windowstate"}],"output":{"name":"bool"}}],[11,"clone","","",62,{"inputs":[{"name":"self"}],"output":{"name":"windowstate"}}],[11,"partial_cmp","","",62,{"inputs":[{"name":"self"},{"name":"windowstate"}],"output":{"name":"option"}}],[11,"lt","","",62,{"inputs":[{"name":"self"},{"name":"windowstate"}],"output":{"name":"bool"}}],[11,"le","","",62,{"inputs":[{"name":"self"},{"name":"windowstate"}],"output":{"name":"bool"}}],[11,"gt","","",62,{"inputs":[{"name":"self"},{"name":"windowstate"}],"output":{"name":"bool"}}],[11,"ge","","",62,{"inputs":[{"name":"self"},{"name":"windowstate"}],"output":{"name":"bool"}}],[11,"cmp","","",62,{"inputs":[{"name":"self"},{"name":"windowstate"}],"output":{"name":"ordering"}}],[11,"hash","","",62,null],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",62,{"inputs":[],"output":{"name":"windowstate"}}],[11,"all","","Returns the set containing all flags.",62,{"inputs":[],"output":{"name":"windowstate"}}],[11,"bits","","Returns the raw value of the flags currently stored.",62,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",62,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",62,{"inputs":[{"name":"u32"}],"output":{"name":"windowstate"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",62,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",62,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",62,{"inputs":[{"name":"self"},{"name":"windowstate"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",62,{"inputs":[{"name":"self"},{"name":"windowstate"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",62,{"inputs":[{"name":"self"},{"name":"windowstate"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",62,{"inputs":[{"name":"self"},{"name":"windowstate"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",62,{"inputs":[{"name":"self"},{"name":"windowstate"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",62,{"inputs":[{"name":"self"},{"name":"windowstate"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",62,{"inputs":[{"name":"self"},{"name":"windowstate"}],"output":{"name":"windowstate"}}],[11,"bitor_assign","","Adds the set of flags.",62,{"inputs":[{"name":"self"},{"name":"windowstate"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",62,{"inputs":[{"name":"self"},{"name":"windowstate"}],"output":{"name":"windowstate"}}],[11,"bitxor_assign","","Toggles the set of flags.",62,{"inputs":[{"name":"self"},{"name":"windowstate"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",62,{"inputs":[{"name":"self"},{"name":"windowstate"}],"output":{"name":"windowstate"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",62,{"inputs":[{"name":"self"},{"name":"windowstate"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",62,{"inputs":[{"name":"self"},{"name":"windowstate"}],"output":{"name":"windowstate"}}],[11,"sub_assign","","Disables all flags enabled in the set.",62,{"inputs":[{"name":"self"},{"name":"windowstate"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",62,{"inputs":[{"name":"self"}],"output":{"name":"windowstate"}}],[11,"extend","","",62,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",62,{"inputs":[{"name":"t"}],"output":{"name":"windowstate"}}],[11,"static_type","","",62,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",62,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",62,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",62,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[0,"prelude","","Traits intended for blanket imports.",null,null],[8,"ContextExt","gdk::prelude","",null,null],[10,"create_from_window","","",63,{"inputs":[{"name":"window"}],"output":{"name":"context"}}],[10,"cairo_draw_from_gl","","",63,{"inputs":[{"name":"context"},{"name":"window"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"cairo_surface_create_from_pixbuf","","",63,{"inputs":[{"name":"pixbuf"},{"name":"i32"},{"name":"p"}],"output":{"name":"option"}}],[10,"get_clip_rectangle","","",63,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_source_rgba","","",63,{"inputs":[{"name":"self"},{"name":"rgba"}],"output":null}],[10,"set_source_pixbuf","","",63,{"inputs":[{"name":"self"},{"name":"pixbuf"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"set_source_window","","",63,{"inputs":[{"name":"self"},{"name":"window"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"rectangle","","",63,{"inputs":[{"name":"self"},{"name":"rectangle"}],"output":null}],[10,"add_region","","",63,{"inputs":[{"name":"self"},{"name":"region"}],"output":null}],[8,"AppLaunchContextExt","","",null,null],[10,"set_desktop","","",64,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_display","","",64,{"inputs":[{"name":"self"},{"name":"display"}],"output":null}],[10,"set_icon","","",64,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_icon_name","","",64,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_screen","","",64,{"inputs":[{"name":"self"},{"name":"screen"}],"output":null}],[10,"set_timestamp","","",64,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_display","","",64,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_property_display_notify","","",64,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CursorExt","","",null,null],[10,"get_cursor_type","","",65,{"inputs":[{"name":"self"}],"output":{"name":"cursortype"}}],[10,"get_display","","",65,{"inputs":[{"name":"self"}],"output":{"name":"display"}}],[10,"get_image","","",65,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_surface","","",65,null],[10,"get_property_cursor_type","","",65,{"inputs":[{"name":"self"}],"output":{"name":"cursortype"}}],[10,"get_property_display","","",65,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_property_cursor_type_notify","","",65,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_display_notify","","",65,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"DeviceExt","","",null,null],[10,"get_associated_device","","",66,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_axes","","",66,{"inputs":[{"name":"self"}],"output":{"name":"axisflags"}}],[10,"get_axis_use","","",66,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"axisuse"}}],[10,"get_device_type","","",66,{"inputs":[{"name":"self"}],"output":{"name":"devicetype"}}],[10,"get_display","","",66,{"inputs":[{"name":"self"}],"output":{"name":"display"}}],[10,"get_has_cursor","","",66,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_key","","",66,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[10,"get_last_event_window","","",66,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_mode","","",66,{"inputs":[{"name":"self"}],"output":{"name":"inputmode"}}],[10,"get_n_axes","","",66,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_n_keys","","",66,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_name","","",66,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_position","","",66,null],[10,"get_position_double","","",66,null],[10,"get_product_id","","",66,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_seat","","",66,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_source","","",66,{"inputs":[{"name":"self"}],"output":{"name":"inputsource"}}],[10,"get_vendor_id","","",66,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_window_at_position","","",66,null],[10,"get_window_at_position_double","","",66,null],[10,"grab","","",66,{"inputs":[{"name":"self"},{"name":"window"},{"name":"grabownership"},{"name":"bool"},{"name":"eventmask"},{"name":"p"},{"name":"u32"}],"output":{"name":"grabstatus"}}],[10,"list_axes","","",66,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"list_slave_devices","","",66,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"set_axis_use","","",66,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"axisuse"}],"output":null}],[10,"set_key","","",66,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"modifiertype"}],"output":null}],[10,"set_mode","","",66,{"inputs":[{"name":"self"},{"name":"inputmode"}],"output":{"name":"bool"}}],[10,"ungrab","","",66,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"warp","","",66,{"inputs":[{"name":"self"},{"name":"screen"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"get_property_device_manager","","",66,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_property_input_mode","","",66,{"inputs":[{"name":"self"}],"output":{"name":"inputmode"}}],[10,"set_property_input_mode","","",66,{"inputs":[{"name":"self"},{"name":"inputmode"}],"output":null}],[10,"get_property_input_source","","",66,{"inputs":[{"name":"self"}],"output":{"name":"inputsource"}}],[10,"get_property_num_touches","","",66,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_seat","","",66,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_tool","","",66,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_property_type","","",66,{"inputs":[{"name":"self"}],"output":{"name":"devicetype"}}],[10,"connect_changed","","",66,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_tool_changed","","",66,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_associated_device_notify","","",66,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_axes_notify","","",66,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_device_manager_notify","","",66,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_display_notify","","",66,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_has_cursor_notify","","",66,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_input_mode_notify","","",66,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_input_source_notify","","",66,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_n_axes_notify","","",66,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_name_notify","","",66,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_num_touches_notify","","",66,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_product_id_notify","","",66,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_seat_notify","","",66,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_tool_notify","","",66,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_type_notify","","",66,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_vendor_id_notify","","",66,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"DeviceManagerExt","","",null,null],[10,"get_client_pointer","","",67,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_display","","",67,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"list_devices","","",67,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":{"name":"vec"}}],[10,"get_property_display","","",67,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_device_added","","",67,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_device_changed","","",67,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_device_removed","","",67,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_display_notify","","",67,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"DeviceToolExt","","",null,null],[10,"get_hardware_id","","",68,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[10,"get_serial","","",68,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[10,"get_tool_type","","",68,{"inputs":[{"name":"self"}],"output":{"name":"devicetooltype"}}],[10,"get_property_axes","","",68,{"inputs":[{"name":"self"}],"output":{"name":"axisflags"}}],[10,"get_property_hardware_id","","",68,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[10,"get_property_serial","","",68,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[10,"get_property_tool_type","","",68,{"inputs":[{"name":"self"}],"output":{"name":"devicetooltype"}}],[10,"connect_property_axes_notify","","",68,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_hardware_id_notify","","",68,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_serial_notify","","",68,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_tool_type_notify","","",68,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"DisplayExt","","",null,null],[10,"beep","","",69,{"inputs":[{"name":"self"}],"output":null}],[10,"close","","",69,{"inputs":[{"name":"self"}],"output":null}],[10,"device_is_grabbed","","",69,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"flush","","",69,{"inputs":[{"name":"self"}],"output":null}],[10,"get_app_launch_context","","",69,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_default_cursor_size","","",69,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_default_group","","",69,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[10,"get_default_screen","","",69,{"inputs":[{"name":"self"}],"output":{"name":"screen"}}],[10,"get_default_seat","","",69,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_device_manager","","",69,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_event","","",69,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_maximal_cursor_size","","",69,null],[10,"get_monitor","","",69,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_monitor_at_point","","",69,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_monitor_at_window","","",69,{"inputs":[{"name":"self"},{"name":"window"}],"output":{"name":"option"}}],[10,"get_n_monitors","","",69,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_n_screens","","",69,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_name","","",69,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[10,"get_pointer","","",69,null],[10,"get_primary_monitor","","",69,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_screen","","",69,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"screen"}}],[10,"get_window_at_pointer","","",69,null],[10,"has_pending","","",69,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_closed","","",69,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"keyboard_ungrab","","",69,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"list_devices","","",69,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"list_seats","","",69,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"notify_startup_complete","","",69,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"peek_event","","",69,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"pointer_is_grabbed","","",69,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"pointer_ungrab","","",69,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"put_event","","",69,{"inputs":[{"name":"self"},{"name":"event"}],"output":null}],[10,"request_selection_notification","","",69,{"inputs":[{"name":"self"},{"name":"atom"}],"output":{"name":"bool"}}],[10,"set_double_click_distance","","",69,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"set_double_click_time","","",69,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"store_clipboard","","",69,null],[10,"supports_clipboard_persistence","","",69,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"supports_composite","","",69,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"supports_cursor_alpha","","",69,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"supports_cursor_color","","",69,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"supports_input_shapes","","",69,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"supports_selection_notification","","",69,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"supports_shapes","","",69,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"sync","","",69,{"inputs":[{"name":"self"}],"output":null}],[10,"warp_pointer","","",69,{"inputs":[{"name":"self"},{"name":"screen"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"connect_closed","","",69,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_monitor_added","","",69,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_monitor_removed","","",69,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_opened","","",69,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_seat_added","","",69,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_seat_removed","","",69,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"DisplayManagerExt","","",null,null],[10,"get_default_display","","",70,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"list_displays","","",70,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"open_display","","",70,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"set_default_display","","",70,{"inputs":[{"name":"self"},{"name":"display"}],"output":null}],[10,"get_property_default_display","","",70,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_default_display","","",70,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"connect_display_opened","","",70,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_default_display_notify","","",70,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"DragContextExt","","",null,null],[10,"get_actions","","",71,{"inputs":[{"name":"self"}],"output":{"name":"dragaction"}}],[10,"get_dest_window","","",71,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[10,"get_device","","",71,{"inputs":[{"name":"self"}],"output":{"name":"device"}}],[10,"get_drag_window","","",71,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_protocol","","",71,{"inputs":[{"name":"self"}],"output":{"name":"dragprotocol"}}],[10,"get_selected_action","","",71,{"inputs":[{"name":"self"}],"output":{"name":"dragaction"}}],[10,"get_source_window","","",71,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[10,"get_suggested_action","","",71,{"inputs":[{"name":"self"}],"output":{"name":"dragaction"}}],[10,"list_targets","","",71,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"manage_dnd","","",71,{"inputs":[{"name":"self"},{"name":"window"},{"name":"dragaction"}],"output":{"name":"bool"}}],[10,"set_device","","",71,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_hotspot","","",71,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"connect_action_changed","","",71,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_cancel","","",71,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_dnd_finished","","",71,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_drop_performed","","",71,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"DrawingContextExt","","",null,null],[10,"get_cairo_context","","",72,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_clip","","",72,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_window","","",72,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"is_valid","","",72,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"connect_property_clip_notify","","",72,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_window_notify","","",72,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"FrameClockExt","","",null,null],[10,"begin_updating","","",73,{"inputs":[{"name":"self"}],"output":null}],[10,"end_updating","","",73,{"inputs":[{"name":"self"}],"output":null}],[10,"get_current_timings","","",73,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_frame_counter","","",73,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[10,"get_frame_time","","",73,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[10,"get_history_start","","",73,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[10,"get_timings","","",73,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"option"}}],[10,"request_phase","","",73,{"inputs":[{"name":"self"},{"name":"frameclockphase"}],"output":null}],[10,"connect_after_paint","","",73,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_before_paint","","",73,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_flush_events","","",73,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_layout","","",73,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_paint","","",73,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_resume_events","","",73,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_update","","",73,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"GLContextExt","","",null,null],[10,"get_debug_enabled","","",74,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_display","","",74,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_forward_compatible","","",74,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_required_version","","",74,null],[10,"get_shared_context","","",74,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_use_es","","",74,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_version","","",74,null],[10,"get_window","","",74,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"is_legacy","","",74,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"make_current","","",74,{"inputs":[{"name":"self"}],"output":null}],[10,"realize","","",74,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"set_debug_enabled","","",74,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_forward_compatible","","",74,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_required_version","","",74,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_use_es","","",74,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"connect_property_display_notify","","",74,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_shared_context_notify","","",74,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_window_notify","","",74,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"MonitorExt","","",null,null],[10,"get_display","","",75,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_geometry","","",75,{"inputs":[{"name":"self"}],"output":{"name":"rectangle"}}],[10,"get_height_mm","","",75,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_manufacturer","","",75,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_model","","",75,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_refresh_rate","","",75,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_scale_factor","","",75,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_subpixel_layout","","",75,{"inputs":[{"name":"self"}],"output":{"name":"subpixellayout"}}],[10,"get_width_mm","","",75,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_workarea","","",75,{"inputs":[{"name":"self"}],"output":{"name":"rectangle"}}],[10,"is_primary","","",75,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_display","","",75,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_property_geometry","","",75,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_property_height_mm","","",75,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_property_refresh_rate","","",75,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_property_scale_factor","","",75,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_property_width_mm","","",75,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_property_workarea","","",75,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_invalidate","","",75,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_display_notify","","",75,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_geometry_notify","","",75,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_height_mm_notify","","",75,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_manufacturer_notify","","",75,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_model_notify","","",75,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_refresh_rate_notify","","",75,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_scale_factor_notify","","",75,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_subpixel_layout_notify","","",75,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_width_mm_notify","","",75,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_workarea_notify","","",75,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ScreenExt","","",null,null],[10,"get_active_window","","",76,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_display","","",76,{"inputs":[{"name":"self"}],"output":{"name":"display"}}],[10,"get_height","","",76,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_height_mm","","",76,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_monitor_at_point","","",76,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[10,"get_monitor_at_window","","",76,{"inputs":[{"name":"self"},{"name":"window"}],"output":{"name":"i32"}}],[10,"get_monitor_geometry","","",76,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"rectangle"}}],[10,"get_monitor_height_mm","","",76,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"i32"}}],[10,"get_monitor_plug_name","","",76,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_monitor_scale_factor","","",76,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"i32"}}],[10,"get_monitor_width_mm","","",76,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"i32"}}],[10,"get_monitor_workarea","","",76,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"rectangle"}}],[10,"get_n_monitors","","",76,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_number","","",76,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_primary_monitor","","",76,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_resolution","","",76,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_rgba_visual","","",76,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_root_window","","",76,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_system_visual","","",76,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_toplevel_windows","","",76,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_width","","",76,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_width_mm","","",76,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_window_stack","","",76,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"is_composited","","",76,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"list_visuals","","",76,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"make_display_name","","",76,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[10,"set_font_options","","",76,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_resolution","","",76,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"get_property_resolution","","",76,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"set_property_resolution","","",76,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"connect_composited_changed","","",76,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_monitors_changed","","",76,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_size_changed","","",76,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_font_options_notify","","",76,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_resolution_notify","","",76,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"SeatExt","","",null,null],[10,"get_capabilities","","",77,{"inputs":[{"name":"self"}],"output":{"name":"seatcapabilities"}}],[10,"get_display","","",77,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_keyboard","","",77,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_pointer","","",77,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_slaves","","",77,{"inputs":[{"name":"self"},{"name":"seatcapabilities"}],"output":{"name":"vec"}}],[10,"ungrab","","",77,{"inputs":[{"name":"self"}],"output":null}],[10,"connect_device_added","","",77,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_device_removed","","",77,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_tool_added","","",77,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_tool_removed","","",77,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_display_notify","","",77,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"VisualExt","","",null,null],[10,"get_bits_per_rgb","","",78,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_blue_pixel_details","","",78,null],[10,"get_byte_order","","",78,{"inputs":[{"name":"self"}],"output":{"name":"byteorder"}}],[10,"get_colormap_size","","",78,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_depth","","",78,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_green_pixel_details","","",78,null],[10,"get_red_pixel_details","","",78,null],[10,"get_screen","","",78,{"inputs":[{"name":"self"}],"output":{"name":"screen"}}],[10,"get_visual_type","","",78,{"inputs":[{"name":"self"}],"output":{"name":"visualtype"}}],[8,"WindowExt","","",null,null],[10,"beep","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"begin_draw_frame","","",79,{"inputs":[{"name":"self"},{"name":"region"}],"output":{"name":"option"}}],[10,"begin_move_drag","","",79,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"u32"}],"output":null}],[10,"begin_move_drag_for_device","","",79,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"u32"}],"output":null}],[10,"begin_paint_rect","","",79,{"inputs":[{"name":"self"},{"name":"rectangle"}],"output":null}],[10,"begin_paint_region","","",79,{"inputs":[{"name":"self"},{"name":"region"}],"output":null}],[10,"begin_resize_drag","","",79,{"inputs":[{"name":"self"},{"name":"windowedge"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"u32"}],"output":null}],[10,"begin_resize_drag_for_device","","",79,{"inputs":[{"name":"self"},{"name":"windowedge"},{"name":"p"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"u32"}],"output":null}],[10,"configure_finished","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"coords_from_parent","","",79,null],[10,"coords_to_parent","","",79,null],[10,"create_gl_context","","",79,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"create_similar_image_surface","","",79,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"deiconify","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"destroy","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"destroy_notify","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"enable_synchronized_configure","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"end_draw_frame","","",79,{"inputs":[{"name":"self"},{"name":"drawingcontext"}],"output":null}],[10,"end_paint","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"ensure_native","","",79,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"flush","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"focus","","",79,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"freeze_toplevel_updates_libgtk_only","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"freeze_updates","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"fullscreen","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"fullscreen_on_monitor","","",79,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"geometry_changed","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"get_accept_focus","","",79,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_children","","",79,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_clip_region","","",79,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_composited","","",79,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_cursor","","",79,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_decorations","","",79,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_device_cursor","","",79,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[10,"get_device_events","","",79,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"eventmask"}}],[10,"get_device_position","","",79,null],[10,"get_device_position_double","","",79,null],[10,"get_display","","",79,{"inputs":[{"name":"self"}],"output":{"name":"display"}}],[10,"get_drag_protocol","","",79,null],[10,"get_effective_parent","","",79,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_effective_toplevel","","",79,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[10,"get_event_compression","","",79,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_events","","",79,{"inputs":[{"name":"self"}],"output":{"name":"eventmask"}}],[10,"get_focus_on_map","","",79,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_frame_clock","","",79,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_frame_extents","","",79,{"inputs":[{"name":"self"}],"output":{"name":"rectangle"}}],[10,"get_fullscreen_mode","","",79,{"inputs":[{"name":"self"}],"output":{"name":"fullscreenmode"}}],[10,"get_geometry","","",79,null],[10,"get_group","","",79,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_height","","",79,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_modal_hint","","",79,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_origin","","",79,null],[10,"get_parent","","",79,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_pass_through","","",79,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_pointer","","",79,null],[10,"get_position","","",79,null],[10,"get_root_coords","","",79,null],[10,"get_root_origin","","",79,null],[10,"get_scale_factor","","",79,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_screen","","",79,{"inputs":[{"name":"self"}],"output":{"name":"screen"}}],[10,"get_source_events","","",79,{"inputs":[{"name":"self"},{"name":"inputsource"}],"output":{"name":"eventmask"}}],[10,"get_state","","",79,{"inputs":[{"name":"self"}],"output":{"name":"windowstate"}}],[10,"get_support_multidevice","","",79,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_toplevel","","",79,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[10,"get_type_hint","","",79,{"inputs":[{"name":"self"}],"output":{"name":"windowtypehint"}}],[10,"get_update_area","","",79,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_visible_region","","",79,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_visual","","",79,{"inputs":[{"name":"self"}],"output":{"name":"visual"}}],[10,"get_width","","",79,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_window_type","","",79,{"inputs":[{"name":"self"}],"output":{"name":"windowtype"}}],[10,"has_native","","",79,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"hide","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"iconify","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"input_shape_combine_region","","",79,{"inputs":[{"name":"self"},{"name":"region"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"invalidate_rect","","",79,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"}],"output":null}],[10,"invalidate_region","","",79,{"inputs":[{"name":"self"},{"name":"region"},{"name":"bool"}],"output":null}],[10,"is_destroyed","","",79,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_input_only","","",79,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_shaped","","",79,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_viewable","","",79,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_visible","","",79,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"lower","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"mark_paint_from_clip","","",79,{"inputs":[{"name":"self"},{"name":"context"}],"output":null}],[10,"maximize","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"merge_child_input_shapes","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"merge_child_shapes","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"move_","","",79,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"move_region","","",79,{"inputs":[{"name":"self"},{"name":"region"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"move_resize","","",79,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"peek_children","","",79,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"process_updates","","",79,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"raise","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"register_dnd","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"reparent","","",79,{"inputs":[{"name":"self"},{"name":"window"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"resize","","",79,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"restack","","",79,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"}],"output":null}],[10,"scroll","","",79,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_accept_focus","","",79,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_background_rgba","","",79,{"inputs":[{"name":"self"},{"name":"rgba"}],"output":null}],[10,"set_child_input_shapes","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"set_child_shapes","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"set_composited","","",79,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_cursor","","",79,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_decorations","","",79,{"inputs":[{"name":"self"},{"name":"wmdecoration"}],"output":null}],[10,"set_device_cursor","","",79,{"inputs":[{"name":"self"},{"name":"p"},{"name":"cursor"}],"output":null}],[10,"set_device_events","","",79,{"inputs":[{"name":"self"},{"name":"p"},{"name":"eventmask"}],"output":null}],[10,"set_event_compression","","",79,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_events","","",79,{"inputs":[{"name":"self"},{"name":"eventmask"}],"output":null}],[10,"set_focus_on_map","","",79,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_fullscreen_mode","","",79,{"inputs":[{"name":"self"},{"name":"fullscreenmode"}],"output":null}],[10,"set_functions","","",79,{"inputs":[{"name":"self"},{"name":"wmfunction"}],"output":null}],[10,"set_geometry_hints","","",79,{"inputs":[{"name":"self"},{"name":"geometry"},{"name":"windowhints"}],"output":null}],[10,"set_group","","",79,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_icon_list","","",79,null],[10,"set_icon_name","","",79,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_keep_above","","",79,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_keep_below","","",79,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_modal_hint","","",79,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_opacity","","",79,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"set_opaque_region","","",79,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_override_redirect","","",79,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_pass_through","","",79,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_role","","",79,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_shadow_width","","",79,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_skip_pager_hint","","",79,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_skip_taskbar_hint","","",79,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_source_events","","",79,{"inputs":[{"name":"self"},{"name":"inputsource"},{"name":"eventmask"}],"output":null}],[10,"set_startup_id","","",79,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_static_gravities","","",79,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"bool"}}],[10,"set_support_multidevice","","",79,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_title","","",79,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_transient_for","","",79,{"inputs":[{"name":"self"},{"name":"window"}],"output":null}],[10,"set_type_hint","","",79,{"inputs":[{"name":"self"},{"name":"windowtypehint"}],"output":null}],[10,"set_urgency_hint","","",79,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"shape_combine_region","","",79,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"show","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"show_unraised","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"show_window_menu","","",79,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"bool"}}],[10,"stick","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"thaw_toplevel_updates_libgtk_only","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"thaw_updates","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"unfullscreen","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"unmaximize","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"unstick","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"withdraw","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"connect_create_surface","","",79,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_pick_embedded_child","","",79,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_cursor_notify","","",79,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"DeviceExtManual","","",null,null],[10,"get_axis","","",80,null],[8,"DeviceManagerExtManual","","",null,null],[10,"disable_multidevice","","",81,{"inputs":[],"output":null}],[8,"DragContextExtManual","","",null,null],[10,"drag_get_selection","","",82,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[10,"drag_abort","","",82,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"drop_reply","","",82,{"inputs":[{"name":"self"},{"name":"bool"},{"name":"u32"}],"output":null}],[10,"drop","","",82,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"drag_find_window_for_screen","","",82,null],[10,"drag_motion","","",82,{"inputs":[{"name":"self"},{"name":"window"},{"name":"dragprotocol"},{"name":"i32"},{"name":"i32"},{"name":"dragaction"},{"name":"dragaction"},{"name":"u32"}],"output":{"name":"bool"}}],[10,"drop_finish","","",82,{"inputs":[{"name":"self"},{"name":"bool"},{"name":"u32"}],"output":null}],[10,"drag_status","","",82,{"inputs":[{"name":"self"},{"name":"dragaction"},{"name":"u32"}],"output":null}],[10,"drag_drop_succeeded","","",82,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"drag_begin","","",82,null],[10,"drag_begin_for_device","","",82,null],[10,"drag_begin_from_point","","",82,null],[10,"drag_drop_done","","",82,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[8,"VisualExtManual","","",null,null],[10,"query_depths","","",83,{"inputs":[],"output":{"name":"vec"}}],[8,"WindowExtManual","","",null,null],[10,"set_user_data","","",84,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[10,"get_user_data","","",84,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[10,"set_geometry_hints","","",84,{"inputs":[{"name":"self"},{"name":"gdkgeometry"},{"name":"windowhints"}],"output":null}],[10,"get_default_root_window","","",84,{"inputs":[],"output":{"name":"window"}}],[10,"offscreen_window_set_embedder","","",84,{"inputs":[{"name":"self"},{"name":"window"}],"output":null}],[10,"offscreen_window_get_embedder","","",84,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"offscreen_window_get_surface","","",84,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_pixbuf","","",84,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[0,"functions","gdk","",null,null],[5,"beep","gdk::functions","",null,{"inputs":[],"output":null}],[5,"error_trap_pop","","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"error_trap_pop_ignored","","",null,{"inputs":[],"output":null}],[5,"error_trap_push","","",null,{"inputs":[],"output":null}],[5,"events_get_angle","","",null,{"inputs":[{"name":"event"},{"name":"event"}],"output":{"name":"option"}}],[5,"events_get_center","","",null,{"inputs":[{"name":"event"},{"name":"event"}],"output":{"name":"option"}}],[5,"events_get_distance","","",null,{"inputs":[{"name":"event"},{"name":"event"}],"output":{"name":"option"}}],[5,"events_pending","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"flush","","",null,{"inputs":[],"output":null}],[5,"get_display","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"get_display_arg_name","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"get_program_class","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"get_show_events","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"keyboard_grab","","",null,{"inputs":[{"name":"window"},{"name":"bool"},{"name":"u32"}],"output":{"name":"grabstatus"}}],[5,"keyboard_ungrab","","",null,{"inputs":[{"name":"u32"}],"output":null}],[5,"keyval_convert_case","","",null,null],[5,"keyval_from_name","","",null,{"inputs":[{"name":"str"}],"output":{"name":"u32"}}],[5,"keyval_is_lower","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"bool"}}],[5,"keyval_is_upper","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"bool"}}],[5,"keyval_to_lower","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"u32"}}],[5,"keyval_to_upper","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"u32"}}],[5,"list_visuals","","",null,{"inputs":[],"output":{"name":"vec"}}],[5,"notify_startup_complete","","",null,{"inputs":[],"output":null}],[5,"notify_startup_complete_with_id","","",null,{"inputs":[{"name":"str"}],"output":null}],[5,"pango_context_get","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"pango_context_get_for_display","","",null,{"inputs":[{"name":"display"}],"output":{"name":"option"}}],[5,"pango_context_get_for_screen","","",null,{"inputs":[{"name":"screen"}],"output":{"name":"option"}}],[5,"pixbuf_get_from_surface","","",null,{"inputs":[{"name":"surface"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[5,"pointer_grab","","",null,{"inputs":[{"name":"window"},{"name":"bool"},{"name":"eventmask"},{"name":"p"},{"name":"q"},{"name":"u32"}],"output":{"name":"grabstatus"}}],[5,"pointer_is_grabbed","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"pointer_ungrab","","",null,{"inputs":[{"name":"u32"}],"output":null}],[5,"pre_parse_libgtk_only","","",null,{"inputs":[],"output":null}],[5,"property_delete","","",null,{"inputs":[{"name":"window"},{"name":"atom"}],"output":null}],[5,"property_get","","",null,{"inputs":[{"name":"window"},{"name":"atom"},{"name":"atom"},{"name":"c_ulong"},{"name":"c_ulong"},{"name":"i32"}],"output":{"name":"option"}}],[5,"query_depths","","",null,{"inputs":[],"output":{"name":"vec"}}],[5,"selection_convert","","",null,{"inputs":[{"name":"window"},{"name":"atom"},{"name":"atom"},{"name":"u32"}],"output":null}],[5,"selection_owner_get","","",null,{"inputs":[{"name":"atom"}],"output":{"name":"option"}}],[5,"selection_owner_get_for_display","","",null,{"inputs":[{"name":"display"},{"name":"atom"}],"output":{"name":"option"}}],[5,"selection_owner_set","","",null,{"inputs":[{"name":"p"},{"name":"atom"},{"name":"u32"},{"name":"bool"}],"output":{"name":"bool"}}],[5,"selection_owner_set_for_display","","",null,{"inputs":[{"name":"display"},{"name":"p"},{"name":"atom"},{"name":"u32"},{"name":"bool"}],"output":{"name":"bool"}}],[5,"selection_send_notify","","",null,{"inputs":[{"name":"window"},{"name":"atom"},{"name":"atom"},{"name":"atom"},{"name":"u32"}],"output":null}],[5,"selection_send_notify_for_display","","",null,{"inputs":[{"name":"display"},{"name":"window"},{"name":"atom"},{"name":"atom"},{"name":"atom"},{"name":"u32"}],"output":null}],[5,"set_allowed_backends","","",null,{"inputs":[{"name":"str"}],"output":null}],[5,"set_double_click_time","","",null,{"inputs":[{"name":"u32"}],"output":null}],[5,"set_program_class","","",null,{"inputs":[{"name":"str"}],"output":null}],[5,"set_show_events","","",null,{"inputs":[{"name":"bool"}],"output":null}],[5,"synthesize_window_state","","",null,{"inputs":[{"name":"window"},{"name":"windowstate"},{"name":"windowstate"}],"output":null}],[5,"test_render_sync","","",null,{"inputs":[{"name":"window"}],"output":null}],[5,"test_simulate_button","","",null,{"inputs":[{"name":"window"},{"name":"i32"},{"name":"i32"},{"name":"u32"},{"name":"modifiertype"},{"name":"eventtype"}],"output":{"name":"bool"}}],[5,"test_simulate_key","","",null,{"inputs":[{"name":"window"},{"name":"i32"},{"name":"i32"},{"name":"u32"},{"name":"modifiertype"},{"name":"eventtype"}],"output":{"name":"bool"}}],[5,"text_property_to_utf8_list_for_display","","",null,null],[5,"threads_enter","","",null,{"inputs":[],"output":null}],[5,"threads_init","","",null,{"inputs":[],"output":null}],[5,"threads_leave","","",null,{"inputs":[],"output":null}],[5,"unicode_to_keyval","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"u32"}}],[5,"utf8_to_string_target","","",null,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[0,"enums","gdk","",null,null],[0,"key","gdk::enums","",null,null],[6,"Key","gdk::enums::key","",null,null],[17,"VoidSymbol","","",null,null],[17,"BackSpace","","",null,null],[17,"Tab","","",null,null],[17,"Linefeed","","",null,null],[17,"Clear","","",null,null],[17,"Return","","",null,null],[17,"Pause","","",null,null],[17,"Scroll_Lock","","",null,null],[17,"Sys_Req","","",null,null],[17,"Escape","","",null,null],[17,"Delete","","",null,null],[17,"Multi_key","","",null,null],[17,"Codeinput","","",null,null],[17,"SingleCandidate","","",null,null],[17,"MultipleCandidate","","",null,null],[17,"PreviousCandidate","","",null,null],[17,"Kanji","","",null,null],[17,"Muhenkan","","",null,null],[17,"Henkan_Mode","","",null,null],[17,"Henkan","","",null,null],[17,"Romaji","","",null,null],[17,"Hiragana","","",null,null],[17,"Katakana","","",null,null],[17,"Hiragana_Katakana","","",null,null],[17,"Zenkaku","","",null,null],[17,"Hankaku","","",null,null],[17,"Zenkaku_Hankaku","","",null,null],[17,"Touroku","","",null,null],[17,"Massyo","","",null,null],[17,"Kana_Lock","","",null,null],[17,"Kana_Shift","","",null,null],[17,"Eisu_Shift","","",null,null],[17,"Eisu_toggle","","",null,null],[17,"Kanji_Bangou","","",null,null],[17,"Zen_Koho","","",null,null],[17,"Mae_Koho","","",null,null],[17,"Home","","",null,null],[17,"Left","","",null,null],[17,"Up","","",null,null],[17,"Right","","",null,null],[17,"Down","","",null,null],[17,"Prior","","",null,null],[17,"Page_Up","","",null,null],[17,"Next","","",null,null],[17,"Page_Down","","",null,null],[17,"End","","",null,null],[17,"Begin","","",null,null],[17,"Select","","",null,null],[17,"Print","","",null,null],[17,"Execute","","",null,null],[17,"Insert","","",null,null],[17,"Undo","","",null,null],[17,"Redo","","",null,null],[17,"Menu","","",null,null],[17,"Find","","",null,null],[17,"Cancel","","",null,null],[17,"Help","","",null,null],[17,"Break","","",null,null],[17,"Mode_switch","","",null,null],[17,"script_switch","","",null,null],[17,"Num_Lock","","",null,null],[17,"KP_Space","","",null,null],[17,"KP_Tab","","",null,null],[17,"KP_Enter","","",null,null],[17,"KP_F1","","",null,null],[17,"KP_F2","","",null,null],[17,"KP_F3","","",null,null],[17,"KP_F4","","",null,null],[17,"KP_Home","","",null,null],[17,"KP_Left","","",null,null],[17,"KP_Up","","",null,null],[17,"KP_Right","","",null,null],[17,"KP_Down","","",null,null],[17,"KP_Prior","","",null,null],[17,"KP_Page_Up","","",null,null],[17,"KP_Next","","",null,null],[17,"KP_Page_Down","","",null,null],[17,"KP_End","","",null,null],[17,"KP_Begin","","",null,null],[17,"KP_Insert","","",null,null],[17,"KP_Delete","","",null,null],[17,"KP_Equal","","",null,null],[17,"KP_Multiply","","",null,null],[17,"KP_Add","","",null,null],[17,"KP_Separator","","",null,null],[17,"KP_Subtract","","",null,null],[17,"KP_Decimal","","",null,null],[17,"KP_Divide","","",null,null],[17,"KP_0","","",null,null],[17,"KP_1","","",null,null],[17,"KP_2","","",null,null],[17,"KP_3","","",null,null],[17,"KP_4","","",null,null],[17,"KP_5","","",null,null],[17,"KP_6","","",null,null],[17,"KP_7","","",null,null],[17,"KP_8","","",null,null],[17,"KP_9","","",null,null],[17,"F1","","",null,null],[17,"F2","","",null,null],[17,"F3","","",null,null],[17,"F4","","",null,null],[17,"F5","","",null,null],[17,"F6","","",null,null],[17,"F7","","",null,null],[17,"F8","","",null,null],[17,"F9","","",null,null],[17,"F10","","",null,null],[17,"F11","","",null,null],[17,"L1","","",null,null],[17,"F12","","",null,null],[17,"L2","","",null,null],[17,"F13","","",null,null],[17,"L3","","",null,null],[17,"F14","","",null,null],[17,"L4","","",null,null],[17,"F15","","",null,null],[17,"L5","","",null,null],[17,"F16","","",null,null],[17,"L6","","",null,null],[17,"F17","","",null,null],[17,"L7","","",null,null],[17,"F18","","",null,null],[17,"L8","","",null,null],[17,"F19","","",null,null],[17,"L9","","",null,null],[17,"F20","","",null,null],[17,"L10","","",null,null],[17,"F21","","",null,null],[17,"R1","","",null,null],[17,"F22","","",null,null],[17,"R2","","",null,null],[17,"F23","","",null,null],[17,"R3","","",null,null],[17,"F24","","",null,null],[17,"R4","","",null,null],[17,"F25","","",null,null],[17,"R5","","",null,null],[17,"F26","","",null,null],[17,"R6","","",null,null],[17,"F27","","",null,null],[17,"R7","","",null,null],[17,"F28","","",null,null],[17,"R8","","",null,null],[17,"F29","","",null,null],[17,"R9","","",null,null],[17,"F30","","",null,null],[17,"R10","","",null,null],[17,"F31","","",null,null],[17,"R11","","",null,null],[17,"F32","","",null,null],[17,"R12","","",null,null],[17,"F33","","",null,null],[17,"R13","","",null,null],[17,"F34","","",null,null],[17,"R14","","",null,null],[17,"F35","","",null,null],[17,"R15","","",null,null],[17,"Shift_L","","",null,null],[17,"Shift_R","","",null,null],[17,"Control_L","","",null,null],[17,"Control_R","","",null,null],[17,"Caps_Lock","","",null,null],[17,"Shift_Lock","","",null,null],[17,"Meta_L","","",null,null],[17,"Meta_R","","",null,null],[17,"Alt_L","","",null,null],[17,"Alt_R","","",null,null],[17,"Super_L","","",null,null],[17,"Super_R","","",null,null],[17,"Hyper_L","","",null,null],[17,"Hyper_R","","",null,null],[17,"ISO_Lock","","",null,null],[17,"ISO_Level2_Latch","","",null,null],[17,"ISO_Level3_Shift","","",null,null],[17,"ISO_Level3_Latch","","",null,null],[17,"ISO_Level3_Lock","","",null,null],[17,"ISO_Level5_Shift","","",null,null],[17,"ISO_Level5_Latch","","",null,null],[17,"ISO_Level5_Lock","","",null,null],[17,"ISO_Group_Shift","","",null,null],[17,"ISO_Group_Latch","","",null,null],[17,"ISO_Group_Lock","","",null,null],[17,"ISO_Next_Group","","",null,null],[17,"ISO_Next_Group_Lock","","",null,null],[17,"ISO_Prev_Group","","",null,null],[17,"ISO_Prev_Group_Lock","","",null,null],[17,"ISO_First_Group","","",null,null],[17,"ISO_First_Group_Lock","","",null,null],[17,"ISO_Last_Group","","",null,null],[17,"ISO_Last_Group_Lock","","",null,null],[17,"ISO_Left_Tab","","",null,null],[17,"ISO_Move_Line_Up","","",null,null],[17,"ISO_Move_Line_Down","","",null,null],[17,"ISO_Partial_Line_Up","","",null,null],[17,"ISO_Partial_Line_Down","","",null,null],[17,"ISO_Partial_Space_Left","","",null,null],[17,"ISO_Partial_Space_Right","","",null,null],[17,"ISO_Set_Margin_Left","","",null,null],[17,"ISO_Set_Margin_Right","","",null,null],[17,"ISO_Release_Margin_Left","","",null,null],[17,"ISO_Release_Margin_Right","","",null,null],[17,"ISO_Release_Both_Margins","","",null,null],[17,"ISO_Fast_Cursor_Left","","",null,null],[17,"ISO_Fast_Cursor_Right","","",null,null],[17,"ISO_Fast_Cursor_Up","","",null,null],[17,"ISO_Fast_Cursor_Down","","",null,null],[17,"ISO_Continuous_Underline","","",null,null],[17,"ISO_Discontinuous_Underline","","",null,null],[17,"ISO_Emphasize","","",null,null],[17,"ISO_Center_Object","","",null,null],[17,"ISO_Enter","","",null,null],[17,"dead_grave","","",null,null],[17,"dead_acute","","",null,null],[17,"dead_circumflex","","",null,null],[17,"dead_tilde","","",null,null],[17,"dead_perispomeni","","",null,null],[17,"dead_macron","","",null,null],[17,"dead_breve","","",null,null],[17,"dead_abovedot","","",null,null],[17,"dead_diaeresis","","",null,null],[17,"dead_abovering","","",null,null],[17,"dead_doubleacute","","",null,null],[17,"dead_caron","","",null,null],[17,"dead_cedilla","","",null,null],[17,"dead_ogonek","","",null,null],[17,"dead_iota","","",null,null],[17,"dead_voiced_sound","","",null,null],[17,"dead_semivoiced_sound","","",null,null],[17,"dead_belowdot","","",null,null],[17,"dead_hook","","",null,null],[17,"dead_horn","","",null,null],[17,"dead_stroke","","",null,null],[17,"dead_abovecomma","","",null,null],[17,"dead_psili","","",null,null],[17,"dead_abovereversedcomma","","",null,null],[17,"dead_dasia","","",null,null],[17,"dead_doublegrave","","",null,null],[17,"dead_belowring","","",null,null],[17,"dead_belowmacron","","",null,null],[17,"dead_belowcircumflex","","",null,null],[17,"dead_belowtilde","","",null,null],[17,"dead_belowbreve","","",null,null],[17,"dead_belowdiaeresis","","",null,null],[17,"dead_invertedbreve","","",null,null],[17,"dead_belowcomma","","",null,null],[17,"dead_currency","","",null,null],[17,"dead_a","","",null,null],[17,"dead_A","","",null,null],[17,"dead_e","","",null,null],[17,"dead_E","","",null,null],[17,"dead_i","","",null,null],[17,"dead_I","","",null,null],[17,"dead_o","","",null,null],[17,"dead_O","","",null,null],[17,"dead_u","","",null,null],[17,"dead_U","","",null,null],[17,"dead_small_schwa","","",null,null],[17,"dead_capital_schwa","","",null,null],[17,"dead_greek","","",null,null],[17,"First_Virtual_Screen","","",null,null],[17,"Prev_Virtual_Screen","","",null,null],[17,"Next_Virtual_Screen","","",null,null],[17,"Last_Virtual_Screen","","",null,null],[17,"Terminate_Server","","",null,null],[17,"AccessX_Enable","","",null,null],[17,"AccessX_Feedback_Enable","","",null,null],[17,"RepeatKeys_Enable","","",null,null],[17,"SlowKeys_Enable","","",null,null],[17,"BounceKeys_Enable","","",null,null],[17,"StickyKeys_Enable","","",null,null],[17,"MouseKeys_Enable","","",null,null],[17,"MouseKeys_Accel_Enable","","",null,null],[17,"Overlay1_Enable","","",null,null],[17,"Overlay2_Enable","","",null,null],[17,"AudibleBell_Enable","","",null,null],[17,"Pointer_Left","","",null,null],[17,"Pointer_Right","","",null,null],[17,"Pointer_Up","","",null,null],[17,"Pointer_Down","","",null,null],[17,"Pointer_UpLeft","","",null,null],[17,"Pointer_UpRight","","",null,null],[17,"Pointer_DownLeft","","",null,null],[17,"Pointer_DownRight","","",null,null],[17,"Pointer_Button_Dflt","","",null,null],[17,"Pointer_Button1","","",null,null],[17,"Pointer_Button2","","",null,null],[17,"Pointer_Button3","","",null,null],[17,"Pointer_Button4","","",null,null],[17,"Pointer_Button5","","",null,null],[17,"Pointer_DblClick_Dflt","","",null,null],[17,"Pointer_DblClick1","","",null,null],[17,"Pointer_DblClick2","","",null,null],[17,"Pointer_DblClick3","","",null,null],[17,"Pointer_DblClick4","","",null,null],[17,"Pointer_DblClick5","","",null,null],[17,"Pointer_Drag_Dflt","","",null,null],[17,"Pointer_Drag1","","",null,null],[17,"Pointer_Drag2","","",null,null],[17,"Pointer_Drag3","","",null,null],[17,"Pointer_Drag4","","",null,null],[17,"Pointer_Drag5","","",null,null],[17,"Pointer_EnableKeys","","",null,null],[17,"Pointer_Accelerate","","",null,null],[17,"Pointer_DfltBtnNext","","",null,null],[17,"Pointer_DfltBtnPrev","","",null,null],[17,"ch","","",null,null],[17,"Ch","","",null,null],[17,"CH","","",null,null],[17,"c_h","","",null,null],[17,"C_h","","",null,null],[17,"C_H","","",null,null],[17,"_3270_Duplicate","","",null,null],[17,"_3270_FieldMark","","",null,null],[17,"_3270_Right2","","",null,null],[17,"_3270_Left2","","",null,null],[17,"_3270_BackTab","","",null,null],[17,"_3270_EraseEOF","","",null,null],[17,"_3270_EraseInput","","",null,null],[17,"_3270_Reset","","",null,null],[17,"_3270_Quit","","",null,null],[17,"_3270_PA1","","",null,null],[17,"_3270_PA2","","",null,null],[17,"_3270_PA3","","",null,null],[17,"_3270_Test","","",null,null],[17,"_3270_Attn","","",null,null],[17,"_3270_CursorBlink","","",null,null],[17,"_3270_AltCursor","","",null,null],[17,"_3270_KeyClick","","",null,null],[17,"_3270_Jump","","",null,null],[17,"_3270_Ident","","",null,null],[17,"_3270_Rule","","",null,null],[17,"_3270_Copy","","",null,null],[17,"_3270_Play","","",null,null],[17,"_3270_Setup","","",null,null],[17,"_3270_Record","","",null,null],[17,"_3270_ChangeScreen","","",null,null],[17,"_3270_DeleteWord","","",null,null],[17,"_3270_ExSelect","","",null,null],[17,"_3270_CursorSelect","","",null,null],[17,"_3270_PrintScreen","","",null,null],[17,"_3270_Enter","","",null,null],[17,"space","","",null,null],[17,"exclam","","",null,null],[17,"quotedbl","","",null,null],[17,"numbersign","","",null,null],[17,"dollar","","",null,null],[17,"percent","","",null,null],[17,"ampersand","","",null,null],[17,"apostrophe","","",null,null],[17,"quoteright","","",null,null],[17,"parenleft","","",null,null],[17,"parenright","","",null,null],[17,"asterisk","","",null,null],[17,"plus","","",null,null],[17,"comma","","",null,null],[17,"minus","","",null,null],[17,"period","","",null,null],[17,"slash","","",null,null],[17,"_0","","",null,null],[17,"_1","","",null,null],[17,"_2","","",null,null],[17,"_3","","",null,null],[17,"_4","","",null,null],[17,"_5","","",null,null],[17,"_6","","",null,null],[17,"_7","","",null,null],[17,"_8","","",null,null],[17,"_9","","",null,null],[17,"colon","","",null,null],[17,"semicolon","","",null,null],[17,"less","","",null,null],[17,"equal","","",null,null],[17,"greater","","",null,null],[17,"question","","",null,null],[17,"at","","",null,null],[17,"A","","",null,null],[17,"B","","",null,null],[17,"C","","",null,null],[17,"D","","",null,null],[17,"E","","",null,null],[17,"F","","",null,null],[17,"G","","",null,null],[17,"H","","",null,null],[17,"I","","",null,null],[17,"J","","",null,null],[17,"K","","",null,null],[17,"L","","",null,null],[17,"M","","",null,null],[17,"N","","",null,null],[17,"O","","",null,null],[17,"P","","",null,null],[17,"Q","","",null,null],[17,"R","","",null,null],[17,"S","","",null,null],[17,"T","","",null,null],[17,"U","","",null,null],[17,"V","","",null,null],[17,"W","","",null,null],[17,"X","","",null,null],[17,"Y","","",null,null],[17,"Z","","",null,null],[17,"bracketleft","","",null,null],[17,"backslash","","",null,null],[17,"bracketright","","",null,null],[17,"asciicircum","","",null,null],[17,"underscore","","",null,null],[17,"grave","","",null,null],[17,"quoteleft","","",null,null],[17,"a","","",null,null],[17,"b","","",null,null],[17,"c","","",null,null],[17,"d","","",null,null],[17,"e","","",null,null],[17,"f","","",null,null],[17,"g","","",null,null],[17,"h","","",null,null],[17,"i","","",null,null],[17,"j","","",null,null],[17,"k","","",null,null],[17,"l","","",null,null],[17,"m","","",null,null],[17,"n","","",null,null],[17,"o","","",null,null],[17,"p","","",null,null],[17,"q","","",null,null],[17,"r","","",null,null],[17,"s","","",null,null],[17,"t","","",null,null],[17,"u","","",null,null],[17,"v","","",null,null],[17,"w","","",null,null],[17,"x","","",null,null],[17,"y","","",null,null],[17,"z","","",null,null],[17,"braceleft","","",null,null],[17,"bar","","",null,null],[17,"braceright","","",null,null],[17,"asciitilde","","",null,null],[17,"nobreakspace","","",null,null],[17,"exclamdown","","",null,null],[17,"cent","","",null,null],[17,"sterling","","",null,null],[17,"currency","","",null,null],[17,"yen","","",null,null],[17,"brokenbar","","",null,null],[17,"section","","",null,null],[17,"diaeresis","","",null,null],[17,"copyright","","",null,null],[17,"ordfeminine","","",null,null],[17,"guillemotleft","","",null,null],[17,"notsign","","",null,null],[17,"hyphen","","",null,null],[17,"registered","","",null,null],[17,"macron","","",null,null],[17,"degree","","",null,null],[17,"plusminus","","",null,null],[17,"twosuperior","","",null,null],[17,"threesuperior","","",null,null],[17,"acute","","",null,null],[17,"mu","","",null,null],[17,"paragraph","","",null,null],[17,"periodcentered","","",null,null],[17,"cedilla","","",null,null],[17,"onesuperior","","",null,null],[17,"masculine","","",null,null],[17,"guillemotright","","",null,null],[17,"onequarter","","",null,null],[17,"onehalf","","",null,null],[17,"threequarters","","",null,null],[17,"questiondown","","",null,null],[17,"Agrave","","",null,null],[17,"Aacute","","",null,null],[17,"Acircumflex","","",null,null],[17,"Atilde","","",null,null],[17,"Adiaeresis","","",null,null],[17,"Aring","","",null,null],[17,"AE","","",null,null],[17,"Ccedilla","","",null,null],[17,"Egrave","","",null,null],[17,"Eacute","","",null,null],[17,"Ecircumflex","","",null,null],[17,"Ediaeresis","","",null,null],[17,"Igrave","","",null,null],[17,"Iacute","","",null,null],[17,"Icircumflex","","",null,null],[17,"Idiaeresis","","",null,null],[17,"ETH","","",null,null],[17,"Eth","","",null,null],[17,"Ntilde","","",null,null],[17,"Ograve","","",null,null],[17,"Oacute","","",null,null],[17,"Ocircumflex","","",null,null],[17,"Otilde","","",null,null],[17,"Odiaeresis","","",null,null],[17,"multiply","","",null,null],[17,"Oslash","","",null,null],[17,"Ooblique","","",null,null],[17,"Ugrave","","",null,null],[17,"Uacute","","",null,null],[17,"Ucircumflex","","",null,null],[17,"Udiaeresis","","",null,null],[17,"Yacute","","",null,null],[17,"THORN","","",null,null],[17,"Thorn","","",null,null],[17,"ssharp","","",null,null],[17,"agrave","","",null,null],[17,"aacute","","",null,null],[17,"acircumflex","","",null,null],[17,"atilde","","",null,null],[17,"adiaeresis","","",null,null],[17,"aring","","",null,null],[17,"ae","","",null,null],[17,"ccedilla","","",null,null],[17,"egrave","","",null,null],[17,"eacute","","",null,null],[17,"ecircumflex","","",null,null],[17,"ediaeresis","","",null,null],[17,"igrave","","",null,null],[17,"iacute","","",null,null],[17,"icircumflex","","",null,null],[17,"idiaeresis","","",null,null],[17,"eth","","",null,null],[17,"ntilde","","",null,null],[17,"ograve","","",null,null],[17,"oacute","","",null,null],[17,"ocircumflex","","",null,null],[17,"otilde","","",null,null],[17,"odiaeresis","","",null,null],[17,"division","","",null,null],[17,"oslash","","",null,null],[17,"ooblique","","",null,null],[17,"ugrave","","",null,null],[17,"uacute","","",null,null],[17,"ucircumflex","","",null,null],[17,"udiaeresis","","",null,null],[17,"yacute","","",null,null],[17,"thorn","","",null,null],[17,"ydiaeresis","","",null,null],[17,"Aogonek","","",null,null],[17,"breve","","",null,null],[17,"Lstroke","","",null,null],[17,"Lcaron","","",null,null],[17,"Sacute","","",null,null],[17,"Scaron","","",null,null],[17,"Scedilla","","",null,null],[17,"Tcaron","","",null,null],[17,"Zacute","","",null,null],[17,"Zcaron","","",null,null],[17,"Zabovedot","","",null,null],[17,"aogonek","","",null,null],[17,"ogonek","","",null,null],[17,"lstroke","","",null,null],[17,"lcaron","","",null,null],[17,"sacute","","",null,null],[17,"caron","","",null,null],[17,"scaron","","",null,null],[17,"scedilla","","",null,null],[17,"tcaron","","",null,null],[17,"zacute","","",null,null],[17,"doubleacute","","",null,null],[17,"zcaron","","",null,null],[17,"zabovedot","","",null,null],[17,"Racute","","",null,null],[17,"Abreve","","",null,null],[17,"Lacute","","",null,null],[17,"Cacute","","",null,null],[17,"Ccaron","","",null,null],[17,"Eogonek","","",null,null],[17,"Ecaron","","",null,null],[17,"Dcaron","","",null,null],[17,"Dstroke","","",null,null],[17,"Nacute","","",null,null],[17,"Ncaron","","",null,null],[17,"Odoubleacute","","",null,null],[17,"Rcaron","","",null,null],[17,"Uring","","",null,null],[17,"Udoubleacute","","",null,null],[17,"Tcedilla","","",null,null],[17,"racute","","",null,null],[17,"abreve","","",null,null],[17,"lacute","","",null,null],[17,"cacute","","",null,null],[17,"ccaron","","",null,null],[17,"eogonek","","",null,null],[17,"ecaron","","",null,null],[17,"dcaron","","",null,null],[17,"dstroke","","",null,null],[17,"nacute","","",null,null],[17,"ncaron","","",null,null],[17,"odoubleacute","","",null,null],[17,"rcaron","","",null,null],[17,"uring","","",null,null],[17,"udoubleacute","","",null,null],[17,"tcedilla","","",null,null],[17,"abovedot","","",null,null],[17,"Hstroke","","",null,null],[17,"Hcircumflex","","",null,null],[17,"Iabovedot","","",null,null],[17,"Gbreve","","",null,null],[17,"Jcircumflex","","",null,null],[17,"hstroke","","",null,null],[17,"hcircumflex","","",null,null],[17,"idotless","","",null,null],[17,"gbreve","","",null,null],[17,"jcircumflex","","",null,null],[17,"Cabovedot","","",null,null],[17,"Ccircumflex","","",null,null],[17,"Gabovedot","","",null,null],[17,"Gcircumflex","","",null,null],[17,"Ubreve","","",null,null],[17,"Scircumflex","","",null,null],[17,"cabovedot","","",null,null],[17,"ccircumflex","","",null,null],[17,"gabovedot","","",null,null],[17,"gcircumflex","","",null,null],[17,"ubreve","","",null,null],[17,"scircumflex","","",null,null],[17,"kra","","",null,null],[17,"kappa","","",null,null],[17,"Rcedilla","","",null,null],[17,"Itilde","","",null,null],[17,"Lcedilla","","",null,null],[17,"Emacron","","",null,null],[17,"Gcedilla","","",null,null],[17,"Tslash","","",null,null],[17,"rcedilla","","",null,null],[17,"itilde","","",null,null],[17,"lcedilla","","",null,null],[17,"emacron","","",null,null],[17,"gcedilla","","",null,null],[17,"tslash","","",null,null],[17,"ENG","","",null,null],[17,"eng","","",null,null],[17,"Amacron","","",null,null],[17,"Iogonek","","",null,null],[17,"Eabovedot","","",null,null],[17,"Imacron","","",null,null],[17,"Ncedilla","","",null,null],[17,"Omacron","","",null,null],[17,"Kcedilla","","",null,null],[17,"Uogonek","","",null,null],[17,"Utilde","","",null,null],[17,"Umacron","","",null,null],[17,"amacron","","",null,null],[17,"iogonek","","",null,null],[17,"eabovedot","","",null,null],[17,"imacron","","",null,null],[17,"ncedilla","","",null,null],[17,"omacron","","",null,null],[17,"kcedilla","","",null,null],[17,"uogonek","","",null,null],[17,"utilde","","",null,null],[17,"umacron","","",null,null],[17,"Wcircumflex","","",null,null],[17,"wcircumflex","","",null,null],[17,"Ycircumflex","","",null,null],[17,"ycircumflex","","",null,null],[17,"Babovedot","","",null,null],[17,"babovedot","","",null,null],[17,"Dabovedot","","",null,null],[17,"dabovedot","","",null,null],[17,"Fabovedot","","",null,null],[17,"fabovedot","","",null,null],[17,"Mabovedot","","",null,null],[17,"mabovedot","","",null,null],[17,"Pabovedot","","",null,null],[17,"pabovedot","","",null,null],[17,"Sabovedot","","",null,null],[17,"sabovedot","","",null,null],[17,"Tabovedot","","",null,null],[17,"tabovedot","","",null,null],[17,"Wgrave","","",null,null],[17,"wgrave","","",null,null],[17,"Wacute","","",null,null],[17,"wacute","","",null,null],[17,"Wdiaeresis","","",null,null],[17,"wdiaeresis","","",null,null],[17,"Ygrave","","",null,null],[17,"ygrave","","",null,null],[17,"OE","","",null,null],[17,"oe","","",null,null],[17,"Ydiaeresis","","",null,null],[17,"overline","","",null,null],[17,"kana_fullstop","","",null,null],[17,"kana_openingbracket","","",null,null],[17,"kana_closingbracket","","",null,null],[17,"kana_comma","","",null,null],[17,"kana_conjunctive","","",null,null],[17,"kana_middledot","","",null,null],[17,"kana_WO","","",null,null],[17,"kana_a","","",null,null],[17,"kana_i","","",null,null],[17,"kana_u","","",null,null],[17,"kana_e","","",null,null],[17,"kana_o","","",null,null],[17,"kana_ya","","",null,null],[17,"kana_yu","","",null,null],[17,"kana_yo","","",null,null],[17,"kana_tsu","","",null,null],[17,"kana_tu","","",null,null],[17,"prolongedsound","","",null,null],[17,"kana_A","","",null,null],[17,"kana_I","","",null,null],[17,"kana_U","","",null,null],[17,"kana_E","","",null,null],[17,"kana_O","","",null,null],[17,"kana_KA","","",null,null],[17,"kana_KI","","",null,null],[17,"kana_KU","","",null,null],[17,"kana_KE","","",null,null],[17,"kana_KO","","",null,null],[17,"kana_SA","","",null,null],[17,"kana_SHI","","",null,null],[17,"kana_SU","","",null,null],[17,"kana_SE","","",null,null],[17,"kana_SO","","",null,null],[17,"kana_TA","","",null,null],[17,"kana_CHI","","",null,null],[17,"kana_TI","","",null,null],[17,"kana_TSU","","",null,null],[17,"kana_TU","","",null,null],[17,"kana_TE","","",null,null],[17,"kana_TO","","",null,null],[17,"kana_NA","","",null,null],[17,"kana_NI","","",null,null],[17,"kana_NU","","",null,null],[17,"kana_NE","","",null,null],[17,"kana_NO","","",null,null],[17,"kana_HA","","",null,null],[17,"kana_HI","","",null,null],[17,"kana_FU","","",null,null],[17,"kana_HU","","",null,null],[17,"kana_HE","","",null,null],[17,"kana_HO","","",null,null],[17,"kana_MA","","",null,null],[17,"kana_MI","","",null,null],[17,"kana_MU","","",null,null],[17,"kana_ME","","",null,null],[17,"kana_MO","","",null,null],[17,"kana_YA","","",null,null],[17,"kana_YU","","",null,null],[17,"kana_YO","","",null,null],[17,"kana_RA","","",null,null],[17,"kana_RI","","",null,null],[17,"kana_RU","","",null,null],[17,"kana_RE","","",null,null],[17,"kana_RO","","",null,null],[17,"kana_WA","","",null,null],[17,"kana_N","","",null,null],[17,"voicedsound","","",null,null],[17,"semivoicedsound","","",null,null],[17,"kana_switch","","",null,null],[17,"Farsi_0","","",null,null],[17,"Farsi_1","","",null,null],[17,"Farsi_2","","",null,null],[17,"Farsi_3","","",null,null],[17,"Farsi_4","","",null,null],[17,"Farsi_5","","",null,null],[17,"Farsi_6","","",null,null],[17,"Farsi_7","","",null,null],[17,"Farsi_8","","",null,null],[17,"Farsi_9","","",null,null],[17,"Arabic_percent","","",null,null],[17,"Arabic_superscript_alef","","",null,null],[17,"Arabic_tteh","","",null,null],[17,"Arabic_peh","","",null,null],[17,"Arabic_tcheh","","",null,null],[17,"Arabic_ddal","","",null,null],[17,"Arabic_rreh","","",null,null],[17,"Arabic_comma","","",null,null],[17,"Arabic_fullstop","","",null,null],[17,"Arabic_0","","",null,null],[17,"Arabic_1","","",null,null],[17,"Arabic_2","","",null,null],[17,"Arabic_3","","",null,null],[17,"Arabic_4","","",null,null],[17,"Arabic_5","","",null,null],[17,"Arabic_6","","",null,null],[17,"Arabic_7","","",null,null],[17,"Arabic_8","","",null,null],[17,"Arabic_9","","",null,null],[17,"Arabic_semicolon","","",null,null],[17,"Arabic_question_mark","","",null,null],[17,"Arabic_hamza","","",null,null],[17,"Arabic_maddaonalef","","",null,null],[17,"Arabic_hamzaonalef","","",null,null],[17,"Arabic_hamzaonwaw","","",null,null],[17,"Arabic_hamzaunderalef","","",null,null],[17,"Arabic_hamzaonyeh","","",null,null],[17,"Arabic_alef","","",null,null],[17,"Arabic_beh","","",null,null],[17,"Arabic_tehmarbuta","","",null,null],[17,"Arabic_teh","","",null,null],[17,"Arabic_theh","","",null,null],[17,"Arabic_jeem","","",null,null],[17,"Arabic_hah","","",null,null],[17,"Arabic_khah","","",null,null],[17,"Arabic_dal","","",null,null],[17,"Arabic_thal","","",null,null],[17,"Arabic_ra","","",null,null],[17,"Arabic_zain","","",null,null],[17,"Arabic_seen","","",null,null],[17,"Arabic_sheen","","",null,null],[17,"Arabic_sad","","",null,null],[17,"Arabic_dad","","",null,null],[17,"Arabic_tah","","",null,null],[17,"Arabic_zah","","",null,null],[17,"Arabic_ain","","",null,null],[17,"Arabic_ghain","","",null,null],[17,"Arabic_tatweel","","",null,null],[17,"Arabic_feh","","",null,null],[17,"Arabic_qaf","","",null,null],[17,"Arabic_kaf","","",null,null],[17,"Arabic_lam","","",null,null],[17,"Arabic_meem","","",null,null],[17,"Arabic_noon","","",null,null],[17,"Arabic_ha","","",null,null],[17,"Arabic_heh","","",null,null],[17,"Arabic_waw","","",null,null],[17,"Arabic_alefmaksura","","",null,null],[17,"Arabic_yeh","","",null,null],[17,"Arabic_fathatan","","",null,null],[17,"Arabic_dammatan","","",null,null],[17,"Arabic_kasratan","","",null,null],[17,"Arabic_fatha","","",null,null],[17,"Arabic_damma","","",null,null],[17,"Arabic_kasra","","",null,null],[17,"Arabic_shadda","","",null,null],[17,"Arabic_sukun","","",null,null],[17,"Arabic_madda_above","","",null,null],[17,"Arabic_hamza_above","","",null,null],[17,"Arabic_hamza_below","","",null,null],[17,"Arabic_jeh","","",null,null],[17,"Arabic_veh","","",null,null],[17,"Arabic_keheh","","",null,null],[17,"Arabic_gaf","","",null,null],[17,"Arabic_noon_ghunna","","",null,null],[17,"Arabic_heh_doachashmee","","",null,null],[17,"Farsi_yeh","","",null,null],[17,"Arabic_farsi_yeh","","",null,null],[17,"Arabic_yeh_baree","","",null,null],[17,"Arabic_heh_goal","","",null,null],[17,"Arabic_switch","","",null,null],[17,"Cyrillic_GHE_bar","","",null,null],[17,"Cyrillic_ghe_bar","","",null,null],[17,"Cyrillic_ZHE_descender","","",null,null],[17,"Cyrillic_zhe_descender","","",null,null],[17,"Cyrillic_KA_descender","","",null,null],[17,"Cyrillic_ka_descender","","",null,null],[17,"Cyrillic_KA_vertstroke","","",null,null],[17,"Cyrillic_ka_vertstroke","","",null,null],[17,"Cyrillic_EN_descender","","",null,null],[17,"Cyrillic_en_descender","","",null,null],[17,"Cyrillic_U_straight","","",null,null],[17,"Cyrillic_u_straight","","",null,null],[17,"Cyrillic_U_straight_bar","","",null,null],[17,"Cyrillic_u_straight_bar","","",null,null],[17,"Cyrillic_HA_descender","","",null,null],[17,"Cyrillic_ha_descender","","",null,null],[17,"Cyrillic_CHE_descender","","",null,null],[17,"Cyrillic_che_descender","","",null,null],[17,"Cyrillic_CHE_vertstroke","","",null,null],[17,"Cyrillic_che_vertstroke","","",null,null],[17,"Cyrillic_SHHA","","",null,null],[17,"Cyrillic_shha","","",null,null],[17,"Cyrillic_SCHWA","","",null,null],[17,"Cyrillic_schwa","","",null,null],[17,"Cyrillic_I_macron","","",null,null],[17,"Cyrillic_i_macron","","",null,null],[17,"Cyrillic_O_bar","","",null,null],[17,"Cyrillic_o_bar","","",null,null],[17,"Cyrillic_U_macron","","",null,null],[17,"Cyrillic_u_macron","","",null,null],[17,"Serbian_dje","","",null,null],[17,"Macedonia_gje","","",null,null],[17,"Cyrillic_io","","",null,null],[17,"Ukrainian_ie","","",null,null],[17,"Ukranian_je","","",null,null],[17,"Macedonia_dse","","",null,null],[17,"Ukrainian_i","","",null,null],[17,"Ukranian_i","","",null,null],[17,"Ukrainian_yi","","",null,null],[17,"Ukranian_yi","","",null,null],[17,"Cyrillic_je","","",null,null],[17,"Serbian_je","","",null,null],[17,"Cyrillic_lje","","",null,null],[17,"Serbian_lje","","",null,null],[17,"Cyrillic_nje","","",null,null],[17,"Serbian_nje","","",null,null],[17,"Serbian_tshe","","",null,null],[17,"Macedonia_kje","","",null,null],[17,"Ukrainian_ghe_with_upturn","","",null,null],[17,"Byelorussian_shortu","","",null,null],[17,"Cyrillic_dzhe","","",null,null],[17,"Serbian_dze","","",null,null],[17,"numerosign","","",null,null],[17,"Serbian_DJE","","",null,null],[17,"Macedonia_GJE","","",null,null],[17,"Cyrillic_IO","","",null,null],[17,"Ukrainian_IE","","",null,null],[17,"Ukranian_JE","","",null,null],[17,"Macedonia_DSE","","",null,null],[17,"Ukrainian_I","","",null,null],[17,"Ukranian_I","","",null,null],[17,"Ukrainian_YI","","",null,null],[17,"Ukranian_YI","","",null,null],[17,"Cyrillic_JE","","",null,null],[17,"Serbian_JE","","",null,null],[17,"Cyrillic_LJE","","",null,null],[17,"Serbian_LJE","","",null,null],[17,"Cyrillic_NJE","","",null,null],[17,"Serbian_NJE","","",null,null],[17,"Serbian_TSHE","","",null,null],[17,"Macedonia_KJE","","",null,null],[17,"Ukrainian_GHE_WITH_UPTURN","","",null,null],[17,"Byelorussian_SHORTU","","",null,null],[17,"Cyrillic_DZHE","","",null,null],[17,"Serbian_DZE","","",null,null],[17,"Cyrillic_yu","","",null,null],[17,"Cyrillic_a","","",null,null],[17,"Cyrillic_be","","",null,null],[17,"Cyrillic_tse","","",null,null],[17,"Cyrillic_de","","",null,null],[17,"Cyrillic_ie","","",null,null],[17,"Cyrillic_ef","","",null,null],[17,"Cyrillic_ghe","","",null,null],[17,"Cyrillic_ha","","",null,null],[17,"Cyrillic_i","","",null,null],[17,"Cyrillic_shorti","","",null,null],[17,"Cyrillic_ka","","",null,null],[17,"Cyrillic_el","","",null,null],[17,"Cyrillic_em","","",null,null],[17,"Cyrillic_en","","",null,null],[17,"Cyrillic_o","","",null,null],[17,"Cyrillic_pe","","",null,null],[17,"Cyrillic_ya","","",null,null],[17,"Cyrillic_er","","",null,null],[17,"Cyrillic_es","","",null,null],[17,"Cyrillic_te","","",null,null],[17,"Cyrillic_u","","",null,null],[17,"Cyrillic_zhe","","",null,null],[17,"Cyrillic_ve","","",null,null],[17,"Cyrillic_softsign","","",null,null],[17,"Cyrillic_yeru","","",null,null],[17,"Cyrillic_ze","","",null,null],[17,"Cyrillic_sha","","",null,null],[17,"Cyrillic_e","","",null,null],[17,"Cyrillic_shcha","","",null,null],[17,"Cyrillic_che","","",null,null],[17,"Cyrillic_hardsign","","",null,null],[17,"Cyrillic_YU","","",null,null],[17,"Cyrillic_A","","",null,null],[17,"Cyrillic_BE","","",null,null],[17,"Cyrillic_TSE","","",null,null],[17,"Cyrillic_DE","","",null,null],[17,"Cyrillic_IE","","",null,null],[17,"Cyrillic_EF","","",null,null],[17,"Cyrillic_GHE","","",null,null],[17,"Cyrillic_HA","","",null,null],[17,"Cyrillic_I","","",null,null],[17,"Cyrillic_SHORTI","","",null,null],[17,"Cyrillic_KA","","",null,null],[17,"Cyrillic_EL","","",null,null],[17,"Cyrillic_EM","","",null,null],[17,"Cyrillic_EN","","",null,null],[17,"Cyrillic_O","","",null,null],[17,"Cyrillic_PE","","",null,null],[17,"Cyrillic_YA","","",null,null],[17,"Cyrillic_ER","","",null,null],[17,"Cyrillic_ES","","",null,null],[17,"Cyrillic_TE","","",null,null],[17,"Cyrillic_U","","",null,null],[17,"Cyrillic_ZHE","","",null,null],[17,"Cyrillic_VE","","",null,null],[17,"Cyrillic_SOFTSIGN","","",null,null],[17,"Cyrillic_YERU","","",null,null],[17,"Cyrillic_ZE","","",null,null],[17,"Cyrillic_SHA","","",null,null],[17,"Cyrillic_E","","",null,null],[17,"Cyrillic_SHCHA","","",null,null],[17,"Cyrillic_CHE","","",null,null],[17,"Cyrillic_HARDSIGN","","",null,null],[17,"Greek_ALPHAaccent","","",null,null],[17,"Greek_EPSILONaccent","","",null,null],[17,"Greek_ETAaccent","","",null,null],[17,"Greek_IOTAaccent","","",null,null],[17,"Greek_IOTAdieresis","","",null,null],[17,"Greek_IOTAdiaeresis","","",null,null],[17,"Greek_OMICRONaccent","","",null,null],[17,"Greek_UPSILONaccent","","",null,null],[17,"Greek_UPSILONdieresis","","",null,null],[17,"Greek_OMEGAaccent","","",null,null],[17,"Greek_accentdieresis","","",null,null],[17,"Greek_horizbar","","",null,null],[17,"Greek_alphaaccent","","",null,null],[17,"Greek_epsilonaccent","","",null,null],[17,"Greek_etaaccent","","",null,null],[17,"Greek_iotaaccent","","",null,null],[17,"Greek_iotadieresis","","",null,null],[17,"Greek_iotaaccentdieresis","","",null,null],[17,"Greek_omicronaccent","","",null,null],[17,"Greek_upsilonaccent","","",null,null],[17,"Greek_upsilondieresis","","",null,null],[17,"Greek_upsilonaccentdieresis","","",null,null],[17,"Greek_omegaaccent","","",null,null],[17,"Greek_ALPHA","","",null,null],[17,"Greek_BETA","","",null,null],[17,"Greek_GAMMA","","",null,null],[17,"Greek_DELTA","","",null,null],[17,"Greek_EPSILON","","",null,null],[17,"Greek_ZETA","","",null,null],[17,"Greek_ETA","","",null,null],[17,"Greek_THETA","","",null,null],[17,"Greek_IOTA","","",null,null],[17,"Greek_KAPPA","","",null,null],[17,"Greek_LAMDA","","",null,null],[17,"Greek_LAMBDA","","",null,null],[17,"Greek_MU","","",null,null],[17,"Greek_NU","","",null,null],[17,"Greek_XI","","",null,null],[17,"Greek_OMICRON","","",null,null],[17,"Greek_PI","","",null,null],[17,"Greek_RHO","","",null,null],[17,"Greek_SIGMA","","",null,null],[17,"Greek_TAU","","",null,null],[17,"Greek_UPSILON","","",null,null],[17,"Greek_PHI","","",null,null],[17,"Greek_CHI","","",null,null],[17,"Greek_PSI","","",null,null],[17,"Greek_OMEGA","","",null,null],[17,"Greek_alpha","","",null,null],[17,"Greek_beta","","",null,null],[17,"Greek_gamma","","",null,null],[17,"Greek_delta","","",null,null],[17,"Greek_epsilon","","",null,null],[17,"Greek_zeta","","",null,null],[17,"Greek_eta","","",null,null],[17,"Greek_theta","","",null,null],[17,"Greek_iota","","",null,null],[17,"Greek_kappa","","",null,null],[17,"Greek_lamda","","",null,null],[17,"Greek_lambda","","",null,null],[17,"Greek_mu","","",null,null],[17,"Greek_nu","","",null,null],[17,"Greek_xi","","",null,null],[17,"Greek_omicron","","",null,null],[17,"Greek_pi","","",null,null],[17,"Greek_rho","","",null,null],[17,"Greek_sigma","","",null,null],[17,"Greek_finalsmallsigma","","",null,null],[17,"Greek_tau","","",null,null],[17,"Greek_upsilon","","",null,null],[17,"Greek_phi","","",null,null],[17,"Greek_chi","","",null,null],[17,"Greek_psi","","",null,null],[17,"Greek_omega","","",null,null],[17,"Greek_switch","","",null,null],[17,"leftradical","","",null,null],[17,"topleftradical","","",null,null],[17,"horizconnector","","",null,null],[17,"topintegral","","",null,null],[17,"botintegral","","",null,null],[17,"vertconnector","","",null,null],[17,"topleftsqbracket","","",null,null],[17,"botleftsqbracket","","",null,null],[17,"toprightsqbracket","","",null,null],[17,"botrightsqbracket","","",null,null],[17,"topleftparens","","",null,null],[17,"botleftparens","","",null,null],[17,"toprightparens","","",null,null],[17,"botrightparens","","",null,null],[17,"leftmiddlecurlybrace","","",null,null],[17,"rightmiddlecurlybrace","","",null,null],[17,"topleftsummation","","",null,null],[17,"botleftsummation","","",null,null],[17,"topvertsummationconnector","","",null,null],[17,"botvertsummationconnector","","",null,null],[17,"toprightsummation","","",null,null],[17,"botrightsummation","","",null,null],[17,"rightmiddlesummation","","",null,null],[17,"lessthanequal","","",null,null],[17,"notequal","","",null,null],[17,"greaterthanequal","","",null,null],[17,"integral","","",null,null],[17,"therefore","","",null,null],[17,"variation","","",null,null],[17,"infinity","","",null,null],[17,"nabla","","",null,null],[17,"approximate","","",null,null],[17,"similarequal","","",null,null],[17,"ifonlyif","","",null,null],[17,"implies","","",null,null],[17,"identical","","",null,null],[17,"radical","","",null,null],[17,"includedin","","",null,null],[17,"includes","","",null,null],[17,"intersection","","",null,null],[17,"union","","",null,null],[17,"logicaland","","",null,null],[17,"logicalor","","",null,null],[17,"partialderivative","","",null,null],[17,"function","","",null,null],[17,"leftarrow","","",null,null],[17,"uparrow","","",null,null],[17,"rightarrow","","",null,null],[17,"downarrow","","",null,null],[17,"blank","","",null,null],[17,"soliddiamond","","",null,null],[17,"checkerboard","","",null,null],[17,"ht","","",null,null],[17,"ff","","",null,null],[17,"cr","","",null,null],[17,"lf","","",null,null],[17,"nl","","",null,null],[17,"vt","","",null,null],[17,"lowrightcorner","","",null,null],[17,"uprightcorner","","",null,null],[17,"upleftcorner","","",null,null],[17,"lowleftcorner","","",null,null],[17,"crossinglines","","",null,null],[17,"horizlinescan1","","",null,null],[17,"horizlinescan3","","",null,null],[17,"horizlinescan5","","",null,null],[17,"horizlinescan7","","",null,null],[17,"horizlinescan9","","",null,null],[17,"leftt","","",null,null],[17,"rightt","","",null,null],[17,"bott","","",null,null],[17,"topt","","",null,null],[17,"vertbar","","",null,null],[17,"emspace","","",null,null],[17,"enspace","","",null,null],[17,"em3space","","",null,null],[17,"em4space","","",null,null],[17,"digitspace","","",null,null],[17,"punctspace","","",null,null],[17,"thinspace","","",null,null],[17,"hairspace","","",null,null],[17,"emdash","","",null,null],[17,"endash","","",null,null],[17,"signifblank","","",null,null],[17,"ellipsis","","",null,null],[17,"doubbaselinedot","","",null,null],[17,"onethird","","",null,null],[17,"twothirds","","",null,null],[17,"onefifth","","",null,null],[17,"twofifths","","",null,null],[17,"threefifths","","",null,null],[17,"fourfifths","","",null,null],[17,"onesixth","","",null,null],[17,"fivesixths","","",null,null],[17,"careof","","",null,null],[17,"figdash","","",null,null],[17,"leftanglebracket","","",null,null],[17,"decimalpoint","","",null,null],[17,"rightanglebracket","","",null,null],[17,"marker","","",null,null],[17,"oneeighth","","",null,null],[17,"threeeighths","","",null,null],[17,"fiveeighths","","",null,null],[17,"seveneighths","","",null,null],[17,"trademark","","",null,null],[17,"signaturemark","","",null,null],[17,"trademarkincircle","","",null,null],[17,"leftopentriangle","","",null,null],[17,"rightopentriangle","","",null,null],[17,"emopencircle","","",null,null],[17,"emopenrectangle","","",null,null],[17,"leftsinglequotemark","","",null,null],[17,"rightsinglequotemark","","",null,null],[17,"leftdoublequotemark","","",null,null],[17,"rightdoublequotemark","","",null,null],[17,"prescription","","",null,null],[17,"permille","","",null,null],[17,"minutes","","",null,null],[17,"seconds","","",null,null],[17,"latincross","","",null,null],[17,"hexagram","","",null,null],[17,"filledrectbullet","","",null,null],[17,"filledlefttribullet","","",null,null],[17,"filledrighttribullet","","",null,null],[17,"emfilledcircle","","",null,null],[17,"emfilledrect","","",null,null],[17,"enopencircbullet","","",null,null],[17,"enopensquarebullet","","",null,null],[17,"openrectbullet","","",null,null],[17,"opentribulletup","","",null,null],[17,"opentribulletdown","","",null,null],[17,"openstar","","",null,null],[17,"enfilledcircbullet","","",null,null],[17,"enfilledsqbullet","","",null,null],[17,"filledtribulletup","","",null,null],[17,"filledtribulletdown","","",null,null],[17,"leftpointer","","",null,null],[17,"rightpointer","","",null,null],[17,"club","","",null,null],[17,"diamond","","",null,null],[17,"heart","","",null,null],[17,"maltesecross","","",null,null],[17,"dagger","","",null,null],[17,"doubledagger","","",null,null],[17,"checkmark","","",null,null],[17,"ballotcross","","",null,null],[17,"musicalsharp","","",null,null],[17,"musicalflat","","",null,null],[17,"malesymbol","","",null,null],[17,"femalesymbol","","",null,null],[17,"telephone","","",null,null],[17,"telephonerecorder","","",null,null],[17,"phonographcopyright","","",null,null],[17,"caret","","",null,null],[17,"singlelowquotemark","","",null,null],[17,"doublelowquotemark","","",null,null],[17,"cursor","","",null,null],[17,"leftcaret","","",null,null],[17,"rightcaret","","",null,null],[17,"downcaret","","",null,null],[17,"upcaret","","",null,null],[17,"overbar","","",null,null],[17,"downtack","","",null,null],[17,"upshoe","","",null,null],[17,"downstile","","",null,null],[17,"underbar","","",null,null],[17,"jot","","",null,null],[17,"quad","","",null,null],[17,"uptack","","",null,null],[17,"circle","","",null,null],[17,"upstile","","",null,null],[17,"downshoe","","",null,null],[17,"rightshoe","","",null,null],[17,"leftshoe","","",null,null],[17,"lefttack","","",null,null],[17,"righttack","","",null,null],[17,"hebrew_doublelowline","","",null,null],[17,"hebrew_aleph","","",null,null],[17,"hebrew_bet","","",null,null],[17,"hebrew_beth","","",null,null],[17,"hebrew_gimel","","",null,null],[17,"hebrew_gimmel","","",null,null],[17,"hebrew_dalet","","",null,null],[17,"hebrew_daleth","","",null,null],[17,"hebrew_he","","",null,null],[17,"hebrew_waw","","",null,null],[17,"hebrew_zain","","",null,null],[17,"hebrew_zayin","","",null,null],[17,"hebrew_chet","","",null,null],[17,"hebrew_het","","",null,null],[17,"hebrew_tet","","",null,null],[17,"hebrew_teth","","",null,null],[17,"hebrew_yod","","",null,null],[17,"hebrew_finalkaph","","",null,null],[17,"hebrew_kaph","","",null,null],[17,"hebrew_lamed","","",null,null],[17,"hebrew_finalmem","","",null,null],[17,"hebrew_mem","","",null,null],[17,"hebrew_finalnun","","",null,null],[17,"hebrew_nun","","",null,null],[17,"hebrew_samech","","",null,null],[17,"hebrew_samekh","","",null,null],[17,"hebrew_ayin","","",null,null],[17,"hebrew_finalpe","","",null,null],[17,"hebrew_pe","","",null,null],[17,"hebrew_finalzade","","",null,null],[17,"hebrew_finalzadi","","",null,null],[17,"hebrew_zade","","",null,null],[17,"hebrew_zadi","","",null,null],[17,"hebrew_qoph","","",null,null],[17,"hebrew_kuf","","",null,null],[17,"hebrew_resh","","",null,null],[17,"hebrew_shin","","",null,null],[17,"hebrew_taw","","",null,null],[17,"hebrew_taf","","",null,null],[17,"Hebrew_switch","","",null,null],[17,"Thai_kokai","","",null,null],[17,"Thai_khokhai","","",null,null],[17,"Thai_khokhuat","","",null,null],[17,"Thai_khokhwai","","",null,null],[17,"Thai_khokhon","","",null,null],[17,"Thai_khorakhang","","",null,null],[17,"Thai_ngongu","","",null,null],[17,"Thai_chochan","","",null,null],[17,"Thai_choching","","",null,null],[17,"Thai_chochang","","",null,null],[17,"Thai_soso","","",null,null],[17,"Thai_chochoe","","",null,null],[17,"Thai_yoying","","",null,null],[17,"Thai_dochada","","",null,null],[17,"Thai_topatak","","",null,null],[17,"Thai_thothan","","",null,null],[17,"Thai_thonangmontho","","",null,null],[17,"Thai_thophuthao","","",null,null],[17,"Thai_nonen","","",null,null],[17,"Thai_dodek","","",null,null],[17,"Thai_totao","","",null,null],[17,"Thai_thothung","","",null,null],[17,"Thai_thothahan","","",null,null],[17,"Thai_thothong","","",null,null],[17,"Thai_nonu","","",null,null],[17,"Thai_bobaimai","","",null,null],[17,"Thai_popla","","",null,null],[17,"Thai_phophung","","",null,null],[17,"Thai_fofa","","",null,null],[17,"Thai_phophan","","",null,null],[17,"Thai_fofan","","",null,null],[17,"Thai_phosamphao","","",null,null],[17,"Thai_moma","","",null,null],[17,"Thai_yoyak","","",null,null],[17,"Thai_rorua","","",null,null],[17,"Thai_ru","","",null,null],[17,"Thai_loling","","",null,null],[17,"Thai_lu","","",null,null],[17,"Thai_wowaen","","",null,null],[17,"Thai_sosala","","",null,null],[17,"Thai_sorusi","","",null,null],[17,"Thai_sosua","","",null,null],[17,"Thai_hohip","","",null,null],[17,"Thai_lochula","","",null,null],[17,"Thai_oang","","",null,null],[17,"Thai_honokhuk","","",null,null],[17,"Thai_paiyannoi","","",null,null],[17,"Thai_saraa","","",null,null],[17,"Thai_maihanakat","","",null,null],[17,"Thai_saraaa","","",null,null],[17,"Thai_saraam","","",null,null],[17,"Thai_sarai","","",null,null],[17,"Thai_saraii","","",null,null],[17,"Thai_saraue","","",null,null],[17,"Thai_sarauee","","",null,null],[17,"Thai_sarau","","",null,null],[17,"Thai_sarauu","","",null,null],[17,"Thai_phinthu","","",null,null],[17,"Thai_maihanakat_maitho","","",null,null],[17,"Thai_baht","","",null,null],[17,"Thai_sarae","","",null,null],[17,"Thai_saraae","","",null,null],[17,"Thai_sarao","","",null,null],[17,"Thai_saraaimaimuan","","",null,null],[17,"Thai_saraaimaimalai","","",null,null],[17,"Thai_lakkhangyao","","",null,null],[17,"Thai_maiyamok","","",null,null],[17,"Thai_maitaikhu","","",null,null],[17,"Thai_maiek","","",null,null],[17,"Thai_maitho","","",null,null],[17,"Thai_maitri","","",null,null],[17,"Thai_maichattawa","","",null,null],[17,"Thai_thanthakhat","","",null,null],[17,"Thai_nikhahit","","",null,null],[17,"Thai_leksun","","",null,null],[17,"Thai_leknung","","",null,null],[17,"Thai_leksong","","",null,null],[17,"Thai_leksam","","",null,null],[17,"Thai_leksi","","",null,null],[17,"Thai_lekha","","",null,null],[17,"Thai_lekhok","","",null,null],[17,"Thai_lekchet","","",null,null],[17,"Thai_lekpaet","","",null,null],[17,"Thai_lekkao","","",null,null],[17,"Hangul","","",null,null],[17,"Hangul_Start","","",null,null],[17,"Hangul_End","","",null,null],[17,"Hangul_Hanja","","",null,null],[17,"Hangul_Jamo","","",null,null],[17,"Hangul_Romaja","","",null,null],[17,"Hangul_Codeinput","","",null,null],[17,"Hangul_Jeonja","","",null,null],[17,"Hangul_Banja","","",null,null],[17,"Hangul_PreHanja","","",null,null],[17,"Hangul_PostHanja","","",null,null],[17,"Hangul_SingleCandidate","","",null,null],[17,"Hangul_MultipleCandidate","","",null,null],[17,"Hangul_PreviousCandidate","","",null,null],[17,"Hangul_Special","","",null,null],[17,"Hangul_switch","","",null,null],[17,"Hangul_Kiyeog","","",null,null],[17,"Hangul_SsangKiyeog","","",null,null],[17,"Hangul_KiyeogSios","","",null,null],[17,"Hangul_Nieun","","",null,null],[17,"Hangul_NieunJieuj","","",null,null],[17,"Hangul_NieunHieuh","","",null,null],[17,"Hangul_Dikeud","","",null,null],[17,"Hangul_SsangDikeud","","",null,null],[17,"Hangul_Rieul","","",null,null],[17,"Hangul_RieulKiyeog","","",null,null],[17,"Hangul_RieulMieum","","",null,null],[17,"Hangul_RieulPieub","","",null,null],[17,"Hangul_RieulSios","","",null,null],[17,"Hangul_RieulTieut","","",null,null],[17,"Hangul_RieulPhieuf","","",null,null],[17,"Hangul_RieulHieuh","","",null,null],[17,"Hangul_Mieum","","",null,null],[17,"Hangul_Pieub","","",null,null],[17,"Hangul_SsangPieub","","",null,null],[17,"Hangul_PieubSios","","",null,null],[17,"Hangul_Sios","","",null,null],[17,"Hangul_SsangSios","","",null,null],[17,"Hangul_Ieung","","",null,null],[17,"Hangul_Jieuj","","",null,null],[17,"Hangul_SsangJieuj","","",null,null],[17,"Hangul_Cieuc","","",null,null],[17,"Hangul_Khieuq","","",null,null],[17,"Hangul_Tieut","","",null,null],[17,"Hangul_Phieuf","","",null,null],[17,"Hangul_Hieuh","","",null,null],[17,"Hangul_A","","",null,null],[17,"Hangul_AE","","",null,null],[17,"Hangul_YA","","",null,null],[17,"Hangul_YAE","","",null,null],[17,"Hangul_EO","","",null,null],[17,"Hangul_E","","",null,null],[17,"Hangul_YEO","","",null,null],[17,"Hangul_YE","","",null,null],[17,"Hangul_O","","",null,null],[17,"Hangul_WA","","",null,null],[17,"Hangul_WAE","","",null,null],[17,"Hangul_OE","","",null,null],[17,"Hangul_YO","","",null,null],[17,"Hangul_U","","",null,null],[17,"Hangul_WEO","","",null,null],[17,"Hangul_WE","","",null,null],[17,"Hangul_WI","","",null,null],[17,"Hangul_YU","","",null,null],[17,"Hangul_EU","","",null,null],[17,"Hangul_YI","","",null,null],[17,"Hangul_I","","",null,null],[17,"Hangul_J_Kiyeog","","",null,null],[17,"Hangul_J_SsangKiyeog","","",null,null],[17,"Hangul_J_KiyeogSios","","",null,null],[17,"Hangul_J_Nieun","","",null,null],[17,"Hangul_J_NieunJieuj","","",null,null],[17,"Hangul_J_NieunHieuh","","",null,null],[17,"Hangul_J_Dikeud","","",null,null],[17,"Hangul_J_Rieul","","",null,null],[17,"Hangul_J_RieulKiyeog","","",null,null],[17,"Hangul_J_RieulMieum","","",null,null],[17,"Hangul_J_RieulPieub","","",null,null],[17,"Hangul_J_RieulSios","","",null,null],[17,"Hangul_J_RieulTieut","","",null,null],[17,"Hangul_J_RieulPhieuf","","",null,null],[17,"Hangul_J_RieulHieuh","","",null,null],[17,"Hangul_J_Mieum","","",null,null],[17,"Hangul_J_Pieub","","",null,null],[17,"Hangul_J_PieubSios","","",null,null],[17,"Hangul_J_Sios","","",null,null],[17,"Hangul_J_SsangSios","","",null,null],[17,"Hangul_J_Ieung","","",null,null],[17,"Hangul_J_Jieuj","","",null,null],[17,"Hangul_J_Cieuc","","",null,null],[17,"Hangul_J_Khieuq","","",null,null],[17,"Hangul_J_Tieut","","",null,null],[17,"Hangul_J_Phieuf","","",null,null],[17,"Hangul_J_Hieuh","","",null,null],[17,"Hangul_RieulYeorinHieuh","","",null,null],[17,"Hangul_SunkyeongeumMieum","","",null,null],[17,"Hangul_SunkyeongeumPieub","","",null,null],[17,"Hangul_PanSios","","",null,null],[17,"Hangul_KkogjiDalrinIeung","","",null,null],[17,"Hangul_SunkyeongeumPhieuf","","",null,null],[17,"Hangul_YeorinHieuh","","",null,null],[17,"Hangul_AraeA","","",null,null],[17,"Hangul_AraeAE","","",null,null],[17,"Hangul_J_PanSios","","",null,null],[17,"Hangul_J_KkogjiDalrinIeung","","",null,null],[17,"Hangul_J_YeorinHieuh","","",null,null],[17,"Korean_Won","","",null,null],[17,"Armenian_ligature_ew","","",null,null],[17,"Armenian_full_stop","","",null,null],[17,"Armenian_verjaket","","",null,null],[17,"Armenian_separation_mark","","",null,null],[17,"Armenian_but","","",null,null],[17,"Armenian_hyphen","","",null,null],[17,"Armenian_yentamna","","",null,null],[17,"Armenian_exclam","","",null,null],[17,"Armenian_amanak","","",null,null],[17,"Armenian_accent","","",null,null],[17,"Armenian_shesht","","",null,null],[17,"Armenian_question","","",null,null],[17,"Armenian_paruyk","","",null,null],[17,"Armenian_AYB","","",null,null],[17,"Armenian_ayb","","",null,null],[17,"Armenian_BEN","","",null,null],[17,"Armenian_ben","","",null,null],[17,"Armenian_GIM","","",null,null],[17,"Armenian_gim","","",null,null],[17,"Armenian_DA","","",null,null],[17,"Armenian_da","","",null,null],[17,"Armenian_YECH","","",null,null],[17,"Armenian_yech","","",null,null],[17,"Armenian_ZA","","",null,null],[17,"Armenian_za","","",null,null],[17,"Armenian_E","","",null,null],[17,"Armenian_e","","",null,null],[17,"Armenian_AT","","",null,null],[17,"Armenian_at","","",null,null],[17,"Armenian_TO","","",null,null],[17,"Armenian_to","","",null,null],[17,"Armenian_ZHE","","",null,null],[17,"Armenian_zhe","","",null,null],[17,"Armenian_INI","","",null,null],[17,"Armenian_ini","","",null,null],[17,"Armenian_LYUN","","",null,null],[17,"Armenian_lyun","","",null,null],[17,"Armenian_KHE","","",null,null],[17,"Armenian_khe","","",null,null],[17,"Armenian_TSA","","",null,null],[17,"Armenian_tsa","","",null,null],[17,"Armenian_KEN","","",null,null],[17,"Armenian_ken","","",null,null],[17,"Armenian_HO","","",null,null],[17,"Armenian_ho","","",null,null],[17,"Armenian_DZA","","",null,null],[17,"Armenian_dza","","",null,null],[17,"Armenian_GHAT","","",null,null],[17,"Armenian_ghat","","",null,null],[17,"Armenian_TCHE","","",null,null],[17,"Armenian_tche","","",null,null],[17,"Armenian_MEN","","",null,null],[17,"Armenian_men","","",null,null],[17,"Armenian_HI","","",null,null],[17,"Armenian_hi","","",null,null],[17,"Armenian_NU","","",null,null],[17,"Armenian_nu","","",null,null],[17,"Armenian_SHA","","",null,null],[17,"Armenian_sha","","",null,null],[17,"Armenian_VO","","",null,null],[17,"Armenian_vo","","",null,null],[17,"Armenian_CHA","","",null,null],[17,"Armenian_cha","","",null,null],[17,"Armenian_PE","","",null,null],[17,"Armenian_pe","","",null,null],[17,"Armenian_JE","","",null,null],[17,"Armenian_je","","",null,null],[17,"Armenian_RA","","",null,null],[17,"Armenian_ra","","",null,null],[17,"Armenian_SE","","",null,null],[17,"Armenian_se","","",null,null],[17,"Armenian_VEV","","",null,null],[17,"Armenian_vev","","",null,null],[17,"Armenian_TYUN","","",null,null],[17,"Armenian_tyun","","",null,null],[17,"Armenian_RE","","",null,null],[17,"Armenian_re","","",null,null],[17,"Armenian_TSO","","",null,null],[17,"Armenian_tso","","",null,null],[17,"Armenian_VYUN","","",null,null],[17,"Armenian_vyun","","",null,null],[17,"Armenian_PYUR","","",null,null],[17,"Armenian_pyur","","",null,null],[17,"Armenian_KE","","",null,null],[17,"Armenian_ke","","",null,null],[17,"Armenian_O","","",null,null],[17,"Armenian_o","","",null,null],[17,"Armenian_FE","","",null,null],[17,"Armenian_fe","","",null,null],[17,"Armenian_apostrophe","","",null,null],[17,"Georgian_an","","",null,null],[17,"Georgian_ban","","",null,null],[17,"Georgian_gan","","",null,null],[17,"Georgian_don","","",null,null],[17,"Georgian_en","","",null,null],[17,"Georgian_vin","","",null,null],[17,"Georgian_zen","","",null,null],[17,"Georgian_tan","","",null,null],[17,"Georgian_in","","",null,null],[17,"Georgian_kan","","",null,null],[17,"Georgian_las","","",null,null],[17,"Georgian_man","","",null,null],[17,"Georgian_nar","","",null,null],[17,"Georgian_on","","",null,null],[17,"Georgian_par","","",null,null],[17,"Georgian_zhar","","",null,null],[17,"Georgian_rae","","",null,null],[17,"Georgian_san","","",null,null],[17,"Georgian_tar","","",null,null],[17,"Georgian_un","","",null,null],[17,"Georgian_phar","","",null,null],[17,"Georgian_khar","","",null,null],[17,"Georgian_ghan","","",null,null],[17,"Georgian_qar","","",null,null],[17,"Georgian_shin","","",null,null],[17,"Georgian_chin","","",null,null],[17,"Georgian_can","","",null,null],[17,"Georgian_jil","","",null,null],[17,"Georgian_cil","","",null,null],[17,"Georgian_char","","",null,null],[17,"Georgian_xan","","",null,null],[17,"Georgian_jhan","","",null,null],[17,"Georgian_hae","","",null,null],[17,"Georgian_he","","",null,null],[17,"Georgian_hie","","",null,null],[17,"Georgian_we","","",null,null],[17,"Georgian_har","","",null,null],[17,"Georgian_hoe","","",null,null],[17,"Georgian_fi","","",null,null],[17,"Xabovedot","","",null,null],[17,"Ibreve","","",null,null],[17,"Zstroke","","",null,null],[17,"Gcaron","","",null,null],[17,"Ocaron","","",null,null],[17,"Obarred","","",null,null],[17,"xabovedot","","",null,null],[17,"ibreve","","",null,null],[17,"zstroke","","",null,null],[17,"gcaron","","",null,null],[17,"ocaron","","",null,null],[17,"obarred","","",null,null],[17,"SCHWA","","",null,null],[17,"schwa","","",null,null],[17,"EZH","","",null,null],[17,"ezh","","",null,null],[17,"Lbelowdot","","",null,null],[17,"lbelowdot","","",null,null],[17,"Abelowdot","","",null,null],[17,"abelowdot","","",null,null],[17,"Ahook","","",null,null],[17,"ahook","","",null,null],[17,"Acircumflexacute","","",null,null],[17,"acircumflexacute","","",null,null],[17,"Acircumflexgrave","","",null,null],[17,"acircumflexgrave","","",null,null],[17,"Acircumflexhook","","",null,null],[17,"acircumflexhook","","",null,null],[17,"Acircumflextilde","","",null,null],[17,"acircumflextilde","","",null,null],[17,"Acircumflexbelowdot","","",null,null],[17,"acircumflexbelowdot","","",null,null],[17,"Abreveacute","","",null,null],[17,"abreveacute","","",null,null],[17,"Abrevegrave","","",null,null],[17,"abrevegrave","","",null,null],[17,"Abrevehook","","",null,null],[17,"abrevehook","","",null,null],[17,"Abrevetilde","","",null,null],[17,"abrevetilde","","",null,null],[17,"Abrevebelowdot","","",null,null],[17,"abrevebelowdot","","",null,null],[17,"Ebelowdot","","",null,null],[17,"ebelowdot","","",null,null],[17,"Ehook","","",null,null],[17,"ehook","","",null,null],[17,"Etilde","","",null,null],[17,"etilde","","",null,null],[17,"Ecircumflexacute","","",null,null],[17,"ecircumflexacute","","",null,null],[17,"Ecircumflexgrave","","",null,null],[17,"ecircumflexgrave","","",null,null],[17,"Ecircumflexhook","","",null,null],[17,"ecircumflexhook","","",null,null],[17,"Ecircumflextilde","","",null,null],[17,"ecircumflextilde","","",null,null],[17,"Ecircumflexbelowdot","","",null,null],[17,"ecircumflexbelowdot","","",null,null],[17,"Ihook","","",null,null],[17,"ihook","","",null,null],[17,"Ibelowdot","","",null,null],[17,"ibelowdot","","",null,null],[17,"Obelowdot","","",null,null],[17,"obelowdot","","",null,null],[17,"Ohook","","",null,null],[17,"ohook","","",null,null],[17,"Ocircumflexacute","","",null,null],[17,"ocircumflexacute","","",null,null],[17,"Ocircumflexgrave","","",null,null],[17,"ocircumflexgrave","","",null,null],[17,"Ocircumflexhook","","",null,null],[17,"ocircumflexhook","","",null,null],[17,"Ocircumflextilde","","",null,null],[17,"ocircumflextilde","","",null,null],[17,"Ocircumflexbelowdot","","",null,null],[17,"ocircumflexbelowdot","","",null,null],[17,"Ohornacute","","",null,null],[17,"ohornacute","","",null,null],[17,"Ohorngrave","","",null,null],[17,"ohorngrave","","",null,null],[17,"Ohornhook","","",null,null],[17,"ohornhook","","",null,null],[17,"Ohorntilde","","",null,null],[17,"ohorntilde","","",null,null],[17,"Ohornbelowdot","","",null,null],[17,"ohornbelowdot","","",null,null],[17,"Ubelowdot","","",null,null],[17,"ubelowdot","","",null,null],[17,"Uhook","","",null,null],[17,"uhook","","",null,null],[17,"Uhornacute","","",null,null],[17,"uhornacute","","",null,null],[17,"Uhorngrave","","",null,null],[17,"uhorngrave","","",null,null],[17,"Uhornhook","","",null,null],[17,"uhornhook","","",null,null],[17,"Uhorntilde","","",null,null],[17,"uhorntilde","","",null,null],[17,"Uhornbelowdot","","",null,null],[17,"uhornbelowdot","","",null,null],[17,"Ybelowdot","","",null,null],[17,"ybelowdot","","",null,null],[17,"Yhook","","",null,null],[17,"yhook","","",null,null],[17,"Ytilde","","",null,null],[17,"ytilde","","",null,null],[17,"Ohorn","","",null,null],[17,"ohorn","","",null,null],[17,"Uhorn","","",null,null],[17,"uhorn","","",null,null],[17,"EcuSign","","",null,null],[17,"ColonSign","","",null,null],[17,"CruzeiroSign","","",null,null],[17,"FFrancSign","","",null,null],[17,"LiraSign","","",null,null],[17,"MillSign","","",null,null],[17,"NairaSign","","",null,null],[17,"PesetaSign","","",null,null],[17,"RupeeSign","","",null,null],[17,"WonSign","","",null,null],[17,"NewSheqelSign","","",null,null],[17,"DongSign","","",null,null],[17,"EuroSign","","",null,null],[17,"zerosuperior","","",null,null],[17,"foursuperior","","",null,null],[17,"fivesuperior","","",null,null],[17,"sixsuperior","","",null,null],[17,"sevensuperior","","",null,null],[17,"eightsuperior","","",null,null],[17,"ninesuperior","","",null,null],[17,"zerosubscript","","",null,null],[17,"onesubscript","","",null,null],[17,"twosubscript","","",null,null],[17,"threesubscript","","",null,null],[17,"foursubscript","","",null,null],[17,"fivesubscript","","",null,null],[17,"sixsubscript","","",null,null],[17,"sevensubscript","","",null,null],[17,"eightsubscript","","",null,null],[17,"ninesubscript","","",null,null],[17,"partdifferential","","",null,null],[17,"emptyset","","",null,null],[17,"elementof","","",null,null],[17,"notelementof","","",null,null],[17,"containsas","","",null,null],[17,"squareroot","","",null,null],[17,"cuberoot","","",null,null],[17,"fourthroot","","",null,null],[17,"dintegral","","",null,null],[17,"tintegral","","",null,null],[17,"because","","",null,null],[17,"approxeq","","",null,null],[17,"notapproxeq","","",null,null],[17,"notidentical","","",null,null],[17,"stricteq","","",null,null],[17,"braille_dot_1","","",null,null],[17,"braille_dot_2","","",null,null],[17,"braille_dot_3","","",null,null],[17,"braille_dot_4","","",null,null],[17,"braille_dot_5","","",null,null],[17,"braille_dot_6","","",null,null],[17,"braille_dot_7","","",null,null],[17,"braille_dot_8","","",null,null],[17,"braille_dot_9","","",null,null],[17,"braille_dot_10","","",null,null],[17,"braille_blank","","",null,null],[17,"braille_dots_1","","",null,null],[17,"braille_dots_2","","",null,null],[17,"braille_dots_12","","",null,null],[17,"braille_dots_3","","",null,null],[17,"braille_dots_13","","",null,null],[17,"braille_dots_23","","",null,null],[17,"braille_dots_123","","",null,null],[17,"braille_dots_4","","",null,null],[17,"braille_dots_14","","",null,null],[17,"braille_dots_24","","",null,null],[17,"braille_dots_124","","",null,null],[17,"braille_dots_34","","",null,null],[17,"braille_dots_134","","",null,null],[17,"braille_dots_234","","",null,null],[17,"braille_dots_1234","","",null,null],[17,"braille_dots_5","","",null,null],[17,"braille_dots_15","","",null,null],[17,"braille_dots_25","","",null,null],[17,"braille_dots_125","","",null,null],[17,"braille_dots_35","","",null,null],[17,"braille_dots_135","","",null,null],[17,"braille_dots_235","","",null,null],[17,"braille_dots_1235","","",null,null],[17,"braille_dots_45","","",null,null],[17,"braille_dots_145","","",null,null],[17,"braille_dots_245","","",null,null],[17,"braille_dots_1245","","",null,null],[17,"braille_dots_345","","",null,null],[17,"braille_dots_1345","","",null,null],[17,"braille_dots_2345","","",null,null],[17,"braille_dots_12345","","",null,null],[17,"braille_dots_6","","",null,null],[17,"braille_dots_16","","",null,null],[17,"braille_dots_26","","",null,null],[17,"braille_dots_126","","",null,null],[17,"braille_dots_36","","",null,null],[17,"braille_dots_136","","",null,null],[17,"braille_dots_236","","",null,null],[17,"braille_dots_1236","","",null,null],[17,"braille_dots_46","","",null,null],[17,"braille_dots_146","","",null,null],[17,"braille_dots_246","","",null,null],[17,"braille_dots_1246","","",null,null],[17,"braille_dots_346","","",null,null],[17,"braille_dots_1346","","",null,null],[17,"braille_dots_2346","","",null,null],[17,"braille_dots_12346","","",null,null],[17,"braille_dots_56","","",null,null],[17,"braille_dots_156","","",null,null],[17,"braille_dots_256","","",null,null],[17,"braille_dots_1256","","",null,null],[17,"braille_dots_356","","",null,null],[17,"braille_dots_1356","","",null,null],[17,"braille_dots_2356","","",null,null],[17,"braille_dots_12356","","",null,null],[17,"braille_dots_456","","",null,null],[17,"braille_dots_1456","","",null,null],[17,"braille_dots_2456","","",null,null],[17,"braille_dots_12456","","",null,null],[17,"braille_dots_3456","","",null,null],[17,"braille_dots_13456","","",null,null],[17,"braille_dots_23456","","",null,null],[17,"braille_dots_123456","","",null,null],[17,"braille_dots_7","","",null,null],[17,"braille_dots_17","","",null,null],[17,"braille_dots_27","","",null,null],[17,"braille_dots_127","","",null,null],[17,"braille_dots_37","","",null,null],[17,"braille_dots_137","","",null,null],[17,"braille_dots_237","","",null,null],[17,"braille_dots_1237","","",null,null],[17,"braille_dots_47","","",null,null],[17,"braille_dots_147","","",null,null],[17,"braille_dots_247","","",null,null],[17,"braille_dots_1247","","",null,null],[17,"braille_dots_347","","",null,null],[17,"braille_dots_1347","","",null,null],[17,"braille_dots_2347","","",null,null],[17,"braille_dots_12347","","",null,null],[17,"braille_dots_57","","",null,null],[17,"braille_dots_157","","",null,null],[17,"braille_dots_257","","",null,null],[17,"braille_dots_1257","","",null,null],[17,"braille_dots_357","","",null,null],[17,"braille_dots_1357","","",null,null],[17,"braille_dots_2357","","",null,null],[17,"braille_dots_12357","","",null,null],[17,"braille_dots_457","","",null,null],[17,"braille_dots_1457","","",null,null],[17,"braille_dots_2457","","",null,null],[17,"braille_dots_12457","","",null,null],[17,"braille_dots_3457","","",null,null],[17,"braille_dots_13457","","",null,null],[17,"braille_dots_23457","","",null,null],[17,"braille_dots_123457","","",null,null],[17,"braille_dots_67","","",null,null],[17,"braille_dots_167","","",null,null],[17,"braille_dots_267","","",null,null],[17,"braille_dots_1267","","",null,null],[17,"braille_dots_367","","",null,null],[17,"braille_dots_1367","","",null,null],[17,"braille_dots_2367","","",null,null],[17,"braille_dots_12367","","",null,null],[17,"braille_dots_467","","",null,null],[17,"braille_dots_1467","","",null,null],[17,"braille_dots_2467","","",null,null],[17,"braille_dots_12467","","",null,null],[17,"braille_dots_3467","","",null,null],[17,"braille_dots_13467","","",null,null],[17,"braille_dots_23467","","",null,null],[17,"braille_dots_123467","","",null,null],[17,"braille_dots_567","","",null,null],[17,"braille_dots_1567","","",null,null],[17,"braille_dots_2567","","",null,null],[17,"braille_dots_12567","","",null,null],[17,"braille_dots_3567","","",null,null],[17,"braille_dots_13567","","",null,null],[17,"braille_dots_23567","","",null,null],[17,"braille_dots_123567","","",null,null],[17,"braille_dots_4567","","",null,null],[17,"braille_dots_14567","","",null,null],[17,"braille_dots_24567","","",null,null],[17,"braille_dots_124567","","",null,null],[17,"braille_dots_34567","","",null,null],[17,"braille_dots_134567","","",null,null],[17,"braille_dots_234567","","",null,null],[17,"braille_dots_1234567","","",null,null],[17,"braille_dots_8","","",null,null],[17,"braille_dots_18","","",null,null],[17,"braille_dots_28","","",null,null],[17,"braille_dots_128","","",null,null],[17,"braille_dots_38","","",null,null],[17,"braille_dots_138","","",null,null],[17,"braille_dots_238","","",null,null],[17,"braille_dots_1238","","",null,null],[17,"braille_dots_48","","",null,null],[17,"braille_dots_148","","",null,null],[17,"braille_dots_248","","",null,null],[17,"braille_dots_1248","","",null,null],[17,"braille_dots_348","","",null,null],[17,"braille_dots_1348","","",null,null],[17,"braille_dots_2348","","",null,null],[17,"braille_dots_12348","","",null,null],[17,"braille_dots_58","","",null,null],[17,"braille_dots_158","","",null,null],[17,"braille_dots_258","","",null,null],[17,"braille_dots_1258","","",null,null],[17,"braille_dots_358","","",null,null],[17,"braille_dots_1358","","",null,null],[17,"braille_dots_2358","","",null,null],[17,"braille_dots_12358","","",null,null],[17,"braille_dots_458","","",null,null],[17,"braille_dots_1458","","",null,null],[17,"braille_dots_2458","","",null,null],[17,"braille_dots_12458","","",null,null],[17,"braille_dots_3458","","",null,null],[17,"braille_dots_13458","","",null,null],[17,"braille_dots_23458","","",null,null],[17,"braille_dots_123458","","",null,null],[17,"braille_dots_68","","",null,null],[17,"braille_dots_168","","",null,null],[17,"braille_dots_268","","",null,null],[17,"braille_dots_1268","","",null,null],[17,"braille_dots_368","","",null,null],[17,"braille_dots_1368","","",null,null],[17,"braille_dots_2368","","",null,null],[17,"braille_dots_12368","","",null,null],[17,"braille_dots_468","","",null,null],[17,"braille_dots_1468","","",null,null],[17,"braille_dots_2468","","",null,null],[17,"braille_dots_12468","","",null,null],[17,"braille_dots_3468","","",null,null],[17,"braille_dots_13468","","",null,null],[17,"braille_dots_23468","","",null,null],[17,"braille_dots_123468","","",null,null],[17,"braille_dots_568","","",null,null],[17,"braille_dots_1568","","",null,null],[17,"braille_dots_2568","","",null,null],[17,"braille_dots_12568","","",null,null],[17,"braille_dots_3568","","",null,null],[17,"braille_dots_13568","","",null,null],[17,"braille_dots_23568","","",null,null],[17,"braille_dots_123568","","",null,null],[17,"braille_dots_4568","","",null,null],[17,"braille_dots_14568","","",null,null],[17,"braille_dots_24568","","",null,null],[17,"braille_dots_124568","","",null,null],[17,"braille_dots_34568","","",null,null],[17,"braille_dots_134568","","",null,null],[17,"braille_dots_234568","","",null,null],[17,"braille_dots_1234568","","",null,null],[17,"braille_dots_78","","",null,null],[17,"braille_dots_178","","",null,null],[17,"braille_dots_278","","",null,null],[17,"braille_dots_1278","","",null,null],[17,"braille_dots_378","","",null,null],[17,"braille_dots_1378","","",null,null],[17,"braille_dots_2378","","",null,null],[17,"braille_dots_12378","","",null,null],[17,"braille_dots_478","","",null,null],[17,"braille_dots_1478","","",null,null],[17,"braille_dots_2478","","",null,null],[17,"braille_dots_12478","","",null,null],[17,"braille_dots_3478","","",null,null],[17,"braille_dots_13478","","",null,null],[17,"braille_dots_23478","","",null,null],[17,"braille_dots_123478","","",null,null],[17,"braille_dots_578","","",null,null],[17,"braille_dots_1578","","",null,null],[17,"braille_dots_2578","","",null,null],[17,"braille_dots_12578","","",null,null],[17,"braille_dots_3578","","",null,null],[17,"braille_dots_13578","","",null,null],[17,"braille_dots_23578","","",null,null],[17,"braille_dots_123578","","",null,null],[17,"braille_dots_4578","","",null,null],[17,"braille_dots_14578","","",null,null],[17,"braille_dots_24578","","",null,null],[17,"braille_dots_124578","","",null,null],[17,"braille_dots_34578","","",null,null],[17,"braille_dots_134578","","",null,null],[17,"braille_dots_234578","","",null,null],[17,"braille_dots_1234578","","",null,null],[17,"braille_dots_678","","",null,null],[17,"braille_dots_1678","","",null,null],[17,"braille_dots_2678","","",null,null],[17,"braille_dots_12678","","",null,null],[17,"braille_dots_3678","","",null,null],[17,"braille_dots_13678","","",null,null],[17,"braille_dots_23678","","",null,null],[17,"braille_dots_123678","","",null,null],[17,"braille_dots_4678","","",null,null],[17,"braille_dots_14678","","",null,null],[17,"braille_dots_24678","","",null,null],[17,"braille_dots_124678","","",null,null],[17,"braille_dots_34678","","",null,null],[17,"braille_dots_134678","","",null,null],[17,"braille_dots_234678","","",null,null],[17,"braille_dots_1234678","","",null,null],[17,"braille_dots_5678","","",null,null],[17,"braille_dots_15678","","",null,null],[17,"braille_dots_25678","","",null,null],[17,"braille_dots_125678","","",null,null],[17,"braille_dots_35678","","",null,null],[17,"braille_dots_135678","","",null,null],[17,"braille_dots_235678","","",null,null],[17,"braille_dots_1235678","","",null,null],[17,"braille_dots_45678","","",null,null],[17,"braille_dots_145678","","",null,null],[17,"braille_dots_245678","","",null,null],[17,"braille_dots_1245678","","",null,null],[17,"braille_dots_345678","","",null,null],[17,"braille_dots_1345678","","",null,null],[17,"braille_dots_2345678","","",null,null],[17,"braille_dots_12345678","","",null,null],[17,"Sinh_ng","","",null,null],[17,"Sinh_h2","","",null,null],[17,"Sinh_a","","",null,null],[17,"Sinh_aa","","",null,null],[17,"Sinh_ae","","",null,null],[17,"Sinh_aee","","",null,null],[17,"Sinh_i","","",null,null],[17,"Sinh_ii","","",null,null],[17,"Sinh_u","","",null,null],[17,"Sinh_uu","","",null,null],[17,"Sinh_ri","","",null,null],[17,"Sinh_rii","","",null,null],[17,"Sinh_lu","","",null,null],[17,"Sinh_luu","","",null,null],[17,"Sinh_e","","",null,null],[17,"Sinh_ee","","",null,null],[17,"Sinh_ai","","",null,null],[17,"Sinh_o","","",null,null],[17,"Sinh_oo","","",null,null],[17,"Sinh_au","","",null,null],[17,"Sinh_ka","","",null,null],[17,"Sinh_kha","","",null,null],[17,"Sinh_ga","","",null,null],[17,"Sinh_gha","","",null,null],[17,"Sinh_ng2","","",null,null],[17,"Sinh_nga","","",null,null],[17,"Sinh_ca","","",null,null],[17,"Sinh_cha","","",null,null],[17,"Sinh_ja","","",null,null],[17,"Sinh_jha","","",null,null],[17,"Sinh_nya","","",null,null],[17,"Sinh_jnya","","",null,null],[17,"Sinh_nja","","",null,null],[17,"Sinh_tta","","",null,null],[17,"Sinh_ttha","","",null,null],[17,"Sinh_dda","","",null,null],[17,"Sinh_ddha","","",null,null],[17,"Sinh_nna","","",null,null],[17,"Sinh_ndda","","",null,null],[17,"Sinh_tha","","",null,null],[17,"Sinh_thha","","",null,null],[17,"Sinh_dha","","",null,null],[17,"Sinh_dhha","","",null,null],[17,"Sinh_na","","",null,null],[17,"Sinh_ndha","","",null,null],[17,"Sinh_pa","","",null,null],[17,"Sinh_pha","","",null,null],[17,"Sinh_ba","","",null,null],[17,"Sinh_bha","","",null,null],[17,"Sinh_ma","","",null,null],[17,"Sinh_mba","","",null,null],[17,"Sinh_ya","","",null,null],[17,"Sinh_ra","","",null,null],[17,"Sinh_la","","",null,null],[17,"Sinh_va","","",null,null],[17,"Sinh_sha","","",null,null],[17,"Sinh_ssha","","",null,null],[17,"Sinh_sa","","",null,null],[17,"Sinh_ha","","",null,null],[17,"Sinh_lla","","",null,null],[17,"Sinh_fa","","",null,null],[17,"Sinh_al","","",null,null],[17,"Sinh_aa2","","",null,null],[17,"Sinh_ae2","","",null,null],[17,"Sinh_aee2","","",null,null],[17,"Sinh_i2","","",null,null],[17,"Sinh_ii2","","",null,null],[17,"Sinh_u2","","",null,null],[17,"Sinh_uu2","","",null,null],[17,"Sinh_ru2","","",null,null],[17,"Sinh_e2","","",null,null],[17,"Sinh_ee2","","",null,null],[17,"Sinh_ai2","","",null,null],[17,"Sinh_o2","","",null,null],[17,"Sinh_oo2","","",null,null],[17,"Sinh_au2","","",null,null],[17,"Sinh_lu2","","",null,null],[17,"Sinh_ruu2","","",null,null],[17,"Sinh_luu2","","",null,null],[17,"Sinh_kunddaliya","","",null,null],[17,"ModeLock","","",null,null],[17,"MonBrightnessUp","","",null,null],[17,"MonBrightnessDown","","",null,null],[17,"KbdLightOnOff","","",null,null],[17,"KbdBrightnessUp","","",null,null],[17,"KbdBrightnessDown","","",null,null],[17,"Standby","","",null,null],[17,"AudioLowerVolume","","",null,null],[17,"AudioMute","","",null,null],[17,"AudioRaiseVolume","","",null,null],[17,"AudioPlay","","",null,null],[17,"AudioStop","","",null,null],[17,"AudioPrev","","",null,null],[17,"AudioNext","","",null,null],[17,"HomePage","","",null,null],[17,"Mail","","",null,null],[17,"Start","","",null,null],[17,"Search","","",null,null],[17,"AudioRecord","","",null,null],[17,"Calculator","","",null,null],[17,"Memo","","",null,null],[17,"ToDoList","","",null,null],[17,"Calendar","","",null,null],[17,"PowerDown","","",null,null],[17,"ContrastAdjust","","",null,null],[17,"RockerUp","","",null,null],[17,"RockerDown","","",null,null],[17,"RockerEnter","","",null,null],[17,"Back","","",null,null],[17,"Forward","","",null,null],[17,"Stop","","",null,null],[17,"Refresh","","",null,null],[17,"PowerOff","","",null,null],[17,"WakeUp","","",null,null],[17,"Eject","","",null,null],[17,"ScreenSaver","","",null,null],[17,"WWW","","",null,null],[17,"Sleep","","",null,null],[17,"Favorites","","",null,null],[17,"AudioPause","","",null,null],[17,"AudioMedia","","",null,null],[17,"MyComputer","","",null,null],[17,"VendorHome","","",null,null],[17,"LightBulb","","",null,null],[17,"Shop","","",null,null],[17,"History","","",null,null],[17,"OpenURL","","",null,null],[17,"AddFavorite","","",null,null],[17,"HotLinks","","",null,null],[17,"BrightnessAdjust","","",null,null],[17,"Finance","","",null,null],[17,"Community","","",null,null],[17,"AudioRewind","","",null,null],[17,"BackForward","","",null,null],[17,"Launch0","","",null,null],[17,"Launch1","","",null,null],[17,"Launch2","","",null,null],[17,"Launch3","","",null,null],[17,"Launch4","","",null,null],[17,"Launch5","","",null,null],[17,"Launch6","","",null,null],[17,"Launch7","","",null,null],[17,"Launch8","","",null,null],[17,"Launch9","","",null,null],[17,"LaunchA","","",null,null],[17,"LaunchB","","",null,null],[17,"LaunchC","","",null,null],[17,"LaunchD","","",null,null],[17,"LaunchE","","",null,null],[17,"LaunchF","","",null,null],[17,"ApplicationLeft","","",null,null],[17,"ApplicationRight","","",null,null],[17,"Book","","",null,null],[17,"CD","","",null,null],[17,"WindowClear","","",null,null],[17,"Close","","",null,null],[17,"Copy","","",null,null],[17,"Cut","","",null,null],[17,"Display","","",null,null],[17,"DOS","","",null,null],[17,"Documents","","",null,null],[17,"Excel","","",null,null],[17,"Explorer","","",null,null],[17,"Game","","",null,null],[17,"Go","","",null,null],[17,"iTouch","","",null,null],[17,"LogOff","","",null,null],[17,"Market","","",null,null],[17,"Meeting","","",null,null],[17,"MenuKB","","",null,null],[17,"MenuPB","","",null,null],[17,"MySites","","",null,null],[17,"New","","",null,null],[17,"News","","",null,null],[17,"OfficeHome","","",null,null],[17,"Open","","",null,null],[17,"Option","","",null,null],[17,"Paste","","",null,null],[17,"Phone","","",null,null],[17,"Reply","","",null,null],[17,"Reload","","",null,null],[17,"RotateWindows","","",null,null],[17,"RotationPB","","",null,null],[17,"RotationKB","","",null,null],[17,"Save","","",null,null],[17,"ScrollUp","","",null,null],[17,"ScrollDown","","",null,null],[17,"ScrollClick","","",null,null],[17,"Send","","",null,null],[17,"Spell","","",null,null],[17,"SplitScreen","","",null,null],[17,"Support","","",null,null],[17,"TaskPane","","",null,null],[17,"Terminal","","",null,null],[17,"Tools","","",null,null],[17,"Travel","","",null,null],[17,"UserPB","","",null,null],[17,"User1KB","","",null,null],[17,"User2KB","","",null,null],[17,"Video","","",null,null],[17,"WheelButton","","",null,null],[17,"Word","","",null,null],[17,"Xfer","","",null,null],[17,"ZoomIn","","",null,null],[17,"ZoomOut","","",null,null],[17,"Away","","",null,null],[17,"Messenger","","",null,null],[17,"WebCam","","",null,null],[17,"MailForward","","",null,null],[17,"Pictures","","",null,null],[17,"Music","","",null,null],[17,"Battery","","",null,null],[17,"Bluetooth","","",null,null],[17,"WLAN","","",null,null],[17,"UWB","","",null,null],[17,"AudioForward","","",null,null],[17,"AudioRepeat","","",null,null],[17,"AudioRandomPlay","","",null,null],[17,"Subtitle","","",null,null],[17,"AudioCycleTrack","","",null,null],[17,"CycleAngle","","",null,null],[17,"FrameBack","","",null,null],[17,"FrameForward","","",null,null],[17,"Time","","",null,null],[17,"SelectButton","","",null,null],[17,"View","","",null,null],[17,"TopMenu","","",null,null],[17,"Red","","",null,null],[17,"Green","","",null,null],[17,"Yellow","","",null,null],[17,"Blue","","",null,null],[17,"Suspend","","",null,null],[17,"Hibernate","","",null,null],[17,"TouchpadToggle","","",null,null],[17,"TouchpadOn","","",null,null],[17,"TouchpadOff","","",null,null],[17,"AudioMicMute","","",null,null],[17,"Switch_VT_1","","",null,null],[17,"Switch_VT_2","","",null,null],[17,"Switch_VT_3","","",null,null],[17,"Switch_VT_4","","",null,null],[17,"Switch_VT_5","","",null,null],[17,"Switch_VT_6","","",null,null],[17,"Switch_VT_7","","",null,null],[17,"Switch_VT_8","","",null,null],[17,"Switch_VT_9","","",null,null],[17,"Switch_VT_10","","",null,null],[17,"Switch_VT_11","","",null,null],[17,"Switch_VT_12","","",null,null],[17,"Ungrab","","",null,null],[17,"ClearGrab","","",null,null],[17,"Next_VMode","","",null,null],[17,"Prev_VMode","","",null,null],[17,"LogWindowTree","","",null,null],[17,"LogGrabInfo","","",null,null],[11,"clone","gdk","",85,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"eq","","",85,{"inputs":[{"name":"self"},{"name":"atom"}],"output":{"name":"bool"}}],[11,"ne","","",85,{"inputs":[{"name":"self"},{"name":"atom"}],"output":{"name":"bool"}}],[11,"intern","","",85,{"inputs":[{"name":"str"}],"output":{"name":"atom"}}],[11,"name","","",85,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"value","","",85,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"to_glib_none","","",85,{"inputs":[{"name":"self"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",85,{"inputs":[{"name":"self"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",85,{"inputs":[{"name":"gdkatom"}],"output":{"name":"atom"}}],[11,"from_glib_full","","",85,{"inputs":[{"name":"gdkatom"}],"output":{"name":"atom"}}],[11,"from_glib_none_num_as_vec","","",85,null],[11,"from_glib_container_num_as_vec","","",85,null],[11,"from_glib_full_num_as_vec","","",85,null],[11,"from_glib_none_as_vec","","",85,null],[11,"from_glib_container_as_vec","","",85,null],[11,"from_glib_full_as_vec","","",85,null],[11,"from","","",85,{"inputs":[{"name":"str"}],"output":{"name":"atom"}}],[11,"clone","","",86,{"inputs":[{"name":"self"}],"output":{"name":"eventbutton"}}],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_glib_none","","",86,{"inputs":[{"name":"self"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",86,{"inputs":[{"name":"self"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",86,null],[11,"from_glib_full","","",86,null],[11,"as_ref","","",86,{"inputs":[{"name":"self"}],"output":{"name":"gdkeventbutton"}}],[11,"as_mut","","",86,{"inputs":[{"name":"self"}],"output":{"name":"gdkeventbutton"}}],[11,"deref","","",86,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"deref_mut","","",86,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"get_position","","",86,null],[11,"get_state","","",86,{"inputs":[{"name":"self"}],"output":{"name":"modifiertype"}}],[11,"get_time","","",86,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_button","","",86,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",87,{"inputs":[{"name":"self"}],"output":{"name":"eventconfigure"}}],[11,"fmt","","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_glib_none","","",87,{"inputs":[{"name":"self"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",87,{"inputs":[{"name":"self"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",87,null],[11,"from_glib_full","","",87,null],[11,"as_ref","","",87,{"inputs":[{"name":"self"}],"output":{"name":"gdkeventconfigure"}}],[11,"as_mut","","",87,{"inputs":[{"name":"self"}],"output":{"name":"gdkeventconfigure"}}],[11,"deref","","",87,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"deref_mut","","",87,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"get_position","","",87,null],[11,"get_size","","",87,null],[11,"clone","","",88,{"inputs":[{"name":"self"}],"output":{"name":"eventcrossing"}}],[11,"fmt","","",88,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_glib_none","","",88,{"inputs":[{"name":"self"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",88,{"inputs":[{"name":"self"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",88,null],[11,"from_glib_full","","",88,null],[11,"as_ref","","",88,{"inputs":[{"name":"self"}],"output":{"name":"gdkeventcrossing"}}],[11,"as_mut","","",88,{"inputs":[{"name":"self"}],"output":{"name":"gdkeventcrossing"}}],[11,"deref","","",88,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"deref_mut","","",88,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"get_position","","",88,null],[11,"get_subwindow","","",88,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_mode","","",88,{"inputs":[{"name":"self"}],"output":{"name":"crossingmode"}}],[11,"get_detail","","",88,{"inputs":[{"name":"self"}],"output":{"name":"notifytype"}}],[11,"get_state","","",88,{"inputs":[{"name":"self"}],"output":{"name":"modifiertype"}}],[11,"get_time","","",88,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",89,{"inputs":[{"name":"self"}],"output":{"name":"eventdnd"}}],[11,"fmt","","",89,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_glib_none","","",89,{"inputs":[{"name":"self"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",89,{"inputs":[{"name":"self"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",89,null],[11,"from_glib_full","","",89,null],[11,"as_ref","","",89,{"inputs":[{"name":"self"}],"output":{"name":"gdkeventdnd"}}],[11,"as_mut","","",89,{"inputs":[{"name":"self"}],"output":{"name":"gdkeventdnd"}}],[11,"deref","","",89,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"deref_mut","","",89,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"get_context","","",89,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_time","","",89,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",90,{"inputs":[{"name":"self"}],"output":{"name":"eventexpose"}}],[11,"fmt","","",90,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_glib_none","","",90,{"inputs":[{"name":"self"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",90,{"inputs":[{"name":"self"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",90,null],[11,"from_glib_full","","",90,null],[11,"as_ref","","",90,{"inputs":[{"name":"self"}],"output":{"name":"gdkeventexpose"}}],[11,"as_mut","","",90,{"inputs":[{"name":"self"}],"output":{"name":"gdkeventexpose"}}],[11,"deref","","",90,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"deref_mut","","",90,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"get_region","","",90,{"inputs":[{"name":"self"}],"output":{"name":"rectangle"}}],[11,"get_count","","",90,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",91,{"inputs":[{"name":"self"}],"output":{"name":"eventfocus"}}],[11,"fmt","","",91,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_glib_none","","",91,{"inputs":[{"name":"self"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",91,{"inputs":[{"name":"self"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",91,null],[11,"from_glib_full","","",91,null],[11,"as_ref","","",91,{"inputs":[{"name":"self"}],"output":{"name":"gdkeventfocus"}}],[11,"as_mut","","",91,{"inputs":[{"name":"self"}],"output":{"name":"gdkeventfocus"}}],[11,"deref","","",91,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"deref_mut","","",91,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"clone","","",92,{"inputs":[{"name":"self"}],"output":{"name":"eventgrabbroken"}}],[11,"fmt","","",92,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_glib_none","","",92,{"inputs":[{"name":"self"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",92,{"inputs":[{"name":"self"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",92,null],[11,"from_glib_full","","",92,null],[11,"as_ref","","",92,{"inputs":[{"name":"self"}],"output":{"name":"gdkeventgrabbroken"}}],[11,"as_mut","","",92,{"inputs":[{"name":"self"}],"output":{"name":"gdkeventgrabbroken"}}],[11,"deref","","",92,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"deref_mut","","",92,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"is_keyboard","","",92,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_implicit","","",92,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get_grab_window","","",92,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",93,{"inputs":[{"name":"self"}],"output":{"name":"eventkey"}}],[11,"fmt","","",93,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_glib_none","","",93,{"inputs":[{"name":"self"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",93,{"inputs":[{"name":"self"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",93,null],[11,"from_glib_full","","",93,null],[11,"as_ref","","",93,{"inputs":[{"name":"self"}],"output":{"name":"gdkeventkey"}}],[11,"as_mut","","",93,{"inputs":[{"name":"self"}],"output":{"name":"gdkeventkey"}}],[11,"deref","","",93,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"deref_mut","","",93,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"get_time","","",93,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_state","","",93,{"inputs":[{"name":"self"}],"output":{"name":"modifiertype"}}],[11,"get_keyval","","",93,{"inputs":[{"name":"self"}],"output":{"name":"key"}}],[11,"get_length","","",93,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_hardware_keycode","","",93,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"get_group","","",93,{"inputs":[{"name":"self"}],"output":{"name":"u8"}}],[11,"clone","","",94,{"inputs":[{"name":"self"}],"output":{"name":"eventmotion"}}],[11,"fmt","","",94,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_glib_none","","",94,{"inputs":[{"name":"self"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",94,{"inputs":[{"name":"self"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",94,null],[11,"from_glib_full","","",94,null],[11,"as_ref","","",94,{"inputs":[{"name":"self"}],"output":{"name":"gdkeventmotion"}}],[11,"as_mut","","",94,{"inputs":[{"name":"self"}],"output":{"name":"gdkeventmotion"}}],[11,"deref","","",94,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"deref_mut","","",94,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"get_position","","",94,null],[11,"get_state","","",94,{"inputs":[{"name":"self"}],"output":{"name":"modifiertype"}}],[11,"get_time","","",94,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",95,{"inputs":[{"name":"self"}],"output":{"name":"eventownerchange"}}],[11,"fmt","","",95,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_glib_none","","",95,{"inputs":[{"name":"self"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",95,{"inputs":[{"name":"self"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",95,null],[11,"from_glib_full","","",95,null],[11,"as_ref","","",95,{"inputs":[{"name":"self"}],"output":{"name":"gdkeventownerchange"}}],[11,"as_mut","","",95,{"inputs":[{"name":"self"}],"output":{"name":"gdkeventownerchange"}}],[11,"deref","","",95,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"deref_mut","","",95,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"get_owner","","",95,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_reason","","",95,{"inputs":[{"name":"self"}],"output":{"name":"ownerchange"}}],[11,"get_selection","","",95,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"get_time","","",95,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_selection_time","","",95,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",96,{"inputs":[{"name":"self"}],"output":{"name":"eventproperty"}}],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_glib_none","","",96,{"inputs":[{"name":"self"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",96,{"inputs":[{"name":"self"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",96,null],[11,"from_glib_full","","",96,null],[11,"as_ref","","",96,{"inputs":[{"name":"self"}],"output":{"name":"gdkeventproperty"}}],[11,"as_mut","","",96,{"inputs":[{"name":"self"}],"output":{"name":"gdkeventproperty"}}],[11,"deref","","",96,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"deref_mut","","",96,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"clone","","",97,{"inputs":[{"name":"self"}],"output":{"name":"eventproximity"}}],[11,"fmt","","",97,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_glib_none","","",97,{"inputs":[{"name":"self"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",97,{"inputs":[{"name":"self"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",97,null],[11,"from_glib_full","","",97,null],[11,"as_ref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"gdkeventproximity"}}],[11,"as_mut","","",97,{"inputs":[{"name":"self"}],"output":{"name":"gdkeventproximity"}}],[11,"deref","","",97,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"deref_mut","","",97,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"get_time","","",97,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_device","","",97,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",98,{"inputs":[{"name":"self"}],"output":{"name":"eventscroll"}}],[11,"fmt","","",98,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_glib_none","","",98,{"inputs":[{"name":"self"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",98,{"inputs":[{"name":"self"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",98,null],[11,"from_glib_full","","",98,null],[11,"as_ref","","",98,{"inputs":[{"name":"self"}],"output":{"name":"gdkeventscroll"}}],[11,"as_mut","","",98,{"inputs":[{"name":"self"}],"output":{"name":"gdkeventscroll"}}],[11,"deref","","",98,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"deref_mut","","",98,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"get_time","","",98,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_position","","",98,null],[11,"get_state","","",98,{"inputs":[{"name":"self"}],"output":{"name":"modifiertype"}}],[11,"get_device","","",98,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_direction","","",98,{"inputs":[{"name":"self"}],"output":{"name":"scrolldirection"}}],[11,"get_root","","",98,null],[11,"get_delta","","",98,null],[11,"clone","","",99,{"inputs":[{"name":"self"}],"output":{"name":"eventselection"}}],[11,"fmt","","",99,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_glib_none","","",99,{"inputs":[{"name":"self"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",99,{"inputs":[{"name":"self"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",99,null],[11,"from_glib_full","","",99,null],[11,"as_ref","","",99,{"inputs":[{"name":"self"}],"output":{"name":"gdkeventselection"}}],[11,"as_mut","","",99,{"inputs":[{"name":"self"}],"output":{"name":"gdkeventselection"}}],[11,"deref","","",99,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"deref_mut","","",99,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"get_selection","","",99,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"get_target","","",99,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"get_property","","",99,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"get_time","","",99,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_requestor","","",99,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",100,{"inputs":[{"name":"self"}],"output":{"name":"eventsetting"}}],[11,"fmt","","",100,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_glib_none","","",100,{"inputs":[{"name":"self"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",100,{"inputs":[{"name":"self"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",100,null],[11,"from_glib_full","","",100,null],[11,"as_ref","","",100,{"inputs":[{"name":"self"}],"output":{"name":"gdkeventsetting"}}],[11,"as_mut","","",100,{"inputs":[{"name":"self"}],"output":{"name":"gdkeventsetting"}}],[11,"deref","","",100,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"deref_mut","","",100,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"clone","","",101,{"inputs":[{"name":"self"}],"output":{"name":"eventtouch"}}],[11,"fmt","","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_glib_none","","",101,{"inputs":[{"name":"self"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",101,{"inputs":[{"name":"self"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",101,null],[11,"from_glib_full","","",101,null],[11,"as_ref","","",101,{"inputs":[{"name":"self"}],"output":{"name":"gdkeventtouch"}}],[11,"as_mut","","",101,{"inputs":[{"name":"self"}],"output":{"name":"gdkeventtouch"}}],[11,"deref","","",101,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"deref_mut","","",101,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"get_time","","",101,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_position","","",101,null],[11,"get_state","","",101,{"inputs":[{"name":"self"}],"output":{"name":"modifiertype"}}],[11,"is_emulating_pointer","","",101,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get_device","","",101,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",102,{"inputs":[{"name":"self"}],"output":{"name":"eventvisibility"}}],[11,"fmt","","",102,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_glib_none","","",102,{"inputs":[{"name":"self"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",102,{"inputs":[{"name":"self"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",102,null],[11,"from_glib_full","","",102,null],[11,"as_ref","","",102,{"inputs":[{"name":"self"}],"output":{"name":"gdkeventvisibility"}}],[11,"as_mut","","",102,{"inputs":[{"name":"self"}],"output":{"name":"gdkeventvisibility"}}],[11,"deref","","",102,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"deref_mut","","",102,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"get_state","","",102,{"inputs":[{"name":"self"}],"output":{"name":"visibilitystate"}}],[11,"clone","","",103,{"inputs":[{"name":"self"}],"output":{"name":"eventwindowstate"}}],[11,"fmt","","",103,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"to_glib_none","","",103,{"inputs":[{"name":"self"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",103,{"inputs":[{"name":"self"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",103,null],[11,"from_glib_full","","",103,null],[11,"as_ref","","",103,{"inputs":[{"name":"self"}],"output":{"name":"gdkeventwindowstate"}}],[11,"as_mut","","",103,{"inputs":[{"name":"self"}],"output":{"name":"gdkeventwindowstate"}}],[11,"deref","","",103,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"deref_mut","","",103,{"inputs":[{"name":"self"}],"output":{"name":"event"}}],[11,"get_changed_mask","","",103,{"inputs":[{"name":"self"}],"output":{"name":"windowstate"}}],[11,"get_new_window_state","","",103,{"inputs":[{"name":"self"}],"output":{"name":"windowstate"}}],[11,"get_refresh_info","","Using the frame history stored in the frame clock, finds the last known presentation time and refresh interval, and assuming that presentation times are separated by the refresh interval, predicts a presentation time that is a multiple of the refresh interval after the last presentation time, and later than `base_time`.",44,null],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"geometry"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"geometry"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"geometry"}],"output":{"name":"bool"}}],[11,"get_font_options","","Gets any options previously set with `Screen::set_font_options`.",47,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"rectangle"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"rectangle"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"rectangle"}],"output":{"name":"bool"}}],[11,"hash","","",2,null],[11,"intersect","","",2,{"inputs":[{"name":"self"},{"name":"rectangle"}],"output":{"name":"option"}}],[11,"union","","",2,{"inputs":[{"name":"self"},{"name":"rectangle"}],"output":{"name":"rectangle"}}],[11,"as_ref","","",2,{"inputs":[{"name":"self"}],"output":{"name":"rectangleint"}}],[11,"from","","",2,{"inputs":[{"name":"rectangleint"}],"output":{"name":"rectangle"}}],[11,"static_type","","",2,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",2,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"set_value","","",2,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"set_value_optional","","",2,{"inputs":[{"name":"value"},{"name":"option"}],"output":null}],[11,"fmt","","",104,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"rgba"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"black","","",3,{"inputs":[],"output":{"name":"rgba"}}],[11,"blue","","",3,{"inputs":[],"output":{"name":"rgba"}}],[11,"green","","",3,{"inputs":[],"output":{"name":"rgba"}}],[11,"red","","",3,{"inputs":[],"output":{"name":"rgba"}}],[11,"white","","",3,{"inputs":[],"output":{"name":"rgba"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","","",3,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"hash","","",3,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"rgba"}],"output":{"name":"bool"}}],[11,"static_type","","",3,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",3,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"set_value","","",3,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"set_value_optional","","",3,{"inputs":[{"name":"value"},{"name":"option"}],"output":null}],[11,"default","","",4,{"inputs":[],"output":{"name":"windowattr"}}],[11,"to_glib_none","","",4,{"inputs":[{"name":"self"}],"output":{"name":"stash"}}],[11,"new","","Creates a new `Window` using the attributes from `attributes`. See `WindowAttr` and `WindowAttributesType` for more details. Note: to use this on displays other than the default display, `parent` must be specified. ## `parent` a `Window`, or `None` to create the window as a child of  the default root window for the default display. ## `attributes` attributes of the new window ## `attributes_mask` mask indicating which  fields in `attributes` are valid",50,{"inputs":[{"name":"option"},{"name":"windowattr"}],"output":{"name":"window"}}],[11,"create_similar_surface","","Create a new surface that is as compatible as possible with the given `self`. For example the new surface will have the same fallback resolution and font options as `self`. Generally, the new surface will also use the same backend as `self`, unless that is not possible for some reason. The type of the returned surface may be examined with `cairo_surface_get_type`.",50,{"inputs":[{"name":"self"},{"name":"content"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[6,"key","","",null,null],[17,"ANCHOR_FLIP_X","","",null,null],[17,"ANCHOR_FLIP_Y","","",null,null],[17,"ANCHOR_SLIDE_X","","",null,null],[17,"ANCHOR_SLIDE_Y","","",null,null],[17,"ANCHOR_RESIZE_X","","",null,null],[17,"ANCHOR_RESIZE_Y","","",null,null],[17,"ANCHOR_FLIP","","",null,null],[17,"ANCHOR_SLIDE","","",null,null],[17,"ANCHOR_RESIZE","","",null,null],[17,"AXIS_FLAG_X","","",null,null],[17,"AXIS_FLAG_Y","","",null,null],[17,"AXIS_FLAG_PRESSURE","","",null,null],[17,"AXIS_FLAG_XTILT","","",null,null],[17,"AXIS_FLAG_YTILT","","",null,null],[17,"AXIS_FLAG_WHEEL","","",null,null],[17,"AXIS_FLAG_DISTANCE","","",null,null],[17,"AXIS_FLAG_ROTATION","","",null,null],[17,"AXIS_FLAG_SLIDER","","",null,null],[17,"ACTION_DEFAULT","","",null,null],[17,"ACTION_COPY","","",null,null],[17,"ACTION_MOVE","","",null,null],[17,"ACTION_LINK","","",null,null],[17,"ACTION_PRIVATE","","",null,null],[17,"ACTION_ASK","","",null,null],[17,"EXPOSURE_MASK","","",null,null],[17,"POINTER_MOTION_MASK","","",null,null],[17,"POINTER_MOTION_HINT_MASK","","",null,null],[17,"BUTTON_MOTION_MASK","","",null,null],[17,"BUTTON1_MOTION_MASK","","",null,null],[17,"BUTTON2_MOTION_MASK","","",null,null],[17,"BUTTON3_MOTION_MASK","","",null,null],[17,"BUTTON_PRESS_MASK","","",null,null],[17,"BUTTON_RELEASE_MASK","","",null,null],[17,"KEY_PRESS_MASK","","",null,null],[17,"KEY_RELEASE_MASK","","",null,null],[17,"ENTER_NOTIFY_MASK","","",null,null],[17,"LEAVE_NOTIFY_MASK","","",null,null],[17,"FOCUS_CHANGE_MASK","","",null,null],[17,"STRUCTURE_MASK","","",null,null],[17,"PROPERTY_CHANGE_MASK","","",null,null],[17,"VISIBILITY_NOTIFY_MASK","","",null,null],[17,"PROXIMITY_IN_MASK","","",null,null],[17,"PROXIMITY_OUT_MASK","","",null,null],[17,"SUBSTRUCTURE_MASK","","",null,null],[17,"SCROLL_MASK","","",null,null],[17,"TOUCH_MASK","","",null,null],[17,"SMOOTH_SCROLL_MASK","","",null,null],[17,"TOUCHPAD_GESTURE_MASK","","",null,null],[17,"TABLET_PAD_MASK","","",null,null],[17,"ALL_EVENTS_MASK","","",null,null],[17,"FRAME_CLOCK_PHASE_NONE","","",null,null],[17,"FRAME_CLOCK_PHASE_FLUSH_EVENTS","","",null,null],[17,"FRAME_CLOCK_PHASE_BEFORE_PAINT","","",null,null],[17,"FRAME_CLOCK_PHASE_UPDATE","","",null,null],[17,"FRAME_CLOCK_PHASE_LAYOUT","","",null,null],[17,"FRAME_CLOCK_PHASE_PAINT","","",null,null],[17,"FRAME_CLOCK_PHASE_RESUME_EVENTS","","",null,null],[17,"FRAME_CLOCK_PHASE_AFTER_PAINT","","",null,null],[17,"SHIFT_MASK","","",null,null],[17,"LOCK_MASK","","",null,null],[17,"CONTROL_MASK","","",null,null],[17,"MOD1_MASK","","",null,null],[17,"MOD2_MASK","","",null,null],[17,"MOD3_MASK","","",null,null],[17,"MOD4_MASK","","",null,null],[17,"MOD5_MASK","","",null,null],[17,"BUTTON1_MASK","","",null,null],[17,"BUTTON2_MASK","","",null,null],[17,"BUTTON3_MASK","","",null,null],[17,"BUTTON4_MASK","","",null,null],[17,"BUTTON5_MASK","","",null,null],[17,"MODIFIER_RESERVED_13_MASK","","",null,null],[17,"MODIFIER_RESERVED_14_MASK","","",null,null],[17,"MODIFIER_RESERVED_15_MASK","","",null,null],[17,"MODIFIER_RESERVED_16_MASK","","",null,null],[17,"MODIFIER_RESERVED_17_MASK","","",null,null],[17,"MODIFIER_RESERVED_18_MASK","","",null,null],[17,"MODIFIER_RESERVED_19_MASK","","",null,null],[17,"MODIFIER_RESERVED_20_MASK","","",null,null],[17,"MODIFIER_RESERVED_21_MASK","","",null,null],[17,"MODIFIER_RESERVED_22_MASK","","",null,null],[17,"MODIFIER_RESERVED_23_MASK","","",null,null],[17,"MODIFIER_RESERVED_24_MASK","","",null,null],[17,"MODIFIER_RESERVED_25_MASK","","",null,null],[17,"SUPER_MASK","","",null,null],[17,"HYPER_MASK","","",null,null],[17,"META_MASK","","",null,null],[17,"MODIFIER_RESERVED_29_MASK","","",null,null],[17,"RELEASE_MASK","","",null,null],[17,"MODIFIER_MASK","","",null,null],[17,"SEAT_CAPABILITY_NONE","","",null,null],[17,"SEAT_CAPABILITY_POINTER","","",null,null],[17,"SEAT_CAPABILITY_TOUCH","","",null,null],[17,"SEAT_CAPABILITY_TABLET_STYLUS","","",null,null],[17,"SEAT_CAPABILITY_KEYBOARD","","",null,null],[17,"SEAT_CAPABILITY_ALL_POINTING","","",null,null],[17,"SEAT_CAPABILITY_ALL","","",null,null],[17,"DECOR_ALL","","",null,null],[17,"DECOR_BORDER","","",null,null],[17,"DECOR_RESIZEH","","",null,null],[17,"DECOR_TITLE","","",null,null],[17,"DECOR_MENU","","",null,null],[17,"DECOR_MINIMIZE","","",null,null],[17,"DECOR_MAXIMIZE","","",null,null],[17,"FUNC_ALL","","",null,null],[17,"FUNC_RESIZE","","",null,null],[17,"FUNC_MOVE","","",null,null],[17,"FUNC_MINIMIZE","","",null,null],[17,"FUNC_MAXIMIZE","","",null,null],[17,"FUNC_CLOSE","","",null,null],[17,"HINT_POS","","",null,null],[17,"HINT_MIN_SIZE","","",null,null],[17,"HINT_MAX_SIZE","","",null,null],[17,"HINT_BASE_SIZE","","",null,null],[17,"HINT_ASPECT","","",null,null],[17,"HINT_RESIZE_INC","","",null,null],[17,"HINT_WIN_GRAVITY","","",null,null],[17,"HINT_USER_POS","","",null,null],[17,"HINT_USER_SIZE","","",null,null],[17,"WINDOW_STATE_WITHDRAWN","","",null,null],[17,"WINDOW_STATE_ICONIFIED","","",null,null],[17,"WINDOW_STATE_MAXIMIZED","","",null,null],[17,"WINDOW_STATE_STICKY","","",null,null],[17,"WINDOW_STATE_FULLSCREEN","","",null,null],[17,"WINDOW_STATE_ABOVE","","",null,null],[17,"WINDOW_STATE_BELOW","","",null,null],[17,"WINDOW_STATE_FOCUSED","","",null,null],[17,"WINDOW_STATE_TILED","","",null,null],[17,"ATOM_NONE","","",null,null],[17,"SELECTION_PRIMARY","","",null,null],[17,"SELECTION_SECONDARY","","",null,null],[17,"SELECTION_CLIPBOARD","","",null,null],[17,"TARGET_BITMAP","","",null,null],[17,"TARGET_COLORMAP","","",null,null],[17,"TARGET_DRAWABLE","","",null,null],[17,"TARGET_PIXMAP","","",null,null],[17,"TARGET_STRING","","",null,null],[17,"SELECTION_TYPE_ATOM","","",null,null],[17,"SELECTION_TYPE_BITMAP","","",null,null],[17,"SELECTION_TYPE_COLORMAP","","",null,null],[17,"SELECTION_TYPE_DRAWABLE","","",null,null],[17,"SELECTION_TYPE_INTEGER","","",null,null],[17,"SELECTION_TYPE_PIXMAP","","",null,null],[17,"SELECTION_TYPE_WINDOW","","",null,null],[17,"SELECTION_TYPE_STRING","","",null,null],[8,"AppLaunchContextExt","","",null,null],[10,"set_desktop","","",64,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_display","","",64,{"inputs":[{"name":"self"},{"name":"display"}],"output":null}],[10,"set_icon","","",64,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_icon_name","","",64,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_screen","","",64,{"inputs":[{"name":"self"},{"name":"screen"}],"output":null}],[10,"set_timestamp","","",64,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_display","","",64,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_property_display_notify","","",64,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CursorExt","","",null,null],[10,"get_cursor_type","","",65,{"inputs":[{"name":"self"}],"output":{"name":"cursortype"}}],[10,"get_display","","",65,{"inputs":[{"name":"self"}],"output":{"name":"display"}}],[10,"get_image","","",65,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_surface","","",65,null],[10,"get_property_cursor_type","","",65,{"inputs":[{"name":"self"}],"output":{"name":"cursortype"}}],[10,"get_property_display","","",65,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_property_cursor_type_notify","","",65,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_display_notify","","",65,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"DeviceExt","","",null,null],[10,"get_associated_device","","",66,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_axes","","",66,{"inputs":[{"name":"self"}],"output":{"name":"axisflags"}}],[10,"get_axis_use","","",66,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"axisuse"}}],[10,"get_device_type","","",66,{"inputs":[{"name":"self"}],"output":{"name":"devicetype"}}],[10,"get_display","","",66,{"inputs":[{"name":"self"}],"output":{"name":"display"}}],[10,"get_has_cursor","","",66,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_key","","",66,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[10,"get_last_event_window","","",66,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_mode","","",66,{"inputs":[{"name":"self"}],"output":{"name":"inputmode"}}],[10,"get_n_axes","","",66,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_n_keys","","",66,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_name","","",66,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_position","","",66,null],[10,"get_position_double","","",66,null],[10,"get_product_id","","",66,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_seat","","",66,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_source","","",66,{"inputs":[{"name":"self"}],"output":{"name":"inputsource"}}],[10,"get_vendor_id","","",66,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_window_at_position","","",66,null],[10,"get_window_at_position_double","","",66,null],[10,"grab","","",66,{"inputs":[{"name":"self"},{"name":"window"},{"name":"grabownership"},{"name":"bool"},{"name":"eventmask"},{"name":"p"},{"name":"u32"}],"output":{"name":"grabstatus"}}],[10,"list_axes","","",66,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"list_slave_devices","","",66,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"set_axis_use","","",66,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"axisuse"}],"output":null}],[10,"set_key","","",66,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"modifiertype"}],"output":null}],[10,"set_mode","","",66,{"inputs":[{"name":"self"},{"name":"inputmode"}],"output":{"name":"bool"}}],[10,"ungrab","","",66,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"warp","","",66,{"inputs":[{"name":"self"},{"name":"screen"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"get_property_device_manager","","",66,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_property_input_mode","","",66,{"inputs":[{"name":"self"}],"output":{"name":"inputmode"}}],[10,"set_property_input_mode","","",66,{"inputs":[{"name":"self"},{"name":"inputmode"}],"output":null}],[10,"get_property_input_source","","",66,{"inputs":[{"name":"self"}],"output":{"name":"inputsource"}}],[10,"get_property_num_touches","","",66,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_seat","","",66,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_tool","","",66,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_property_type","","",66,{"inputs":[{"name":"self"}],"output":{"name":"devicetype"}}],[10,"connect_changed","","",66,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_tool_changed","","",66,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_associated_device_notify","","",66,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_axes_notify","","",66,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_device_manager_notify","","",66,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_display_notify","","",66,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_has_cursor_notify","","",66,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_input_mode_notify","","",66,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_input_source_notify","","",66,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_n_axes_notify","","",66,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_name_notify","","",66,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_num_touches_notify","","",66,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_product_id_notify","","",66,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_seat_notify","","",66,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_tool_notify","","",66,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_type_notify","","",66,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_vendor_id_notify","","",66,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"DeviceManagerExt","","",null,null],[10,"get_client_pointer","","",67,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_display","","",67,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"list_devices","","",67,{"inputs":[{"name":"self"},{"name":"devicetype"}],"output":{"name":"vec"}}],[10,"get_property_display","","",67,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_device_added","","",67,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_device_changed","","",67,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_device_removed","","",67,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_display_notify","","",67,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"DeviceToolExt","","",null,null],[10,"get_hardware_id","","",68,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[10,"get_serial","","",68,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[10,"get_tool_type","","",68,{"inputs":[{"name":"self"}],"output":{"name":"devicetooltype"}}],[10,"get_property_axes","","",68,{"inputs":[{"name":"self"}],"output":{"name":"axisflags"}}],[10,"get_property_hardware_id","","",68,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[10,"get_property_serial","","",68,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[10,"get_property_tool_type","","",68,{"inputs":[{"name":"self"}],"output":{"name":"devicetooltype"}}],[10,"connect_property_axes_notify","","",68,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_hardware_id_notify","","",68,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_serial_notify","","",68,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_tool_type_notify","","",68,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"DisplayExt","","",null,null],[10,"beep","","",69,{"inputs":[{"name":"self"}],"output":null}],[10,"close","","",69,{"inputs":[{"name":"self"}],"output":null}],[10,"device_is_grabbed","","",69,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"flush","","",69,{"inputs":[{"name":"self"}],"output":null}],[10,"get_app_launch_context","","",69,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_default_cursor_size","","",69,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_default_group","","",69,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[10,"get_default_screen","","",69,{"inputs":[{"name":"self"}],"output":{"name":"screen"}}],[10,"get_default_seat","","",69,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_device_manager","","",69,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_event","","",69,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_maximal_cursor_size","","",69,null],[10,"get_monitor","","",69,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_monitor_at_point","","",69,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_monitor_at_window","","",69,{"inputs":[{"name":"self"},{"name":"window"}],"output":{"name":"option"}}],[10,"get_n_monitors","","",69,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_n_screens","","",69,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_name","","",69,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[10,"get_pointer","","",69,null],[10,"get_primary_monitor","","",69,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_screen","","",69,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"screen"}}],[10,"get_window_at_pointer","","",69,null],[10,"has_pending","","",69,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_closed","","",69,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"keyboard_ungrab","","",69,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"list_devices","","",69,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"list_seats","","",69,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"notify_startup_complete","","",69,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"peek_event","","",69,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"pointer_is_grabbed","","",69,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"pointer_ungrab","","",69,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"put_event","","",69,{"inputs":[{"name":"self"},{"name":"event"}],"output":null}],[10,"request_selection_notification","","",69,{"inputs":[{"name":"self"},{"name":"atom"}],"output":{"name":"bool"}}],[10,"set_double_click_distance","","",69,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"set_double_click_time","","",69,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"store_clipboard","","",69,null],[10,"supports_clipboard_persistence","","",69,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"supports_composite","","",69,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"supports_cursor_alpha","","",69,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"supports_cursor_color","","",69,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"supports_input_shapes","","",69,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"supports_selection_notification","","",69,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"supports_shapes","","",69,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"sync","","",69,{"inputs":[{"name":"self"}],"output":null}],[10,"warp_pointer","","",69,{"inputs":[{"name":"self"},{"name":"screen"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"connect_closed","","",69,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_monitor_added","","",69,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_monitor_removed","","",69,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_opened","","",69,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_seat_added","","",69,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_seat_removed","","",69,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"DisplayManagerExt","","",null,null],[10,"get_default_display","","",70,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"list_displays","","",70,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"open_display","","",70,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"set_default_display","","",70,{"inputs":[{"name":"self"},{"name":"display"}],"output":null}],[10,"get_property_default_display","","",70,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_default_display","","",70,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"connect_display_opened","","",70,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_default_display_notify","","",70,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"DragContextExt","","",null,null],[10,"get_actions","","",71,{"inputs":[{"name":"self"}],"output":{"name":"dragaction"}}],[10,"get_dest_window","","",71,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[10,"get_device","","",71,{"inputs":[{"name":"self"}],"output":{"name":"device"}}],[10,"get_drag_window","","",71,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_protocol","","",71,{"inputs":[{"name":"self"}],"output":{"name":"dragprotocol"}}],[10,"get_selected_action","","",71,{"inputs":[{"name":"self"}],"output":{"name":"dragaction"}}],[10,"get_source_window","","",71,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[10,"get_suggested_action","","",71,{"inputs":[{"name":"self"}],"output":{"name":"dragaction"}}],[10,"list_targets","","",71,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"manage_dnd","","",71,{"inputs":[{"name":"self"},{"name":"window"},{"name":"dragaction"}],"output":{"name":"bool"}}],[10,"set_device","","",71,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_hotspot","","",71,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"connect_action_changed","","",71,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_cancel","","",71,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_dnd_finished","","",71,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_drop_performed","","",71,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"DrawingContextExt","","",null,null],[10,"get_cairo_context","","",72,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_clip","","",72,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_window","","",72,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"is_valid","","",72,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"connect_property_clip_notify","","",72,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_window_notify","","",72,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"FrameClockExt","","",null,null],[10,"begin_updating","","",73,{"inputs":[{"name":"self"}],"output":null}],[10,"end_updating","","",73,{"inputs":[{"name":"self"}],"output":null}],[10,"get_current_timings","","",73,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_frame_counter","","",73,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[10,"get_frame_time","","",73,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[10,"get_history_start","","",73,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[10,"get_timings","","",73,{"inputs":[{"name":"self"},{"name":"i64"}],"output":{"name":"option"}}],[10,"request_phase","","",73,{"inputs":[{"name":"self"},{"name":"frameclockphase"}],"output":null}],[10,"connect_after_paint","","",73,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_before_paint","","",73,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_flush_events","","",73,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_layout","","",73,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_paint","","",73,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_resume_events","","",73,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_update","","",73,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"GLContextExt","","",null,null],[10,"get_debug_enabled","","",74,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_display","","",74,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_forward_compatible","","",74,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_required_version","","",74,null],[10,"get_shared_context","","",74,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_use_es","","",74,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_version","","",74,null],[10,"get_window","","",74,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"is_legacy","","",74,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"make_current","","",74,{"inputs":[{"name":"self"}],"output":null}],[10,"realize","","",74,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"set_debug_enabled","","",74,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_forward_compatible","","",74,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_required_version","","",74,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_use_es","","",74,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"connect_property_display_notify","","",74,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_shared_context_notify","","",74,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_window_notify","","",74,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"MonitorExt","","",null,null],[10,"get_display","","",75,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_geometry","","",75,{"inputs":[{"name":"self"}],"output":{"name":"rectangle"}}],[10,"get_height_mm","","",75,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_manufacturer","","",75,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_model","","",75,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_refresh_rate","","",75,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_scale_factor","","",75,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_subpixel_layout","","",75,{"inputs":[{"name":"self"}],"output":{"name":"subpixellayout"}}],[10,"get_width_mm","","",75,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_workarea","","",75,{"inputs":[{"name":"self"}],"output":{"name":"rectangle"}}],[10,"is_primary","","",75,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_display","","",75,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_property_geometry","","",75,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_property_height_mm","","",75,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_property_refresh_rate","","",75,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_property_scale_factor","","",75,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_property_width_mm","","",75,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_property_workarea","","",75,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_invalidate","","",75,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_display_notify","","",75,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_geometry_notify","","",75,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_height_mm_notify","","",75,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_manufacturer_notify","","",75,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_model_notify","","",75,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_refresh_rate_notify","","",75,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_scale_factor_notify","","",75,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_subpixel_layout_notify","","",75,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_width_mm_notify","","",75,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_workarea_notify","","",75,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ScreenExt","","",null,null],[10,"get_active_window","","",76,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_display","","",76,{"inputs":[{"name":"self"}],"output":{"name":"display"}}],[10,"get_height","","",76,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_height_mm","","",76,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_monitor_at_point","","",76,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[10,"get_monitor_at_window","","",76,{"inputs":[{"name":"self"},{"name":"window"}],"output":{"name":"i32"}}],[10,"get_monitor_geometry","","",76,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"rectangle"}}],[10,"get_monitor_height_mm","","",76,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"i32"}}],[10,"get_monitor_plug_name","","",76,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_monitor_scale_factor","","",76,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"i32"}}],[10,"get_monitor_width_mm","","",76,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"i32"}}],[10,"get_monitor_workarea","","",76,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"rectangle"}}],[10,"get_n_monitors","","",76,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_number","","",76,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_primary_monitor","","",76,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_resolution","","",76,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_rgba_visual","","",76,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_root_window","","",76,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_system_visual","","",76,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_toplevel_windows","","",76,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_width","","",76,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_width_mm","","",76,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_window_stack","","",76,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"is_composited","","",76,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"list_visuals","","",76,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"make_display_name","","",76,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[10,"set_font_options","","",76,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_resolution","","",76,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"get_property_resolution","","",76,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"set_property_resolution","","",76,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"connect_composited_changed","","",76,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_monitors_changed","","",76,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_size_changed","","",76,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_font_options_notify","","",76,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_resolution_notify","","",76,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"SeatExt","","",null,null],[10,"get_capabilities","","",77,{"inputs":[{"name":"self"}],"output":{"name":"seatcapabilities"}}],[10,"get_display","","",77,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_keyboard","","",77,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_pointer","","",77,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_slaves","","",77,{"inputs":[{"name":"self"},{"name":"seatcapabilities"}],"output":{"name":"vec"}}],[10,"ungrab","","",77,{"inputs":[{"name":"self"}],"output":null}],[10,"connect_device_added","","",77,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_device_removed","","",77,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_tool_added","","",77,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_tool_removed","","",77,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_display_notify","","",77,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"VisualExt","","",null,null],[10,"get_bits_per_rgb","","",78,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_blue_pixel_details","","",78,null],[10,"get_byte_order","","",78,{"inputs":[{"name":"self"}],"output":{"name":"byteorder"}}],[10,"get_colormap_size","","",78,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_depth","","",78,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_green_pixel_details","","",78,null],[10,"get_red_pixel_details","","",78,null],[10,"get_screen","","",78,{"inputs":[{"name":"self"}],"output":{"name":"screen"}}],[10,"get_visual_type","","",78,{"inputs":[{"name":"self"}],"output":{"name":"visualtype"}}],[8,"WindowExt","","",null,null],[10,"beep","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"begin_draw_frame","","",79,{"inputs":[{"name":"self"},{"name":"region"}],"output":{"name":"option"}}],[10,"begin_move_drag","","",79,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"u32"}],"output":null}],[10,"begin_move_drag_for_device","","",79,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"u32"}],"output":null}],[10,"begin_paint_rect","","",79,{"inputs":[{"name":"self"},{"name":"rectangle"}],"output":null}],[10,"begin_paint_region","","",79,{"inputs":[{"name":"self"},{"name":"region"}],"output":null}],[10,"begin_resize_drag","","",79,{"inputs":[{"name":"self"},{"name":"windowedge"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"u32"}],"output":null}],[10,"begin_resize_drag_for_device","","",79,{"inputs":[{"name":"self"},{"name":"windowedge"},{"name":"p"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"u32"}],"output":null}],[10,"configure_finished","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"coords_from_parent","","",79,null],[10,"coords_to_parent","","",79,null],[10,"create_gl_context","","",79,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"create_similar_image_surface","","",79,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"deiconify","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"destroy","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"destroy_notify","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"enable_synchronized_configure","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"end_draw_frame","","",79,{"inputs":[{"name":"self"},{"name":"drawingcontext"}],"output":null}],[10,"end_paint","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"ensure_native","","",79,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"flush","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"focus","","",79,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"freeze_toplevel_updates_libgtk_only","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"freeze_updates","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"fullscreen","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"fullscreen_on_monitor","","",79,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"geometry_changed","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"get_accept_focus","","",79,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_children","","",79,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_clip_region","","",79,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_composited","","",79,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_cursor","","",79,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_decorations","","",79,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_device_cursor","","",79,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[10,"get_device_events","","",79,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"eventmask"}}],[10,"get_device_position","","",79,null],[10,"get_device_position_double","","",79,null],[10,"get_display","","",79,{"inputs":[{"name":"self"}],"output":{"name":"display"}}],[10,"get_drag_protocol","","",79,null],[10,"get_effective_parent","","",79,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_effective_toplevel","","",79,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[10,"get_event_compression","","",79,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_events","","",79,{"inputs":[{"name":"self"}],"output":{"name":"eventmask"}}],[10,"get_focus_on_map","","",79,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_frame_clock","","",79,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_frame_extents","","",79,{"inputs":[{"name":"self"}],"output":{"name":"rectangle"}}],[10,"get_fullscreen_mode","","",79,{"inputs":[{"name":"self"}],"output":{"name":"fullscreenmode"}}],[10,"get_geometry","","",79,null],[10,"get_group","","",79,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_height","","",79,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_modal_hint","","",79,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_origin","","",79,null],[10,"get_parent","","",79,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_pass_through","","",79,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_pointer","","",79,null],[10,"get_position","","",79,null],[10,"get_root_coords","","",79,null],[10,"get_root_origin","","",79,null],[10,"get_scale_factor","","",79,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_screen","","",79,{"inputs":[{"name":"self"}],"output":{"name":"screen"}}],[10,"get_source_events","","",79,{"inputs":[{"name":"self"},{"name":"inputsource"}],"output":{"name":"eventmask"}}],[10,"get_state","","",79,{"inputs":[{"name":"self"}],"output":{"name":"windowstate"}}],[10,"get_support_multidevice","","",79,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_toplevel","","",79,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[10,"get_type_hint","","",79,{"inputs":[{"name":"self"}],"output":{"name":"windowtypehint"}}],[10,"get_update_area","","",79,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_visible_region","","",79,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_visual","","",79,{"inputs":[{"name":"self"}],"output":{"name":"visual"}}],[10,"get_width","","",79,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_window_type","","",79,{"inputs":[{"name":"self"}],"output":{"name":"windowtype"}}],[10,"has_native","","",79,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"hide","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"iconify","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"input_shape_combine_region","","",79,{"inputs":[{"name":"self"},{"name":"region"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"invalidate_rect","","",79,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"}],"output":null}],[10,"invalidate_region","","",79,{"inputs":[{"name":"self"},{"name":"region"},{"name":"bool"}],"output":null}],[10,"is_destroyed","","",79,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_input_only","","",79,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_shaped","","",79,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_viewable","","",79,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_visible","","",79,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"lower","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"mark_paint_from_clip","","",79,{"inputs":[{"name":"self"},{"name":"context"}],"output":null}],[10,"maximize","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"merge_child_input_shapes","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"merge_child_shapes","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"move_","","",79,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"move_region","","",79,{"inputs":[{"name":"self"},{"name":"region"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"move_resize","","",79,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"peek_children","","",79,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"process_updates","","",79,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"raise","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"register_dnd","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"reparent","","",79,{"inputs":[{"name":"self"},{"name":"window"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"resize","","",79,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"restack","","",79,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"}],"output":null}],[10,"scroll","","",79,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_accept_focus","","",79,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_background_rgba","","",79,{"inputs":[{"name":"self"},{"name":"rgba"}],"output":null}],[10,"set_child_input_shapes","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"set_child_shapes","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"set_composited","","",79,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_cursor","","",79,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_decorations","","",79,{"inputs":[{"name":"self"},{"name":"wmdecoration"}],"output":null}],[10,"set_device_cursor","","",79,{"inputs":[{"name":"self"},{"name":"p"},{"name":"cursor"}],"output":null}],[10,"set_device_events","","",79,{"inputs":[{"name":"self"},{"name":"p"},{"name":"eventmask"}],"output":null}],[10,"set_event_compression","","",79,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_events","","",79,{"inputs":[{"name":"self"},{"name":"eventmask"}],"output":null}],[10,"set_focus_on_map","","",79,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_fullscreen_mode","","",79,{"inputs":[{"name":"self"},{"name":"fullscreenmode"}],"output":null}],[10,"set_functions","","",79,{"inputs":[{"name":"self"},{"name":"wmfunction"}],"output":null}],[10,"set_geometry_hints","","",79,{"inputs":[{"name":"self"},{"name":"geometry"},{"name":"windowhints"}],"output":null}],[10,"set_group","","",79,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_icon_list","","",79,null],[10,"set_icon_name","","",79,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_keep_above","","",79,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_keep_below","","",79,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_modal_hint","","",79,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_opacity","","",79,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"set_opaque_region","","",79,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_override_redirect","","",79,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_pass_through","","",79,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_role","","",79,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_shadow_width","","",79,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_skip_pager_hint","","",79,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_skip_taskbar_hint","","",79,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_source_events","","",79,{"inputs":[{"name":"self"},{"name":"inputsource"},{"name":"eventmask"}],"output":null}],[10,"set_startup_id","","",79,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_static_gravities","","",79,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"bool"}}],[10,"set_support_multidevice","","",79,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_title","","",79,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_transient_for","","",79,{"inputs":[{"name":"self"},{"name":"window"}],"output":null}],[10,"set_type_hint","","",79,{"inputs":[{"name":"self"},{"name":"windowtypehint"}],"output":null}],[10,"set_urgency_hint","","",79,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"shape_combine_region","","",79,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"show","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"show_unraised","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"show_window_menu","","",79,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"bool"}}],[10,"stick","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"thaw_toplevel_updates_libgtk_only","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"thaw_updates","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"unfullscreen","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"unmaximize","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"unstick","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"withdraw","","",79,{"inputs":[{"name":"self"}],"output":null}],[10,"connect_create_surface","","",79,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_pick_embedded_child","","",79,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_cursor_notify","","",79,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[11,"static_type","","",105,{"inputs":[],"output":{"name":"type"}}],[11,"clone","","",105,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"description","","",105,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",105,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",105,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates an error with supplied error enum variant and message.",105,{"inputs":[{"name":"t"},{"name":"str"}],"output":{"name":"error"}}],[11,"is","","Checks if the error domain matches `T`.",105,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"kind","","Tries to convert to a specific error enum.",105,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"wrap","","",105,null]],"paths":[[3,"Color"],[3,"Geometry"],[3,"Rectangle"],[3,"RGBA"],[3,"WindowAttr"],[4,"AxisUse"],[4,"ByteOrder"],[4,"CrossingMode"],[4,"CursorType"],[4,"DeviceToolType"],[4,"DeviceType"],[4,"DragCancelReason"],[4,"DragProtocol"],[4,"EventType"],[4,"FullscreenMode"],[4,"GLError"],[4,"GrabOwnership"],[4,"GrabStatus"],[4,"Gravity"],[4,"InputMode"],[4,"InputSource"],[4,"ModifierIntent"],[4,"NotifyType"],[4,"OwnerChange"],[4,"PropertyState"],[4,"ScrollDirection"],[4,"SettingAction"],[4,"SubpixelLayout"],[4,"VisibilityState"],[4,"VisualType"],[4,"WindowEdge"],[4,"WindowType"],[4,"WindowTypeHint"],[4,"WindowWindowClass"],[3,"Event"],[3,"AppLaunchContext"],[3,"Cursor"],[3,"Device"],[3,"DeviceManager"],[3,"DeviceTool"],[3,"Display"],[3,"DisplayManager"],[3,"DragContext"],[3,"DrawingContext"],[3,"FrameClock"],[3,"GLContext"],[3,"Monitor"],[3,"Screen"],[3,"Seat"],[3,"Visual"],[3,"Window"],[3,"FrameTimings"],[3,"AnchorHints"],[3,"AxisFlags"],[3,"DragAction"],[3,"EventMask"],[3,"FrameClockPhase"],[3,"ModifierType"],[3,"SeatCapabilities"],[3,"WMDecoration"],[3,"WMFunction"],[3,"WindowHints"],[3,"WindowState"],[8,"ContextExt"],[8,"AppLaunchContextExt"],[8,"CursorExt"],[8,"DeviceExt"],[8,"DeviceManagerExt"],[8,"DeviceToolExt"],[8,"DisplayExt"],[8,"DisplayManagerExt"],[8,"DragContextExt"],[8,"DrawingContextExt"],[8,"FrameClockExt"],[8,"GLContextExt"],[8,"MonitorExt"],[8,"ScreenExt"],[8,"SeatExt"],[8,"VisualExt"],[8,"WindowExt"],[8,"DeviceExtManual"],[8,"DeviceManagerExtManual"],[8,"DragContextExtManual"],[8,"VisualExtManual"],[8,"WindowExtManual"],[3,"Atom"],[3,"EventButton"],[3,"EventConfigure"],[3,"EventCrossing"],[3,"EventDND"],[3,"EventExpose"],[3,"EventFocus"],[3,"EventGrabBroken"],[3,"EventKey"],[3,"EventMotion"],[3,"EventOwnerChange"],[3,"EventProperty"],[3,"EventProximity"],[3,"EventScroll"],[3,"EventSelection"],[3,"EventSetting"],[3,"EventTouch"],[3,"EventVisibility"],[3,"EventWindowState"],[3,"RgbaParseError"],[3,"Error"]]};
searchIndex["gtk"] = {"doc":"GTK+ 3 bindings","items":[[8,"Cast","gtk","Upcasting and downcasting support.",null,null],[11,"upcast","","Upcasts an object to a superclass or interface `T`.",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"downcast","","Tries to downcast to a subclass or interface implementor `T`.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"is","","Returns `true` if the object is an instance of (can be cast to) `T`.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"dynamic_cast","","Tries to cast to an object of type `T`. This handles upcasting, downcasting and casting between interface and interface implementors. All checks are performed at runtime, while `downcast` and `upcast` will do many checks at compile-time already.",0,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[3,"Continue","","Continue calling the closure in the future iterations or drop it.",null,null],[12,"0","","",1,null],[3,"Error","","A generic error capable of representing various error domains (types).",null,null],[8,"IsA","","Declares the \"is a\" relationship.",null,null],[3,"Object","","The base class in the object hierarchy.",null,null],[8,"StaticType","","Types that are supported by GLib dynamic typing.",null,null],[10,"static_type","","Returns the type identifier of `Self`.",2,{"inputs":[],"output":{"name":"type"}}],[8,"ToValue","","Converts to `Value`.",null,null],[10,"to_value","","Returns a `Value` clone of `self`.",3,{"inputs":[{"name":"self"}],"output":{"name":"value"}}],[10,"to_value_type","","Returns the type identifer of `self`.",3,{"inputs":[{"name":"self"}],"output":{"name":"type"}}],[4,"Type","","A GLib or GLib-based library type",null,null],[13,"Invalid","","An invalid `Type` used as error return value in some functions",4,null],[13,"Unit","","The fundamental type corresponding to the unit type `()`",4,null],[13,"I8","","The fundamental type corresponding to `i8`",4,null],[13,"U8","","The fundamental type corresponding to `u8`",4,null],[13,"Bool","","The fundamental type corresponding to `bool`",4,null],[13,"I32","","The fundamental type corresponding to `i32`",4,null],[13,"U32","","The fundamental type corresponding to `u32`",4,null],[13,"ILong","","The fundamental type corresponding to C `long`",4,null],[13,"ULong","","The fundamental type corresponding to C `unsigned long`",4,null],[13,"I64","","The fundamental type corresponding to `i64`",4,null],[13,"U64","","The fundamental type corresponding to `u64`",4,null],[13,"F32","","The fundamental type corresponding to `f32`",4,null],[13,"F64","","The fundamental type corresponding to `f64`",4,null],[13,"String","","The fundamental type corresponding to `String`",4,null],[13,"Pointer","","The fundamental type corresponding to a pointer",4,null],[13,"Variant","","The fundamental type of GVariant",4,null],[13,"BaseInterface","","The fundamental type from which all interfaces are derived",4,null],[13,"BaseEnum","","The fundamental type from which all enumeration types are derived",4,null],[13,"BaseFlags","","The fundamental type from which all flags types are derived",4,null],[13,"BaseBoxed","","The fundamental type from which all boxed types are derived",4,null],[13,"BaseParamSpec","","The fundamental type from which all `GParamSpec` types are derived",4,null],[13,"BaseObject","","The fundamental type from which all objects are derived",4,null],[13,"Other","","A non-fundamental type identified by value of type `usize`",4,null],[3,"TypedValue","","A statically typed `Value`.",null,null],[3,"Value","","A generic value capable of carrying various types.",null,null],[3,"Inhibit","","Whether to propagate the signal to the default handler.",null,null],[12,"0","","",5,null],[3,"Allocation","","",null,null],[12,"x","","",6,null],[12,"y","","",6,null],[12,"width","","",6,null],[12,"height","","",6,null],[3,"Rectangle","","",null,null],[12,"x","","",6,null],[12,"y","","",6,null],[12,"width","","",6,null],[12,"height","","",6,null],[3,"AboutDialog","","The `AboutDialog` offers a simple way to display information about a program like its logo, name, copyright, website and license. It is also possible to give credits to the authors, documenters, translators and artists who have worked on the program. An about dialog is typically opened when the user selects the `About` option from the `Help` menu. All parts of the dialog are optional.",null,null],[3,"AccelGroup","","A `AccelGroup` represents a group of keyboard accelerators, typically attached to a toplevel `Window` (with `Window::add_accel_group`). Usually you won’t need to create a `AccelGroup` directly; instead, when using `UIManager`, GTK+ automatically sets up the accelerators for your menus in the ui manager’s `AccelGroup`.",null,null],[3,"ActionBar","","`ActionBar` is designed to present contextual actions. It is expected to be displayed below the content and expand horizontally to fill the area.",null,null],[3,"Actionable","","This interface provides a convenient way of associating widgets with actions on a `ApplicationWindow` or `Application`.",null,null],[3,"Adjustment","","The `Adjustment` object represents a value which has an associated lower and upper bound, together with step and page increments, and a page size. It is used within several GTK+ widgets, including `SpinButton`, `Viewport`, and `Range` (which is a base class for `HScrollbar`, `VScrollbar`, `HScale`, and `VScale`).",null,null],[3,"Alignment","","`[Deprecated since 3.14]` The `Alignment` widget controls the alignment and size of its child widget. It has four settings: xscale, yscale, xalign, and yalign.",null,null],[3,"AppChooserDialog","","`AppChooserDialog` shows a `AppChooserWidget` inside a `Dialog`.",null,null],[3,"AppChooserWidget","","`AppChooserWidget` is a widget for selecting applications. It is the main building block for `AppChooserDialog`. Most applications only need to use the latter; but you can use this widget as part of a larger widget if you have special needs.",null,null],[3,"Application","","`Application` is a class that handles many important aspects of a GTK+ application in a convenient fashion, without enforcing a one-size-fits-all application model.",null,null],[3,"ApplicationWindow","","`ApplicationWindow` is a `Window` subclass that offers some extra functionality for better integration with `Application` features. Notably, it can handle both the application menu as well as the menubar. See `Application::set_app_menu` and `Application::set_menubar`.",null,null],[3,"Arrow","","`[Deprecated since 3.14]` `Arrow` should be used to draw simple arrows that need to point in one of the four cardinal directions (up, down, left, or right). The style of the arrow can be one of shadow in, shadow out, etched in, or etched out. Note that these directions and style types may be amended in versions of GTK+ to come.",null,null],[3,"AspectFrame","","The `AspectFrame` is useful when you want pack a widget so that it can resize but always retains the same aspect ratio. For instance, one might be drawing a small preview of a larger image. `AspectFrame` derives from `Frame`, so it can draw a label and a frame around the child. The frame will be “shrink-wrapped” to the size of the child.",null,null],[3,"Assistant","","",null,null],[3,"Bin","","The `Bin` widget is a container with just one child. It is not very useful itself, but it is useful for deriving subclasses, since it provides common code needed for handling a single child widget.",null,null],[3,"Box","","The `Box` widget organizes child widgets into a rectangular area.",null,null],[3,"Builder","","A `Builder` is an auxiliary object that reads textual descriptions of a user interface and instantiates the described objects. To create a `Builder` from a user interface description, call `Builder::new_from_file`, `Builder::new_from_resource` or `Builder::new_from_string`.",null,null],[3,"Button","","The `Button` widget is generally used to trigger a callback function that is called when the button is pressed. The various signals and how to use them are outlined below.",null,null],[3,"ButtonBox","","",null,null],[3,"Calendar","","`Calendar` is a widget that displays a Gregorian calendar, one month at a time. It can be created with `Calendar::new`.",null,null],[3,"CellArea","","The `CellArea` is an abstract class for `CellLayout` widgets (also referred to as \"layouting widgets\") to interface with an arbitrary number of `GtkCellRenderers` and interact with the user for a given `TreeModel` row.",null,null],[3,"CellAreaBox","","The `CellAreaBox` renders cell renderers into a row or a column depending on its `Orientation`.",null,null],[3,"CellAreaContext","","The `CellAreaContext` object is created by a given `CellArea` implementation via its `CellAreaClass.create_context`() virtual method and is used to store cell sizes and alignments for a series of `TreeModel` rows that are requested and rendered in the same context.",null,null],[3,"CellEditable","","The `CellEditable` interface must be implemented for widgets to be usable when editing the contents of a `TreeView` cell.",null,null],[3,"CellLayout","","`CellLayout` is an interface to be implemented by all objects which want to provide a `TreeViewColumn` like API for packing cells, setting attributes and data funcs.",null,null],[3,"CellRenderer","","The `CellRenderer` is a base class of a set of objects used for rendering a cell to a `cairo::Context`. These objects are used primarily by the `TreeView` widget, though they aren’t tied to them in any specific way. It is worth noting that `CellRenderer` is not a `Widget` and cannot be treated as such.",null,null],[3,"CellRendererAccel","","`CellRendererAccel` displays a keyboard accelerator (i.e. a key combination like `Control + a`). If the cell renderer is editable, the accelerator can be changed by simply typing the new combination.",null,null],[3,"CellRendererCombo","","`CellRendererCombo` renders text in a cell like `CellRendererText` from which it is derived. But while `CellRendererText` offers a simple entry to edit the text, `CellRendererCombo` offers a `ComboBox` widget to edit the text. The values to display in the combo box are taken from the tree model specified in the `CellRendererCombo:model` property.",null,null],[3,"CellRendererPixbuf","","A `CellRendererPixbuf` can be used to render an image in a cell. It allows to render either a given `gdk_pixbuf::Pixbuf` (set via the `CellRendererPixbuf:pixbuf` property) or a named icon (set via the `CellRendererPixbuf:icon-name` property).",null,null],[3,"CellRendererProgress","","`CellRendererProgress` renders a numeric value as a progress par in a cell. Additionally, it can display a text on top of the progress bar.",null,null],[3,"CellRendererSpin","","`CellRendererSpin` renders text in a cell like `CellRendererText` from which it is derived. But while `CellRendererText` offers a simple entry to edit the text, `CellRendererSpin` offers a `SpinButton` widget. Of course, that means that the text has to be parseable as a floating point number.",null,null],[3,"CellRendererSpinner","","`CellRendererSpinner` renders a spinning animation in a cell, very similar to `Spinner`. It can often be used as an alternative to a `CellRendererProgress` for displaying indefinite activity, instead of actual progress.",null,null],[3,"CellRendererText","","A `CellRendererText` renders a given text in its cell, using the font, color and style information provided by its properties. The text will be ellipsized if it is too long and the `CellRendererText:ellipsize` property allows it.",null,null],[3,"CellRendererToggle","","`CellRendererToggle` renders a toggle button in a cell. The button is drawn as a radio or a checkbutton, depending on the `CellRendererToggle:radio` property. When activated, it emits the `CellRendererToggle::toggled` signal.",null,null],[3,"CheckButton","","A `CheckButton` places a discrete `ToggleButton` next to a widget, (usually a `Label`). See the section on `ToggleButton` widgets for more information about toggle/check buttons.",null,null],[3,"CheckMenuItem","","A `CheckMenuItem` is a menu item that maintains the state of a boolean value in addition to a `MenuItem` usual role in activating application code.",null,null],[3,"Clipboard","","The `Clipboard` object represents a clipboard of data shared between different processes or between different widgets in the same process. Each clipboard is identified by a name encoded as a `gdk::Atom`. (Conversion to and from strings can be done with `gdk::Atom_::intern` and `gdk::Atom_::name`.) The default clipboard corresponds to the “CLIPBOARD” atom; another commonly used clipboard is the “PRIMARY” clipboard, which, in X, traditionally contains the currently selected text.",null,null],[3,"ColorButton","","The `ColorButton` is a button which displays the currently selected color and allows to open a color selection dialog to change the color. It is suitable widget for selecting a color in a preference dialog.",null,null],[3,"ColorChooser","","`ColorChooser` is an interface that is implemented by widgets for choosing colors. Depending on the situation, colors may be allowed to have alpha (translucency).",null,null],[3,"ColorChooserDialog","","The `ColorChooserDialog` widget is a dialog for choosing a color. It implements the `ColorChooser` interface.",null,null],[3,"ColorChooserWidget","","The `ColorChooserWidget` widget lets the user select a color. By default, the chooser presents a predefined palette of colors, plus a small number of settable custom colors. It is also possible to select a different color with the single-color editor. To enter the single-color editing mode, use the context menu of any color of the palette, or use the '+' button to add a new custom color.",null,null],[3,"ComboBox","","A `ComboBox` is a widget that allows the user to choose from a list of valid choices. The `ComboBox` displays the selected choice. When activated, the `ComboBox` displays a popup which allows the user to make a new choice. The style in which the selected value is displayed, and the style of the popup is determined by the current theme. It may be similar to a Windows-style combo box.",null,null],[3,"ComboBoxText","","A `ComboBoxText` is a simple variant of `ComboBox` that hides the model-view complexity for simple text-only use cases.",null,null],[3,"Container","","A GTK+ user interface is constructed by nesting widgets inside widgets. Container widgets are the inner nodes in the resulting tree of widgets: they contain other widgets. So, for example, you might have a `Window` containing a `Frame` containing a `Label`. If you wanted an image instead of a textual label inside the frame, you might replace the `Label` widget with a `Image` widget.",null,null],[3,"CssProvider","","`CssProvider` is an object implementing the `StyleProvider` interface. It is able to parse CSS-like input in order to style widgets.",null,null],[3,"Dialog","","Dialog boxes are a convenient way to prompt the user for a small amount of input, e.g. to display a message, ask a question, or anything else that does not require extensive effort on the user’s part.",null,null],[3,"DrawingArea","","The `DrawingArea` widget is used for creating custom user interface elements. It’s essentially a blank widget; you can draw on it. After creating a drawing area, the application may want to connect to:",null,null],[3,"Editable","","The `Editable` interface is an interface which should be implemented by text editing widgets, such as `Entry` and `SpinButton`. It contains functions for generically manipulating an editable widget, a large number of action signals used for key bindings, and several signals that an application can connect to to modify the behavior of a widget.",null,null],[3,"Entry","","The `Entry` widget is a single line text entry widget. A fairly large set of key bindings are supported by default. If the entered text is longer than the allocation of the widget, the widget will scroll so that the cursor position is visible.",null,null],[3,"EntryCompletion","","`EntryCompletion` is an auxiliary object to be used in conjunction with `Entry` to provide the completion functionality. It implements the `CellLayout` interface, to allow the user to add extra cells to the `TreeView` with completion matches.",null,null],[3,"EventBox","","The `EventBox` widget is a subclass of `Bin` which also has its own window. It is useful since it allows you to catch events for widgets which do not have their own window.",null,null],[3,"EventController","","`EventController` is a base, low-level implementation for event controllers. Those react to a series of `GdkEvents`, and possibly trigger actions as a consequence of those.",null,null],[3,"Expander","","A `Expander` allows the user to hide or show its child by clicking on an expander triangle similar to the triangles used in a `TreeView`.",null,null],[3,"FileChooser","","`FileChooser` is an interface that can be implemented by file selection widgets. In GTK+, the main objects that implement this interface are `FileChooserWidget`, `FileChooserDialog`, and `FileChooserButton`. You do not need to write an object that implements the `FileChooser` interface unless you are trying to adapt an existing file selector to expose a standard programming interface.",null,null],[3,"FileChooserButton","","",null,null],[3,"FileChooserDialog","","`FileChooserDialog` is a dialog box suitable for use with “File/Open” or “File/Save as” commands. This widget works by putting a `FileChooserWidget` inside a `Dialog`. It exposes the `FileChooser` interface, so you can use all of the `FileChooser` functions on the file chooser dialog as well as those for `Dialog`.",null,null],[3,"FileChooserWidget","","`FileChooserWidget` is a widget for choosing files. It exposes the `FileChooser` interface, and you should use the methods of this interface to interact with the widget.",null,null],[3,"FileFilter","","A `FileFilter` can be used to restrict the files being shown in a `FileChooser`. Files can be filtered based on their name (with `FileFilter::add_pattern`), on their mime type (with `FileFilter::add_mime_type`), or by a custom filter function (with `FileFilter::add_custom`).",null,null],[3,"Fixed","","The `Fixed` widget is a container which can place child widgets at fixed positions and with fixed sizes, given in pixels. `Fixed` performs no automatic layout management.",null,null],[3,"FlowBox","","A `FlowBox` positions child widgets in sequence according to its orientation.",null,null],[3,"FlowBoxChild","","",null,null],[3,"FontButton","","The `FontButton` is a button which displays the currently selected font an allows to open a font chooser dialog to change the font. It is suitable widget for selecting a font in a preference dialog.",null,null],[3,"FontChooser","","`FontChooser` is an interface that can be implemented by widgets displaying the list of fonts. In GTK+, the main objects that implement this interface are `FontChooserWidget`, `FontChooserDialog` and `FontButton`.",null,null],[3,"FontChooserDialog","","The `FontChooserDialog` widget is a dialog for selecting a font. It implements the `FontChooser` interface.",null,null],[3,"FontChooserWidget","","The `FontChooserWidget` widget lists the available fonts, styles and sizes, allowing the user to select a font. It is used in the `FontChooserDialog` widget to provide a dialog box for selecting fonts.",null,null],[3,"Frame","","The frame widget is a Bin that surrounds its child with a decorative frame and an optional label. If present, the label is drawn in a gap in the top side of the frame. The position of the label can be controlled with `FrameExt::set_label_align`.",null,null],[3,"GLArea","","`GLArea` is a widget that allows drawing with OpenGL.",null,null],[3,"Gesture","","`Gesture` is the base object for gesture recognition, although this object is quite generalized to serve as a base for multi-touch gestures, it is suitable to implement single-touch and pointer-based gestures (using the special `None` `gdk::EventSequence` value for these).",null,null],[3,"GestureDrag","","`GestureDrag` is a `Gesture` implementation that recognizes drag operations. The drag operation itself can be tracked throught the `GestureDrag:drag-begin`, `GestureDrag:drag-update` and `GestureDrag:drag-end` signals, or the relevant coordinates be extracted through `GestureDragExt::get_offset` and `GestureDragExt::get_start_point`.",null,null],[3,"GestureLongPress","","`GestureLongPress` is a `Gesture` implementation able to recognize long presses, triggering the `GestureLongPress::pressed` after the timeout is exceeded.",null,null],[3,"GestureMultiPress","","`GestureMultiPress` is a `Gesture` implementation able to recognize multiple clicks on a nearby zone, which can be listened for through the `GestureMultiPress::pressed` signal. Whenever time or distance between clicks exceed the GTK+ defaults, `GestureMultiPress::stopped` is emitted, and the click counter is reset.",null,null],[3,"GesturePan","","`GesturePan` is a `Gesture` implementation able to recognize pan gestures, those are drags that are locked to happen along one axis. The axis that a `GesturePan` handles is defined at construct time, and can be changed through `GesturePan::set_orientation`.",null,null],[3,"GestureRotate","","`GestureRotate` is a `Gesture` implementation able to recognize 2-finger rotations, whenever the angle between both handled sequences changes, the `GestureRotate::angle-changed` signal is emitted.",null,null],[3,"GestureSingle","","`GestureSingle` is a subclass of `Gesture`, optimized (although not restricted) for dealing with mouse and single-touch gestures. Under interaction, these gestures stick to the first interacting sequence, which is accessible through `GestureSingleExt::get_current_sequence` while the gesture is being interacted with.",null,null],[3,"GestureSwipe","","`GestureSwipe` is a `Gesture` implementation able to recognize swipes, after a press/move/.../move/release sequence happens, the `GestureSwipe::swipe` signal will be emitted, providing the velocity and directionality of the sequence at the time it was lifted.",null,null],[3,"GestureZoom","","`GestureZoom` is a `Gesture` implementation able to recognize pinch/zoom gestures, whenever the distance between both tracked sequences changes, the `GestureZoom::scale-changed` signal is emitted to report the scale factor.",null,null],[3,"Grid","","`Grid` is a container which arranges its child widgets in rows and columns. It is a very similar to `Table` and `Box`, but it consistently uses `Widget`’s `Widget:margin` and `Widget:expand` properties instead of custom child properties, and it fully supports [height-for-width geometry management][geometry-management].",null,null],[3,"HeaderBar","","`HeaderBar` is similar to a horizontal `Box`. It allows children to be placed at the start or the end. In addition, it allows a title and subtitle to be displayed. The title will be centered with respect to the width of the box, even if the children at either side take up different amounts of space. The height of the titlebar will be set to provide sufficient space for the subtitle, even if none is currently set. If a subtitle is not needed, the space reservation can be turned off with `HeaderBar::set_has_subtitle`.",null,null],[3,"IMContext","","",null,null],[3,"IMMulticontext","","",null,null],[3,"IconFactory","","",null,null],[3,"IconInfo","","",null,null],[3,"IconTheme","","",null,null],[3,"IconView","","`IconView` provides an alternative view on a `TreeModel`. It displays the model as a grid of icons with labels. Like `TreeView`, it allows to select one or multiple items (depending on the selection mode, see `IconView::set_selection_mode`). In addition to selection with the arrow keys, `IconView` supports rubberband selection, which is controlled by dragging the pointer.",null,null],[3,"Image","","The `Image` widget displays an image. Various kinds of object can be displayed as an image; most typically, you would load a `gdk_pixbuf::Pixbuf` (\"pixel buffer\") from a file, and then display that. There’s a convenience function to do this, `Image::new_from_file`, used as follows:",null,null],[3,"ImageMenuItem","","`[Deprecated since 3.10]` A `ImageMenuItem` is a menu item which has an icon next to the text label.",null,null],[3,"InfoBar","","`InfoBar` is a widget that can be used to show messages to the user without showing a dialog. It is often temporarily shown at the top or bottom of a document. In contrast to `Dialog`, which has a action area at the bottom, `InfoBar` has an action area at the side.",null,null],[3,"Label","","The `Label` widget displays a small amount of text. As the name implies, most labels are used to label another widget such as a `Button`, a `MenuItem`, or a `ComboBox`.",null,null],[3,"Layout","","`Layout` is similar to `DrawingArea` in that it’s a “blank slate” and doesn’t do anything but paint a blank background by default. It's different in that it supports scrolling natively (you can add it to a `ScrolledWindow`), and it can contain child widgets, since it’s a `Container`. However if you’re just going to draw, a `DrawingArea` is a better choice since it has lower overhead.",null,null],[3,"LevelBar","","The `LevelBar` is a bar widget that can be used as a level indicator. Typical use cases are displaying the strength of a password, or showing the charge level of a battery.",null,null],[3,"LinkButton","","A `LinkButton` is a `Button` with a hyperlink, similar to the one used by web browsers, which triggers an action when clicked. It is useful to show quick links to resources.",null,null],[3,"ListBox","","A `ListBox` is a vertical container that contains `ListBoxRow` children. These rows can by dynamically sorted and filtered, and headers can be added dynamically depending on the row content. It also allows keyboard and mouse navigation and selection like a typical list.",null,null],[3,"ListBoxRow","","",null,null],[3,"ListStore","","The `ListStore` object is a list model for use with a `TreeView` widget. It implements the `TreeModel` interface, and consequentialy, can use all of the methods available there. It also implements the `TreeSortable` interface so it can be sorted by the view. Finally, it also implements the tree [drag and drop][gtk3-`TreeView`-drag-and-drop] interfaces.",null,null],[3,"Menu","","A `Menu` is a `MenuShell` that implements a drop down menu consisting of a list of `MenuItem` objects which can be navigated and activated by the user to perform application functions.",null,null],[3,"MenuBar","","The `MenuBar` is a subclass of `MenuShell` which contains one or more `GtkMenuItems`. The result is a standard menu bar which can hold many menu items.",null,null],[3,"MenuButton","","The `MenuButton` widget is used to display a popup when clicked on. This popup can be provided either as a `Menu`, a `Popover` or an abstract `gio::MenuModel`.",null,null],[3,"MenuItem","","The `MenuItem` widget and the derived widgets are the only valid children for menus. Their function is to correctly handle highlighting, alignment, events and submenus.",null,null],[3,"MenuShell","","A `MenuShell` is the abstract base class used to derive the `Menu` and `MenuBar` subclasses.",null,null],[3,"MenuToolButton","","A `MenuToolButton` is a `ToolItem` that contains a button and a small additional button with an arrow. When clicked, the arrow button pops up a dropdown menu.",null,null],[3,"MessageDialog","","`MessageDialog` presents a dialog with some message text. It’s simply a convenience widget; you could construct the equivalent of `MessageDialog` from `Dialog` without too much effort, but `MessageDialog` saves typing.",null,null],[3,"Misc","","`[Deprecated since 3.14]` The `Misc` widget is an abstract widget which is not useful itself, but is used to derive subclasses which have alignment and padding attributes.",null,null],[3,"ModelButton","","",null,null],[3,"Notebook","","The `Notebook` widget is a `Container` whose children are pages that can be switched between using tab labels along one edge.",null,null],[3,"Orientable","","The `Orientable` interface is implemented by all widgets that can be oriented horizontally or vertically. Historically, such widgets have been realized as subclasses of a common base class (e.g `Box`/`HBox`/`VBox` or `Scale`/`HScale`/`VScale`). `Orientable` is more flexible in that it allows the orientation to be changed at runtime, allowing the widgets to “flip”.",null,null],[3,"Overlay","","`Overlay` is a container which contains a single main child, on top of which it can place “overlay” widgets. The position of each overlay widget is determined by its `Widget:halign` and `Widget:valign` properties. E.g. a widget with both alignments set to `Align::Start` will be placed at the top left corner of the main widget, whereas an overlay with halign set to `Align::Center` and valign set to `Align::End` will be placed a the bottom edge of the main widget, horizontally centered. The position can be adjusted by setting the margin properties of the child to non-zero values.",null,null],[3,"PageSetup","","A `PageSetup` object stores the page size, orientation and margins. The idea is that you can get one of these from the page setup dialog and then pass it to the `PrintOperation` when printing. The benefit of splitting this out of the `PrintSettings` is that these affect the actual layout of the page, and thus need to be set long before user prints.",null,null],[3,"Paned","","`Paned` has two panes, arranged either horizontally or vertically. The division between the two panes is adjustable by the user by dragging a handle.",null,null],[3,"PlacesSidebar","","`PlacesSidebar` is a widget that displays a list of frequently-used places in the file system: the user’s home directory, the user’s bookmarks, and volumes and drives. This widget is used as a sidebar in `FileChooser` and may be used by file managers and similar programs.",null,null],[3,"Popover","","`Popover` is a bubble-like context window, primarily meant to provide context-dependent information or options. Popovers are attached to a widget, passed at construction time on `Popover::new`, or updated afterwards through `PopoverExt::set_relative_to`, by default they will point to the whole widget area, although this behavior can be changed through `PopoverExt::set_pointing_to`.",null,null],[3,"PopoverMenu","","`PopoverMenu` is a subclass of `Popover` that treats its childen like menus and allows switching between them. It is meant to be used primarily together with `ModelButton`, but any widget can be used, such as `SpinButton` or `Scale`. In this respect, `PopoverMenu` is more flexible than popovers that are created from a `gio::MenuModel` with `Popover::new_from_model`.",null,null],[3,"PrintContext","","",null,null],[3,"PrintSettings","","A `PrintSettings` object represents the settings of a print dialog in a system-independent way. The main use for this object is that once you’ve printed you can get a settings object that represents the settings the user chose, and the next time you print you can pass that object in so that the user doesn’t have to re-set all his settings.",null,null],[3,"ProgressBar","","The `ProgressBar` is typically used to display the progress of a long running operation. It provides a visual clue that processing is underway. The `ProgressBar` can be used in two different modes: percentage mode and activity mode.",null,null],[3,"RadioButton","","A single radio button performs the same basic function as a `CheckButton`, as its position in the object hierarchy reflects. It is only when multiple radio buttons are grouped together that they become a different user interface component in their own right.",null,null],[3,"RadioMenuItem","","",null,null],[3,"Range","","`Range` is the common base class for widgets which visualize an adjustment, e.g `Scale` or `Scrollbar`.",null,null],[3,"RecentChooser","","`RecentChooser` is an interface that can be implemented by widgets displaying the list of recently used files. In GTK+, the main objects that implement this interface are `RecentChooserWidget`, `RecentChooserDialog` and `RecentChooserMenu`.",null,null],[3,"RecentChooserDialog","","`RecentChooserDialog` is a dialog box suitable for displaying the recently used documents. This widgets works by putting a `RecentChooserWidget` inside a `Dialog`. It exposes the `RecentChooserIface` interface, so you can use all the `RecentChooser` functions on the recent chooser dialog as well as those for `Dialog`.",null,null],[3,"RecentChooserWidget","","`RecentChooserWidget` is a widget suitable for selecting recently used files. It is the main building block of a `RecentChooserDialog`. Most applications will only need to use the latter; you can use `RecentChooserWidget` as part of a larger window if you have special needs.",null,null],[3,"RecentFilter","","A `RecentFilter` can be used to restrict the files being shown in a `RecentChooser`. Files can be filtered based on their name (with `RecentFilter::add_pattern`), on their mime type (with `FileFilter::add_mime_type`), on the application that has registered them (with `RecentFilter::add_application`), or by a custom filter function (with `RecentFilter::add_custom`).",null,null],[3,"RecentManager","","`RecentManager` provides a facility for adding, removing and looking up recently used files. Each recently used file is identified by its URI, and has meta-data associated to it, like the names and command lines of the applications that have registered it, the number of time each application has registered the same file, the mime type of the file and whether the file should be displayed only by the applications that have registered it.",null,null],[3,"Revealer","","The `Revealer` widget is a container which animates the transition of its child from invisible to visible.",null,null],[3,"Scale","","A `Scale` is a slider control used to select a numeric value. To use it, you’ll probably want to investigate the methods on its base class, `Range`, in addition to the methods for `Scale` itself. To set the value of a scale, you would normally use `RangeExt::set_value`. To detect changes to the value, you would normally use the `Range::value-changed` signal.",null,null],[3,"ScaleButton","","`ScaleButton` provides a button which pops up a scale widget. This kind of widget is commonly used for volume controls in multimedia applications, and GTK+ provides a `VolumeButton` subclass that is tailored for this use case.",null,null],[3,"Scrollable","","`Scrollable` is an interface that is implemented by widgets with native scrolling ability.",null,null],[3,"Scrollbar","","The `Scrollbar` widget is a horizontal or vertical scrollbar, depending on the value of the `Orientable:orientation` property.",null,null],[3,"ScrolledWindow","","`ScrolledWindow` is a `Bin` subclass: it’s a container the accepts a single child widget. `ScrolledWindow` adds scrollbars to the child widget and optionally draws a beveled frame around the child widget.",null,null],[3,"SearchBar","","`SearchBar` is a container made to have a search entry (possibly with additional connex widgets, such as drop-down menus, or buttons) built-in. The search bar would appear when a search is started through typing on the keyboard, or the application’s search mode is toggled on.",null,null],[3,"SearchEntry","","`SearchEntry` is a subclass of `Entry` that has been tailored for use as a search entry.",null,null],[3,"Separator","","`Separator` is a horizontal or vertical separator widget, depending on the value of the `Orientable:orientation` property, used to group the widgets within a window. It displays a line with a shadow to make it appear sunken into the interface.",null,null],[3,"SeparatorMenuItem","","The `SeparatorMenuItem` is a separator used to group items within a menu. It displays a horizontal line with a shadow to make it appear sunken into the interface.",null,null],[3,"SeparatorToolItem","","A `SeparatorToolItem` is a `ToolItem` that separates groups of other `GtkToolItems`. Depending on the theme, a `SeparatorToolItem` will often look like a vertical line on horizontally docked toolbars.",null,null],[3,"Settings","","`Settings` provide a mechanism to share global settings between applications.",null,null],[3,"ShortcutsWindow","","",null,null],[3,"SizeGroup","","`SizeGroup` provides a mechanism for grouping a number of widgets together so they all request the same amount of space. This is typically useful when you want a column of widgets to have the same size, but you can’t use a `Grid` widget.",null,null],[3,"SpinButton","","A `SpinButton` is an ideal way to allow the user to set the value of some attribute. Rather than having to directly type a number into a `Entry`, `SpinButton` allows the user to click on one of two arrows to increment or decrement the displayed value. A value can still be typed in, with the bonus that it can be checked to ensure it is in a given range.",null,null],[3,"Spinner","","A `Spinner` widget displays an icon-size spinning animation. It is often used as an alternative to a `ProgressBar` for displaying indefinite activity, instead of actual progress.",null,null],[3,"Stack","","The `Stack` widget is a container which only shows one of its children at a time. In contrast to `Notebook`, `Stack` does not provide a means for users to change the visible child. Instead, the `StackSwitcher` widget can be used with `Stack` to provide this functionality.",null,null],[3,"StackSidebar","","A `StackSidebar` enables you to quickly and easily provide a consistent \"sidebar\" object for your user interface.",null,null],[3,"StackSwitcher","","The `StackSwitcher` widget acts as a controller for a `Stack`; it shows a row of buttons to switch between the various pages of the associated stack widget.",null,null],[3,"StatusIcon","","`[Deprecated since 3.14]` The “system tray” or notification area is normally used for transient icons that indicate some special state. For example, a system tray icon might appear to tell the user that they have new mail, or have an incoming instant message, or something along those lines. The basic idea is that creating an icon in the notification area is less annoying than popping up a dialog.",null,null],[3,"Statusbar","","A `Statusbar` is usually placed along the bottom of an application's main `Window`. It may provide a regular commentary of the application's status (as is usually the case in a web browser, for example), or may be used to simply output a message when the status changes, (when an upload is complete in an FTP client, for example).",null,null],[3,"StyleContext","","`StyleContext` is an object that stores styling information affecting a widget defined by `WidgetPath`.",null,null],[3,"StyleProperties","","",null,null],[3,"StyleProvider","","`StyleProvider` is an interface used to provide style information to a `StyleContext`. See `StyleContext::add_provider` and `StyleContext::add_provider_for_screen`.",null,null],[3,"Switch","","`Switch` is a widget that has two states: on or off. The user can control which state should be active by clicking the empty area, or by dragging the handle.",null,null],[3,"TextBuffer","","You may wish to begin by reading the text widget conceptual overview which gives an overview of all the objects and data types related to the text widget and how they work together.",null,null],[3,"TextChildAnchor","","A `TextChildAnchor` is a spot in the buffer where child widgets can be “anchored” (inserted inline, as if they were characters). The anchor can have multiple widgets anchored, to allow for multiple views.",null,null],[3,"TextMark","","You may wish to begin by reading the [text widget conceptual overview][TextWidget] which gives an overview of all the objects and data types related to the text widget and how they work together.",null,null],[3,"TextTag","","You may wish to begin by reading the [text widget conceptual overview][TextWidget] which gives an overview of all the objects and data types related to the text widget and how they work together.",null,null],[3,"TextTagTable","","You may wish to begin by reading the [text widget conceptual overview][TextWidget] which gives an overview of all the objects and data types related to the text widget and how they work together.",null,null],[3,"TextView","","You may wish to begin by reading the [text widget conceptual overview][TextWidget] which gives an overview of all the objects and data types related to the text widget and how they work together.",null,null],[3,"ToggleButton","","A `ToggleButton` is a `Button` which will remain “pressed-in” when clicked. Clicking again will cause the toggle button to return to its normal state.",null,null],[3,"ToggleToolButton","","A `ToggleToolButton` is a `ToolItem` that contains a toggle button.",null,null],[3,"ToolButton","","`GtkToolButtons` are `GtkToolItems` containing buttons.",null,null],[3,"ToolItem","","`GtkToolItems` are widgets that can appear on a toolbar. To create a toolbar item that contain something else than a button, use `ToolItem::new`. Use `ContainerExt::add` to add a child widget to the tool item.",null,null],[3,"ToolItemGroup","","A `ToolItemGroup` is used together with `ToolPalette` to add `GtkToolItems` to a palette like container with different categories and drag and drop support.",null,null],[3,"ToolPalette","","A `ToolPalette` allows you to add `GtkToolItems` to a palette-like container with different categories and drag and drop support.",null,null],[3,"ToolShell","","The `ToolShell` interface allows container widgets to provide additional information when embedding `ToolItem` widgets.",null,null],[3,"Toolbar","","A toolbar is created with a call to `Toolbar::new`.",null,null],[3,"Tooltip","","Basic tooltips can be realized simply by using `Widget::set_tooltip_text` or `Widget::set_tooltip_markup` without any explicit tooltip object.",null,null],[3,"TreeModel","","The `TreeModel` interface defines a generic tree interface for use by the `TreeView` widget. It is an abstract interface, and is designed to be usable with any appropriate data structure. The programmer just has to implement this interface on their own data type for it to be viewable by a `TreeView` widget.",null,null],[3,"TreeModelFilter","","A `TreeModelFilter` is a tree model which wraps another tree model, and can do the following things:",null,null],[3,"TreeSelection","","The `TreeSelection` object is a helper object to manage the selection for a `TreeView` widget. The `TreeSelection` object is automatically created when a new `TreeView` widget is created, and cannot exist independently of this widget. The primary reason the `TreeSelection` objects exists is for cleanliness of code and API. That is, there is no conceptual reason all these functions could not be methods on the `TreeView` widget instead of a separate function.",null,null],[3,"TreeSortable","","`TreeSortable` is an interface to be implemented by tree models which support sorting. The `TreeView` uses the methods provided by this interface to sort the model.",null,null],[3,"TreeStore","","The `TreeStore` object is a list model for use with a `TreeView` widget. It implements the `TreeModel` interface, and consequentialy, can use all of the methods available there. It also implements the `TreeSortable` interface so it can be sorted by the view. Finally, it also implements the tree [drag and drop][gtk3-`TreeView`-drag-and-drop] interfaces.",null,null],[3,"TreeView","","Widget that displays any object that implements the `TreeModel` interface.",null,null],[3,"TreeViewColumn","","The `TreeViewColumn` object represents a visible column in a `TreeView` widget. It allows to set properties of the column header, and functions as a holding pen for the cell renderers which determine how the data in the column is displayed.",null,null],[3,"Viewport","","The `Viewport` widget acts as an adaptor class, implementing scrollability for child widgets that lack their own scrolling capabilities. Use `Viewport` to scroll child widgets such as `Grid`, `Box`, and so on.",null,null],[3,"VolumeButton","","`VolumeButton` is a subclass of `ScaleButton` that has been tailored for use as a volume control widget with suitable icons, tooltips and accessible labels.",null,null],[3,"Widget","","`Widget` is the base class all widgets in GTK+ derive from. It manages the widget lifecycle, states and style.",null,null],[3,"Window","","A `Window` is a toplevel window which can contain other widgets. Windows normally have decorations that are under the control of the windowing system and allow the user to manipulate the window (resize it, move it, close it,...).",null,null],[3,"WindowGroup","","A `WindowGroup` restricts the effect of grabs to windows in the same group, thereby making window groups almost behave like separate applications.",null,null],[3,"CssSection","","Defines a part of a CSS document. Because sections are nested into one another, you can use `CssSection::get_parent` to get the containing region.",null,null],[3,"IconSet","","",null,null],[3,"IconSource","","",null,null],[3,"PaperSize","","`PaperSize` handles paper sizes. It uses the standard called PWG 5101.1-2002 PWG: Standard for Media Standardized Names to name the paper sizes (and to get the data for the page sizes). In addition to standard paper sizes, `PaperSize` allows to construct custom paper sizes with arbitrary dimensions.",null,null],[3,"RecentInfo","","`RecentInfo`-struct contains private data only, and should be accessed using the provided API.",null,null],[3,"SelectionData","","",null,null],[3,"SymbolicColor","","",null,null],[3,"TargetList","","",null,null],[3,"TextAttributes","","Using `TextAttributes` directly should rarely be necessary. It’s primarily useful with `TextIter::get_attributes`. As with most GTK+ structs, the fields in this struct should only be read, never modified directly.",null,null],[3,"TextIter","","You may wish to begin by reading the text widget conceptual overview which gives an overview of all the objects and data types related to the text widget and how they work together.",null,null],[3,"TreeIter","","The `TreeIter` is the primary structure for accessing a `TreeModel`. Models are expected to put a unique integer in the `stamp` member, and put model-specific data in the three `user_data` members.",null,null],[3,"TreePath","","",null,null],[3,"AccelFlags","","",null,null],[3,"ApplicationInhibitFlags","","",null,null],[3,"CalendarDisplayOptions","","",null,null],[3,"CellRendererState","","",null,null],[3,"DestDefaults","","",null,null],[3,"DialogFlags","","",null,null],[3,"FileFilterFlags","","",null,null],[3,"IconLookupFlags","","",null,null],[3,"InputHints","","",null,null],[3,"JunctionSides","","",null,null],[3,"PlacesOpenFlags","","",null,null],[3,"RecentFilterFlags","","",null,null],[3,"RegionFlags","","",null,null],[3,"StateFlags","","",null,null],[3,"StyleContextPrintFlags","","",null,null],[3,"TargetFlags","","",null,null],[3,"TextSearchFlags","","",null,null],[3,"ToolPaletteDragTargets","","",null,null],[3,"TreeModelFlags","","",null,null],[3,"AppChooser","","`AppChooser` is an interface that can be implemented by widgets which allow the user to choose an application (typically for the purpose of opening a file). The main objects that implement this interface are `AppChooserWidget`, `AppChooserDialog` and `AppChooserButton`.",null,null],[3,"EntryBuffer","","The `EntryBuffer` class contains the actual text displayed in a `Entry` widget.",null,null],[3,"RecentData","","Meta-data to be passed to `RecentManager::add_full` when registering a recently used resource.",null,null],[12,"display_name","","",7,null],[12,"description","","",7,null],[12,"mime_type","","",7,null],[12,"app_name","","",7,null],[12,"app_exec","","",7,null],[12,"groups","","",7,null],[12,"is_private","","",7,null],[3,"Requisition","","A `Requisition`-struct represents the desired size of a widget. See [`Widget`’s geometry management section][geometry-management] for more information.",null,null],[12,"width","","",8,null],[12,"height","","",8,null],[3,"TargetEntry","","",null,null],[4,"Align","","Controls how a widget deals with extra space in a single (x or y) dimension.",null,null],[13,"Fill","","",9,null],[13,"Start","","",9,null],[13,"End","","",9,null],[13,"Center","","",9,null],[13,"Baseline","","",9,null],[4,"ArrowType","","Used to indicate the direction in which an arrow should point.",null,null],[13,"Up","","",10,null],[13,"Down","","",10,null],[13,"Left","","",10,null],[13,"Right","","",10,null],[13,"None","","",10,null],[4,"AssistantPageType","","An enum for determining the page role inside the `Assistant`. It's used to handle buttons sensitivity and visibility.",null,null],[13,"Content","","",11,null],[13,"Intro","","",11,null],[13,"Confirm","","",11,null],[13,"Summary","","",11,null],[13,"Progress","","",11,null],[13,"Custom","","",11,null],[4,"BaselinePosition","","Whenever a container has some form of natural row it may align children in that row along a common typographical baseline. If the amount of verical space in the row is taller than the total requested height of the baseline-aligned children then it can use a `BaselinePosition` to select where to put the baseline inside the extra availible space.",null,null],[13,"Top","","",12,null],[13,"Center","","",12,null],[13,"Bottom","","",12,null],[4,"BuilderError","","Error codes that identify various errors that can occur while using `Builder`.",null,null],[13,"InvalidTypeFunction","","",13,null],[13,"UnhandledTag","","",13,null],[13,"MissingAttribute","","",13,null],[13,"InvalidAttribute","","",13,null],[13,"InvalidTag","","",13,null],[13,"MissingPropertyValue","","",13,null],[13,"InvalidValue","","",13,null],[13,"VersionMismatch","","",13,null],[13,"DuplicateId","","",13,null],[13,"ObjectTypeRefused","","",13,null],[13,"TemplateMismatch","","",13,null],[13,"InvalidProperty","","",13,null],[13,"InvalidSignal","","",13,null],[13,"InvalidId","","",13,null],[4,"ButtonBoxStyle","","Used to dictate the style that a `ButtonBox` uses to layout the buttons it contains.",null,null],[13,"Spread","","",14,null],[13,"Edge","","",14,null],[13,"Start","","",14,null],[13,"End","","",14,null],[13,"Center","","",14,null],[13,"Expand","","",14,null],[4,"ButtonRole","","The role specifies the desired appearance of a `ModelButton`.",null,null],[13,"Normal","","",15,null],[13,"Check","","",15,null],[13,"Radio","","",15,null],[4,"ButtonsType","","Prebuilt sets of buttons for the dialog. If none of these choices are appropriate, simply use `ButtonsType::None` then call `Dialog::add_buttons`.",null,null],[13,"None","","",16,null],[13,"Ok","","",16,null],[13,"Close","","",16,null],[13,"Cancel","","",16,null],[13,"YesNo","","",16,null],[13,"OkCancel","","",16,null],[4,"CellRendererAccelMode","","Determines if the edited accelerators are GTK+ accelerators. If they are, consumed modifiers are suppressed, only accelerators accepted by GTK+ are allowed, and the accelerators are rendered in the same way as they are in menus.",null,null],[13,"Gtk","","",17,null],[13,"Other","","",17,null],[13,"ModifierTap","","",17,null],[4,"CellRendererMode","","Identifies how the user can interact with a particular cell.",null,null],[13,"Inert","","",18,null],[13,"Activatable","","",18,null],[13,"Editable","","",18,null],[4,"CornerType","","Specifies which corner a child widget should be placed in when packed into a `ScrolledWindow`. This is effectively the opposite of where the scroll bars are placed.",null,null],[13,"TopLeft","","",19,null],[13,"BottomLeft","","",19,null],[13,"TopRight","","",19,null],[13,"BottomRight","","",19,null],[4,"CssProviderError","","Error codes for `GTK_CSS_PROVIDER_ERROR`.",null,null],[13,"Failed","","",20,null],[13,"Syntax","","",20,null],[13,"Import","","",20,null],[13,"Name","","",20,null],[13,"Deprecated","","",20,null],[13,"UnknownValue","","",20,null],[4,"CssSectionType","","The different types of sections indicate parts of a CSS document as parsed by GTK’s CSS parser. They are oriented towards the CSS Grammar, but may contain extensions.",null,null],[13,"Document","","",21,null],[13,"Import","","",21,null],[13,"ColorDefinition","","",21,null],[13,"BindingSet","","",21,null],[13,"Ruleset","","",21,null],[13,"Selector","","",21,null],[13,"Declaration","","",21,null],[13,"Value","","",21,null],[13,"Keyframes","","",21,null],[4,"DeleteType","","See also: `Entry::delete-from-cursor`.",null,null],[13,"Chars","","",22,null],[13,"WordEnds","","",22,null],[13,"Words","","",22,null],[13,"DisplayLines","","",22,null],[13,"DisplayLineEnds","","",22,null],[13,"ParagraphEnds","","",22,null],[13,"Paragraphs","","",22,null],[13,"Whitespace","","",22,null],[4,"DirectionType","","Focus movement types.",null,null],[13,"TabForward","","",23,null],[13,"TabBackward","","",23,null],[13,"Up","","",23,null],[13,"Down","","",23,null],[13,"Left","","",23,null],[13,"Right","","",23,null],[4,"DragResult","","Gives an indication why a drag operation failed. The value can by obtained by connecting to the `Widget::drag-failed` signal.",null,null],[13,"Success","","",24,null],[13,"NoTarget","","",24,null],[13,"UserCancelled","","",24,null],[13,"TimeoutExpired","","",24,null],[13,"GrabBroken","","",24,null],[13,"Error","","",24,null],[4,"EntryIconPosition","","Specifies the side of the entry at which an icon is placed.",null,null],[13,"Primary","","",25,null],[13,"Secondary","","",25,null],[4,"EventSequenceState","","Describes the state of a `gdk::EventSequence` in a `Gesture`.",null,null],[13,"None","","",26,null],[13,"Claimed","","",26,null],[13,"Denied","","",26,null],[4,"FileChooserAction","","Describes whether a `FileChooser` is being used to open existing files or to save to a possibly new file.",null,null],[13,"Open","","",27,null],[13,"Save","","",27,null],[13,"SelectFolder","","",27,null],[13,"CreateFolder","","",27,null],[4,"FileChooserConfirmation","","Used as a return value of handlers for the `FileChooser::confirm-overwrite` signal of a `FileChooser`. This value determines whether the file chooser will present the stock confirmation dialog, accept the user’s choice of a filename, or let the user choose another filename.",null,null],[13,"Confirm","","",28,null],[13,"AcceptFilename","","",28,null],[13,"SelectAgain","","",28,null],[4,"FileChooserError","","These identify the various errors that can occur while calling `FileChooser` functions.",null,null],[13,"Nonexistent","","",29,null],[13,"BadFilename","","",29,null],[13,"AlreadyExists","","",29,null],[13,"IncompleteHostname","","",29,null],[4,"IMPreeditStyle","","Style for input method preedit. See also `Settings:gtk-im-preedit-style`",null,null],[13,"Nothing","","",30,null],[13,"Callback","","",30,null],[13,"None","","",30,null],[4,"IMStatusStyle","","Style for input method status. See also `Settings:gtk-im-status-style`",null,null],[13,"Nothing","","",31,null],[13,"Callback","","",31,null],[13,"None","","",31,null],[4,"IconSize","","Built-in stock icon sizes.",null,null],[13,"Invalid","","",32,null],[13,"Menu","","",32,null],[13,"SmallToolbar","","",32,null],[13,"LargeToolbar","","",32,null],[13,"Button","","",32,null],[13,"Dnd","","",32,null],[13,"Dialog","","",32,null],[4,"IconThemeError","","Error codes for `IconTheme` operations.",null,null],[13,"NotFound","","",33,null],[13,"Failed","","",33,null],[4,"IconViewDropPosition","","An enum for determining where a dropped item goes.",null,null],[13,"NoDrop","","",34,null],[13,"DropInto","","",34,null],[13,"DropLeft","","",34,null],[13,"DropRight","","",34,null],[13,"DropAbove","","",34,null],[13,"DropBelow","","",34,null],[4,"ImageType","","Describes the image data representation used by a `Image`. If you want to get the image from the widget, you can only get the currently-stored representation. e.g. if the `Image::get_storage_type` returns `ImageType::Pixbuf`, then you can call `Image::get_pixbuf` but not `Image::get_stock`. For empty images, you can request any storage type (call any of the \"get\" functions), but they will all return `None` values.",null,null],[13,"Empty","","",35,null],[13,"Pixbuf","","",35,null],[13,"Stock","","",35,null],[13,"IconSet","","",35,null],[13,"Animation","","",35,null],[13,"IconName","","",35,null],[13,"Gicon","","",35,null],[13,"Surface","","",35,null],[4,"InputPurpose","","Describes primary purpose of the input widget. This information is useful for on-screen keyboards and similar input methods to decide which keys should be presented to the user.",null,null],[13,"FreeForm","","",36,null],[13,"Alpha","","",36,null],[13,"Digits","","",36,null],[13,"Number","","",36,null],[13,"Phone","","",36,null],[13,"Url","","",36,null],[13,"Email","","",36,null],[13,"Name","","",36,null],[13,"Password","","",36,null],[13,"Pin","","",36,null],[4,"Justification","","Used for justifying the text inside a `Label` widget. (See also `Alignment`).",null,null],[13,"Left","","",37,null],[13,"Right","","",37,null],[13,"Center","","",37,null],[13,"Fill","","",37,null],[4,"LevelBarMode","","Describes how `LevelBar` contents should be rendered. Note that this enumeration could be extended with additional modes in the future.",null,null],[13,"Continuous","","",38,null],[13,"Discrete","","",38,null],[4,"License","","The type of license for an application.",null,null],[13,"Unknown","","",39,null],[13,"Custom","","",39,null],[13,"Gpl20","","",39,null],[13,"Gpl30","","",39,null],[13,"Lgpl21","","",39,null],[13,"Lgpl30","","",39,null],[13,"Bsd","","",39,null],[13,"MitX11","","",39,null],[13,"Artistic","","",39,null],[13,"Gpl20Only","","",39,null],[13,"Gpl30Only","","",39,null],[13,"Lgpl21Only","","",39,null],[13,"Lgpl30Only","","",39,null],[13,"Agpl30","","",39,null],[4,"MenuDirectionType","","An enumeration representing directional movements within a menu.",null,null],[13,"Parent","","",40,null],[13,"Child","","",40,null],[13,"Next","","",40,null],[13,"Prev","","",40,null],[4,"MessageType","","The type of message being displayed in the dialog.",null,null],[13,"Info","","",41,null],[13,"Warning","","",41,null],[13,"Question","","",41,null],[13,"Error","","",41,null],[13,"Other","","",41,null],[4,"MovementStep","","",null,null],[13,"LogicalPositions","","",42,null],[13,"VisualPositions","","",42,null],[13,"Words","","",42,null],[13,"DisplayLines","","",42,null],[13,"DisplayLineEnds","","",42,null],[13,"Paragraphs","","",42,null],[13,"ParagraphEnds","","",42,null],[13,"Pages","","",42,null],[13,"BufferEnds","","",42,null],[13,"HorizontalPages","","",42,null],[4,"NotebookTab","","",null,null],[13,"First","","",43,null],[13,"Last","","",43,null],[4,"NumberUpLayout","","Used to determine the layout of pages on a sheet when printing multiple pages per sheet.",null,null],[13,"Lrtb","","",44,null],[13,"Lrbt","","",44,null],[13,"Rltb","","",44,null],[13,"Rlbt","","",44,null],[13,"Tblr","","",44,null],[13,"Tbrl","","",44,null],[13,"Btlr","","",44,null],[13,"Btrl","","",44,null],[4,"Orientation","","Represents the orientation of widgets and other objects which can be switched between horizontal and vertical orientation on the fly, like `Toolbar` or `GesturePan`.",null,null],[13,"Horizontal","","",45,null],[13,"Vertical","","",45,null],[4,"PackDirection","","Determines how widgets should be packed inside menubars and menuitems contained in menubars.",null,null],[13,"Ltr","","",46,null],[13,"Rtl","","",46,null],[13,"Ttb","","",46,null],[13,"Btt","","",46,null],[4,"PackType","","Represents the packing location `Box` children. (See: `VBox`, `HBox`, and `ButtonBox`).",null,null],[13,"Start","","",47,null],[13,"End","","",47,null],[4,"PageOrientation","","See also `PrintSettings::set_orientation`.",null,null],[13,"Portrait","","",48,null],[13,"Landscape","","",48,null],[13,"ReversePortrait","","",48,null],[13,"ReverseLandscape","","",48,null],[4,"PageSet","","See also `gtk_print_job_set_page_set`.",null,null],[13,"All","","",49,null],[13,"Even","","",49,null],[13,"Odd","","",49,null],[4,"PanDirection","","Describes the panning direction of a `GesturePan`",null,null],[13,"Left","","",50,null],[13,"Right","","",50,null],[13,"Up","","",50,null],[13,"Down","","",50,null],[4,"PolicyType","","Determines how the size should be computed to achieve the one of the visibility mode for the scrollbars.",null,null],[13,"Always","","",51,null],[13,"Automatic","","",51,null],[13,"Never","","",51,null],[13,"External","","",51,null],[4,"PopoverConstraint","","",null,null],[13,"None","","",52,null],[13,"Window","","",52,null],[4,"PositionType","","Describes which edge of a widget a certain feature is positioned at, e.g. the tabs of a `Notebook`, the handle of a `HandleBox` or the label of a `Scale`.",null,null],[13,"Left","","",53,null],[13,"Right","","",53,null],[13,"Top","","",53,null],[13,"Bottom","","",53,null],[4,"PrintDuplex","","See also `PrintSettings::set_duplex`.",null,null],[13,"Simplex","","",54,null],[13,"Horizontal","","",54,null],[13,"Vertical","","",54,null],[4,"PrintError","","Error codes that identify various errors that can occur while using the GTK+ printing support.",null,null],[13,"General","","",55,null],[13,"InternalError","","",55,null],[13,"Nomem","","",55,null],[13,"InvalidFile","","",55,null],[4,"PrintPages","","See also `gtk_print_job_set_pages`",null,null],[13,"All","","",56,null],[13,"Current","","",56,null],[13,"Ranges","","",56,null],[13,"Selection","","",56,null],[4,"PrintQuality","","See also `PrintSettings::set_quality`.",null,null],[13,"Low","","",57,null],[13,"Normal","","",57,null],[13,"High","","",57,null],[13,"Draft","","",57,null],[4,"PropagationPhase","","Describes the stage at which events are fed into a `EventController`.",null,null],[13,"None","","",58,null],[13,"Capture","","",58,null],[13,"Bubble","","",58,null],[13,"Target","","",58,null],[4,"RecentChooserError","","These identify the various errors that can occur while calling `RecentChooser` functions.",null,null],[13,"NotFound","","",59,null],[13,"InvalidUri","","",59,null],[4,"RecentManagerError","","Error codes for `RecentManager` operations",null,null],[13,"NotFound","","",60,null],[13,"InvalidUri","","",60,null],[13,"InvalidEncoding","","",60,null],[13,"NotRegistered","","",60,null],[13,"Read","","",60,null],[13,"Write","","",60,null],[13,"Unknown","","",60,null],[4,"RecentSortType","","Used to specify the sorting method to be applyed to the recently used resource list.",null,null],[13,"None","","",61,null],[13,"Mru","","",61,null],[13,"Lru","","",61,null],[13,"Custom","","",61,null],[4,"ReliefStyle","","Indicated the relief to be drawn around a `Button`.",null,null],[13,"Normal","","",62,null],[13,"Half","","",62,null],[13,"None","","",62,null],[4,"ResizeMode","","",null,null],[13,"Parent","","",63,null],[13,"Queue","","",63,null],[13,"Immediate","","",63,null],[4,"ResponseType","","Predefined values for use as response ids in `DialogExt::add_button`. All predefined values are negative, GTK+ leaves positive values for application-defined response ids.",null,null],[13,"None","","",64,null],[13,"Reject","","",64,null],[13,"Accept","","",64,null],[13,"DeleteEvent","","",64,null],[13,"Ok","","",64,null],[13,"Cancel","","",64,null],[13,"Close","","",64,null],[13,"Yes","","",64,null],[13,"No","","",64,null],[13,"Apply","","",64,null],[13,"Help","","",64,null],[4,"RevealerTransitionType","","These enumeration values describe the possible transitions when the child of a `Revealer` widget is shown or hidden.",null,null],[13,"None","","",65,null],[13,"Crossfade","","",65,null],[13,"SlideRight","","",65,null],[13,"SlideLeft","","",65,null],[13,"SlideUp","","",65,null],[13,"SlideDown","","",65,null],[4,"ScrollStep","","",null,null],[13,"Steps","","",66,null],[13,"Pages","","",66,null],[13,"Ends","","",66,null],[13,"HorizontalSteps","","",66,null],[13,"HorizontalPages","","",66,null],[13,"HorizontalEnds","","",66,null],[4,"ScrollType","","Scrolling types.",null,null],[13,"None","","",67,null],[13,"Jump","","",67,null],[13,"StepBackward","","",67,null],[13,"StepForward","","",67,null],[13,"PageBackward","","",67,null],[13,"PageForward","","",67,null],[13,"StepUp","","",67,null],[13,"StepDown","","",67,null],[13,"PageUp","","",67,null],[13,"PageDown","","",67,null],[13,"StepLeft","","",67,null],[13,"StepRight","","",67,null],[13,"PageLeft","","",67,null],[13,"PageRight","","",67,null],[13,"Start","","",67,null],[13,"End","","",67,null],[4,"ScrollablePolicy","","Defines the policy to be used in a scrollable widget when updating the scrolled window adjustments in a given orientation.",null,null],[13,"Minimum","","",68,null],[13,"Natural","","",68,null],[4,"SelectionMode","","Used to control what selections users are allowed to make.",null,null],[13,"None","","",69,null],[13,"Single","","",69,null],[13,"Browse","","",69,null],[13,"Multiple","","",69,null],[4,"SensitivityType","","Determines how GTK+ handles the sensitivity of stepper arrows at the end of range widgets.",null,null],[13,"Auto","","",70,null],[13,"On","","",70,null],[13,"Off","","",70,null],[4,"ShadowType","","Used to change the appearance of an outline typically provided by a `Frame`.",null,null],[13,"None","","",71,null],[13,"In","","",71,null],[13,"Out","","",71,null],[13,"EtchedIn","","",71,null],[13,"EtchedOut","","",71,null],[4,"SizeGroupMode","","The mode of the size group determines the directions in which the size group affects the requested sizes of its component widgets.",null,null],[13,"None","","",72,null],[13,"Horizontal","","",72,null],[13,"Vertical","","",72,null],[13,"Both","","",72,null],[4,"SizeRequestMode","","Specifies a preference for height-for-width or width-for-height geometry management.",null,null],[13,"HeightForWidth","","",73,null],[13,"WidthForHeight","","",73,null],[13,"ConstantSize","","",73,null],[4,"SortType","","Determines the direction of a sort.",null,null],[13,"Ascending","","",74,null],[13,"Descending","","",74,null],[4,"SpinButtonUpdatePolicy","","The spin button update policy determines whether the spin button displays values even if they are outside the bounds of its adjustment. See `SpinButton::set_update_policy`.",null,null],[13,"Always","","",75,null],[13,"IfValid","","",75,null],[4,"SpinType","","The values of the `SpinType` enumeration are used to specify the change to make in `SpinButton::spin`.",null,null],[13,"StepForward","","",76,null],[13,"StepBackward","","",76,null],[13,"PageForward","","",76,null],[13,"PageBackward","","",76,null],[13,"Home","","",76,null],[13,"End","","",76,null],[13,"UserDefined","","",76,null],[4,"StackTransitionType","","These enumeration values describe the possible transitions between pages in a `Stack` widget.",null,null],[13,"None","","",77,null],[13,"Crossfade","","",77,null],[13,"SlideRight","","",77,null],[13,"SlideLeft","","",77,null],[13,"SlideUp","","",77,null],[13,"SlideDown","","",77,null],[13,"SlideLeftRight","","",77,null],[13,"SlideUpDown","","",77,null],[13,"OverUp","","",77,null],[13,"OverDown","","",77,null],[13,"OverLeft","","",77,null],[13,"OverRight","","",77,null],[13,"UnderUp","","",77,null],[13,"UnderDown","","",77,null],[13,"UnderLeft","","",77,null],[13,"UnderRight","","",77,null],[13,"OverUpDown","","",77,null],[13,"OverDownUp","","",77,null],[13,"OverLeftRight","","",77,null],[13,"OverRightLeft","","",77,null],[4,"StateType","","This type indicates the current state of a widget; the state determines how the widget is drawn. The `StateType` enumeration is also used to identify different colors in a `Style` for drawing, so states can be used for subparts of a widget as well as entire widgets.",null,null],[13,"Normal","","",78,null],[13,"Active","","",78,null],[13,"Prelight","","",78,null],[13,"Selected","","",78,null],[13,"Insensitive","","",78,null],[13,"Inconsistent","","",78,null],[13,"Focused","","",78,null],[4,"TextDirection","","Reading directions for text.",null,null],[13,"None","","",79,null],[13,"Ltr","","",79,null],[13,"Rtl","","",79,null],[4,"TextExtendSelection","","Granularity types that extend the text selection. Use the `TextView::extend-selection` signal to customize the selection.",null,null],[13,"Word","","",80,null],[13,"Line","","",80,null],[4,"TextWindowType","","Used to reference the parts of `TextView`.",null,null],[13,"Private","","",81,null],[13,"Widget","","",81,null],[13,"Text","","",81,null],[13,"Left","","",81,null],[13,"Right","","",81,null],[13,"Top","","",81,null],[13,"Bottom","","",81,null],[4,"ToolbarStyle","","Used to customize the appearance of a `Toolbar`. Note that setting the toolbar style overrides the user’s preferences for the default toolbar style. Note that if the button has only a label set and GTK_TOOLBAR_ICONS is used, the label will be visible, and vice versa.",null,null],[13,"Icons","","",82,null],[13,"Text","","",82,null],[13,"Both","","",82,null],[13,"BothHoriz","","",82,null],[4,"TreeViewColumnSizing","","The sizing method the column uses to determine its width. Please note that `TreeViewColumnSizing::Autosize` are inefficient for large views, and can make columns appear choppy.",null,null],[13,"GrowOnly","","",83,null],[13,"Autosize","","",83,null],[13,"Fixed","","",83,null],[4,"TreeViewDropPosition","","An enum for determining where a dropped row goes.",null,null],[13,"Before","","",84,null],[13,"After","","",84,null],[13,"IntoOrBefore","","",84,null],[13,"IntoOrAfter","","",84,null],[4,"TreeViewGridLines","","Used to indicate which grid lines to draw in a tree view.",null,null],[13,"None","","",85,null],[13,"Horizontal","","",85,null],[13,"Vertical","","",85,null],[13,"Both","","",85,null],[4,"Unit","","See also `PrintSettings::set_paper_width`.",null,null],[13,"None","","",86,null],[13,"Points","","",86,null],[13,"Inch","","",86,null],[13,"Mm","","",86,null],[4,"WidgetHelpType","","Kinds of widget-specific help. Used by the ::show-help signal.",null,null],[13,"Tooltip","","",87,null],[13,"WhatsThis","","",87,null],[4,"WindowPosition","","Window placement can be influenced using this enumeration. Note that using `WindowPosition::CenterAlways` is almost always a bad idea. It won’t necessarily work well with all window managers or on all windowing systems.",null,null],[13,"None","","",88,null],[13,"Center","","",88,null],[13,"Mouse","","",88,null],[13,"CenterAlways","","",88,null],[13,"CenterOnParent","","",88,null],[4,"WindowType","","A `Window` can be one of these types. Most things you’d consider a “window” should have type `WindowType::Toplevel`; windows with this type are managed by the window manager and have a frame by default (call `WindowExt::set_decorated` to toggle the frame). Windows with type `WindowType::Popup` are ignored by the window manager; window manager keybindings won’t work on them, the window manager won’t decorate the window with a frame, many GTK+ features that rely on the window manager will not work (e.g. resize grips and maximization/minimization). `WindowType::Popup` is used to implement widgets such as `Menu` or tooltips that you normally don’t think of as windows per se. Nearly all windows should be `WindowType::Toplevel`. In particular, do not use `WindowType::Popup` just to turn off the window borders; use `WindowExt::set_decorated` for that.",null,null],[13,"Toplevel","","",89,null],[13,"Popup","","",89,null],[4,"WrapMode","","Describes a type of line wrapping.",null,null],[13,"None","","",90,null],[13,"Char","","",90,null],[13,"Word","","",90,null],[13,"WordChar","","",90,null],[4,"SortColumn","","",null,null],[13,"Default","","",91,null],[13,"Index","","",91,null],[5,"accel_groups_activate","","",null,{"inputs":[{"name":"p"},{"name":"u32"},{"name":"modifiertype"}],"output":{"name":"bool"}}],[5,"accel_groups_from_object","","",null,{"inputs":[{"name":"p"}],"output":{"name":"vec"}}],[5,"accelerator_get_default_mod_mask","","",null,{"inputs":[],"output":{"name":"modifiertype"}}],[5,"accelerator_get_label","","",null,{"inputs":[{"name":"u32"},{"name":"modifiertype"}],"output":{"name":"option"}}],[5,"accelerator_get_label_with_keycode","","",null,{"inputs":[{"name":"p"},{"name":"u32"},{"name":"u32"},{"name":"modifiertype"}],"output":{"name":"option"}}],[5,"accelerator_name","","",null,{"inputs":[{"name":"u32"},{"name":"modifiertype"}],"output":{"name":"option"}}],[5,"accelerator_name_with_keycode","","",null,{"inputs":[{"name":"p"},{"name":"u32"},{"name":"u32"},{"name":"modifiertype"}],"output":{"name":"option"}}],[5,"accelerator_parse","","",null,null],[5,"accelerator_set_default_mod_mask","","",null,{"inputs":[{"name":"modifiertype"}],"output":null}],[5,"accelerator_valid","","",null,{"inputs":[{"name":"u32"},{"name":"modifiertype"}],"output":{"name":"bool"}}],[5,"alternative_dialog_button_order","","",null,{"inputs":[{"name":"p"}],"output":{"name":"bool"}}],[5,"bindings_activate","","",null,{"inputs":[{"name":"p"},{"name":"u32"},{"name":"modifiertype"}],"output":{"name":"bool"}}],[5,"bindings_activate_event","","",null,{"inputs":[{"name":"p"},{"name":"eventkey"}],"output":{"name":"bool"}}],[5,"cairo_should_draw_window","","",null,{"inputs":[{"name":"context"},{"name":"window"}],"output":{"name":"bool"}}],[5,"cairo_transform_to_window","","",null,{"inputs":[{"name":"context"},{"name":"p"},{"name":"window"}],"output":null}],[5,"device_grab_add","","",null,{"inputs":[{"name":"p"},{"name":"q"},{"name":"bool"}],"output":null}],[5,"device_grab_remove","","",null,{"inputs":[{"name":"p"},{"name":"q"}],"output":null}],[5,"disable_setlocale","","",null,{"inputs":[],"output":null}],[5,"events_pending","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"false_","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"get_current_event","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"get_current_event_device","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"get_current_event_state","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"get_current_event_time","","",null,{"inputs":[],"output":{"name":"u32"}}],[5,"get_debug_flags","","",null,{"inputs":[],"output":{"name":"u32"}}],[5,"get_default_language","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"get_event_widget","","",null,{"inputs":[{"name":"event"}],"output":{"name":"option"}}],[5,"get_locale_direction","","",null,{"inputs":[],"output":{"name":"textdirection"}}],[5,"grab_get_current","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"main","","",null,{"inputs":[],"output":null}],[5,"main_do_event","","",null,{"inputs":[{"name":"event"}],"output":null}],[5,"main_iteration","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"main_iteration_do","","",null,{"inputs":[{"name":"bool"}],"output":{"name":"bool"}}],[5,"main_level","","",null,{"inputs":[],"output":{"name":"u32"}}],[5,"print_run_page_setup_dialog","","",null,{"inputs":[{"name":"q"},{"name":"r"},{"name":"printsettings"}],"output":{"name":"option"}}],[5,"propagate_event","","",null,{"inputs":[{"name":"p"},{"name":"event"}],"output":null}],[5,"render_activity","","",null,{"inputs":[{"name":"stylecontext"},{"name":"context"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[5,"render_arrow","","",null,{"inputs":[{"name":"stylecontext"},{"name":"context"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[5,"render_background","","",null,{"inputs":[{"name":"stylecontext"},{"name":"context"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[5,"render_background_get_clip","","",null,{"inputs":[{"name":"stylecontext"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"rectangle"}}],[5,"render_check","","",null,{"inputs":[{"name":"stylecontext"},{"name":"context"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[5,"render_expander","","",null,{"inputs":[{"name":"stylecontext"},{"name":"context"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[5,"render_extension","","",null,{"inputs":[{"name":"stylecontext"},{"name":"context"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"positiontype"}],"output":null}],[5,"render_focus","","",null,{"inputs":[{"name":"stylecontext"},{"name":"context"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[5,"render_frame","","",null,{"inputs":[{"name":"stylecontext"},{"name":"context"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[5,"render_frame_gap","","",null,{"inputs":[{"name":"stylecontext"},{"name":"context"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"positiontype"},{"name":"f64"},{"name":"f64"}],"output":null}],[5,"render_handle","","",null,{"inputs":[{"name":"stylecontext"},{"name":"context"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[5,"render_icon","","",null,{"inputs":[{"name":"stylecontext"},{"name":"context"},{"name":"pixbuf"},{"name":"f64"},{"name":"f64"}],"output":null}],[5,"render_icon_pixbuf","","",null,{"inputs":[{"name":"stylecontext"},{"name":"iconsource"},{"name":"i32"}],"output":{"name":"option"}}],[5,"render_icon_surface","","",null,{"inputs":[{"name":"stylecontext"},{"name":"context"},{"name":"surface"},{"name":"f64"},{"name":"f64"}],"output":null}],[5,"render_insertion_cursor","","",null,{"inputs":[{"name":"stylecontext"},{"name":"context"},{"name":"f64"},{"name":"f64"},{"name":"layout"},{"name":"i32"},{"name":"direction"}],"output":null}],[5,"render_layout","","",null,{"inputs":[{"name":"stylecontext"},{"name":"context"},{"name":"f64"},{"name":"f64"},{"name":"layout"}],"output":null}],[5,"render_line","","",null,{"inputs":[{"name":"stylecontext"},{"name":"context"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[5,"render_option","","",null,{"inputs":[{"name":"stylecontext"},{"name":"context"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[5,"render_slider","","",null,{"inputs":[{"name":"stylecontext"},{"name":"context"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"orientation"}],"output":null}],[5,"rgb_to_hsv","","",null,null],[5,"selection_add_target","","",null,{"inputs":[{"name":"p"},{"name":"atom"},{"name":"atom"},{"name":"u32"}],"output":null}],[5,"selection_clear_targets","","",null,{"inputs":[{"name":"p"},{"name":"atom"}],"output":null}],[5,"selection_convert","","",null,{"inputs":[{"name":"p"},{"name":"atom"},{"name":"atom"},{"name":"u32"}],"output":{"name":"bool"}}],[5,"selection_owner_set","","",null,{"inputs":[{"name":"q"},{"name":"atom"},{"name":"u32"}],"output":{"name":"bool"}}],[5,"selection_owner_set_for_display","","",null,{"inputs":[{"name":"display"},{"name":"q"},{"name":"atom"},{"name":"u32"}],"output":{"name":"bool"}}],[5,"selection_remove_all","","",null,{"inputs":[{"name":"p"}],"output":null}],[5,"set_debug_flags","","",null,{"inputs":[{"name":"u32"}],"output":null}],[5,"show_uri","","",null,{"inputs":[{"name":"p"},{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[5,"show_uri_on_window","","",null,{"inputs":[{"name":"q"},{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[5,"stock_list_ids","","",null,{"inputs":[],"output":{"name":"vec"}}],[5,"targets_include_image","","",null,null],[5,"targets_include_rich_text","","",null,null],[5,"targets_include_text","","",null,null],[5,"targets_include_uri","","",null,null],[5,"test_create_simple_window","","",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"option"}}],[5,"test_find_label","","",null,{"inputs":[{"name":"p"},{"name":"str"}],"output":{"name":"option"}}],[5,"test_find_sibling","","",null,{"inputs":[{"name":"p"},{"name":"type"}],"output":{"name":"option"}}],[5,"test_find_widget","","",null,{"inputs":[{"name":"p"},{"name":"str"},{"name":"type"}],"output":{"name":"option"}}],[5,"test_register_all_types","","",null,{"inputs":[],"output":null}],[5,"test_slider_get_value","","",null,{"inputs":[{"name":"p"}],"output":{"name":"f64"}}],[5,"test_slider_set_perc","","",null,{"inputs":[{"name":"p"},{"name":"f64"}],"output":null}],[5,"test_spin_button_click","","",null,{"inputs":[{"name":"spinbutton"},{"name":"u32"},{"name":"bool"}],"output":{"name":"bool"}}],[5,"test_text_get","","",null,{"inputs":[{"name":"p"}],"output":{"name":"option"}}],[5,"test_text_set","","",null,{"inputs":[{"name":"p"},{"name":"str"}],"output":null}],[5,"test_widget_click","","",null,{"inputs":[{"name":"p"},{"name":"u32"},{"name":"modifiertype"}],"output":{"name":"bool"}}],[5,"test_widget_send_key","","",null,{"inputs":[{"name":"p"},{"name":"u32"},{"name":"modifiertype"}],"output":{"name":"bool"}}],[5,"test_widget_wait_for_draw","","",null,{"inputs":[{"name":"p"}],"output":null}],[5,"tree_get_row_drag_data","","",null,{"inputs":[{"name":"selectiondata"}],"output":{"name":"option"}}],[5,"tree_set_row_drag_data","","",null,{"inputs":[{"name":"selectiondata"},{"name":"p"},{"name":"treepath"}],"output":{"name":"bool"}}],[5,"true_","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"is_initialized","","Returns `true` if GTK has been initialized.",null,{"inputs":[],"output":{"name":"bool"}}],[5,"is_initialized_main_thread","","Returns `true` if GTK has been initialized and this is the main thread.",null,{"inputs":[],"output":{"name":"bool"}}],[5,"set_initialized","","Informs this crate that GTK has been initialized and the current thread is the main one.",null,{"inputs":[],"output":null}],[5,"init","","Tries to initialize GTK+.",null,{"inputs":[],"output":{"name":"result"}}],[5,"main_quit","","",null,{"inputs":[],"output":null}],[5,"get_major_version","","",null,{"inputs":[],"output":{"name":"u32"}}],[5,"get_minor_version","","",null,{"inputs":[],"output":{"name":"u32"}}],[5,"get_micro_version","","",null,{"inputs":[],"output":{"name":"u32"}}],[5,"get_binary_age","","",null,{"inputs":[],"output":{"name":"u32"}}],[5,"get_interface_age","","",null,{"inputs":[],"output":{"name":"u32"}}],[5,"check_version","","",null,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[5,"idle_add","","Adds a closure to be called by the default main loop when it's idle.",null,{"inputs":[{"name":"f"}],"output":{"name":"sourceid"}}],[5,"timeout_add","","Adds a closure to be called by the default main loop at regular intervals with millisecond granularity.",null,{"inputs":[{"name":"u32"},{"name":"f"}],"output":{"name":"sourceid"}}],[5,"timeout_add_seconds","","Adds a closure to be called by the default main loop at regular intervals with second granularity.",null,{"inputs":[{"name":"u32"},{"name":"f"}],"output":{"name":"sourceid"}}],[11,"clone","","",92,{"inputs":[{"name":"self"}],"output":{"name":"aboutdialog"}}],[11,"fmt","","",92,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",92,null],[11,"static_type","","",92,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",92,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AboutDialog`.",92,{"inputs":[],"output":{"name":"aboutdialog"}}],[11,"default","","",92,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",93,{"inputs":[{"name":"self"}],"output":{"name":"accelgroup"}}],[11,"fmt","","",93,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",93,null],[11,"static_type","","",93,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",93,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AccelGroup`.",93,{"inputs":[],"output":{"name":"accelgroup"}}],[11,"default","","",93,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",94,{"inputs":[{"name":"self"}],"output":{"name":"actionbar"}}],[11,"fmt","","",94,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",94,null],[11,"static_type","","",94,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",94,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `ActionBar` widget.",94,{"inputs":[],"output":{"name":"actionbar"}}],[11,"default","","",94,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",95,{"inputs":[{"name":"self"}],"output":{"name":"actionable"}}],[11,"fmt","","",95,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",95,null],[11,"static_type","","",95,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",95,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",96,{"inputs":[{"name":"self"}],"output":{"name":"adjustment"}}],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",96,null],[11,"static_type","","",96,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",96,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Adjustment`. ## `value` the initial value. ## `lower` the minimum value. ## `upper` the maximum value. ## `step_increment` the step increment. ## `page_increment` the page increment. ## `page_size` the page size.",96,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"adjustment"}}],[11,"clone","","",97,{"inputs":[{"name":"self"}],"output":{"name":"alignment"}}],[11,"fmt","","",97,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",97,null],[11,"static_type","","",97,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",97,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Alignment`.",97,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"alignment"}}],[11,"clone","","",98,{"inputs":[{"name":"self"}],"output":{"name":"appchooserdialog"}}],[11,"fmt","","",98,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",98,null],[11,"static_type","","",98,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",98,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new_for_content_type","","Creates a new `AppChooserDialog` for the provided content type, to allow the user to select an application for it. ## `parent` a `Window`, or `None` ## `flags` flags for this dialog ## `content_type` a content type string",98,{"inputs":[{"name":"q"},{"name":"dialogflags"},{"name":"str"}],"output":{"name":"appchooserdialog"}}],[11,"clone","","",99,{"inputs":[{"name":"self"}],"output":{"name":"appchooserwidget"}}],[11,"fmt","","",99,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",99,null],[11,"static_type","","",99,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",99,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AppChooserWidget` for applications that can handle content of the given type. ## `content_type` the content type to show applications for",99,{"inputs":[{"name":"str"}],"output":{"name":"appchooserwidget"}}],[11,"clone","","",100,{"inputs":[{"name":"self"}],"output":{"name":"application"}}],[11,"fmt","","",100,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",100,null],[11,"static_type","","",100,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",100,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",101,{"inputs":[{"name":"self"}],"output":{"name":"applicationwindow"}}],[11,"fmt","","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",101,null],[11,"static_type","","",101,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",101,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `ApplicationWindow`. ## `application` a `Application`",101,{"inputs":[{"name":"application"}],"output":{"name":"applicationwindow"}}],[11,"clone","","",102,{"inputs":[{"name":"self"}],"output":{"name":"arrow"}}],[11,"fmt","","",102,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",102,null],[11,"static_type","","",102,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",102,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Arrow` widget.",102,{"inputs":[{"name":"arrowtype"},{"name":"shadowtype"}],"output":{"name":"arrow"}}],[11,"clone","","",103,{"inputs":[{"name":"self"}],"output":{"name":"aspectframe"}}],[11,"fmt","","",103,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",103,null],[11,"static_type","","",103,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",103,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Create a new `AspectFrame`. ## `label` Label text. ## `xalign` Horizontal alignment of the child within the allocation of  the `AspectFrame`. This ranges from 0.0 (left aligned)  to 1.0 (right aligned) ## `yalign` Vertical alignment of the child within the allocation of  the `AspectFrame`. This ranges from 0.0 (top aligned)  to 1.0 (bottom aligned) ## `ratio` The desired aspect ratio. ## `obey_child` If `true`, `ratio` is ignored, and the aspect  ratio is taken from the requistion of the child.",103,{"inputs":[{"name":"p"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"bool"}],"output":{"name":"aspectframe"}}],[11,"clone","","",104,{"inputs":[{"name":"self"}],"output":{"name":"assistant"}}],[11,"fmt","","",104,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",104,null],[11,"static_type","","",104,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",104,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","",104,{"inputs":[],"output":{"name":"assistant"}}],[11,"default","","",104,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",105,{"inputs":[{"name":"self"}],"output":{"name":"bin"}}],[11,"fmt","","",105,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",105,null],[11,"static_type","","",105,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",105,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",106,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"fmt","","",106,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",106,null],[11,"static_type","","",106,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",106,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Box`. ## `orientation` the box’s orientation. ## `spacing` the number of pixels to place by default between children.",106,{"inputs":[{"name":"orientation"},{"name":"i32"}],"output":{"name":"box"}}],[11,"clone","","",107,{"inputs":[{"name":"self"}],"output":{"name":"builder"}}],[11,"fmt","","",107,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",107,null],[11,"static_type","","",107,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",107,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new empty builder object.",107,{"inputs":[],"output":{"name":"builder"}}],[11,"new_from_resource","","Builds the [`Builder` UI definition][BUILDER-UI] at `resource_path`.",107,{"inputs":[{"name":"str"}],"output":{"name":"builder"}}],[11,"new_from_string","","Builds the user interface described by `string` (in the [`Builder` UI definition][BUILDER-UI] format).",107,{"inputs":[{"name":"str"}],"output":{"name":"builder"}}],[11,"default","","",107,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",108,{"inputs":[{"name":"self"}],"output":{"name":"button"}}],[11,"fmt","","",108,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",108,null],[11,"static_type","","",108,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",108,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Button` widget. To add a child widget to the button, use `Container::add`.",108,{"inputs":[],"output":{"name":"button"}}],[11,"new_from_icon_name","","Creates a new button containing an icon from the current icon theme.",108,{"inputs":[{"name":"str"},{"name":"i32"}],"output":{"name":"button"}}],[11,"new_from_stock","","Creates a new `Button` containing the image and text from a stock item. Some stock ids have preprocessor macros like `GTK_STOCK_OK` and `GTK_STOCK_APPLY`.",108,{"inputs":[{"name":"str"}],"output":{"name":"button"}}],[11,"new_with_label","","Creates a `Button` widget with a `Label` child containing the given text. ## `label` The text you want the `Label` to hold.",108,{"inputs":[{"name":"str"}],"output":{"name":"button"}}],[11,"new_with_mnemonic","","Creates a new `Button` containing a label. If characters in `label` are preceded by an underscore, they are underlined. If you need a literal underscore character in a label, use “__” (two underscores). The first underlined character represents a keyboard accelerator called a mnemonic. Pressing Alt and that key activates the button. ## `label` The text of the button, with an underscore in front of the  mnemonic character",108,{"inputs":[{"name":"str"}],"output":{"name":"button"}}],[11,"default","","",108,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",109,{"inputs":[{"name":"self"}],"output":{"name":"buttonbox"}}],[11,"fmt","","",109,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",109,null],[11,"static_type","","",109,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",109,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `ButtonBox`. ## `orientation` the box's orientation.",109,{"inputs":[{"name":"orientation"}],"output":{"name":"buttonbox"}}],[11,"clone","","",110,{"inputs":[{"name":"self"}],"output":{"name":"calendar"}}],[11,"fmt","","",110,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",110,null],[11,"static_type","","",110,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",110,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new calendar, with the current date being selected.",110,{"inputs":[],"output":{"name":"calendar"}}],[11,"default","","",110,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",111,{"inputs":[{"name":"self"}],"output":{"name":"cellarea"}}],[11,"fmt","","",111,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",111,null],[11,"static_type","","",111,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",111,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",112,{"inputs":[{"name":"self"}],"output":{"name":"cellareabox"}}],[11,"fmt","","",112,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",112,null],[11,"static_type","","",112,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",112,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `CellAreaBox`.",112,{"inputs":[],"output":{"name":"cellareabox"}}],[11,"default","","",112,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",113,{"inputs":[{"name":"self"}],"output":{"name":"cellareacontext"}}],[11,"fmt","","",113,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",113,null],[11,"static_type","","",113,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",113,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",114,{"inputs":[{"name":"self"}],"output":{"name":"celleditable"}}],[11,"fmt","","",114,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",114,null],[11,"static_type","","",114,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",114,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",115,{"inputs":[{"name":"self"}],"output":{"name":"celllayout"}}],[11,"fmt","","",115,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",115,null],[11,"static_type","","",115,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",115,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",116,{"inputs":[{"name":"self"}],"output":{"name":"cellrenderer"}}],[11,"fmt","","",116,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",116,null],[11,"static_type","","",116,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",116,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",117,{"inputs":[{"name":"self"}],"output":{"name":"cellrendereraccel"}}],[11,"fmt","","",117,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",117,null],[11,"static_type","","",117,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",117,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `CellRendererAccel`.",117,{"inputs":[],"output":{"name":"cellrendereraccel"}}],[11,"default","","",117,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",118,{"inputs":[{"name":"self"}],"output":{"name":"cellrenderercombo"}}],[11,"fmt","","",118,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",118,null],[11,"static_type","","",118,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",118,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `CellRendererCombo`. Adjust how text is drawn using object properties. Object properties can be set globally (with `gobject::Object::set`). Also, with `TreeViewColumn`, you can bind a property to a value in a `TreeModel`. For example, you can bind the “text” property on the cell renderer to a string value in the model, thus rendering a different string in each row of the `TreeView`.",118,{"inputs":[],"output":{"name":"cellrenderercombo"}}],[11,"default","","",118,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",119,{"inputs":[{"name":"self"}],"output":{"name":"cellrendererpixbuf"}}],[11,"fmt","","",119,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",119,null],[11,"static_type","","",119,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",119,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `CellRendererPixbuf`. Adjust rendering parameters using object properties. Object properties can be set globally (with `gobject::Object::set`). Also, with `TreeViewColumn`, you can bind a property to a value in a `TreeModel`. For example, you can bind the “pixbuf” property on the cell renderer to a pixbuf value in the model, thus rendering a different image in each row of the `TreeView`.",119,{"inputs":[],"output":{"name":"cellrendererpixbuf"}}],[11,"default","","",119,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",120,{"inputs":[{"name":"self"}],"output":{"name":"cellrendererprogress"}}],[11,"fmt","","",120,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",120,null],[11,"static_type","","",120,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",120,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `CellRendererProgress`.",120,{"inputs":[],"output":{"name":"cellrendererprogress"}}],[11,"default","","",120,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",121,{"inputs":[{"name":"self"}],"output":{"name":"cellrendererspin"}}],[11,"fmt","","",121,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",121,null],[11,"static_type","","",121,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",121,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `CellRendererSpin`.",121,{"inputs":[],"output":{"name":"cellrendererspin"}}],[11,"default","","",121,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",122,{"inputs":[{"name":"self"}],"output":{"name":"cellrendererspinner"}}],[11,"fmt","","",122,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",122,null],[11,"static_type","","",122,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",122,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Returns a new cell renderer which will show a spinner to indicate activity.",122,{"inputs":[],"output":{"name":"cellrendererspinner"}}],[11,"default","","",122,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",123,{"inputs":[{"name":"self"}],"output":{"name":"cellrenderertext"}}],[11,"fmt","","",123,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",123,null],[11,"static_type","","",123,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",123,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `CellRendererText`. Adjust how text is drawn using object properties. Object properties can be set globally (with `gobject::Object::set`). Also, with `TreeViewColumn`, you can bind a property to a value in a `TreeModel`. For example, you can bind the “text” property on the cell renderer to a string value in the model, thus rendering a different string in each row of the `TreeView`",123,{"inputs":[],"output":{"name":"cellrenderertext"}}],[11,"default","","",123,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",124,{"inputs":[{"name":"self"}],"output":{"name":"cellrenderertoggle"}}],[11,"fmt","","",124,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",124,null],[11,"static_type","","",124,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",124,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `CellRendererToggle`. Adjust rendering parameters using object properties. Object properties can be set globally (with `gobject::Object::set`). Also, with `TreeViewColumn`, you can bind a property to a value in a `TreeModel`. For example, you can bind the “active” property on the cell renderer to a boolean value in the model, thus causing the check button to reflect the state of the model.",124,{"inputs":[],"output":{"name":"cellrenderertoggle"}}],[11,"default","","",124,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",125,{"inputs":[{"name":"self"}],"output":{"name":"checkbutton"}}],[11,"fmt","","",125,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",125,null],[11,"static_type","","",125,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",125,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `CheckButton`.",125,{"inputs":[],"output":{"name":"checkbutton"}}],[11,"new_with_label","","Creates a new `CheckButton` with a `Label` to the right of it. ## `label` the text for the check button.",125,{"inputs":[{"name":"str"}],"output":{"name":"checkbutton"}}],[11,"new_with_mnemonic","","Creates a new `CheckButton` containing a label. The label will be created using `Label::new_with_mnemonic`, so underscores in `label` indicate the mnemonic for the check button. ## `label` The text of the button, with an underscore in front of the  mnemonic character",125,{"inputs":[{"name":"str"}],"output":{"name":"checkbutton"}}],[11,"default","","",125,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",126,{"inputs":[{"name":"self"}],"output":{"name":"checkmenuitem"}}],[11,"fmt","","",126,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",126,null],[11,"static_type","","",126,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",126,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `CheckMenuItem`.",126,{"inputs":[],"output":{"name":"checkmenuitem"}}],[11,"new_with_label","","Creates a new `CheckMenuItem` with a label. ## `label` the string to use for the label.",126,{"inputs":[{"name":"str"}],"output":{"name":"checkmenuitem"}}],[11,"new_with_mnemonic","","Creates a new `CheckMenuItem` containing a label. The label will be created using `Label::new_with_mnemonic`, so underscores in `label` indicate the mnemonic for the menu item. ## `label` The text of the button, with an underscore in front of the  character",126,{"inputs":[{"name":"str"}],"output":{"name":"checkmenuitem"}}],[11,"default","","",126,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",127,{"inputs":[{"name":"self"}],"output":{"name":"clipboard"}}],[11,"fmt","","",127,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",127,null],[11,"static_type","","",127,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",127,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"get","","Returns the clipboard object for the given selection. See `Clipboard::get_for_display` for complete details. ## `selection` a `gdk::Atom` which identifies the clipboard to use",127,{"inputs":[{"name":"atom"}],"output":{"name":"clipboard"}}],[11,"get_default","","Returns the default clipboard object for use with cut/copy/paste menu items and keyboard shortcuts.",127,{"inputs":[{"name":"display"}],"output":{"name":"option"}}],[11,"get_for_display","","Returns the clipboard object for the given selection. Cut/copy/paste menu items and keyboard shortcuts should use the default clipboard, returned by passing `GDK_SELECTION_CLIPBOARD` for `selection`. (`GDK_NONE` is supported as a synonym for GDK_SELECTION_CLIPBOARD for backwards compatibility reasons.) The currently-selected object or text should be provided on the clipboard identified by `GDK_SELECTION_PRIMARY`. Cut/copy/paste menu items conceptually copy the contents of the `GDK_SELECTION_PRIMARY` clipboard to the default clipboard, i.e. they copy the selection to what the user sees as the clipboard.",127,{"inputs":[{"name":"display"},{"name":"atom"}],"output":{"name":"clipboard"}}],[11,"clone","","",128,{"inputs":[{"name":"self"}],"output":{"name":"colorbutton"}}],[11,"fmt","","",128,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",128,null],[11,"static_type","","",128,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",128,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new color button.",128,{"inputs":[],"output":{"name":"colorbutton"}}],[11,"new_with_rgba","","Creates a new color button. ## `rgba` A `gdk::RGBA` to set the current color with",128,{"inputs":[{"name":"rgba"}],"output":{"name":"colorbutton"}}],[11,"default","","",128,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",129,{"inputs":[{"name":"self"}],"output":{"name":"colorchooser"}}],[11,"fmt","","",129,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",129,null],[11,"static_type","","",129,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",129,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",130,{"inputs":[{"name":"self"}],"output":{"name":"colorchooserdialog"}}],[11,"fmt","","",130,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",130,null],[11,"static_type","","",130,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",130,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `ColorChooserDialog`. ## `title` Title of the dialog, or `None` ## `parent` Transient parent of the dialog, or `None`",130,{"inputs":[{"name":"p"},{"name":"r"}],"output":{"name":"colorchooserdialog"}}],[11,"clone","","",131,{"inputs":[{"name":"self"}],"output":{"name":"colorchooserwidget"}}],[11,"fmt","","",131,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",131,null],[11,"static_type","","",131,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",131,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `ColorChooserWidget`.",131,{"inputs":[],"output":{"name":"colorchooserwidget"}}],[11,"default","","",131,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",132,{"inputs":[{"name":"self"}],"output":{"name":"combobox"}}],[11,"fmt","","",132,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",132,null],[11,"static_type","","",132,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",132,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new empty `ComboBox`.",132,{"inputs":[],"output":{"name":"combobox"}}],[11,"new_with_area","","Creates a new empty `ComboBox` using `area` to layout cells. ## `area` the `CellArea` to use to layout cell renderers",132,{"inputs":[{"name":"p"}],"output":{"name":"combobox"}}],[11,"new_with_area_and_entry","","Creates a new empty `ComboBox` with an entry.",132,{"inputs":[{"name":"p"}],"output":{"name":"combobox"}}],[11,"new_with_entry","","Creates a new empty `ComboBox` with an entry.",132,{"inputs":[],"output":{"name":"combobox"}}],[11,"new_with_model","","Creates a new `ComboBox` with the model initialized to `model`. ## `model` A `TreeModel`.",132,{"inputs":[{"name":"p"}],"output":{"name":"combobox"}}],[11,"new_with_model_and_entry","","Creates a new empty `ComboBox` with an entry and with the model initialized to `model`. ## `model` A `TreeModel`",132,{"inputs":[{"name":"p"}],"output":{"name":"combobox"}}],[11,"default","","",132,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",133,{"inputs":[{"name":"self"}],"output":{"name":"comboboxtext"}}],[11,"fmt","","",133,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",133,null],[11,"static_type","","",133,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",133,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `ComboBoxText`, which is a `ComboBox` just displaying strings.",133,{"inputs":[],"output":{"name":"comboboxtext"}}],[11,"new_with_entry","","Creates a new `ComboBoxText`, which is a `ComboBox` just displaying strings. The combo box created by this function has an entry.",133,{"inputs":[],"output":{"name":"comboboxtext"}}],[11,"default","","",133,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",134,{"inputs":[{"name":"self"}],"output":{"name":"container"}}],[11,"fmt","","",134,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",134,null],[11,"static_type","","",134,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",134,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",135,{"inputs":[{"name":"self"}],"output":{"name":"cssprovider"}}],[11,"fmt","","",135,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",135,null],[11,"static_type","","",135,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",135,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Returns a newly created `CssProvider`.",135,{"inputs":[],"output":{"name":"cssprovider"}}],[11,"get_default","","Returns the provider containing the style settings used as a fallback for all widgets.",135,{"inputs":[],"output":{"name":"option"}}],[11,"get_named","","Loads a theme from the usual theme paths ## `name` A theme name ## `variant` variant to load, for example, \"dark\", or  `None` for the default",135,{"inputs":[{"name":"str"},{"name":"p"}],"output":{"name":"option"}}],[11,"default","","",135,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",135,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",136,{"inputs":[{"name":"self"}],"output":{"name":"dialog"}}],[11,"fmt","","",136,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",136,null],[11,"static_type","","",136,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",136,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new dialog box.",136,{"inputs":[],"output":{"name":"dialog"}}],[11,"default","","",136,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",137,{"inputs":[{"name":"self"}],"output":{"name":"drawingarea"}}],[11,"fmt","","",137,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",137,null],[11,"static_type","","",137,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",137,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new drawing area.",137,{"inputs":[],"output":{"name":"drawingarea"}}],[11,"default","","",137,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",138,{"inputs":[{"name":"self"}],"output":{"name":"editable"}}],[11,"fmt","","",138,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",138,null],[11,"static_type","","",138,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",138,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",139,{"inputs":[{"name":"self"}],"output":{"name":"entry"}}],[11,"fmt","","",139,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",139,null],[11,"static_type","","",139,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",139,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new entry.",139,{"inputs":[],"output":{"name":"entry"}}],[11,"new_with_buffer","","Creates a new entry with the specified text buffer. ## `buffer` The buffer to use for the new `Entry`.",139,{"inputs":[{"name":"entrybuffer"}],"output":{"name":"entry"}}],[11,"default","","",139,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",140,{"inputs":[{"name":"self"}],"output":{"name":"entrycompletion"}}],[11,"fmt","","",140,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",140,null],[11,"static_type","","",140,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",140,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `EntryCompletion` object.",140,{"inputs":[],"output":{"name":"entrycompletion"}}],[11,"new_with_area","","Creates a new `EntryCompletion` object using the specified `area` to layout cells in the underlying `TreeViewColumn` for the drop-down menu. ## `area` the `CellArea` used to layout cells",140,{"inputs":[{"name":"p"}],"output":{"name":"entrycompletion"}}],[11,"default","","",140,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",141,{"inputs":[{"name":"self"}],"output":{"name":"eventbox"}}],[11,"fmt","","",141,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",141,null],[11,"static_type","","",141,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",141,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `EventBox`.",141,{"inputs":[],"output":{"name":"eventbox"}}],[11,"default","","",141,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",142,{"inputs":[{"name":"self"}],"output":{"name":"eventcontroller"}}],[11,"fmt","","",142,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",142,null],[11,"static_type","","",142,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",142,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",143,{"inputs":[{"name":"self"}],"output":{"name":"expander"}}],[11,"fmt","","",143,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",143,null],[11,"static_type","","",143,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",143,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new expander using `label` as the text of the label. ## `label` the text of the label",143,{"inputs":[{"name":"p"}],"output":{"name":"expander"}}],[11,"new_with_mnemonic","","Creates a new expander using `label` as the text of the label. If characters in `label` are preceded by an underscore, they are underlined. If you need a literal underscore character in a label, use “__” (two underscores). The first underlined character represents a keyboard accelerator called a mnemonic. Pressing Alt and that key activates the button. ## `label` the text of the label with an underscore  in front of the mnemonic character",143,{"inputs":[{"name":"str"}],"output":{"name":"expander"}}],[11,"clone","","",144,{"inputs":[{"name":"self"}],"output":{"name":"filechooser"}}],[11,"fmt","","",144,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",144,null],[11,"static_type","","",144,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",144,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",145,{"inputs":[{"name":"self"}],"output":{"name":"filechooserbutton"}}],[11,"fmt","","",145,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",145,null],[11,"static_type","","",145,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",145,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","",145,{"inputs":[{"name":"str"},{"name":"filechooseraction"}],"output":{"name":"filechooserbutton"}}],[11,"new_with_dialog","","",145,{"inputs":[{"name":"p"}],"output":{"name":"filechooserbutton"}}],[11,"clone","","",146,{"inputs":[{"name":"self"}],"output":{"name":"filechooserdialog"}}],[11,"fmt","","",146,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",146,null],[11,"static_type","","",146,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",146,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",147,{"inputs":[{"name":"self"}],"output":{"name":"filechooserwidget"}}],[11,"fmt","","",147,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",147,null],[11,"static_type","","",147,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",147,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `FileChooserWidget`. This is a file chooser widget that can be embedded in custom windows, and it is the same widget that is used by `FileChooserDialog`. ## `action` Open or save mode for the widget",147,{"inputs":[{"name":"filechooseraction"}],"output":{"name":"filechooserwidget"}}],[11,"clone","","",148,{"inputs":[{"name":"self"}],"output":{"name":"filefilter"}}],[11,"fmt","","",148,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",148,null],[11,"static_type","","",148,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",148,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `FileFilter` with no rules added to it. Such a filter doesn’t accept any files, so is not particularly useful until you add rules with `FileFilter::add_mime_type`, `FileFilter::add_pattern`, or `FileFilter::add_custom`. To create a filter that accepts any file, use:",148,{"inputs":[],"output":{"name":"filefilter"}}],[11,"new_from_gvariant","","",148,{"inputs":[{"name":"variant"}],"output":{"name":"filefilter"}}],[11,"default","","",148,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",149,{"inputs":[{"name":"self"}],"output":{"name":"fixed"}}],[11,"fmt","","",149,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",149,null],[11,"static_type","","",149,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",149,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Fixed`.",149,{"inputs":[],"output":{"name":"fixed"}}],[11,"default","","",149,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",150,{"inputs":[{"name":"self"}],"output":{"name":"flowbox"}}],[11,"fmt","","",150,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",150,null],[11,"static_type","","",150,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",150,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a `FlowBox`.",150,{"inputs":[],"output":{"name":"flowbox"}}],[11,"default","","",150,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",151,{"inputs":[{"name":"self"}],"output":{"name":"flowboxchild"}}],[11,"fmt","","",151,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",151,null],[11,"static_type","","",151,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",151,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `FlowBoxChild`, to be used as a child of a `FlowBox`.",151,{"inputs":[],"output":{"name":"flowboxchild"}}],[11,"default","","",151,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",152,{"inputs":[{"name":"self"}],"output":{"name":"fontbutton"}}],[11,"fmt","","",152,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",152,null],[11,"static_type","","",152,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",152,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new font picker widget.",152,{"inputs":[],"output":{"name":"fontbutton"}}],[11,"new_with_font","","Creates a new font picker widget. ## `fontname` Name of font to display in font chooser dialog",152,{"inputs":[{"name":"str"}],"output":{"name":"fontbutton"}}],[11,"default","","",152,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",153,{"inputs":[{"name":"self"}],"output":{"name":"fontchooser"}}],[11,"fmt","","",153,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",153,null],[11,"static_type","","",153,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",153,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",154,{"inputs":[{"name":"self"}],"output":{"name":"fontchooserdialog"}}],[11,"fmt","","",154,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",154,null],[11,"static_type","","",154,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",154,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `FontChooserDialog`. ## `title` Title of the dialog, or `None` ## `parent` Transient parent of the dialog, or `None`",154,{"inputs":[{"name":"p"},{"name":"r"}],"output":{"name":"fontchooserdialog"}}],[11,"clone","","",155,{"inputs":[{"name":"self"}],"output":{"name":"fontchooserwidget"}}],[11,"fmt","","",155,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",155,null],[11,"static_type","","",155,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",155,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `FontChooserWidget`.",155,{"inputs":[],"output":{"name":"fontchooserwidget"}}],[11,"default","","",155,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",156,{"inputs":[{"name":"self"}],"output":{"name":"frame"}}],[11,"fmt","","",156,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",156,null],[11,"static_type","","",156,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",156,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Frame`, with optional label `label`. If `label` is `None`, the label is omitted. ## `label` the text to use as the label of the frame",156,{"inputs":[{"name":"p"}],"output":{"name":"frame"}}],[11,"clone","","",157,{"inputs":[{"name":"self"}],"output":{"name":"glarea"}}],[11,"fmt","","",157,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",157,null],[11,"static_type","","",157,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",157,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `GLArea` widget.",157,{"inputs":[],"output":{"name":"glarea"}}],[11,"default","","",157,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",158,{"inputs":[{"name":"self"}],"output":{"name":"gesture"}}],[11,"fmt","","",158,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",158,null],[11,"static_type","","",158,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",158,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",159,{"inputs":[{"name":"self"}],"output":{"name":"gesturedrag"}}],[11,"fmt","","",159,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",159,null],[11,"static_type","","",159,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",159,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Returns a newly created `Gesture` that recognizes drags.",159,{"inputs":[{"name":"p"}],"output":{"name":"gesturedrag"}}],[11,"clone","","",160,{"inputs":[{"name":"self"}],"output":{"name":"gesturelongpress"}}],[11,"fmt","","",160,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",160,null],[11,"static_type","","",160,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",160,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Returns a newly created `Gesture` that recognizes long presses.",160,{"inputs":[{"name":"p"}],"output":{"name":"gesturelongpress"}}],[11,"clone","","",161,{"inputs":[{"name":"self"}],"output":{"name":"gesturemultipress"}}],[11,"fmt","","",161,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",161,null],[11,"static_type","","",161,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",161,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Returns a newly created `Gesture` that recognizes single and multiple presses.",161,{"inputs":[{"name":"p"}],"output":{"name":"gesturemultipress"}}],[11,"clone","","",162,{"inputs":[{"name":"self"}],"output":{"name":"gesturepan"}}],[11,"fmt","","",162,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",162,null],[11,"static_type","","",162,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",162,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Returns a newly created `Gesture` that recognizes pan gestures.",162,{"inputs":[{"name":"p"},{"name":"orientation"}],"output":{"name":"gesturepan"}}],[11,"clone","","",163,{"inputs":[{"name":"self"}],"output":{"name":"gesturerotate"}}],[11,"fmt","","",163,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",163,null],[11,"static_type","","",163,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",163,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Returns a newly created `Gesture` that recognizes 2-touch rotation gestures.",163,{"inputs":[{"name":"p"}],"output":{"name":"gesturerotate"}}],[11,"clone","","",164,{"inputs":[{"name":"self"}],"output":{"name":"gesturesingle"}}],[11,"fmt","","",164,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",164,null],[11,"static_type","","",164,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",164,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",165,{"inputs":[{"name":"self"}],"output":{"name":"gestureswipe"}}],[11,"fmt","","",165,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",165,null],[11,"static_type","","",165,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",165,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Returns a newly created `Gesture` that recognizes swipes.",165,{"inputs":[{"name":"p"}],"output":{"name":"gestureswipe"}}],[11,"clone","","",166,{"inputs":[{"name":"self"}],"output":{"name":"gesturezoom"}}],[11,"fmt","","",166,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",166,null],[11,"static_type","","",166,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",166,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Returns a newly created `Gesture` that recognizes zoom in/out gestures (usually known as pinch/zoom).",166,{"inputs":[{"name":"p"}],"output":{"name":"gesturezoom"}}],[11,"clone","","",167,{"inputs":[{"name":"self"}],"output":{"name":"grid"}}],[11,"fmt","","",167,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",167,null],[11,"static_type","","",167,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",167,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new grid widget.",167,{"inputs":[],"output":{"name":"grid"}}],[11,"default","","",167,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",168,{"inputs":[{"name":"self"}],"output":{"name":"headerbar"}}],[11,"fmt","","",168,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",168,null],[11,"static_type","","",168,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",168,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `HeaderBar` widget.",168,{"inputs":[],"output":{"name":"headerbar"}}],[11,"default","","",168,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",169,{"inputs":[{"name":"self"}],"output":{"name":"imcontext"}}],[11,"fmt","","",169,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",169,null],[11,"static_type","","",169,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",169,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",170,{"inputs":[{"name":"self"}],"output":{"name":"immulticontext"}}],[11,"fmt","","",170,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",170,null],[11,"static_type","","",170,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",170,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","",170,{"inputs":[],"output":{"name":"immulticontext"}}],[11,"default","","",170,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",171,{"inputs":[{"name":"self"}],"output":{"name":"iconfactory"}}],[11,"fmt","","",171,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",171,null],[11,"static_type","","",171,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",171,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","",171,{"inputs":[],"output":{"name":"iconfactory"}}],[11,"lookup_default","","",171,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[11,"default","","",171,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",172,{"inputs":[{"name":"self"}],"output":{"name":"iconinfo"}}],[11,"fmt","","",172,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",172,null],[11,"static_type","","",172,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",172,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new_for_pixbuf","","",172,{"inputs":[{"name":"icontheme"},{"name":"pixbuf"}],"output":{"name":"iconinfo"}}],[11,"clone","","",173,{"inputs":[{"name":"self"}],"output":{"name":"icontheme"}}],[11,"fmt","","",173,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",173,null],[11,"static_type","","",173,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",173,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","",173,{"inputs":[],"output":{"name":"icontheme"}}],[11,"add_builtin_icon","","",173,{"inputs":[{"name":"str"},{"name":"i32"},{"name":"pixbuf"}],"output":null}],[11,"get_default","","",173,{"inputs":[],"output":{"name":"option"}}],[11,"get_for_screen","","",173,{"inputs":[{"name":"screen"}],"output":{"name":"option"}}],[11,"default","","",173,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",174,{"inputs":[{"name":"self"}],"output":{"name":"iconview"}}],[11,"fmt","","",174,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",174,null],[11,"static_type","","",174,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",174,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `IconView` widget",174,{"inputs":[],"output":{"name":"iconview"}}],[11,"new_with_area","","Creates a new `IconView` widget using the specified `area` to layout cells inside the icons. ## `area` the `CellArea` to use to layout cells",174,{"inputs":[{"name":"p"}],"output":{"name":"iconview"}}],[11,"new_with_model","","Creates a new `IconView` widget with the model `model`. ## `model` The model.",174,{"inputs":[{"name":"p"}],"output":{"name":"iconview"}}],[11,"default","","",174,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",175,{"inputs":[{"name":"self"}],"output":{"name":"image"}}],[11,"fmt","","",175,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",175,null],[11,"static_type","","",175,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",175,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new empty `Image` widget.",175,{"inputs":[],"output":{"name":"image"}}],[11,"new_from_animation","","Creates a `Image` displaying the given animation. The `Image` does not assume a reference to the animation; you still need to unref it if you own references. `Image` will add its own reference rather than adopting yours.",175,{"inputs":[{"name":"p"}],"output":{"name":"image"}}],[11,"new_from_file","","Creates a new `Image` displaying the file `filename`. If the file isn’t found or can’t be loaded, the resulting `Image` will display a “broken image” icon. This function never returns `None`, it always returns a valid `Image` widget.",175,{"inputs":[{"name":"p"}],"output":{"name":"image"}}],[11,"new_from_gicon","","Creates a `Image` displaying an icon from the current icon theme. If the icon name isn’t known, a “broken image” icon will be displayed instead. If the current icon theme is changed, the icon will be updated appropriately. ## `icon` an icon ## `size` a stock icon size",175,{"inputs":[{"name":"p"},{"name":"i32"}],"output":{"name":"image"}}],[11,"new_from_icon_name","","Creates a `Image` displaying an icon from the current icon theme. If the icon name isn’t known, a “broken image” icon will be displayed instead. If the current icon theme is changed, the icon will be updated appropriately. ## `icon_name` an icon name ## `size` a stock icon size",175,{"inputs":[{"name":"str"},{"name":"i32"}],"output":{"name":"image"}}],[11,"new_from_icon_set","","Creates a `Image` displaying an icon set. Sample stock sizes are `IconSize::Menu`, `IconSize::SmallToolbar`. Instead of using this function, usually it’s better to create a `IconFactory`, put your icon sets in the icon factory, add the icon factory to the list of default factories with `IconFactory::add_default`, and then use `Image::new_from_stock`. This will allow themes to override the icon you ship with your application.",175,{"inputs":[{"name":"iconset"},{"name":"i32"}],"output":{"name":"image"}}],[11,"new_from_pixbuf","","Creates a new `Image` displaying `pixbuf`. The `Image` does not assume a reference to the pixbuf; you still need to unref it if you own references. `Image` will add its own reference rather than adopting yours.",175,{"inputs":[{"name":"p"}],"output":{"name":"image"}}],[11,"new_from_resource","","Creates a new `Image` displaying the resource file `resource_path`. If the file isn’t found or can’t be loaded, the resulting `Image` will display a “broken image” icon. This function never returns `None`, it always returns a valid `Image` widget.",175,{"inputs":[{"name":"str"}],"output":{"name":"image"}}],[11,"new_from_stock","","Creates a `Image` displaying a stock icon. Sample stock icon names are `GTK_STOCK_OPEN`, `GTK_STOCK_QUIT`. Sample stock sizes are `IconSize::Menu`, `IconSize::SmallToolbar`. If the stock icon name isn’t known, the image will be empty. You can register your own stock icon names, see `IconFactory::add_default` and `IconFactory::add`.",175,{"inputs":[{"name":"str"},{"name":"i32"}],"output":{"name":"image"}}],[11,"new_from_surface","","Creates a new `Image` displaying `surface`. The `Image` does not assume a reference to the surface; you still need to unref it if you own references. `Image` will add its own reference rather than adopting yours.",175,{"inputs":[{"name":"p"}],"output":{"name":"image"}}],[11,"default","","",175,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",176,{"inputs":[{"name":"self"}],"output":{"name":"imagemenuitem"}}],[11,"fmt","","",176,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",176,null],[11,"static_type","","",176,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",176,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `ImageMenuItem` with an empty label.",176,{"inputs":[],"output":{"name":"imagemenuitem"}}],[11,"new_from_stock","","Creates a new `ImageMenuItem` containing the image and text from a stock item. Some stock ids have preprocessor macros like `GTK_STOCK_OK` and `GTK_STOCK_APPLY`.",176,{"inputs":[{"name":"str"},{"name":"p"}],"output":{"name":"imagemenuitem"}}],[11,"new_with_label","","Creates a new `ImageMenuItem` containing a label.",176,{"inputs":[{"name":"str"}],"output":{"name":"imagemenuitem"}}],[11,"new_with_mnemonic","","Creates a new `ImageMenuItem` containing a label. The label will be created using `Label::new_with_mnemonic`, so underscores in `label` indicate the mnemonic for the menu item.",176,{"inputs":[{"name":"str"}],"output":{"name":"imagemenuitem"}}],[11,"default","","",176,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",177,{"inputs":[{"name":"self"}],"output":{"name":"infobar"}}],[11,"fmt","","",177,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",177,null],[11,"static_type","","",177,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",177,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `InfoBar` object.",177,{"inputs":[],"output":{"name":"infobar"}}],[11,"default","","",177,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",178,{"inputs":[{"name":"self"}],"output":{"name":"label"}}],[11,"fmt","","",178,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",178,null],[11,"static_type","","",178,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",178,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new label with the given text inside it. You can pass `None` to get an empty label widget. ## `str` The text of the label",178,{"inputs":[{"name":"p"}],"output":{"name":"label"}}],[11,"new_with_mnemonic","","Creates a new `Label`, containing the text in `str`.",178,{"inputs":[{"name":"p"}],"output":{"name":"label"}}],[11,"clone","","",179,{"inputs":[{"name":"self"}],"output":{"name":"layout"}}],[11,"fmt","","",179,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",179,null],[11,"static_type","","",179,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",179,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Layout`. Unless you have a specific adjustment you’d like the layout to use for scrolling, pass `None` for `hadjustment` and `vadjustment`. ## `hadjustment` horizontal scroll adjustment, or `None` ## `vadjustment` vertical scroll adjustment, or `None`",179,{"inputs":[{"name":"p"},{"name":"q"}],"output":{"name":"layout"}}],[11,"clone","","",180,{"inputs":[{"name":"self"}],"output":{"name":"levelbar"}}],[11,"fmt","","",180,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",180,null],[11,"static_type","","",180,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",180,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `LevelBar`.",180,{"inputs":[],"output":{"name":"levelbar"}}],[11,"new_for_interval","","Utility constructor that creates a new `LevelBar` for the specified interval.",180,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"levelbar"}}],[11,"default","","",180,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",181,{"inputs":[{"name":"self"}],"output":{"name":"linkbutton"}}],[11,"fmt","","",181,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",181,null],[11,"static_type","","",181,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",181,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `LinkButton` with the URI as its text. ## `uri` a valid URI",181,{"inputs":[{"name":"str"}],"output":{"name":"linkbutton"}}],[11,"new_with_label","","Creates a new `LinkButton` containing a label. ## `uri` a valid URI ## `label` the text of the button",181,{"inputs":[{"name":"str"},{"name":"p"}],"output":{"name":"linkbutton"}}],[11,"clone","","",182,{"inputs":[{"name":"self"}],"output":{"name":"listbox"}}],[11,"fmt","","",182,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",182,null],[11,"static_type","","",182,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",182,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `ListBox` container.",182,{"inputs":[],"output":{"name":"listbox"}}],[11,"default","","",182,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",183,{"inputs":[{"name":"self"}],"output":{"name":"listboxrow"}}],[11,"fmt","","",183,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",183,null],[11,"static_type","","",183,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",183,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `ListBoxRow`, to be used as a child of a `ListBox`.",183,{"inputs":[],"output":{"name":"listboxrow"}}],[11,"default","","",183,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",184,{"inputs":[{"name":"self"}],"output":{"name":"liststore"}}],[11,"fmt","","",184,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",184,null],[11,"static_type","","",184,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",184,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",185,{"inputs":[{"name":"self"}],"output":{"name":"menu"}}],[11,"fmt","","",185,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",185,null],[11,"static_type","","",185,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",185,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Menu`",185,{"inputs":[],"output":{"name":"menu"}}],[11,"new_from_model","","Creates a `Menu` and populates it with menu items and submenus according to `model`.",185,{"inputs":[{"name":"p"}],"output":{"name":"menu"}}],[11,"get_for_attach_widget","","Returns a list of the menus which are attached to this widget. This list is owned by GTK+ and must not be modified. ## `widget` a `Widget`",185,{"inputs":[{"name":"p"}],"output":{"name":"vec"}}],[11,"default","","",185,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",186,{"inputs":[{"name":"self"}],"output":{"name":"menubar"}}],[11,"fmt","","",186,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",186,null],[11,"static_type","","",186,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",186,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `MenuBar`",186,{"inputs":[],"output":{"name":"menubar"}}],[11,"new_from_model","","Creates a new `MenuBar` and populates it with menu items and submenus according to `model`.",186,{"inputs":[{"name":"p"}],"output":{"name":"menubar"}}],[11,"default","","",186,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",187,{"inputs":[{"name":"self"}],"output":{"name":"menubutton"}}],[11,"fmt","","",187,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",187,null],[11,"static_type","","",187,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",187,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `MenuButton` widget with downwards-pointing arrow as the only child. You can replace the child widget with another `Widget` should you wish to.",187,{"inputs":[],"output":{"name":"menubutton"}}],[11,"default","","",187,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",188,{"inputs":[{"name":"self"}],"output":{"name":"menuitem"}}],[11,"fmt","","",188,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",188,null],[11,"static_type","","",188,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",188,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `MenuItem`.",188,{"inputs":[],"output":{"name":"menuitem"}}],[11,"new_with_label","","Creates a new `MenuItem` whose child is a `Label`. ## `label` the text for the label",188,{"inputs":[{"name":"str"}],"output":{"name":"menuitem"}}],[11,"new_with_mnemonic","","Creates a new `MenuItem` containing a label.",188,{"inputs":[{"name":"str"}],"output":{"name":"menuitem"}}],[11,"default","","",188,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",189,{"inputs":[{"name":"self"}],"output":{"name":"menushell"}}],[11,"fmt","","",189,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",189,null],[11,"static_type","","",189,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",189,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",190,{"inputs":[{"name":"self"}],"output":{"name":"menutoolbutton"}}],[11,"fmt","","",190,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",190,null],[11,"static_type","","",190,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",190,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `MenuToolButton` using `icon_widget` as icon and `label` as label. ## `icon_widget` a widget that will be used as icon widget, or `None` ## `label` a string that will be used as label, or `None`",190,{"inputs":[{"name":"q"},{"name":"r"}],"output":{"name":"menutoolbutton"}}],[11,"new_from_stock","","Creates a new `MenuToolButton`. The new `MenuToolButton` will contain an icon and label from the stock item indicated by `stock_id`.",190,{"inputs":[{"name":"str"}],"output":{"name":"menutoolbutton"}}],[11,"clone","","",191,{"inputs":[{"name":"self"}],"output":{"name":"messagedialog"}}],[11,"fmt","","",191,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",191,null],[11,"static_type","","",191,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",191,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",192,{"inputs":[{"name":"self"}],"output":{"name":"misc"}}],[11,"fmt","","",192,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",192,null],[11,"static_type","","",192,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",192,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",193,{"inputs":[{"name":"self"}],"output":{"name":"modelbutton"}}],[11,"fmt","","",193,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",193,null],[11,"static_type","","",193,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",193,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","",193,{"inputs":[],"output":{"name":"modelbutton"}}],[11,"default","","",193,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",194,{"inputs":[{"name":"self"}],"output":{"name":"notebook"}}],[11,"fmt","","",194,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",194,null],[11,"static_type","","",194,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",194,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Notebook` widget with no pages.",194,{"inputs":[],"output":{"name":"notebook"}}],[11,"default","","",194,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",195,{"inputs":[{"name":"self"}],"output":{"name":"orientable"}}],[11,"fmt","","",195,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",195,null],[11,"static_type","","",195,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",195,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",196,{"inputs":[{"name":"self"}],"output":{"name":"overlay"}}],[11,"fmt","","",196,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",196,null],[11,"static_type","","",196,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",196,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Overlay`.",196,{"inputs":[],"output":{"name":"overlay"}}],[11,"default","","",196,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",197,{"inputs":[{"name":"self"}],"output":{"name":"pagesetup"}}],[11,"fmt","","",197,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",197,null],[11,"static_type","","",197,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",197,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `PageSetup`.",197,{"inputs":[],"output":{"name":"pagesetup"}}],[11,"new_from_file","","Reads the page setup from the file `file_name`. Returns a new `PageSetup` object with the restored page setup, or `None` if an error occurred. See `PageSetup::to_file`. ## `file_name` the filename to read the page setup from",197,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"new_from_gvariant","","",197,{"inputs":[{"name":"variant"}],"output":{"name":"pagesetup"}}],[11,"new_from_key_file","","",197,{"inputs":[{"name":"keyfile"},{"name":"p"}],"output":{"name":"result"}}],[11,"default","","",197,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",198,{"inputs":[{"name":"self"}],"output":{"name":"paned"}}],[11,"fmt","","",198,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",198,null],[11,"static_type","","",198,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",198,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Paned` widget. ## `orientation` the paned’s orientation.",198,{"inputs":[{"name":"orientation"}],"output":{"name":"paned"}}],[11,"clone","","",199,{"inputs":[{"name":"self"}],"output":{"name":"placessidebar"}}],[11,"fmt","","",199,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",199,null],[11,"static_type","","",199,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",199,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `PlacesSidebar` widget.",199,{"inputs":[],"output":{"name":"placessidebar"}}],[11,"default","","",199,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",200,{"inputs":[{"name":"self"}],"output":{"name":"popover"}}],[11,"fmt","","",200,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",200,null],[11,"static_type","","",200,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",200,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new popover to point to `relative_to`",200,{"inputs":[{"name":"q"}],"output":{"name":"popover"}}],[11,"new_from_model","","Creates a `Popover` and populates it according to `model`. The popover is pointed to the `relative_to` widget.",200,{"inputs":[{"name":"q"},{"name":"r"}],"output":{"name":"popover"}}],[11,"clone","","",201,{"inputs":[{"name":"self"}],"output":{"name":"popovermenu"}}],[11,"fmt","","",201,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",201,null],[11,"static_type","","",201,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",201,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new popover menu.",201,{"inputs":[],"output":{"name":"popovermenu"}}],[11,"default","","",201,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",202,{"inputs":[{"name":"self"}],"output":{"name":"printcontext"}}],[11,"fmt","","",202,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",202,null],[11,"static_type","","",202,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",202,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",203,{"inputs":[{"name":"self"}],"output":{"name":"printsettings"}}],[11,"fmt","","",203,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",203,null],[11,"static_type","","",203,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",203,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `PrintSettings` object.",203,{"inputs":[],"output":{"name":"printsettings"}}],[11,"new_from_file","","Reads the print settings from `file_name`. Returns a new `PrintSettings` object with the restored settings, or `None` if an error occurred. If the file could not be loaded then error is set to either a `glib::FileError` or `glib::KeyFileError`. See `PrintSettings::to_file`. ## `file_name` the filename to read the settings from",203,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"new_from_gvariant","","",203,{"inputs":[{"name":"variant"}],"output":{"name":"printsettings"}}],[11,"new_from_key_file","","",203,{"inputs":[{"name":"keyfile"},{"name":"p"}],"output":{"name":"result"}}],[11,"default","","",203,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",204,{"inputs":[{"name":"self"}],"output":{"name":"progressbar"}}],[11,"fmt","","",204,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",204,null],[11,"static_type","","",204,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",204,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `ProgressBar`.",204,{"inputs":[],"output":{"name":"progressbar"}}],[11,"default","","",204,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",205,{"inputs":[{"name":"self"}],"output":{"name":"radiobutton"}}],[11,"fmt","","",205,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",205,null],[11,"static_type","","",205,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",205,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new_from_widget","","Creates a new `RadioButton`, adding it to the same group as `radio_group_member`. As with `RadioButton::new`, a widget should be packed into the radio button. ## `radio_group_member` an existing `RadioButton`.",205,{"inputs":[{"name":"radiobutton"}],"output":{"name":"radiobutton"}}],[11,"new_with_label_from_widget","","Creates a new `RadioButton` with a text label, adding it to the same group as `radio_group_member`. ## `radio_group_member` widget to get radio group from or `None` ## `label` a text string to display next to the radio button.",205,{"inputs":[{"name":"radiobutton"},{"name":"str"}],"output":{"name":"radiobutton"}}],[11,"new_with_mnemonic_from_widget","","Creates a new `RadioButton` containing a label. The label will be created using `Label::new_with_mnemonic`, so underscores in `label` indicate the mnemonic for the button. ## `radio_group_member` widget to get radio group from or `None` ## `label` the text of the button, with an underscore in front of the  mnemonic character",205,{"inputs":[{"name":"radiobutton"},{"name":"str"}],"output":{"name":"radiobutton"}}],[11,"clone","","",206,{"inputs":[{"name":"self"}],"output":{"name":"radiomenuitem"}}],[11,"fmt","","",206,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",206,null],[11,"static_type","","",206,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",206,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new_from_widget","","",206,{"inputs":[{"name":"radiomenuitem"}],"output":{"name":"radiomenuitem"}}],[11,"new_with_label_from_widget","","",206,{"inputs":[{"name":"radiomenuitem"},{"name":"p"}],"output":{"name":"radiomenuitem"}}],[11,"new_with_mnemonic_from_widget","","",206,{"inputs":[{"name":"radiomenuitem"},{"name":"p"}],"output":{"name":"radiomenuitem"}}],[11,"clone","","",207,{"inputs":[{"name":"self"}],"output":{"name":"range"}}],[11,"fmt","","",207,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",207,null],[11,"static_type","","",207,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",207,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",208,{"inputs":[{"name":"self"}],"output":{"name":"recentchooser"}}],[11,"fmt","","",208,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",208,null],[11,"static_type","","",208,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",208,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",209,{"inputs":[{"name":"self"}],"output":{"name":"recentchooserdialog"}}],[11,"fmt","","",209,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",209,null],[11,"static_type","","",209,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",209,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",210,{"inputs":[{"name":"self"}],"output":{"name":"recentchooserwidget"}}],[11,"fmt","","",210,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",210,null],[11,"static_type","","",210,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",210,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `RecentChooserWidget` object. This is an embeddable widget used to access the recently used resources list.",210,{"inputs":[],"output":{"name":"recentchooserwidget"}}],[11,"new_for_manager","","Creates a new `RecentChooserWidget` with a specified recent manager.",210,{"inputs":[{"name":"recentmanager"}],"output":{"name":"recentchooserwidget"}}],[11,"default","","",210,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",211,{"inputs":[{"name":"self"}],"output":{"name":"recentfilter"}}],[11,"fmt","","",211,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",211,null],[11,"static_type","","",211,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",211,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `RecentFilter` with no rules added to it. Such filter does not accept any recently used resources, so is not particularly useful until you add rules with `RecentFilter::add_pattern`, `RecentFilter::add_mime_type`, `RecentFilter::add_application`, `RecentFilter::add_age`. To create a filter that accepts any recently used resource, use:",211,{"inputs":[],"output":{"name":"recentfilter"}}],[11,"default","","",211,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",212,{"inputs":[{"name":"self"}],"output":{"name":"recentmanager"}}],[11,"fmt","","",212,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",212,null],[11,"static_type","","",212,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",212,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new recent manager object. Recent manager objects are used to handle the list of recently used resources. A `RecentManager` object monitors the recently used resources list, and emits the “changed” signal each time something inside the list changes.",212,{"inputs":[],"output":{"name":"recentmanager"}}],[11,"get_default","","Gets a unique instance of `RecentManager`, that you can share in your application without caring about memory management.",212,{"inputs":[],"output":{"name":"option"}}],[11,"default","","",212,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",213,{"inputs":[{"name":"self"}],"output":{"name":"revealer"}}],[11,"fmt","","",213,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",213,null],[11,"static_type","","",213,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",213,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Revealer`.",213,{"inputs":[],"output":{"name":"revealer"}}],[11,"default","","",213,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",214,{"inputs":[{"name":"self"}],"output":{"name":"scale"}}],[11,"fmt","","",214,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",214,null],[11,"static_type","","",214,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",214,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Scale`. ## `orientation` the scale’s orientation. ## `adjustment` the `Adjustment` which sets the range  of the scale, or `None` to create a new adjustment.",214,{"inputs":[{"name":"orientation"},{"name":"p"}],"output":{"name":"scale"}}],[11,"new_with_range","","Creates a new scale widget with the given orientation that lets the user input a number between `min` and `max` (including `min` and `max`) with the increment `step`. `step` must be nonzero; it’s the distance the slider moves when using the arrow keys to adjust the scale value.",214,{"inputs":[{"name":"orientation"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"scale"}}],[11,"clone","","",215,{"inputs":[{"name":"self"}],"output":{"name":"scalebutton"}}],[11,"fmt","","",215,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",215,null],[11,"static_type","","",215,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",215,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a `ScaleButton`, with a range between `min` and `max`, with a stepping of `step`. ## `size` a stock icon size ## `min` the minimum value of the scale (usually 0) ## `max` the maximum value of the scale (usually 100) ## `step` the stepping of value when a scroll-wheel event,  or up/down arrow event occurs (usually 2) ## `icons` a `None`-terminated  array of icon names, or `None` if you want to set the list  later with `ScaleButtonExt::set_icons`",215,null],[11,"clone","","",216,{"inputs":[{"name":"self"}],"output":{"name":"scrollable"}}],[11,"fmt","","",216,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",216,null],[11,"static_type","","",216,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",216,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",217,{"inputs":[{"name":"self"}],"output":{"name":"scrollbar"}}],[11,"fmt","","",217,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",217,null],[11,"static_type","","",217,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",217,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new scrollbar with the given orientation. ## `orientation` the scrollbar’s orientation. ## `adjustment` the `Adjustment` to use, or `None` to create a new adjustment.",217,{"inputs":[{"name":"orientation"},{"name":"p"}],"output":{"name":"scrollbar"}}],[11,"clone","","",218,{"inputs":[{"name":"self"}],"output":{"name":"scrolledwindow"}}],[11,"fmt","","",218,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",218,null],[11,"static_type","","",218,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",218,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new scrolled window.",218,{"inputs":[{"name":"p"},{"name":"q"}],"output":{"name":"scrolledwindow"}}],[11,"clone","","",219,{"inputs":[{"name":"self"}],"output":{"name":"searchbar"}}],[11,"fmt","","",219,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",219,null],[11,"static_type","","",219,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",219,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a `SearchBar`. You will need to tell it about which widget is going to be your text entry using `SearchBar::connect_entry`.",219,{"inputs":[],"output":{"name":"searchbar"}}],[11,"default","","",219,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",220,{"inputs":[{"name":"self"}],"output":{"name":"searchentry"}}],[11,"fmt","","",220,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",220,null],[11,"static_type","","",220,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",220,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a `SearchEntry`, with a find icon when the search field is empty, and a clear icon when it isn't.",220,{"inputs":[],"output":{"name":"searchentry"}}],[11,"default","","",220,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",221,{"inputs":[{"name":"self"}],"output":{"name":"separator"}}],[11,"fmt","","",221,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",221,null],[11,"static_type","","",221,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",221,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Separator` with the given orientation. ## `orientation` the separator’s orientation.",221,{"inputs":[{"name":"orientation"}],"output":{"name":"separator"}}],[11,"clone","","",222,{"inputs":[{"name":"self"}],"output":{"name":"separatormenuitem"}}],[11,"fmt","","",222,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",222,null],[11,"static_type","","",222,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",222,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `SeparatorMenuItem`.",222,{"inputs":[],"output":{"name":"separatormenuitem"}}],[11,"default","","",222,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",223,{"inputs":[{"name":"self"}],"output":{"name":"separatortoolitem"}}],[11,"fmt","","",223,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",223,null],[11,"static_type","","",223,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",223,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Create a new `SeparatorToolItem`",223,{"inputs":[],"output":{"name":"separatortoolitem"}}],[11,"default","","",223,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",224,{"inputs":[{"name":"self"}],"output":{"name":"settings"}}],[11,"fmt","","",224,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",224,null],[11,"static_type","","",224,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",224,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"get_default","","Gets the `Settings` object for the default GDK screen, creating it if necessary. See `Settings::get_for_screen`.",224,{"inputs":[],"output":{"name":"option"}}],[11,"get_for_screen","","Gets the `Settings` object for `screen`, creating it if necessary. ## `screen` a `gdk::Screen`.",224,{"inputs":[{"name":"screen"}],"output":{"name":"option"}}],[11,"clone","","",225,{"inputs":[{"name":"self"}],"output":{"name":"shortcutswindow"}}],[11,"fmt","","",225,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",225,null],[11,"static_type","","",225,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",225,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",226,{"inputs":[{"name":"self"}],"output":{"name":"sizegroup"}}],[11,"fmt","","",226,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",226,null],[11,"static_type","","",226,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",226,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Create a new `SizeGroup`. ## `mode` the mode for the new size group.",226,{"inputs":[{"name":"sizegroupmode"}],"output":{"name":"sizegroup"}}],[11,"clone","","",227,{"inputs":[{"name":"self"}],"output":{"name":"spinbutton"}}],[11,"fmt","","",227,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",227,null],[11,"static_type","","",227,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",227,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `SpinButton`. ## `adjustment` the `Adjustment` object that this spin  button should use, or `None` ## `climb_rate` specifies how much the spin button changes when an arrow  is clicked on ## `digits` the number of decimal places to display",227,{"inputs":[{"name":"p"},{"name":"f64"},{"name":"u32"}],"output":{"name":"spinbutton"}}],[11,"new_with_range","","This is a convenience constructor that allows creation of a numeric `SpinButton` without manually creating an adjustment. The value is initially set to the minimum value and a page increment of 10 * `step` is the default. The precision of the spin button is equivalent to the precision of `step`.",227,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"spinbutton"}}],[11,"clone","","",228,{"inputs":[{"name":"self"}],"output":{"name":"spinner"}}],[11,"fmt","","",228,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",228,null],[11,"static_type","","",228,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",228,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Returns a new spinner widget. Not yet started.",228,{"inputs":[],"output":{"name":"spinner"}}],[11,"default","","",228,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",229,{"inputs":[{"name":"self"}],"output":{"name":"stack"}}],[11,"fmt","","",229,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",229,null],[11,"static_type","","",229,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",229,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Stack` container.",229,{"inputs":[],"output":{"name":"stack"}}],[11,"default","","",229,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",230,{"inputs":[{"name":"self"}],"output":{"name":"stacksidebar"}}],[11,"fmt","","",230,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",230,null],[11,"static_type","","",230,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",230,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new sidebar.",230,{"inputs":[],"output":{"name":"stacksidebar"}}],[11,"default","","",230,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",231,{"inputs":[{"name":"self"}],"output":{"name":"stackswitcher"}}],[11,"fmt","","",231,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",231,null],[11,"static_type","","",231,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",231,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Create a new `StackSwitcher`.",231,{"inputs":[],"output":{"name":"stackswitcher"}}],[11,"default","","",231,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",232,{"inputs":[{"name":"self"}],"output":{"name":"statusicon"}}],[11,"fmt","","",232,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",232,null],[11,"static_type","","",232,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",232,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates an empty status icon object.",232,{"inputs":[],"output":{"name":"statusicon"}}],[11,"new_from_file","","Creates a status icon displaying the file `filename`.",232,{"inputs":[{"name":"p"}],"output":{"name":"statusicon"}}],[11,"new_from_gicon","","Creates a status icon displaying a `gio::Icon`. If the icon is a themed icon, it will be updated when the theme changes.",232,{"inputs":[{"name":"p"}],"output":{"name":"statusicon"}}],[11,"new_from_icon_name","","Creates a status icon displaying an icon from the current icon theme. If the current icon theme is changed, the icon will be updated appropriately.",232,{"inputs":[{"name":"str"}],"output":{"name":"statusicon"}}],[11,"new_from_pixbuf","","Creates a status icon displaying `pixbuf`.",232,{"inputs":[{"name":"pixbuf"}],"output":{"name":"statusicon"}}],[11,"new_from_stock","","Creates a status icon displaying a stock icon. Sample stock icon names are `GTK_STOCK_OPEN`, `GTK_STOCK_QUIT`. You can register your own stock icon names, see `IconFactory::add_default` and `IconFactory::add`.",232,{"inputs":[{"name":"str"}],"output":{"name":"statusicon"}}],[11,"position_menu","","Menu positioning function to use with `Menu::popup` to position `menu` aligned to the status icon `user_data`.",232,{"inputs":[{"name":"p"},{"name":"i32"},{"name":"i32"},{"name":"statusicon"}],"output":{"name":"bool"}}],[11,"default","","",232,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",233,{"inputs":[{"name":"self"}],"output":{"name":"statusbar"}}],[11,"fmt","","",233,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",233,null],[11,"static_type","","",233,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",233,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Statusbar` ready for messages.",233,{"inputs":[],"output":{"name":"statusbar"}}],[11,"default","","",233,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",234,{"inputs":[{"name":"self"}],"output":{"name":"stylecontext"}}],[11,"fmt","","",234,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",234,null],[11,"static_type","","",234,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",234,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a standalone `StyleContext`, this style context won’t be attached to any widget, so you may want to call `StyleContext::set_path` yourself.",234,{"inputs":[],"output":{"name":"stylecontext"}}],[11,"add_provider_for_screen","","Adds a global style provider to `screen`, which will be used in style construction for all `GtkStyleContexts` under `screen`.",234,{"inputs":[{"name":"screen"},{"name":"p"},{"name":"u32"}],"output":null}],[11,"remove_provider_for_screen","","Removes `provider` from the global style providers list in `screen`. ## `screen` a `gdk::Screen` ## `provider` a `StyleProvider`",234,{"inputs":[{"name":"screen"},{"name":"p"}],"output":null}],[11,"reset_widgets","","This function recomputes the styles for all widgets under a particular `gdk::Screen`. This is useful when some global parameter has changed that affects the appearance of all widgets, because when a widget gets a new style, it will both redraw and recompute any cached information about its appearance. As an example, it is used when the color scheme changes in the related `Settings` object. ## `screen` a `gdk::Screen`",234,{"inputs":[{"name":"screen"}],"output":null}],[11,"default","","",234,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",235,{"inputs":[{"name":"self"}],"output":{"name":"styleproperties"}}],[11,"fmt","","",235,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",235,null],[11,"static_type","","",235,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",235,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","",235,{"inputs":[],"output":{"name":"styleproperties"}}],[11,"default","","",235,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",236,{"inputs":[{"name":"self"}],"output":{"name":"styleprovider"}}],[11,"fmt","","",236,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",236,null],[11,"static_type","","",236,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",236,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",237,{"inputs":[{"name":"self"}],"output":{"name":"switch"}}],[11,"fmt","","",237,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",237,null],[11,"static_type","","",237,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",237,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Switch` widget.",237,{"inputs":[],"output":{"name":"switch"}}],[11,"default","","",237,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",238,{"inputs":[{"name":"self"}],"output":{"name":"textbuffer"}}],[11,"fmt","","",238,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",238,null],[11,"static_type","","",238,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",238,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new text buffer. ## `table` a tag table, or `None` to create a new one",238,{"inputs":[{"name":"p"}],"output":{"name":"textbuffer"}}],[11,"clone","","",239,{"inputs":[{"name":"self"}],"output":{"name":"textchildanchor"}}],[11,"fmt","","",239,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",239,null],[11,"static_type","","",239,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",239,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `TextChildAnchor`. Usually you would then insert it into a `TextBuffer` with `TextBuffer::insert_child_anchor`. To perform the creation and insertion in one step, use the convenience function `TextBuffer::create_child_anchor`.",239,{"inputs":[],"output":{"name":"textchildanchor"}}],[11,"default","","",239,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",240,{"inputs":[{"name":"self"}],"output":{"name":"textmark"}}],[11,"fmt","","",240,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",240,null],[11,"static_type","","",240,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",240,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a text mark. Add it to a buffer using `TextBuffer::add_mark`. If `name` is `None`, the mark is anonymous; otherwise, the mark can be retrieved by name using `TextBuffer::get_mark`. If a mark has left gravity, and text is inserted at the mark’s current location, the mark will be moved to the left of the newly-inserted text. If the mark has right gravity (`left_gravity` = `false`), the mark will end up on the right of newly-inserted text. The standard left-to-right cursor is a mark with right gravity (when you type, the cursor stays on the right side of the text you’re typing). ## `name` mark name or `None` ## `left_gravity` whether the mark should have left gravity",240,{"inputs":[{"name":"p"},{"name":"bool"}],"output":{"name":"textmark"}}],[11,"clone","","",241,{"inputs":[{"name":"self"}],"output":{"name":"texttag"}}],[11,"fmt","","",241,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",241,null],[11,"static_type","","",241,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",241,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a `TextTag`. Configure the tag using object arguments, i.e. using `gobject::Object::set`. ## `name` tag name, or `None`",241,{"inputs":[{"name":"p"}],"output":{"name":"texttag"}}],[11,"clone","","",242,{"inputs":[{"name":"self"}],"output":{"name":"texttagtable"}}],[11,"fmt","","",242,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",242,null],[11,"static_type","","",242,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",242,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `TextTagTable`. The table contains no tags by default.",242,{"inputs":[],"output":{"name":"texttagtable"}}],[11,"default","","",242,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",243,{"inputs":[{"name":"self"}],"output":{"name":"textview"}}],[11,"fmt","","",243,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",243,null],[11,"static_type","","",243,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",243,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `TextView`. If you don’t call `TextView::set_buffer` before using the text view, an empty default buffer will be created for you. Get the buffer with `TextView::get_buffer`. If you want to specify your own buffer, consider `TextView::new_with_buffer`.",243,{"inputs":[],"output":{"name":"textview"}}],[11,"new_with_buffer","","Creates a new `TextView` widget displaying the buffer `buffer`. One buffer can be shared among many widgets. `buffer` may be `None` to create a default buffer, in which case this function is equivalent to `TextView::new`. The text view adds its own reference count to the buffer; it does not take over an existing reference. ## `buffer` a `TextBuffer`",243,{"inputs":[{"name":"textbuffer"}],"output":{"name":"textview"}}],[11,"default","","",243,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",244,{"inputs":[{"name":"self"}],"output":{"name":"togglebutton"}}],[11,"fmt","","",244,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",244,null],[11,"static_type","","",244,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",244,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new toggle button. A widget should be packed into the button, as in `Button::new`.",244,{"inputs":[],"output":{"name":"togglebutton"}}],[11,"new_with_label","","Creates a new toggle button with a text label. ## `label` a string containing the message to be placed in the toggle button.",244,{"inputs":[{"name":"str"}],"output":{"name":"togglebutton"}}],[11,"new_with_mnemonic","","Creates a new `ToggleButton` containing a label. The label will be created using `Label::new_with_mnemonic`, so underscores in `label` indicate the mnemonic for the button. ## `label` the text of the button, with an underscore in front of the  mnemonic character",244,{"inputs":[{"name":"str"}],"output":{"name":"togglebutton"}}],[11,"default","","",244,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",245,{"inputs":[{"name":"self"}],"output":{"name":"toggletoolbutton"}}],[11,"fmt","","",245,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",245,null],[11,"static_type","","",245,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",245,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Returns a new `ToggleToolButton`",245,{"inputs":[],"output":{"name":"toggletoolbutton"}}],[11,"new_from_stock","","Creates a new `ToggleToolButton` containing the image and text from a stock item. Some stock ids have preprocessor macros like `GTK_STOCK_OK` and `GTK_STOCK_APPLY`.",245,{"inputs":[{"name":"str"}],"output":{"name":"toggletoolbutton"}}],[11,"default","","",245,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",246,{"inputs":[{"name":"self"}],"output":{"name":"toolbutton"}}],[11,"fmt","","",246,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",246,null],[11,"static_type","","",246,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",246,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `ToolButton` using `icon_widget` as contents and `label` as label. ## `icon_widget` a widget that will be used as the button contents, or `None` ## `label` a string that will be used as label, or `None`",246,{"inputs":[{"name":"q"},{"name":"r"}],"output":{"name":"toolbutton"}}],[11,"new_from_stock","","Creates a new `ToolButton` containing the image and text from a stock item. Some stock ids have preprocessor macros like `GTK_STOCK_OK` and `GTK_STOCK_APPLY`.",246,{"inputs":[{"name":"str"}],"output":{"name":"toolbutton"}}],[11,"clone","","",247,{"inputs":[{"name":"self"}],"output":{"name":"toolitem"}}],[11,"fmt","","",247,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",247,null],[11,"static_type","","",247,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",247,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `ToolItem`",247,{"inputs":[],"output":{"name":"toolitem"}}],[11,"default","","",247,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",248,{"inputs":[{"name":"self"}],"output":{"name":"toolitemgroup"}}],[11,"fmt","","",248,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",248,null],[11,"static_type","","",248,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",248,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new tool item group with label `label`. ## `label` the label of the new group",248,{"inputs":[{"name":"str"}],"output":{"name":"toolitemgroup"}}],[11,"clone","","",249,{"inputs":[{"name":"self"}],"output":{"name":"toolpalette"}}],[11,"fmt","","",249,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",249,null],[11,"static_type","","",249,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",249,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new tool palette.",249,{"inputs":[],"output":{"name":"toolpalette"}}],[11,"get_drag_target_group","","Get the target entry for a dragged `ToolItemGroup`.",249,{"inputs":[],"output":{"name":"option"}}],[11,"get_drag_target_item","","Gets the target entry for a dragged `ToolItem`.",249,{"inputs":[],"output":{"name":"option"}}],[11,"default","","",249,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",250,{"inputs":[{"name":"self"}],"output":{"name":"toolshell"}}],[11,"fmt","","",250,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",250,null],[11,"static_type","","",250,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",250,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",251,{"inputs":[{"name":"self"}],"output":{"name":"toolbar"}}],[11,"fmt","","",251,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",251,null],[11,"static_type","","",251,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",251,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new toolbar.",251,{"inputs":[],"output":{"name":"toolbar"}}],[11,"default","","",251,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",252,{"inputs":[{"name":"self"}],"output":{"name":"tooltip"}}],[11,"fmt","","",252,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",252,null],[11,"static_type","","",252,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",252,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"trigger_tooltip_query","","Triggers a new tooltip query on `display`, in order to update the current visible tooltip, or to show/hide the current tooltip. This function is useful to call when, for example, the state of the widget changed by a key press. ## `display` a `gdk::Display`",252,{"inputs":[{"name":"display"}],"output":null}],[11,"clone","","",253,{"inputs":[{"name":"self"}],"output":{"name":"treemodel"}}],[11,"fmt","","",253,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",253,null],[11,"static_type","","",253,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",253,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",254,{"inputs":[{"name":"self"}],"output":{"name":"treemodelfilter"}}],[11,"fmt","","",254,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",254,null],[11,"static_type","","",254,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",254,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",255,{"inputs":[{"name":"self"}],"output":{"name":"treeselection"}}],[11,"fmt","","",255,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",255,null],[11,"static_type","","",255,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",255,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",256,{"inputs":[{"name":"self"}],"output":{"name":"treesortable"}}],[11,"fmt","","",256,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",256,null],[11,"static_type","","",256,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",256,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",257,{"inputs":[{"name":"self"}],"output":{"name":"treestore"}}],[11,"fmt","","",257,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",257,null],[11,"static_type","","",257,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",257,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"clone","","",258,{"inputs":[{"name":"self"}],"output":{"name":"treeview"}}],[11,"fmt","","",258,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",258,null],[11,"static_type","","",258,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",258,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `TreeView` widget.",258,{"inputs":[],"output":{"name":"treeview"}}],[11,"new_with_model","","Creates a new `TreeView` widget with the model initialized to `model`. ## `model` the model.",258,{"inputs":[{"name":"p"}],"output":{"name":"treeview"}}],[11,"default","","",258,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",259,{"inputs":[{"name":"self"}],"output":{"name":"treeviewcolumn"}}],[11,"fmt","","",259,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",259,null],[11,"static_type","","",259,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",259,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `TreeViewColumn`.",259,{"inputs":[],"output":{"name":"treeviewcolumn"}}],[11,"new_with_area","","Creates a new `TreeViewColumn` using `area` to render its cells. ## `area` the `CellArea` that the newly created column should use to layout cells.",259,{"inputs":[{"name":"p"}],"output":{"name":"treeviewcolumn"}}],[11,"default","","",259,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",260,{"inputs":[{"name":"self"}],"output":{"name":"viewport"}}],[11,"fmt","","",260,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",260,null],[11,"static_type","","",260,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",260,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Viewport` with the given adjustments, or with default adjustments if none are given. ## `hadjustment` horizontal adjustment ## `vadjustment` vertical adjustment",260,{"inputs":[{"name":"p"},{"name":"q"}],"output":{"name":"viewport"}}],[11,"clone","","",261,{"inputs":[{"name":"self"}],"output":{"name":"volumebutton"}}],[11,"fmt","","",261,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",261,null],[11,"static_type","","",261,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",261,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a `VolumeButton`, with a range between 0.0 and 1.0, with a stepping of 0.02. Volume values can be obtained and modified using the functions from `ScaleButton`.",261,{"inputs":[],"output":{"name":"volumebutton"}}],[11,"default","","",261,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",262,{"inputs":[{"name":"self"}],"output":{"name":"widget"}}],[11,"fmt","","",262,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",262,null],[11,"static_type","","",262,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",262,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"get_default_direction","","Obtains the current default reading direction. See `Widget::set_default_direction`.",262,{"inputs":[],"output":{"name":"textdirection"}}],[11,"pop_composite_child","","Cancels the effect of a previous call to `Widget::push_composite_child`.",262,{"inputs":[],"output":null}],[11,"push_composite_child","","Makes all newly-created widgets as composite children until the corresponding `Widget::pop_composite_child` call.",262,{"inputs":[],"output":null}],[11,"set_default_direction","","Sets the default reading direction for widgets where the direction has not been explicitly set by `WidgetExt::set_direction`. ## `dir` the new default direction. This cannot be  `TextDirection::None`.",262,{"inputs":[{"name":"textdirection"}],"output":null}],[11,"clone","","",263,{"inputs":[{"name":"self"}],"output":{"name":"window"}}],[11,"fmt","","",263,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",263,null],[11,"static_type","","",263,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",263,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Window`, which is a toplevel window that can contain other widgets. Nearly always, the type of the window should be `WindowType::Toplevel`. If you’re implementing something like a popup menu from scratch (which is a bad idea, just use `Menu`), you might use `WindowType::Popup`. `WindowType::Popup` is not for dialogs, though in some other toolkits dialogs are called “popups”. In GTK+, `WindowType::Popup` means a pop-up menu or pop-up tooltip. On X11, popup windows are not controlled by the [window manager][gtk-X11-arch].",263,{"inputs":[{"name":"windowtype"}],"output":{"name":"window"}}],[11,"get_default_icon_list","","Gets the value set by `Window::set_default_icon_list`. The list is a copy and should be freed with `glib::List::free`, but the pixbufs in the list have not had their reference count incremented.",263,{"inputs":[],"output":{"name":"vec"}}],[11,"get_default_icon_name","","Returns the fallback icon name for windows that has been set with `Window::set_default_icon_name`. The returned string is owned by GTK+ and should not be modified. It is only valid until the next call to `Window::set_default_icon_name`.",263,{"inputs":[],"output":{"name":"option"}}],[11,"list_toplevels","","Returns a list of all existing toplevel windows. The widgets in the list are not individually referenced. If you want to iterate through the list and perform actions involving callbacks that might destroy the widgets, you must call `g_list_foreach (result, (GFunc)g_object_ref, NULL)` first, and then unref all the widgets afterwards.",263,{"inputs":[],"output":{"name":"vec"}}],[11,"set_auto_startup_notification","","By default, after showing the first `Window`, GTK+ calls `gdk_notify_startup_complete`. Call this function to disable the automatic startup notification. You might do this if your first window is a splash screen, and you want to delay notification until after your real main window has been shown, for example.",263,{"inputs":[{"name":"bool"}],"output":null}],[11,"set_default_icon","","Sets an icon to be used as fallback for windows that haven't had `WindowExt::set_icon` called on them from a pixbuf. ## `icon` the icon",263,{"inputs":[{"name":"pixbuf"}],"output":null}],[11,"set_default_icon_from_file","","Sets an icon to be used as fallback for windows that haven't had `WindowExt::set_icon_list` called on them from a file on disk. Warns on failure if `err` is `None`. ## `filename` location of icon file",263,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"set_default_icon_list","","",263,null],[11,"set_default_icon_name","","",263,{"inputs":[{"name":"str"}],"output":null}],[11,"set_interactive_debugging","","",263,{"inputs":[{"name":"bool"}],"output":null}],[11,"clone","","",264,{"inputs":[{"name":"self"}],"output":{"name":"windowgroup"}}],[11,"fmt","","",264,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",264,null],[11,"static_type","","",264,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",264,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `WindowGroup` object. Grabs added with `WidgetExt::grab_add` only affect windows within the same `WindowGroup`.",264,{"inputs":[],"output":{"name":"windowgroup"}}],[11,"default","","",264,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",265,{"inputs":[{"name":"self"}],"output":{"name":"csssection"}}],[11,"static_type","","",265,{"inputs":[],"output":{"name":"type"}}],[11,"get_end_line","","Returns the line in the CSS document where this section end. The line number is 0-indexed, so the first line of the document will return 0. This value may change in future invocations of this function if `self` is not yet parsed completely. This will for example happen in the `CssProvider`::parsing-error signal. The end position and line may be identical to the start position and line for sections which failed to parse anything successfully.",265,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_end_position","","Returns the offset in bytes from the start of the current line returned via `CssSection::get_end_line`. This value may change in future invocations of this function if `self` is not yet parsed completely. This will for example happen in the `CssProvider`::parsing-error signal. The end position and line may be identical to the start position and line for sections which failed to parse anything successfully.",265,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_parent","","Gets the parent section for the given `self`. The parent section is the section that contains this `self`. A special case are sections of type `CssSectionType::Document`. Their parent will either be `None` if they are the original CSS document that was loaded by `CssProvider::load_from_file` or a section of type `CssSectionType::Import` if it was loaded with an import rule from a different file.",265,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_section_type","","Gets the type of information that `self` describes.",265,{"inputs":[{"name":"self"}],"output":{"name":"csssectiontype"}}],[11,"get_start_line","","Returns the line in the CSS document where this section starts. The line number is 0-indexed, so the first line of the document will return 0.",265,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_start_position","","Returns the offset in bytes from the start of the current line returned via `CssSection::get_start_line`.",265,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"clone","","",266,{"inputs":[{"name":"self"}],"output":{"name":"iconset"}}],[11,"static_type","","",266,{"inputs":[],"output":{"name":"type"}}],[11,"new","","",266,{"inputs":[],"output":{"name":"iconset"}}],[11,"new_from_pixbuf","","",266,{"inputs":[{"name":"pixbuf"}],"output":{"name":"iconset"}}],[11,"add_source","","",266,{"inputs":[{"name":"self"},{"name":"iconsource"}],"output":null}],[11,"copy","","",266,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_sizes","","",266,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"render_icon_pixbuf","","",266,{"inputs":[{"name":"self"},{"name":"stylecontext"},{"name":"i32"}],"output":{"name":"option"}}],[11,"render_icon_surface","","",266,{"inputs":[{"name":"self"},{"name":"stylecontext"},{"name":"i32"},{"name":"i32"},{"name":"p"}],"output":{"name":"option"}}],[11,"default","","",266,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",267,{"inputs":[{"name":"self"}],"output":{"name":"iconsource"}}],[11,"fmt","","",267,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"static_type","","",267,{"inputs":[],"output":{"name":"type"}}],[11,"new","","",267,{"inputs":[],"output":{"name":"iconsource"}}],[11,"get_direction","","",267,{"inputs":[{"name":"self"}],"output":{"name":"textdirection"}}],[11,"get_direction_wildcarded","","",267,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get_filename","","",267,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_icon_name","","",267,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_pixbuf","","",267,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_size","","",267,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_size_wildcarded","","",267,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get_state","","",267,{"inputs":[{"name":"self"}],"output":{"name":"statetype"}}],[11,"get_state_wildcarded","","",267,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_direction","","",267,{"inputs":[{"name":"self"},{"name":"textdirection"}],"output":null}],[11,"set_direction_wildcarded","","",267,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"set_filename","","",267,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[11,"set_icon_name","","",267,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[11,"set_pixbuf","","",267,{"inputs":[{"name":"self"},{"name":"pixbuf"}],"output":null}],[11,"set_size","","",267,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"set_size_wildcarded","","",267,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"set_state","","",267,{"inputs":[{"name":"self"},{"name":"statetype"}],"output":null}],[11,"set_state_wildcarded","","",267,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[11,"default","","",267,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",268,{"inputs":[{"name":"self"}],"output":{"name":"papersize"}}],[11,"fmt","","",268,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"static_type","","",268,{"inputs":[],"output":{"name":"type"}}],[11,"new","","Creates a new `PaperSize` object by parsing a PWG 5101.1-2002 paper name.",268,{"inputs":[{"name":"p"}],"output":{"name":"papersize"}}],[11,"new_custom","","Creates a new `PaperSize` object with the given parameters. ## `name` the paper name ## `display_name` the human-readable name ## `width` the paper width, in units of `unit` ## `height` the paper height, in units of `unit` ## `unit` the unit for `width` and `height`. not `Unit::None`.",268,{"inputs":[{"name":"str"},{"name":"str"},{"name":"f64"},{"name":"f64"},{"name":"unit"}],"output":{"name":"papersize"}}],[11,"new_from_gvariant","","",268,{"inputs":[{"name":"variant"}],"output":{"name":"papersize"}}],[11,"new_from_ipp","","Creates a new `PaperSize` object by using IPP information.",268,{"inputs":[{"name":"str"},{"name":"f64"},{"name":"f64"}],"output":{"name":"papersize"}}],[11,"new_from_key_file","","Reads a paper size from the group `group_name` in the key file `key_file`. ## `key_file` the `glib::KeyFile` to retrieve the papersize from ## `group_name` the name ofthe group in the key file to read,  or `None` to read the first group",268,{"inputs":[{"name":"keyfile"},{"name":"str"}],"output":{"name":"result"}}],[11,"new_from_ppd","","",268,{"inputs":[{"name":"str"},{"name":"str"},{"name":"f64"},{"name":"f64"}],"output":{"name":"papersize"}}],[11,"get_default_bottom_margin","","",268,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"f64"}}],[11,"get_default_left_margin","","",268,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"f64"}}],[11,"get_default_right_margin","","",268,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"f64"}}],[11,"get_default_top_margin","","",268,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"f64"}}],[11,"get_display_name","","",268,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_height","","",268,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"f64"}}],[11,"get_name","","",268,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_ppd_name","","",268,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_width","","",268,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"f64"}}],[11,"is_custom","","",268,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_ipp","","",268,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"set_size","","",268,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"},{"name":"unit"}],"output":null}],[11,"to_gvariant","","",268,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"to_key_file","","",268,{"inputs":[{"name":"self"},{"name":"keyfile"},{"name":"str"}],"output":null}],[11,"get_default","","",268,{"inputs":[],"output":{"name":"option"}}],[11,"get_paper_sizes","","",268,{"inputs":[{"name":"bool"}],"output":{"name":"vec"}}],[11,"eq","","",268,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"clone","","",269,{"inputs":[{"name":"self"}],"output":{"name":"recentinfo"}}],[11,"static_type","","",269,{"inputs":[],"output":{"name":"type"}}],[11,"create_app_info","","Creates a `gio::AppInfo` for the specified `RecentInfo` ## `app_name` the name of the application that should  be mapped to a `gio::AppInfo`; if `None` is used then the default  application for the MIME type is used",269,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[11,"exists","","Checks whether the resource pointed by `self` still exists. At the moment this check is done only on resources pointing to local files.",269,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get_added","","Gets the timestamp (seconds from system’s Epoch) when the resource was added to the recently used resources list.",269,{"inputs":[{"name":"self"}],"output":{"name":"c_long"}}],[11,"get_age","","Gets the number of days elapsed since the last update of the resource pointed by `self`.",269,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_application_info","","Gets the data regarding the application that has registered the resource pointed by `self`.",269,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"get_applications","","Retrieves the list of applications that have registered this resource. ## `length` return location for the length of the returned list",269,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"get_description","","Gets the (short) description of the resource.",269,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_display_name","","Gets the name of the resource. If none has been defined, the basename of the resource is obtained.",269,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_gicon","","Retrieves the icon associated to the resource MIME type.",269,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_groups","","Returns all groups registered for the recently used item `self`. The array of returned group names will be `None` terminated, so length might optionally be `None`. ## `length` return location for the number of groups returned",269,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"get_icon","","Retrieves the icon of size `size` associated to the resource MIME type. ## `size` the size of the icon in pixels",269,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[11,"get_mime_type","","Gets the MIME type of the resource.",269,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_modified","","Gets the timestamp (seconds from system’s Epoch) when the meta-data for the resource was last modified.",269,{"inputs":[{"name":"self"}],"output":{"name":"c_long"}}],[11,"get_private_hint","","Gets the value of the “private” flag. Resources in the recently used list that have this flag set to `true` should only be displayed by the applications that have registered them.",269,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"get_short_name","","Computes a valid UTF-8 string that can be used as the name of the item in a menu or list. For example, calling this function on an item that refers to “file:///foo/bar.txt” will yield “bar.txt”.",269,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_uri","","Gets the URI of the resource.",269,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_uri_display","","Gets a displayable version of the resource’s URI. If the resource is local, it returns a local path; if the resource is not local, it returns the UTF-8 encoded content of `RecentInfo::get_uri`.",269,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_visited","","Gets the timestamp (seconds from system’s Epoch) when the meta-data for the resource was last visited.",269,{"inputs":[{"name":"self"}],"output":{"name":"c_long"}}],[11,"has_application","","Checks whether an application registered this resource using `app_name`. ## `app_name` a string containing an application name",269,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"has_group","","Checks whether `group_name` appears inside the groups registered for the recently used item `self`. ## `group_name` name of a group",269,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"is_local","","Checks whether the resource is local or not by looking at the scheme of its URI.",269,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"last_application","","Gets the name of the last application that have registered the recently used resource represented by `self`.",269,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"match_","","",269,{"inputs":[{"name":"self"},{"name":"recentinfo"}],"output":{"name":"bool"}}],[11,"clone","","",270,{"inputs":[{"name":"self"}],"output":{"name":"selectiondata"}}],[11,"fmt","","",270,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"static_type","","",270,{"inputs":[],"output":{"name":"type"}}],[11,"get_data_type","","Retrieves the data type of the selection.",270,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"get_data_with_length","","Retrieves the raw data of the selection along with its length. ## `length` return location for length of the data segment",270,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"get_display","","Retrieves the display of the selection.",270,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_format","","Retrieves the format of the selection.",270,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_length","","Retrieves the length of the raw data of the selection.",270,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_pixbuf","","Gets the contents of the selection data as a `gdk_pixbuf::Pixbuf`.",270,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_selection","","Retrieves the selection `gdk::Atom` of the selection data.",270,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"get_target","","Retrieves the target of the selection.",270,{"inputs":[{"name":"self"}],"output":{"name":"atom"}}],[11,"get_targets","","Gets the contents of `self` as an array of targets. This can be used to interpret the results of getting the standard TARGETS target that is always supplied for any selection. ## `targets`",270,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_text","","Gets the contents of the selection data as a UTF-8 string.",270,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_uris","","Gets the contents of the selection data as array of URIs.",270,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"set","","Stores new data into a `SelectionData` object. Should only be called from a selection handler callback. Zero-terminates the stored data. ## `type_` the type of selection data ## `format` format (number of bits in a unit) ## `data` pointer to the data (will be copied) ## `length` length of the data",270,null],[11,"set_pixbuf","","Sets the contents of the selection from a `gdk_pixbuf::Pixbuf` The pixbuf is converted to the form determined by `self`->target. ## `pixbuf` a `gdk_pixbuf::Pixbuf`",270,{"inputs":[{"name":"self"},{"name":"pixbuf"}],"output":{"name":"bool"}}],[11,"set_text","","Sets the contents of the selection from a UTF-8 encoded string. The string is converted to the form determined by `self`->target. ## `str` a UTF-8 string ## `len` the length of `str`, or -1 if `str` is nul-terminated.",270,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"set_uris","","Sets the contents of the selection from a list of URIs. The string is converted to the form determined by `self`->target. ## `uris` a `None`-terminated array of  strings holding URIs",270,null],[11,"targets_include_image","","Given a `SelectionData` object holding a list of targets, determines if any of the targets in `targets` can be used to provide a `gdk_pixbuf::Pixbuf`. ## `writable` whether to accept only targets for which GTK+ knows  how to convert a pixbuf into the format",270,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"bool"}}],[11,"targets_include_rich_text","","Given a `SelectionData` object holding a list of targets, determines if any of the targets in `targets` can be used to provide rich text. ## `buffer` a `TextBuffer`",270,{"inputs":[{"name":"self"},{"name":"textbuffer"}],"output":{"name":"bool"}}],[11,"targets_include_text","","Given a `SelectionData` object holding a list of targets, determines if any of the targets in `targets` can be used to provide text.",270,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"targets_include_uri","","Given a `SelectionData` object holding a list of targets, determines if any of the targets in `targets` can be used to provide a list or URIs.",270,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clone","","",271,{"inputs":[{"name":"self"}],"output":{"name":"symboliccolor"}}],[11,"static_type","","",271,{"inputs":[],"output":{"name":"type"}}],[11,"new_alpha","","",271,{"inputs":[{"name":"symboliccolor"},{"name":"f64"}],"output":{"name":"symboliccolor"}}],[11,"new_literal","","",271,{"inputs":[{"name":"rgba"}],"output":{"name":"symboliccolor"}}],[11,"new_mix","","",271,{"inputs":[{"name":"symboliccolor"},{"name":"symboliccolor"},{"name":"f64"}],"output":{"name":"symboliccolor"}}],[11,"new_name","","",271,{"inputs":[{"name":"str"}],"output":{"name":"symboliccolor"}}],[11,"new_shade","","",271,{"inputs":[{"name":"symboliccolor"},{"name":"f64"}],"output":{"name":"symboliccolor"}}],[11,"new_win32","","",271,{"inputs":[{"name":"str"},{"name":"i32"}],"output":{"name":"symboliccolor"}}],[11,"resolve","","",271,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[11,"fmt","","",271,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",272,{"inputs":[{"name":"self"}],"output":{"name":"targetlist"}}],[11,"static_type","","",272,{"inputs":[],"output":{"name":"type"}}],[11,"add","","",272,{"inputs":[{"name":"self"},{"name":"atom"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"add_image_targets","","",272,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"bool"}],"output":null}],[11,"add_rich_text_targets","","",272,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"bool"},{"name":"textbuffer"}],"output":null}],[11,"add_text_targets","","",272,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"add_uri_targets","","",272,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[11,"find","","",272,{"inputs":[{"name":"self"},{"name":"atom"}],"output":{"name":"option"}}],[11,"remove","","",272,{"inputs":[{"name":"self"},{"name":"atom"}],"output":null}],[11,"clone","","",273,{"inputs":[{"name":"self"}],"output":{"name":"textattributes"}}],[11,"static_type","","",273,{"inputs":[],"output":{"name":"type"}}],[11,"new","","Creates a `TextAttributes`, which describes a set of properties on some text.",273,{"inputs":[],"output":{"name":"textattributes"}}],[11,"copy","","Copies `self` and returns a new `TextAttributes`.",273,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"copy_values","","Copies the values from `self` to `dest` so that `dest` has the same values as `self`. Frees existing values in `dest`. ## `dest` another `TextAttributes`",273,{"inputs":[{"name":"self"},{"name":"textattributes"}],"output":null}],[11,"default","","",273,{"inputs":[],"output":{"name":"self"}}],[11,"clone","","",274,{"inputs":[{"name":"self"}],"output":{"name":"textiter"}}],[11,"fmt","","",274,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"static_type","","",274,{"inputs":[],"output":{"name":"type"}}],[11,"assign","","Assigns the value of `other` to `self`. This function is not useful in applications, because iterators can be assigned with `GtkTextIter i = j;`. The function is used by language bindings. ## `other` another `TextIter`",274,{"inputs":[{"name":"self"},{"name":"textiter"}],"output":null}],[11,"backward_char","","Moves backward by one character offset. Returns `true` if movement was possible; if `self` was the first in the buffer (character offset 0), `TextIter::backward_char` returns `false` for convenience when writing loops.",274,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"backward_chars","","Moves `count` characters backward, if possible (if `count` would move past the start or end of the buffer, moves to the start or end of the buffer). The return value indicates whether the iterator moved onto a dereferenceable position; if the iterator didn’t move, or moved onto the end iterator, then `false` is returned. If `count` is 0, the function does nothing and returns `false`. ## `count` number of characters to move",274,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"backward_cursor_position","","Like `TextIter::forward_cursor_position`, but moves backward.",274,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"backward_cursor_positions","","Moves up to `count` cursor positions. See `TextIter::forward_cursor_position` for details. ## `count` number of positions to move",274,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"backward_line","","Moves `self` to the start of the previous line. Returns `true` if `self` could be moved; i.e. if `self` was at character offset 0, this function returns `false`. Therefore if `self` was already on line 0, but not at the start of the line, `self` is snapped to the start of the line and the function returns `true`. (Note that this implies that in a loop calling this function, the line number may not change on every iteration, if your first iteration is on line 0.)",274,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"backward_lines","","Moves `count` lines backward, if possible (if `count` would move past the start or end of the buffer, moves to the start or end of the buffer). The return value indicates whether the iterator moved onto a dereferenceable position; if the iterator didn’t move, or moved onto the end iterator, then `false` is returned. If `count` is 0, the function does nothing and returns `false`. If `count` is negative, moves forward by 0 - `count` lines. ## `count` number of lines to move backward",274,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"backward_search","","Same as `TextIter::forward_search`, but moves backward.",274,{"inputs":[{"name":"self"},{"name":"str"},{"name":"textsearchflags"},{"name":"p"}],"output":{"name":"option"}}],[11,"backward_sentence_start","","Moves backward to the previous sentence start; if `self` is already at the start of a sentence, moves backward to the next one. Sentence boundaries are determined by Pango and should be correct for nearly any language (if not, the correct fix would be to the Pango text boundary algorithms).",274,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"backward_sentence_starts","","Calls `TextIter::backward_sentence_start` up to `count` times, or until it returns `false`. If `count` is negative, moves forward instead of backward. ## `count` number of sentences to move",274,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"backward_to_tag_toggle","","Moves backward to the next toggle (on or off) of the `TextTag` `tag`, or to the next toggle of any tag if `tag` is `None`. If no matching tag toggles are found, returns `false`, otherwise `true`. Does not return toggles located at `self`, only toggles before `self`. Sets `self` to the location of the toggle, or the start of the buffer if no toggle is found. ## `tag` a `TextTag`, or `None`",274,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[11,"backward_visible_cursor_position","","Moves `self` forward to the previous visible cursor position. See `TextIter::backward_cursor_position` for details.",274,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"backward_visible_cursor_positions","","Moves up to `count` visible cursor positions. See `TextIter::backward_cursor_position` for details. ## `count` number of positions to move",274,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"backward_visible_line","","Moves `self` to the start of the previous visible line. Returns `true` if `self` could be moved; i.e. if `self` was at character offset 0, this function returns `false`. Therefore if `self` was already on line 0, but not at the start of the line, `self` is snapped to the start of the line and the function returns `true`. (Note that this implies that in a loop calling this function, the line number may not change on every iteration, if your first iteration is on line 0.)",274,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"backward_visible_lines","","Moves `count` visible lines backward, if possible (if `count` would move past the start or end of the buffer, moves to the start or end of the buffer). The return value indicates whether the iterator moved onto a dereferenceable position; if the iterator didn’t move, or moved onto the end iterator, then `false` is returned. If `count` is 0, the function does nothing and returns `false`. If `count` is negative, moves forward by 0 - `count` lines. ## `count` number of lines to move backward",274,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"backward_visible_word_start","","Moves backward to the previous visible word start. (If `self` is currently on a word start, moves backward to the next one after that.) Word breaks are determined by Pango and should be correct for nearly any language (if not, the correct fix would be to the Pango word break algorithms).",274,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"backward_visible_word_starts","","Calls `TextIter::backward_visible_word_start` up to `count` times. ## `count` number of times to move",274,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"backward_word_start","","Moves backward to the previous word start. (If `self` is currently on a word start, moves backward to the next one after that.) Word breaks are determined by Pango and should be correct for nearly any language (if not, the correct fix would be to the Pango word break algorithms).",274,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"backward_word_starts","","Calls `TextIter::backward_word_start` up to `count` times. ## `count` number of times to move",274,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"begins_tag","","Returns `true` if `tag` is toggled on at exactly this point. If `tag` is `None`, returns `true` if any tag is toggled on at this point.",274,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[11,"can_insert","","Considering the default editability of the buffer, and tags that affect editability, determines whether text inserted at `self` would be editable. If text inserted at `self` would be editable then the user should be allowed to insert text at `self`. `TextBuffer::insert_interactive` uses this function to decide whether insertions are allowed at a given position. ## `default_editability` `true` if text is editable by default",274,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"bool"}}],[11,"editable","","Returns whether the character at `self` is within an editable region of text. Non-editable text is “locked” and can’t be changed by the user via `TextView`. This function is simply a convenience wrapper around `TextIter::get_attributes`. If no tags applied to this text affect editability, `default_setting` will be returned.",274,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"bool"}}],[11,"ends_line","","Returns `true` if `self` points to the start of the paragraph delimiter characters for a line (delimiters will be either a newline, a carriage return, a carriage return followed by a newline, or a Unicode paragraph separator character). Note that an iterator pointing to the \\n of a \\r\\n pair will not be counted as the end of a line, the line ends before the \\r. The end iterator is considered to be at the end of a line, even though there are no paragraph delimiter chars there.",274,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"ends_sentence","","Determines whether `self` ends a sentence. Sentence boundaries are determined by Pango and should be correct for nearly any language (if not, the correct fix would be to the Pango text boundary algorithms).",274,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"ends_tag","","Returns `true` if `tag` is toggled off at exactly this point. If `tag` is `None`, returns `true` if any tag is toggled off at this point.",274,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[11,"ends_word","","Determines whether `self` ends a natural-language word. Word breaks are determined by Pango and should be correct for nearly any language (if not, the correct fix would be to the Pango word break algorithms).",274,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"forward_char","","Moves `self` forward by one character offset. Note that images embedded in the buffer occupy 1 character slot, so `TextIter::forward_char` may actually move onto an image instead of a character, if you have images in your buffer. If `self` is the end iterator or one character before it, `self` will now point at the end iterator, and `TextIter::forward_char` returns `false` for convenience when writing loops.",274,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"forward_chars","","Moves `count` characters if possible (if `count` would move past the start or end of the buffer, moves to the start or end of the buffer). The return value indicates whether the new position of `self` is different from its original position, and dereferenceable (the last iterator in the buffer is not dereferenceable). If `count` is 0, the function does nothing and returns `false`. ## `count` number of characters to move, may be negative",274,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"forward_cursor_position","","Moves `self` forward by a single cursor position. Cursor positions are (unsurprisingly) positions where the cursor can appear. Perhaps surprisingly, there may not be a cursor position between all characters. The most common example for European languages would be a carriage return/newline sequence. For some Unicode characters, the equivalent of say the letter “a” with an accent mark will be represented as two characters, first the letter then a \"combining mark\" that causes the accent to be rendered; so the cursor can’t go between those two characters. See also the `pango::LogAttr`-struct and `pango_break` function.",274,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"forward_cursor_positions","","Moves up to `count` cursor positions. See `TextIter::forward_cursor_position` for details. ## `count` number of positions to move",274,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"forward_line","","Moves `self` to the start of the next line. If the iter is already on the last line of the buffer, moves the iter to the end of the current line. If after the operation, the iter is at the end of the buffer and not dereferencable, returns `false`. Otherwise, returns `true`.",274,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"forward_lines","","Moves `count` lines forward, if possible (if `count` would move past the start or end of the buffer, moves to the start or end of the buffer). The return value indicates whether the iterator moved onto a dereferenceable position; if the iterator didn’t move, or moved onto the end iterator, then `false` is returned. If `count` is 0, the function does nothing and returns `false`. If `count` is negative, moves backward by 0 - `count` lines. ## `count` number of lines to move forward",274,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"forward_search","","Searches forward for `str`. Any match is returned by setting `match_start` to the first character of the match and `match_end` to the first character after the match. The search will not continue past `limit`. Note that a search is a linear or O(n) operation, so you may wish to use `limit` to avoid locking up your UI on large buffers.",274,{"inputs":[{"name":"self"},{"name":"str"},{"name":"textsearchflags"},{"name":"p"}],"output":{"name":"option"}}],[11,"forward_sentence_end","","Moves forward to the next sentence end. (If `self` is at the end of a sentence, moves to the next end of sentence.) Sentence boundaries are determined by Pango and should be correct for nearly any language (if not, the correct fix would be to the Pango text boundary algorithms).",274,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"forward_sentence_ends","","Calls `TextIter::forward_sentence_end` `count` times (or until `TextIter::forward_sentence_end` returns `false`). If `count` is negative, moves backward instead of forward. ## `count` number of sentences to move",274,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"forward_to_end","","Moves `self` forward to the “end iterator,” which points one past the last valid character in the buffer. `TextIter::get_char` called on the end iterator returns 0, which is convenient for writing loops.",274,{"inputs":[{"name":"self"}],"output":null}],[11,"forward_to_line_end","","Moves the iterator to point to the paragraph delimiter characters, which will be either a newline, a carriage return, a carriage return/newline in sequence, or the Unicode paragraph separator character. If the iterator is already at the paragraph delimiter characters, moves to the paragraph delimiter characters for the next line. If `self` is on the last line in the buffer, which does not end in paragraph delimiters, moves to the end iterator (end of the last line), and returns `false`.",274,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"forward_to_tag_toggle","","Moves forward to the next toggle (on or off) of the `TextTag` `tag`, or to the next toggle of any tag if `tag` is `None`. If no matching tag toggles are found, returns `false`, otherwise `true`. Does not return toggles located at `self`, only toggles after `self`. Sets `self` to the location of the toggle, or to the end of the buffer if no toggle is found. ## `tag` a `TextTag`, or `None`",274,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[11,"forward_visible_cursor_position","","Moves `self` forward to the next visible cursor position. See `TextIter::forward_cursor_position` for details.",274,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"forward_visible_cursor_positions","","Moves up to `count` visible cursor positions. See `TextIter::forward_cursor_position` for details. ## `count` number of positions to move",274,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"forward_visible_line","","Moves `self` to the start of the next visible line. Returns `true` if there was a next line to move to, and `false` if `self` was simply moved to the end of the buffer and is now not dereferenceable, or if `self` was already at the end of the buffer.",274,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"forward_visible_lines","","Moves `count` visible lines forward, if possible (if `count` would move past the start or end of the buffer, moves to the start or end of the buffer). The return value indicates whether the iterator moved onto a dereferenceable position; if the iterator didn’t move, or moved onto the end iterator, then `false` is returned. If `count` is 0, the function does nothing and returns `false`. If `count` is negative, moves backward by 0 - `count` lines. ## `count` number of lines to move forward",274,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"forward_visible_word_end","","Moves forward to the next visible word end. (If `self` is currently on a word end, moves forward to the next one after that.) Word breaks are determined by Pango and should be correct for nearly any language (if not, the correct fix would be to the Pango word break algorithms).",274,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"forward_visible_word_ends","","Calls `TextIter::forward_visible_word_end` up to `count` times. ## `count` number of times to move",274,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"forward_word_end","","Moves forward to the next word end. (If `self` is currently on a word end, moves forward to the next one after that.) Word breaks are determined by Pango and should be correct for nearly any language (if not, the correct fix would be to the Pango word break algorithms).",274,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"forward_word_ends","","Calls `TextIter::forward_word_end` up to `count` times. ## `count` number of times to move",274,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"get_buffer","","Returns the `TextBuffer` this iterator is associated with.",274,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_bytes_in_line","","Returns the number of bytes in the line containing `self`, including the paragraph delimiters.",274,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_char","","The Unicode character at this iterator is returned. (Equivalent to operator* on a C++ iterator.) If the element at this iterator is a non-character element, such as an image embedded in the buffer, the Unicode “unknown” character 0xFFFC is returned. If invoked on the end iterator, zero is returned; zero is not a valid Unicode character. So you can write a loop which ends when `TextIter::get_char` returns 0.",274,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_chars_in_line","","Returns the number of characters in the line containing `self`, including the paragraph delimiters.",274,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_child_anchor","","If the location at `self` contains a child anchor, the anchor is returned (with no new reference count added). Otherwise, `None` is returned.",274,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_language","","A convenience wrapper around `TextIter::get_attributes`, which returns the language in effect at `self`. If no tags affecting language apply to `self`, the return value is identical to that of `gtk_get_default_language`.",274,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_line","","Returns the line number containing the iterator. Lines in a `TextBuffer` are numbered beginning with 0 for the first line in the buffer.",274,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_line_index","","Returns the byte index of the iterator, counting from the start of a newline-terminated line. Remember that `TextBuffer` encodes text in UTF-8, and that characters can require a variable number of bytes to represent.",274,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_line_offset","","Returns the character offset of the iterator, counting from the start of a newline-terminated line. The first character on the line has offset 0.",274,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_marks","","Returns a list of all `TextMark` at this location. Because marks are not iterable (they don’t take up any \"space\" in the buffer, they are just marks in between iterable locations), multiple marks can exist in the same place. The returned list is not in any meaningful order.",274,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"get_offset","","Returns the character offset of an iterator. Each character in a `TextBuffer` has an offset, starting with 0 for the first character in the buffer. Use `TextBuffer::get_iter_at_offset` to convert an offset back into an iterator.",274,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_pixbuf","","If the element at `self` is a pixbuf, the pixbuf is returned (with no new reference count added). Otherwise, `None` is returned.",274,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_slice","","Returns the text in the given range. A “slice” is an array of characters encoded in UTF-8 format, including the Unicode “unknown” character 0xFFFC for iterable non-character elements in the buffer, such as images. Because images are encoded in the slice, byte and character offsets in the returned array will correspond to byte offsets in the text buffer. Note that 0xFFFC can occur in normal text as well, so it is not a reliable indicator that a pixbuf or widget is in the buffer. ## `end` iterator at end of a range",274,{"inputs":[{"name":"self"},{"name":"textiter"}],"output":{"name":"option"}}],[11,"get_tags","","Returns a list of tags that apply to `self`, in ascending order of priority (highest-priority tags are last). The `TextTag` in the list don’t have a reference added, but you have to free the list itself.",274,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"get_text","","Returns text in the given range. If the range contains non-text elements such as images, the character and byte offsets in the returned string will not correspond to character and byte offsets in the buffer. If you want offsets to correspond, see `TextIter::get_slice`. ## `end` iterator at end of a range",274,{"inputs":[{"name":"self"},{"name":"textiter"}],"output":{"name":"option"}}],[11,"get_toggled_tags","","Returns a list of `TextTag` that are toggled on or off at this point. (If `toggled_on` is `true`, the list contains tags that are toggled on.) If a tag is toggled on at `self`, then some non-empty range of characters following `self` has that tag applied to it. If a tag is toggled off, then some non-empty range following `self` does not have the tag applied to it. ## `toggled_on` `true` to get toggled-on tags",274,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"vec"}}],[11,"get_visible_line_index","","Returns the number of bytes from the start of the line to the given `self`, not counting bytes that are invisible due to tags with the “invisible” flag toggled on.",274,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_visible_line_offset","","Returns the offset in characters from the start of the line to the given `self`, not counting characters that are invisible due to tags with the “invisible” flag toggled on.",274,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_visible_slice","","Like `TextIter::get_slice`, but invisible text is not included. Invisible text is usually invisible because a `TextTag` with the “invisible” attribute turned on has been applied to it. ## `end` iterator at end of range",274,{"inputs":[{"name":"self"},{"name":"textiter"}],"output":{"name":"option"}}],[11,"get_visible_text","","Like `TextIter::get_text`, but invisible text is not included. Invisible text is usually invisible because a `TextTag` with the “invisible” attribute turned on has been applied to it. ## `end` iterator at end of range",274,{"inputs":[{"name":"self"},{"name":"textiter"}],"output":{"name":"option"}}],[11,"has_tag","","Returns `true` if `self` points to a character that is part of a range tagged with `tag`. See also `TextIter::begins_tag` and `TextIter::ends_tag`. ## `tag` a `TextTag`",274,{"inputs":[{"name":"self"},{"name":"texttag"}],"output":{"name":"bool"}}],[11,"in_range","","Checks whether `self` falls in the range [`start`, `end`). `start` and `end` must be in ascending order. ## `start` start of range ## `end` end of range",274,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"textiter"}],"output":{"name":"bool"}}],[11,"inside_sentence","","Determines whether `self` is inside a sentence (as opposed to in between two sentences, e.g. after a period and before the first letter of the next sentence). Sentence boundaries are determined by Pango and should be correct for nearly any language (if not, the correct fix would be to the Pango text boundary algorithms).",274,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"inside_word","","Determines whether the character pointed by `self` is part of a natural-language word (as opposed to say inside some whitespace). Word breaks are determined by Pango and should be correct for nearly any language (if not, the correct fix would be to the Pango word break algorithms).",274,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_cursor_position","","See `TextIter::forward_cursor_position` or `pango::LogAttr` or `pango_break` for details on what a cursor position is.",274,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_end","","Returns `true` if `self` is the end iterator, i.e. one past the last dereferenceable iterator in the buffer. `TextIter::is_end` is the most efficient way to check whether an iterator is the end iterator.",274,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_start","","Returns `true` if `self` is the first iterator in the buffer, that is if `self` has a character offset of 0.",274,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"order","","Swaps the value of `self` and `second` if `second` comes before `self` in the buffer. That is, ensures that `self` and `second` are in sequence. Most text buffer functions that take a range call this automatically on your behalf, so there’s no real reason to call it yourself in those cases. There are some exceptions, such as `TextIter::in_range`, that expect a pre-sorted range. ## `second` another `TextIter`",274,{"inputs":[{"name":"self"},{"name":"textiter"}],"output":null}],[11,"set_line","","Moves iterator `self` to the start of the line `line_number`. If `line_number` is negative or larger than the number of lines in the buffer, moves `self` to the start of the last line in the buffer. ## `line_number` line number (counted from 0)",274,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"set_line_index","","Same as `TextIter::set_line_offset`, but works with a byte index. The given byte index must be at the start of a character, it can’t be in the middle of a UTF-8 encoded character. ## `byte_on_line` a byte index relative to the start of `self`’s current line",274,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"set_line_offset","","Moves `self` within a line, to a new character (not byte) offset. The given character offset must be less than or equal to the number of characters in the line; if equal, `self` moves to the start of the next line. See `TextIter::set_line_index` if you have a byte index rather than a character offset. ## `char_on_line` a character offset relative to the start of `self`’s current line",274,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"set_offset","","Sets `self` to point to `char_offset`. `char_offset` counts from the start of the entire text buffer, starting with 0. ## `char_offset` a character number",274,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"set_visible_line_index","","Like `TextIter::set_line_index`, but the index is in visible bytes, i.e. text with a tag making it invisible is not counted in the index. ## `byte_on_line` a byte index",274,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"set_visible_line_offset","","Like `TextIter::set_line_offset`, but the offset is in visible characters, i.e. text with a tag making it invisible is not counted in the offset. ## `char_on_line` a character offset",274,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"starts_line","","Returns `true` if `self` begins a paragraph, i.e. if `TextIter::get_line_offset` would return 0. However this function is potentially more efficient than `TextIter::get_line_offset` because it doesn’t have to compute the offset, it just has to see whether it’s 0.",274,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"starts_sentence","","Determines whether `self` begins a sentence. Sentence boundaries are determined by Pango and should be correct for nearly any language (if not, the correct fix would be to the Pango text boundary algorithms).",274,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"starts_tag","","",274,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[11,"starts_word","","Determines whether `self` begins a natural-language word. Word breaks are determined by Pango and should be correct for nearly any language (if not, the correct fix would be to the Pango word break algorithms).",274,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"toggles_tag","","This is equivalent to (`TextIter::begins_tag` || `TextIter::ends_tag`), i.e. it tells you whether a range with `tag` applied to it begins or ends at `self`. ## `tag` a `TextTag`, or `None`",274,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",274,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[11,"cmp","","",274,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"ordering"}}],[11,"eq","","",274,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"clone","","",275,{"inputs":[{"name":"self"}],"output":{"name":"treeiter"}}],[11,"fmt","","",275,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"static_type","","",275,{"inputs":[],"output":{"name":"type"}}],[11,"clone","","",276,{"inputs":[{"name":"self"}],"output":{"name":"treepath"}}],[11,"fmt","","",276,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"static_type","","",276,{"inputs":[],"output":{"name":"type"}}],[11,"new","","Creates a new `TreePath`-struct. This refers to a row.",276,{"inputs":[],"output":{"name":"treepath"}}],[11,"new_first","","Creates a new `TreePath`-struct.",276,{"inputs":[],"output":{"name":"treepath"}}],[11,"new_from_indicesv","","Creates a new path with the given `indices` array of `length`.",276,null],[11,"new_from_string","","Creates a new `TreePath`-struct initialized to `path`.",276,{"inputs":[{"name":"str"}],"output":{"name":"treepath"}}],[11,"append_index","","Appends a new index to a path.",276,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"down","","Moves `self` to point to the first child of the current path.",276,{"inputs":[{"name":"self"}],"output":null}],[11,"get_depth","","Returns the current depth of `self`.",276,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"get_indices_with_depth","","Returns the current indices of `self`.",276,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"is_ancestor","","Returns `true` if `descendant` is a descendant of `self`. ## `descendant` another `TreePath`-struct",276,{"inputs":[{"name":"self"},{"name":"treepath"}],"output":{"name":"bool"}}],[11,"is_descendant","","Returns `true` if `self` is a descendant of `ancestor`. ## `ancestor` another `TreePath`-struct",276,{"inputs":[{"name":"self"},{"name":"treepath"}],"output":{"name":"bool"}}],[11,"next","","Moves the `self` to point to the next node at the current depth.",276,{"inputs":[{"name":"self"}],"output":null}],[11,"prepend_index","","Prepends a new index to a path.",276,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[11,"prev","","Moves the `self` to point to the previous node at the current depth, if it exists.",276,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"up","","Moves the `self` to point to its parent node, if it has a parent.",276,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"default","","",276,{"inputs":[],"output":{"name":"self"}}],[11,"eq","","",276,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",276,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[11,"cmp","","",276,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"ordering"}}],[11,"fmt","","",276,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"align"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"align"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"self"},{"name":"align"}],"output":{"name":"bool"}}],[11,"hash","","",9,null],[11,"static_type","","",9,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",9,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",9,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",9,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"arrowtype"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"arrowtype"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"self"},{"name":"arrowtype"}],"output":{"name":"bool"}}],[11,"hash","","",10,null],[11,"static_type","","",10,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",10,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",10,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",10,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"assistantpagetype"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"assistantpagetype"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"self"},{"name":"assistantpagetype"}],"output":{"name":"bool"}}],[11,"hash","","",11,null],[11,"static_type","","",11,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",11,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",11,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",11,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"baselineposition"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"baselineposition"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"self"},{"name":"baselineposition"}],"output":{"name":"bool"}}],[11,"hash","","",12,null],[11,"static_type","","",12,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",12,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",12,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",12,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"buildererror"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"buildererror"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"self"},{"name":"buildererror"}],"output":{"name":"bool"}}],[11,"hash","","",13,null],[11,"domain","","",13,{"inputs":[],"output":{"name":"gquark"}}],[11,"code","","",13,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from","","",13,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"static_type","","",13,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",13,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",13,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",13,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"buttonboxstyle"}}],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"buttonboxstyle"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"self"},{"name":"buttonboxstyle"}],"output":{"name":"bool"}}],[11,"hash","","",14,null],[11,"static_type","","",14,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",14,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",14,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",14,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"buttonrole"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",15,{"inputs":[{"name":"self"},{"name":"buttonrole"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"self"},{"name":"buttonrole"}],"output":{"name":"bool"}}],[11,"hash","","",15,null],[11,"static_type","","",15,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",15,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",15,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",15,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"buttonstype"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",16,{"inputs":[{"name":"self"},{"name":"buttonstype"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"self"},{"name":"buttonstype"}],"output":{"name":"bool"}}],[11,"hash","","",16,null],[11,"static_type","","",16,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",16,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",16,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",16,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"cellrendereraccelmode"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",17,{"inputs":[{"name":"self"},{"name":"cellrendereraccelmode"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"self"},{"name":"cellrendereraccelmode"}],"output":{"name":"bool"}}],[11,"hash","","",17,null],[11,"static_type","","",17,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",17,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",17,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",17,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"cellrenderermode"}}],[11,"fmt","","",18,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",18,{"inputs":[{"name":"self"},{"name":"cellrenderermode"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"self"},{"name":"cellrenderermode"}],"output":{"name":"bool"}}],[11,"hash","","",18,null],[11,"static_type","","",18,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",18,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",18,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",18,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"cornertype"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",19,{"inputs":[{"name":"self"},{"name":"cornertype"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"self"},{"name":"cornertype"}],"output":{"name":"bool"}}],[11,"hash","","",19,null],[11,"static_type","","",19,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",19,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",19,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",19,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"cssprovidererror"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",20,{"inputs":[{"name":"self"},{"name":"cssprovidererror"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"self"},{"name":"cssprovidererror"}],"output":{"name":"bool"}}],[11,"hash","","",20,null],[11,"domain","","",20,{"inputs":[],"output":{"name":"gquark"}}],[11,"code","","",20,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from","","",20,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"static_type","","",20,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",20,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",20,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",20,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"csssectiontype"}}],[11,"fmt","","",21,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",21,{"inputs":[{"name":"self"},{"name":"csssectiontype"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"self"},{"name":"csssectiontype"}],"output":{"name":"bool"}}],[11,"hash","","",21,null],[11,"static_type","","",21,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",21,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",21,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",21,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"deletetype"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",22,{"inputs":[{"name":"self"},{"name":"deletetype"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"self"},{"name":"deletetype"}],"output":{"name":"bool"}}],[11,"hash","","",22,null],[11,"static_type","","",22,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",22,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",22,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",22,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"directiontype"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",23,{"inputs":[{"name":"self"},{"name":"directiontype"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"self"},{"name":"directiontype"}],"output":{"name":"bool"}}],[11,"hash","","",23,null],[11,"static_type","","",23,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",23,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",23,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",23,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"dragresult"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",24,{"inputs":[{"name":"self"},{"name":"dragresult"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"self"},{"name":"dragresult"}],"output":{"name":"bool"}}],[11,"hash","","",24,null],[11,"static_type","","",24,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",24,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",24,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",24,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"entryiconposition"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",25,{"inputs":[{"name":"self"},{"name":"entryiconposition"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"self"},{"name":"entryiconposition"}],"output":{"name":"bool"}}],[11,"hash","","",25,null],[11,"static_type","","",25,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",25,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",25,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",25,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"eventsequencestate"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",26,{"inputs":[{"name":"self"},{"name":"eventsequencestate"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"self"},{"name":"eventsequencestate"}],"output":{"name":"bool"}}],[11,"hash","","",26,null],[11,"static_type","","",26,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",26,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",26,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",26,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"filechooseraction"}}],[11,"fmt","","",27,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",27,{"inputs":[{"name":"self"},{"name":"filechooseraction"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"self"},{"name":"filechooseraction"}],"output":{"name":"bool"}}],[11,"hash","","",27,null],[11,"static_type","","",27,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",27,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",27,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",27,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"filechooserconfirmation"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",28,{"inputs":[{"name":"self"},{"name":"filechooserconfirmation"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"self"},{"name":"filechooserconfirmation"}],"output":{"name":"bool"}}],[11,"hash","","",28,null],[11,"static_type","","",28,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",28,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",28,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",28,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"filechoosererror"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",29,{"inputs":[{"name":"self"},{"name":"filechoosererror"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"self"},{"name":"filechoosererror"}],"output":{"name":"bool"}}],[11,"hash","","",29,null],[11,"domain","","",29,{"inputs":[],"output":{"name":"gquark"}}],[11,"code","","",29,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from","","",29,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"static_type","","",29,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",29,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",29,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",29,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"impreeditstyle"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",30,{"inputs":[{"name":"self"},{"name":"impreeditstyle"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"self"},{"name":"impreeditstyle"}],"output":{"name":"bool"}}],[11,"hash","","",30,null],[11,"static_type","","",30,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",30,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",30,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",30,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"imstatusstyle"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",31,{"inputs":[{"name":"self"},{"name":"imstatusstyle"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"self"},{"name":"imstatusstyle"}],"output":{"name":"bool"}}],[11,"hash","","",31,null],[11,"static_type","","",31,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",31,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",31,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",31,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"iconsize"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"self"},{"name":"iconsize"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"self"},{"name":"iconsize"}],"output":{"name":"bool"}}],[11,"hash","","",32,null],[11,"static_type","","",32,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",32,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",32,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",32,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"iconthemeerror"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",33,{"inputs":[{"name":"self"},{"name":"iconthemeerror"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"self"},{"name":"iconthemeerror"}],"output":{"name":"bool"}}],[11,"hash","","",33,null],[11,"domain","","",33,{"inputs":[],"output":{"name":"gquark"}}],[11,"code","","",33,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from","","",33,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"static_type","","",33,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",33,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",33,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",33,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"iconviewdropposition"}}],[11,"fmt","","",34,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",34,{"inputs":[{"name":"self"},{"name":"iconviewdropposition"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"self"},{"name":"iconviewdropposition"}],"output":{"name":"bool"}}],[11,"hash","","",34,null],[11,"static_type","","",34,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",34,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",34,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",34,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"imagetype"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",35,{"inputs":[{"name":"self"},{"name":"imagetype"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"self"},{"name":"imagetype"}],"output":{"name":"bool"}}],[11,"hash","","",35,null],[11,"static_type","","",35,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",35,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",35,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",35,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"inputpurpose"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",36,{"inputs":[{"name":"self"},{"name":"inputpurpose"}],"output":{"name":"bool"}}],[11,"ne","","",36,{"inputs":[{"name":"self"},{"name":"inputpurpose"}],"output":{"name":"bool"}}],[11,"hash","","",36,null],[11,"static_type","","",36,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",36,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",36,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",36,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"justification"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",37,{"inputs":[{"name":"self"},{"name":"justification"}],"output":{"name":"bool"}}],[11,"ne","","",37,{"inputs":[{"name":"self"},{"name":"justification"}],"output":{"name":"bool"}}],[11,"hash","","",37,null],[11,"static_type","","",37,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",37,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",37,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",37,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"levelbarmode"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",38,{"inputs":[{"name":"self"},{"name":"levelbarmode"}],"output":{"name":"bool"}}],[11,"ne","","",38,{"inputs":[{"name":"self"},{"name":"levelbarmode"}],"output":{"name":"bool"}}],[11,"hash","","",38,null],[11,"static_type","","",38,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",38,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",38,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",38,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"license"}}],[11,"fmt","","",39,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",39,{"inputs":[{"name":"self"},{"name":"license"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"self"},{"name":"license"}],"output":{"name":"bool"}}],[11,"hash","","",39,null],[11,"static_type","","",39,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",39,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",39,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",39,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"menudirectiontype"}}],[11,"fmt","","",40,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",40,{"inputs":[{"name":"self"},{"name":"menudirectiontype"}],"output":{"name":"bool"}}],[11,"ne","","",40,{"inputs":[{"name":"self"},{"name":"menudirectiontype"}],"output":{"name":"bool"}}],[11,"hash","","",40,null],[11,"static_type","","",40,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",40,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",40,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",40,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"messagetype"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",41,{"inputs":[{"name":"self"},{"name":"messagetype"}],"output":{"name":"bool"}}],[11,"ne","","",41,{"inputs":[{"name":"self"},{"name":"messagetype"}],"output":{"name":"bool"}}],[11,"hash","","",41,null],[11,"static_type","","",41,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",41,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",41,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",41,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",42,{"inputs":[{"name":"self"}],"output":{"name":"movementstep"}}],[11,"fmt","","",42,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",42,{"inputs":[{"name":"self"},{"name":"movementstep"}],"output":{"name":"bool"}}],[11,"ne","","",42,{"inputs":[{"name":"self"},{"name":"movementstep"}],"output":{"name":"bool"}}],[11,"hash","","",42,null],[11,"static_type","","",42,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",42,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",42,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",42,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"notebooktab"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",43,{"inputs":[{"name":"self"},{"name":"notebooktab"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"self"},{"name":"notebooktab"}],"output":{"name":"bool"}}],[11,"hash","","",43,null],[11,"static_type","","",43,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",43,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",43,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",43,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",44,{"inputs":[{"name":"self"}],"output":{"name":"numberuplayout"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",44,{"inputs":[{"name":"self"},{"name":"numberuplayout"}],"output":{"name":"bool"}}],[11,"ne","","",44,{"inputs":[{"name":"self"},{"name":"numberuplayout"}],"output":{"name":"bool"}}],[11,"hash","","",44,null],[11,"static_type","","",44,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",44,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",44,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",44,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",45,{"inputs":[{"name":"self"}],"output":{"name":"orientation"}}],[11,"fmt","","",45,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",45,{"inputs":[{"name":"self"},{"name":"orientation"}],"output":{"name":"bool"}}],[11,"ne","","",45,{"inputs":[{"name":"self"},{"name":"orientation"}],"output":{"name":"bool"}}],[11,"hash","","",45,null],[11,"static_type","","",45,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",45,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",45,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",45,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"packdirection"}}],[11,"fmt","","",46,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",46,{"inputs":[{"name":"self"},{"name":"packdirection"}],"output":{"name":"bool"}}],[11,"ne","","",46,{"inputs":[{"name":"self"},{"name":"packdirection"}],"output":{"name":"bool"}}],[11,"hash","","",46,null],[11,"static_type","","",46,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",46,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",46,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",46,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"packtype"}}],[11,"fmt","","",47,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",47,{"inputs":[{"name":"self"},{"name":"packtype"}],"output":{"name":"bool"}}],[11,"ne","","",47,{"inputs":[{"name":"self"},{"name":"packtype"}],"output":{"name":"bool"}}],[11,"hash","","",47,null],[11,"static_type","","",47,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",47,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",47,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",47,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"pageorientation"}}],[11,"fmt","","",48,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",48,{"inputs":[{"name":"self"},{"name":"pageorientation"}],"output":{"name":"bool"}}],[11,"ne","","",48,{"inputs":[{"name":"self"},{"name":"pageorientation"}],"output":{"name":"bool"}}],[11,"hash","","",48,null],[11,"static_type","","",48,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",48,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",48,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",48,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",49,{"inputs":[{"name":"self"}],"output":{"name":"pageset"}}],[11,"fmt","","",49,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",49,{"inputs":[{"name":"self"},{"name":"pageset"}],"output":{"name":"bool"}}],[11,"ne","","",49,{"inputs":[{"name":"self"},{"name":"pageset"}],"output":{"name":"bool"}}],[11,"hash","","",49,null],[11,"static_type","","",49,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",49,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",49,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",49,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",50,{"inputs":[{"name":"self"}],"output":{"name":"pandirection"}}],[11,"fmt","","",50,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",50,{"inputs":[{"name":"self"},{"name":"pandirection"}],"output":{"name":"bool"}}],[11,"ne","","",50,{"inputs":[{"name":"self"},{"name":"pandirection"}],"output":{"name":"bool"}}],[11,"hash","","",50,null],[11,"static_type","","",50,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",50,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",50,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",50,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",51,{"inputs":[{"name":"self"}],"output":{"name":"policytype"}}],[11,"fmt","","",51,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",51,{"inputs":[{"name":"self"},{"name":"policytype"}],"output":{"name":"bool"}}],[11,"ne","","",51,{"inputs":[{"name":"self"},{"name":"policytype"}],"output":{"name":"bool"}}],[11,"hash","","",51,null],[11,"static_type","","",51,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",51,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",51,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",51,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"popoverconstraint"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",52,{"inputs":[{"name":"self"},{"name":"popoverconstraint"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"self"},{"name":"popoverconstraint"}],"output":{"name":"bool"}}],[11,"hash","","",52,null],[11,"static_type","","",52,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",52,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",52,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",52,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",53,{"inputs":[{"name":"self"}],"output":{"name":"positiontype"}}],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",53,{"inputs":[{"name":"self"},{"name":"positiontype"}],"output":{"name":"bool"}}],[11,"ne","","",53,{"inputs":[{"name":"self"},{"name":"positiontype"}],"output":{"name":"bool"}}],[11,"hash","","",53,null],[11,"static_type","","",53,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",53,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",53,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",53,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",54,{"inputs":[{"name":"self"}],"output":{"name":"printduplex"}}],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",54,{"inputs":[{"name":"self"},{"name":"printduplex"}],"output":{"name":"bool"}}],[11,"ne","","",54,{"inputs":[{"name":"self"},{"name":"printduplex"}],"output":{"name":"bool"}}],[11,"hash","","",54,null],[11,"static_type","","",54,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",54,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",54,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",54,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",55,{"inputs":[{"name":"self"}],"output":{"name":"printerror"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",55,{"inputs":[{"name":"self"},{"name":"printerror"}],"output":{"name":"bool"}}],[11,"ne","","",55,{"inputs":[{"name":"self"},{"name":"printerror"}],"output":{"name":"bool"}}],[11,"hash","","",55,null],[11,"domain","","",55,{"inputs":[],"output":{"name":"gquark"}}],[11,"code","","",55,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from","","",55,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"static_type","","",55,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",55,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",55,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",55,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",56,{"inputs":[{"name":"self"}],"output":{"name":"printpages"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",56,{"inputs":[{"name":"self"},{"name":"printpages"}],"output":{"name":"bool"}}],[11,"ne","","",56,{"inputs":[{"name":"self"},{"name":"printpages"}],"output":{"name":"bool"}}],[11,"hash","","",56,null],[11,"static_type","","",56,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",56,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",56,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",56,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",57,{"inputs":[{"name":"self"}],"output":{"name":"printquality"}}],[11,"fmt","","",57,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",57,{"inputs":[{"name":"self"},{"name":"printquality"}],"output":{"name":"bool"}}],[11,"ne","","",57,{"inputs":[{"name":"self"},{"name":"printquality"}],"output":{"name":"bool"}}],[11,"hash","","",57,null],[11,"static_type","","",57,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",57,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",57,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",57,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",58,{"inputs":[{"name":"self"}],"output":{"name":"propagationphase"}}],[11,"fmt","","",58,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",58,{"inputs":[{"name":"self"},{"name":"propagationphase"}],"output":{"name":"bool"}}],[11,"ne","","",58,{"inputs":[{"name":"self"},{"name":"propagationphase"}],"output":{"name":"bool"}}],[11,"hash","","",58,null],[11,"static_type","","",58,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",58,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",58,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",58,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",59,{"inputs":[{"name":"self"}],"output":{"name":"recentchoosererror"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",59,{"inputs":[{"name":"self"},{"name":"recentchoosererror"}],"output":{"name":"bool"}}],[11,"ne","","",59,{"inputs":[{"name":"self"},{"name":"recentchoosererror"}],"output":{"name":"bool"}}],[11,"hash","","",59,null],[11,"domain","","",59,{"inputs":[],"output":{"name":"gquark"}}],[11,"code","","",59,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from","","",59,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"static_type","","",59,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",59,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",59,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",59,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",60,{"inputs":[{"name":"self"}],"output":{"name":"recentmanagererror"}}],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",60,{"inputs":[{"name":"self"},{"name":"recentmanagererror"}],"output":{"name":"bool"}}],[11,"ne","","",60,{"inputs":[{"name":"self"},{"name":"recentmanagererror"}],"output":{"name":"bool"}}],[11,"hash","","",60,null],[11,"domain","","",60,{"inputs":[],"output":{"name":"gquark"}}],[11,"code","","",60,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from","","",60,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"static_type","","",60,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",60,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",60,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",60,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",61,{"inputs":[{"name":"self"}],"output":{"name":"recentsorttype"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",61,{"inputs":[{"name":"self"},{"name":"recentsorttype"}],"output":{"name":"bool"}}],[11,"ne","","",61,{"inputs":[{"name":"self"},{"name":"recentsorttype"}],"output":{"name":"bool"}}],[11,"hash","","",61,null],[11,"static_type","","",61,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",61,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",61,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",61,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",62,{"inputs":[{"name":"self"}],"output":{"name":"reliefstyle"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",62,{"inputs":[{"name":"self"},{"name":"reliefstyle"}],"output":{"name":"bool"}}],[11,"ne","","",62,{"inputs":[{"name":"self"},{"name":"reliefstyle"}],"output":{"name":"bool"}}],[11,"hash","","",62,null],[11,"static_type","","",62,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",62,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",62,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",62,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",63,{"inputs":[{"name":"self"}],"output":{"name":"resizemode"}}],[11,"fmt","","",63,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",63,{"inputs":[{"name":"self"},{"name":"resizemode"}],"output":{"name":"bool"}}],[11,"ne","","",63,{"inputs":[{"name":"self"},{"name":"resizemode"}],"output":{"name":"bool"}}],[11,"hash","","",63,null],[11,"static_type","","",63,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",63,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",63,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",63,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",64,{"inputs":[{"name":"self"}],"output":{"name":"responsetype"}}],[11,"fmt","","",64,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",64,{"inputs":[{"name":"self"},{"name":"responsetype"}],"output":{"name":"bool"}}],[11,"ne","","",64,{"inputs":[{"name":"self"},{"name":"responsetype"}],"output":{"name":"bool"}}],[11,"hash","","",64,null],[11,"static_type","","",64,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",64,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",64,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",64,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",65,{"inputs":[{"name":"self"}],"output":{"name":"revealertransitiontype"}}],[11,"fmt","","",65,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",65,{"inputs":[{"name":"self"},{"name":"revealertransitiontype"}],"output":{"name":"bool"}}],[11,"ne","","",65,{"inputs":[{"name":"self"},{"name":"revealertransitiontype"}],"output":{"name":"bool"}}],[11,"hash","","",65,null],[11,"static_type","","",65,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",65,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",65,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",65,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",66,{"inputs":[{"name":"self"}],"output":{"name":"scrollstep"}}],[11,"fmt","","",66,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",66,{"inputs":[{"name":"self"},{"name":"scrollstep"}],"output":{"name":"bool"}}],[11,"ne","","",66,{"inputs":[{"name":"self"},{"name":"scrollstep"}],"output":{"name":"bool"}}],[11,"hash","","",66,null],[11,"static_type","","",66,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",66,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",66,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",66,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",67,{"inputs":[{"name":"self"}],"output":{"name":"scrolltype"}}],[11,"fmt","","",67,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",67,{"inputs":[{"name":"self"},{"name":"scrolltype"}],"output":{"name":"bool"}}],[11,"ne","","",67,{"inputs":[{"name":"self"},{"name":"scrolltype"}],"output":{"name":"bool"}}],[11,"hash","","",67,null],[11,"static_type","","",67,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",67,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",67,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",67,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",68,{"inputs":[{"name":"self"}],"output":{"name":"scrollablepolicy"}}],[11,"fmt","","",68,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",68,{"inputs":[{"name":"self"},{"name":"scrollablepolicy"}],"output":{"name":"bool"}}],[11,"ne","","",68,{"inputs":[{"name":"self"},{"name":"scrollablepolicy"}],"output":{"name":"bool"}}],[11,"hash","","",68,null],[11,"static_type","","",68,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",68,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",68,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",68,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",69,{"inputs":[{"name":"self"}],"output":{"name":"selectionmode"}}],[11,"fmt","","",69,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",69,{"inputs":[{"name":"self"},{"name":"selectionmode"}],"output":{"name":"bool"}}],[11,"ne","","",69,{"inputs":[{"name":"self"},{"name":"selectionmode"}],"output":{"name":"bool"}}],[11,"hash","","",69,null],[11,"static_type","","",69,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",69,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",69,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",69,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",70,{"inputs":[{"name":"self"}],"output":{"name":"sensitivitytype"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",70,{"inputs":[{"name":"self"},{"name":"sensitivitytype"}],"output":{"name":"bool"}}],[11,"ne","","",70,{"inputs":[{"name":"self"},{"name":"sensitivitytype"}],"output":{"name":"bool"}}],[11,"hash","","",70,null],[11,"static_type","","",70,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",70,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",70,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",70,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",71,{"inputs":[{"name":"self"}],"output":{"name":"shadowtype"}}],[11,"fmt","","",71,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",71,{"inputs":[{"name":"self"},{"name":"shadowtype"}],"output":{"name":"bool"}}],[11,"ne","","",71,{"inputs":[{"name":"self"},{"name":"shadowtype"}],"output":{"name":"bool"}}],[11,"hash","","",71,null],[11,"static_type","","",71,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",71,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",71,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",71,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",72,{"inputs":[{"name":"self"}],"output":{"name":"sizegroupmode"}}],[11,"fmt","","",72,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",72,{"inputs":[{"name":"self"},{"name":"sizegroupmode"}],"output":{"name":"bool"}}],[11,"ne","","",72,{"inputs":[{"name":"self"},{"name":"sizegroupmode"}],"output":{"name":"bool"}}],[11,"hash","","",72,null],[11,"static_type","","",72,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",72,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",72,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",72,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",73,{"inputs":[{"name":"self"}],"output":{"name":"sizerequestmode"}}],[11,"fmt","","",73,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",73,{"inputs":[{"name":"self"},{"name":"sizerequestmode"}],"output":{"name":"bool"}}],[11,"ne","","",73,{"inputs":[{"name":"self"},{"name":"sizerequestmode"}],"output":{"name":"bool"}}],[11,"hash","","",73,null],[11,"static_type","","",73,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",73,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",73,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",73,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",74,{"inputs":[{"name":"self"}],"output":{"name":"sorttype"}}],[11,"fmt","","",74,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",74,{"inputs":[{"name":"self"},{"name":"sorttype"}],"output":{"name":"bool"}}],[11,"ne","","",74,{"inputs":[{"name":"self"},{"name":"sorttype"}],"output":{"name":"bool"}}],[11,"hash","","",74,null],[11,"static_type","","",74,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",74,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",74,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",74,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",75,{"inputs":[{"name":"self"}],"output":{"name":"spinbuttonupdatepolicy"}}],[11,"fmt","","",75,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",75,{"inputs":[{"name":"self"},{"name":"spinbuttonupdatepolicy"}],"output":{"name":"bool"}}],[11,"ne","","",75,{"inputs":[{"name":"self"},{"name":"spinbuttonupdatepolicy"}],"output":{"name":"bool"}}],[11,"hash","","",75,null],[11,"static_type","","",75,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",75,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",75,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",75,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",76,{"inputs":[{"name":"self"}],"output":{"name":"spintype"}}],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",76,{"inputs":[{"name":"self"},{"name":"spintype"}],"output":{"name":"bool"}}],[11,"ne","","",76,{"inputs":[{"name":"self"},{"name":"spintype"}],"output":{"name":"bool"}}],[11,"hash","","",76,null],[11,"static_type","","",76,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",76,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",76,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",76,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",77,{"inputs":[{"name":"self"}],"output":{"name":"stacktransitiontype"}}],[11,"fmt","","",77,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",77,{"inputs":[{"name":"self"},{"name":"stacktransitiontype"}],"output":{"name":"bool"}}],[11,"ne","","",77,{"inputs":[{"name":"self"},{"name":"stacktransitiontype"}],"output":{"name":"bool"}}],[11,"hash","","",77,null],[11,"static_type","","",77,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",77,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",77,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",77,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",78,{"inputs":[{"name":"self"}],"output":{"name":"statetype"}}],[11,"fmt","","",78,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",78,{"inputs":[{"name":"self"},{"name":"statetype"}],"output":{"name":"bool"}}],[11,"ne","","",78,{"inputs":[{"name":"self"},{"name":"statetype"}],"output":{"name":"bool"}}],[11,"hash","","",78,null],[11,"static_type","","",78,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",78,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",78,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",78,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",79,{"inputs":[{"name":"self"}],"output":{"name":"textdirection"}}],[11,"fmt","","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",79,{"inputs":[{"name":"self"},{"name":"textdirection"}],"output":{"name":"bool"}}],[11,"ne","","",79,{"inputs":[{"name":"self"},{"name":"textdirection"}],"output":{"name":"bool"}}],[11,"hash","","",79,null],[11,"static_type","","",79,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",79,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",79,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",79,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",80,{"inputs":[{"name":"self"}],"output":{"name":"textextendselection"}}],[11,"fmt","","",80,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",80,{"inputs":[{"name":"self"},{"name":"textextendselection"}],"output":{"name":"bool"}}],[11,"ne","","",80,{"inputs":[{"name":"self"},{"name":"textextendselection"}],"output":{"name":"bool"}}],[11,"hash","","",80,null],[11,"static_type","","",80,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",80,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",80,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",80,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",81,{"inputs":[{"name":"self"}],"output":{"name":"textwindowtype"}}],[11,"fmt","","",81,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",81,{"inputs":[{"name":"self"},{"name":"textwindowtype"}],"output":{"name":"bool"}}],[11,"ne","","",81,{"inputs":[{"name":"self"},{"name":"textwindowtype"}],"output":{"name":"bool"}}],[11,"hash","","",81,null],[11,"static_type","","",81,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",81,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",81,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",81,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",82,{"inputs":[{"name":"self"}],"output":{"name":"toolbarstyle"}}],[11,"fmt","","",82,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",82,{"inputs":[{"name":"self"},{"name":"toolbarstyle"}],"output":{"name":"bool"}}],[11,"ne","","",82,{"inputs":[{"name":"self"},{"name":"toolbarstyle"}],"output":{"name":"bool"}}],[11,"hash","","",82,null],[11,"static_type","","",82,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",82,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",82,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",82,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",83,{"inputs":[{"name":"self"}],"output":{"name":"treeviewcolumnsizing"}}],[11,"fmt","","",83,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",83,{"inputs":[{"name":"self"},{"name":"treeviewcolumnsizing"}],"output":{"name":"bool"}}],[11,"ne","","",83,{"inputs":[{"name":"self"},{"name":"treeviewcolumnsizing"}],"output":{"name":"bool"}}],[11,"hash","","",83,null],[11,"static_type","","",83,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",83,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",83,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",83,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",84,{"inputs":[{"name":"self"}],"output":{"name":"treeviewdropposition"}}],[11,"fmt","","",84,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",84,{"inputs":[{"name":"self"},{"name":"treeviewdropposition"}],"output":{"name":"bool"}}],[11,"ne","","",84,{"inputs":[{"name":"self"},{"name":"treeviewdropposition"}],"output":{"name":"bool"}}],[11,"hash","","",84,null],[11,"static_type","","",84,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",84,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",84,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",84,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",85,{"inputs":[{"name":"self"}],"output":{"name":"treeviewgridlines"}}],[11,"fmt","","",85,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",85,{"inputs":[{"name":"self"},{"name":"treeviewgridlines"}],"output":{"name":"bool"}}],[11,"ne","","",85,{"inputs":[{"name":"self"},{"name":"treeviewgridlines"}],"output":{"name":"bool"}}],[11,"hash","","",85,null],[11,"static_type","","",85,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",85,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",85,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",85,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",86,{"inputs":[{"name":"self"}],"output":{"name":"unit"}}],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",86,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"bool"}}],[11,"hash","","",86,null],[11,"static_type","","",86,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",86,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",86,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",86,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",87,{"inputs":[{"name":"self"}],"output":{"name":"widgethelptype"}}],[11,"fmt","","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",87,{"inputs":[{"name":"self"},{"name":"widgethelptype"}],"output":{"name":"bool"}}],[11,"ne","","",87,{"inputs":[{"name":"self"},{"name":"widgethelptype"}],"output":{"name":"bool"}}],[11,"hash","","",87,null],[11,"static_type","","",87,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",87,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",87,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",87,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",88,{"inputs":[{"name":"self"}],"output":{"name":"windowposition"}}],[11,"fmt","","",88,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",88,{"inputs":[{"name":"self"},{"name":"windowposition"}],"output":{"name":"bool"}}],[11,"ne","","",88,{"inputs":[{"name":"self"},{"name":"windowposition"}],"output":{"name":"bool"}}],[11,"hash","","",88,null],[11,"static_type","","",88,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",88,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",88,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",88,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",89,{"inputs":[{"name":"self"}],"output":{"name":"windowtype"}}],[11,"fmt","","",89,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",89,{"inputs":[{"name":"self"},{"name":"windowtype"}],"output":{"name":"bool"}}],[11,"ne","","",89,{"inputs":[{"name":"self"},{"name":"windowtype"}],"output":{"name":"bool"}}],[11,"hash","","",89,null],[11,"static_type","","",89,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",89,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",89,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",89,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",90,{"inputs":[{"name":"self"}],"output":{"name":"wrapmode"}}],[11,"fmt","","",90,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",90,{"inputs":[{"name":"self"},{"name":"wrapmode"}],"output":{"name":"bool"}}],[11,"ne","","",90,{"inputs":[{"name":"self"},{"name":"wrapmode"}],"output":{"name":"bool"}}],[11,"hash","","",90,null],[11,"static_type","","",90,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",90,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",90,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",90,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"eq","","",277,{"inputs":[{"name":"self"},{"name":"accelflags"}],"output":{"name":"bool"}}],[11,"ne","","",277,{"inputs":[{"name":"self"},{"name":"accelflags"}],"output":{"name":"bool"}}],[11,"clone","","",277,{"inputs":[{"name":"self"}],"output":{"name":"accelflags"}}],[11,"partial_cmp","","",277,{"inputs":[{"name":"self"},{"name":"accelflags"}],"output":{"name":"option"}}],[11,"lt","","",277,{"inputs":[{"name":"self"},{"name":"accelflags"}],"output":{"name":"bool"}}],[11,"le","","",277,{"inputs":[{"name":"self"},{"name":"accelflags"}],"output":{"name":"bool"}}],[11,"gt","","",277,{"inputs":[{"name":"self"},{"name":"accelflags"}],"output":{"name":"bool"}}],[11,"ge","","",277,{"inputs":[{"name":"self"},{"name":"accelflags"}],"output":{"name":"bool"}}],[11,"cmp","","",277,{"inputs":[{"name":"self"},{"name":"accelflags"}],"output":{"name":"ordering"}}],[11,"hash","","",277,null],[11,"fmt","","",277,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",277,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",277,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",277,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",277,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",277,{"inputs":[],"output":{"name":"accelflags"}}],[11,"all","","Returns the set containing all flags.",277,{"inputs":[],"output":{"name":"accelflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",277,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",277,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",277,{"inputs":[{"name":"u32"}],"output":{"name":"accelflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",277,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",277,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",277,{"inputs":[{"name":"self"},{"name":"accelflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",277,{"inputs":[{"name":"self"},{"name":"accelflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",277,{"inputs":[{"name":"self"},{"name":"accelflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",277,{"inputs":[{"name":"self"},{"name":"accelflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",277,{"inputs":[{"name":"self"},{"name":"accelflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",277,{"inputs":[{"name":"self"},{"name":"accelflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",277,{"inputs":[{"name":"self"},{"name":"accelflags"}],"output":{"name":"accelflags"}}],[11,"bitor_assign","","Adds the set of flags.",277,{"inputs":[{"name":"self"},{"name":"accelflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",277,{"inputs":[{"name":"self"},{"name":"accelflags"}],"output":{"name":"accelflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",277,{"inputs":[{"name":"self"},{"name":"accelflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",277,{"inputs":[{"name":"self"},{"name":"accelflags"}],"output":{"name":"accelflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",277,{"inputs":[{"name":"self"},{"name":"accelflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",277,{"inputs":[{"name":"self"},{"name":"accelflags"}],"output":{"name":"accelflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",277,{"inputs":[{"name":"self"},{"name":"accelflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",277,{"inputs":[{"name":"self"}],"output":{"name":"accelflags"}}],[11,"extend","","",277,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",277,{"inputs":[{"name":"t"}],"output":{"name":"accelflags"}}],[11,"static_type","","",277,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",277,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",277,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",277,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"eq","","",278,{"inputs":[{"name":"self"},{"name":"applicationinhibitflags"}],"output":{"name":"bool"}}],[11,"ne","","",278,{"inputs":[{"name":"self"},{"name":"applicationinhibitflags"}],"output":{"name":"bool"}}],[11,"clone","","",278,{"inputs":[{"name":"self"}],"output":{"name":"applicationinhibitflags"}}],[11,"partial_cmp","","",278,{"inputs":[{"name":"self"},{"name":"applicationinhibitflags"}],"output":{"name":"option"}}],[11,"lt","","",278,{"inputs":[{"name":"self"},{"name":"applicationinhibitflags"}],"output":{"name":"bool"}}],[11,"le","","",278,{"inputs":[{"name":"self"},{"name":"applicationinhibitflags"}],"output":{"name":"bool"}}],[11,"gt","","",278,{"inputs":[{"name":"self"},{"name":"applicationinhibitflags"}],"output":{"name":"bool"}}],[11,"ge","","",278,{"inputs":[{"name":"self"},{"name":"applicationinhibitflags"}],"output":{"name":"bool"}}],[11,"cmp","","",278,{"inputs":[{"name":"self"},{"name":"applicationinhibitflags"}],"output":{"name":"ordering"}}],[11,"hash","","",278,null],[11,"fmt","","",278,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",278,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",278,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",278,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",278,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",278,{"inputs":[],"output":{"name":"applicationinhibitflags"}}],[11,"all","","Returns the set containing all flags.",278,{"inputs":[],"output":{"name":"applicationinhibitflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",278,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",278,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",278,{"inputs":[{"name":"u32"}],"output":{"name":"applicationinhibitflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",278,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",278,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",278,{"inputs":[{"name":"self"},{"name":"applicationinhibitflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",278,{"inputs":[{"name":"self"},{"name":"applicationinhibitflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",278,{"inputs":[{"name":"self"},{"name":"applicationinhibitflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",278,{"inputs":[{"name":"self"},{"name":"applicationinhibitflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",278,{"inputs":[{"name":"self"},{"name":"applicationinhibitflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",278,{"inputs":[{"name":"self"},{"name":"applicationinhibitflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",278,{"inputs":[{"name":"self"},{"name":"applicationinhibitflags"}],"output":{"name":"applicationinhibitflags"}}],[11,"bitor_assign","","Adds the set of flags.",278,{"inputs":[{"name":"self"},{"name":"applicationinhibitflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",278,{"inputs":[{"name":"self"},{"name":"applicationinhibitflags"}],"output":{"name":"applicationinhibitflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",278,{"inputs":[{"name":"self"},{"name":"applicationinhibitflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",278,{"inputs":[{"name":"self"},{"name":"applicationinhibitflags"}],"output":{"name":"applicationinhibitflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",278,{"inputs":[{"name":"self"},{"name":"applicationinhibitflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",278,{"inputs":[{"name":"self"},{"name":"applicationinhibitflags"}],"output":{"name":"applicationinhibitflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",278,{"inputs":[{"name":"self"},{"name":"applicationinhibitflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",278,{"inputs":[{"name":"self"}],"output":{"name":"applicationinhibitflags"}}],[11,"extend","","",278,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",278,{"inputs":[{"name":"t"}],"output":{"name":"applicationinhibitflags"}}],[11,"static_type","","",278,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",278,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",278,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",278,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"eq","","",279,{"inputs":[{"name":"self"},{"name":"calendardisplayoptions"}],"output":{"name":"bool"}}],[11,"ne","","",279,{"inputs":[{"name":"self"},{"name":"calendardisplayoptions"}],"output":{"name":"bool"}}],[11,"clone","","",279,{"inputs":[{"name":"self"}],"output":{"name":"calendardisplayoptions"}}],[11,"partial_cmp","","",279,{"inputs":[{"name":"self"},{"name":"calendardisplayoptions"}],"output":{"name":"option"}}],[11,"lt","","",279,{"inputs":[{"name":"self"},{"name":"calendardisplayoptions"}],"output":{"name":"bool"}}],[11,"le","","",279,{"inputs":[{"name":"self"},{"name":"calendardisplayoptions"}],"output":{"name":"bool"}}],[11,"gt","","",279,{"inputs":[{"name":"self"},{"name":"calendardisplayoptions"}],"output":{"name":"bool"}}],[11,"ge","","",279,{"inputs":[{"name":"self"},{"name":"calendardisplayoptions"}],"output":{"name":"bool"}}],[11,"cmp","","",279,{"inputs":[{"name":"self"},{"name":"calendardisplayoptions"}],"output":{"name":"ordering"}}],[11,"hash","","",279,null],[11,"fmt","","",279,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",279,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",279,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",279,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",279,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",279,{"inputs":[],"output":{"name":"calendardisplayoptions"}}],[11,"all","","Returns the set containing all flags.",279,{"inputs":[],"output":{"name":"calendardisplayoptions"}}],[11,"bits","","Returns the raw value of the flags currently stored.",279,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",279,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",279,{"inputs":[{"name":"u32"}],"output":{"name":"calendardisplayoptions"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",279,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",279,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",279,{"inputs":[{"name":"self"},{"name":"calendardisplayoptions"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",279,{"inputs":[{"name":"self"},{"name":"calendardisplayoptions"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",279,{"inputs":[{"name":"self"},{"name":"calendardisplayoptions"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",279,{"inputs":[{"name":"self"},{"name":"calendardisplayoptions"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",279,{"inputs":[{"name":"self"},{"name":"calendardisplayoptions"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",279,{"inputs":[{"name":"self"},{"name":"calendardisplayoptions"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",279,{"inputs":[{"name":"self"},{"name":"calendardisplayoptions"}],"output":{"name":"calendardisplayoptions"}}],[11,"bitor_assign","","Adds the set of flags.",279,{"inputs":[{"name":"self"},{"name":"calendardisplayoptions"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",279,{"inputs":[{"name":"self"},{"name":"calendardisplayoptions"}],"output":{"name":"calendardisplayoptions"}}],[11,"bitxor_assign","","Toggles the set of flags.",279,{"inputs":[{"name":"self"},{"name":"calendardisplayoptions"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",279,{"inputs":[{"name":"self"},{"name":"calendardisplayoptions"}],"output":{"name":"calendardisplayoptions"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",279,{"inputs":[{"name":"self"},{"name":"calendardisplayoptions"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",279,{"inputs":[{"name":"self"},{"name":"calendardisplayoptions"}],"output":{"name":"calendardisplayoptions"}}],[11,"sub_assign","","Disables all flags enabled in the set.",279,{"inputs":[{"name":"self"},{"name":"calendardisplayoptions"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",279,{"inputs":[{"name":"self"}],"output":{"name":"calendardisplayoptions"}}],[11,"extend","","",279,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",279,{"inputs":[{"name":"t"}],"output":{"name":"calendardisplayoptions"}}],[11,"static_type","","",279,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",279,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",279,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",279,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"eq","","",280,{"inputs":[{"name":"self"},{"name":"cellrendererstate"}],"output":{"name":"bool"}}],[11,"ne","","",280,{"inputs":[{"name":"self"},{"name":"cellrendererstate"}],"output":{"name":"bool"}}],[11,"clone","","",280,{"inputs":[{"name":"self"}],"output":{"name":"cellrendererstate"}}],[11,"partial_cmp","","",280,{"inputs":[{"name":"self"},{"name":"cellrendererstate"}],"output":{"name":"option"}}],[11,"lt","","",280,{"inputs":[{"name":"self"},{"name":"cellrendererstate"}],"output":{"name":"bool"}}],[11,"le","","",280,{"inputs":[{"name":"self"},{"name":"cellrendererstate"}],"output":{"name":"bool"}}],[11,"gt","","",280,{"inputs":[{"name":"self"},{"name":"cellrendererstate"}],"output":{"name":"bool"}}],[11,"ge","","",280,{"inputs":[{"name":"self"},{"name":"cellrendererstate"}],"output":{"name":"bool"}}],[11,"cmp","","",280,{"inputs":[{"name":"self"},{"name":"cellrendererstate"}],"output":{"name":"ordering"}}],[11,"hash","","",280,null],[11,"fmt","","",280,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",280,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",280,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",280,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",280,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",280,{"inputs":[],"output":{"name":"cellrendererstate"}}],[11,"all","","Returns the set containing all flags.",280,{"inputs":[],"output":{"name":"cellrendererstate"}}],[11,"bits","","Returns the raw value of the flags currently stored.",280,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",280,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",280,{"inputs":[{"name":"u32"}],"output":{"name":"cellrendererstate"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",280,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",280,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",280,{"inputs":[{"name":"self"},{"name":"cellrendererstate"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",280,{"inputs":[{"name":"self"},{"name":"cellrendererstate"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",280,{"inputs":[{"name":"self"},{"name":"cellrendererstate"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",280,{"inputs":[{"name":"self"},{"name":"cellrendererstate"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",280,{"inputs":[{"name":"self"},{"name":"cellrendererstate"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",280,{"inputs":[{"name":"self"},{"name":"cellrendererstate"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",280,{"inputs":[{"name":"self"},{"name":"cellrendererstate"}],"output":{"name":"cellrendererstate"}}],[11,"bitor_assign","","Adds the set of flags.",280,{"inputs":[{"name":"self"},{"name":"cellrendererstate"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",280,{"inputs":[{"name":"self"},{"name":"cellrendererstate"}],"output":{"name":"cellrendererstate"}}],[11,"bitxor_assign","","Toggles the set of flags.",280,{"inputs":[{"name":"self"},{"name":"cellrendererstate"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",280,{"inputs":[{"name":"self"},{"name":"cellrendererstate"}],"output":{"name":"cellrendererstate"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",280,{"inputs":[{"name":"self"},{"name":"cellrendererstate"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",280,{"inputs":[{"name":"self"},{"name":"cellrendererstate"}],"output":{"name":"cellrendererstate"}}],[11,"sub_assign","","Disables all flags enabled in the set.",280,{"inputs":[{"name":"self"},{"name":"cellrendererstate"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",280,{"inputs":[{"name":"self"}],"output":{"name":"cellrendererstate"}}],[11,"extend","","",280,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",280,{"inputs":[{"name":"t"}],"output":{"name":"cellrendererstate"}}],[11,"static_type","","",280,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",280,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",280,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",280,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"eq","","",281,{"inputs":[{"name":"self"},{"name":"destdefaults"}],"output":{"name":"bool"}}],[11,"ne","","",281,{"inputs":[{"name":"self"},{"name":"destdefaults"}],"output":{"name":"bool"}}],[11,"clone","","",281,{"inputs":[{"name":"self"}],"output":{"name":"destdefaults"}}],[11,"partial_cmp","","",281,{"inputs":[{"name":"self"},{"name":"destdefaults"}],"output":{"name":"option"}}],[11,"lt","","",281,{"inputs":[{"name":"self"},{"name":"destdefaults"}],"output":{"name":"bool"}}],[11,"le","","",281,{"inputs":[{"name":"self"},{"name":"destdefaults"}],"output":{"name":"bool"}}],[11,"gt","","",281,{"inputs":[{"name":"self"},{"name":"destdefaults"}],"output":{"name":"bool"}}],[11,"ge","","",281,{"inputs":[{"name":"self"},{"name":"destdefaults"}],"output":{"name":"bool"}}],[11,"cmp","","",281,{"inputs":[{"name":"self"},{"name":"destdefaults"}],"output":{"name":"ordering"}}],[11,"hash","","",281,null],[11,"fmt","","",281,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",281,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",281,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",281,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",281,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",281,{"inputs":[],"output":{"name":"destdefaults"}}],[11,"all","","Returns the set containing all flags.",281,{"inputs":[],"output":{"name":"destdefaults"}}],[11,"bits","","Returns the raw value of the flags currently stored.",281,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",281,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",281,{"inputs":[{"name":"u32"}],"output":{"name":"destdefaults"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",281,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",281,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",281,{"inputs":[{"name":"self"},{"name":"destdefaults"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",281,{"inputs":[{"name":"self"},{"name":"destdefaults"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",281,{"inputs":[{"name":"self"},{"name":"destdefaults"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",281,{"inputs":[{"name":"self"},{"name":"destdefaults"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",281,{"inputs":[{"name":"self"},{"name":"destdefaults"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",281,{"inputs":[{"name":"self"},{"name":"destdefaults"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",281,{"inputs":[{"name":"self"},{"name":"destdefaults"}],"output":{"name":"destdefaults"}}],[11,"bitor_assign","","Adds the set of flags.",281,{"inputs":[{"name":"self"},{"name":"destdefaults"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",281,{"inputs":[{"name":"self"},{"name":"destdefaults"}],"output":{"name":"destdefaults"}}],[11,"bitxor_assign","","Toggles the set of flags.",281,{"inputs":[{"name":"self"},{"name":"destdefaults"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",281,{"inputs":[{"name":"self"},{"name":"destdefaults"}],"output":{"name":"destdefaults"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",281,{"inputs":[{"name":"self"},{"name":"destdefaults"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",281,{"inputs":[{"name":"self"},{"name":"destdefaults"}],"output":{"name":"destdefaults"}}],[11,"sub_assign","","Disables all flags enabled in the set.",281,{"inputs":[{"name":"self"},{"name":"destdefaults"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",281,{"inputs":[{"name":"self"}],"output":{"name":"destdefaults"}}],[11,"extend","","",281,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",281,{"inputs":[{"name":"t"}],"output":{"name":"destdefaults"}}],[11,"static_type","","",281,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",281,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",281,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",281,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"eq","","",282,{"inputs":[{"name":"self"},{"name":"dialogflags"}],"output":{"name":"bool"}}],[11,"ne","","",282,{"inputs":[{"name":"self"},{"name":"dialogflags"}],"output":{"name":"bool"}}],[11,"clone","","",282,{"inputs":[{"name":"self"}],"output":{"name":"dialogflags"}}],[11,"partial_cmp","","",282,{"inputs":[{"name":"self"},{"name":"dialogflags"}],"output":{"name":"option"}}],[11,"lt","","",282,{"inputs":[{"name":"self"},{"name":"dialogflags"}],"output":{"name":"bool"}}],[11,"le","","",282,{"inputs":[{"name":"self"},{"name":"dialogflags"}],"output":{"name":"bool"}}],[11,"gt","","",282,{"inputs":[{"name":"self"},{"name":"dialogflags"}],"output":{"name":"bool"}}],[11,"ge","","",282,{"inputs":[{"name":"self"},{"name":"dialogflags"}],"output":{"name":"bool"}}],[11,"cmp","","",282,{"inputs":[{"name":"self"},{"name":"dialogflags"}],"output":{"name":"ordering"}}],[11,"hash","","",282,null],[11,"fmt","","",282,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",282,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",282,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",282,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",282,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",282,{"inputs":[],"output":{"name":"dialogflags"}}],[11,"all","","Returns the set containing all flags.",282,{"inputs":[],"output":{"name":"dialogflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",282,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",282,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",282,{"inputs":[{"name":"u32"}],"output":{"name":"dialogflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",282,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",282,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",282,{"inputs":[{"name":"self"},{"name":"dialogflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",282,{"inputs":[{"name":"self"},{"name":"dialogflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",282,{"inputs":[{"name":"self"},{"name":"dialogflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",282,{"inputs":[{"name":"self"},{"name":"dialogflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",282,{"inputs":[{"name":"self"},{"name":"dialogflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",282,{"inputs":[{"name":"self"},{"name":"dialogflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",282,{"inputs":[{"name":"self"},{"name":"dialogflags"}],"output":{"name":"dialogflags"}}],[11,"bitor_assign","","Adds the set of flags.",282,{"inputs":[{"name":"self"},{"name":"dialogflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",282,{"inputs":[{"name":"self"},{"name":"dialogflags"}],"output":{"name":"dialogflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",282,{"inputs":[{"name":"self"},{"name":"dialogflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",282,{"inputs":[{"name":"self"},{"name":"dialogflags"}],"output":{"name":"dialogflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",282,{"inputs":[{"name":"self"},{"name":"dialogflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",282,{"inputs":[{"name":"self"},{"name":"dialogflags"}],"output":{"name":"dialogflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",282,{"inputs":[{"name":"self"},{"name":"dialogflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",282,{"inputs":[{"name":"self"}],"output":{"name":"dialogflags"}}],[11,"extend","","",282,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",282,{"inputs":[{"name":"t"}],"output":{"name":"dialogflags"}}],[11,"static_type","","",282,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",282,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",282,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",282,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"eq","","",283,{"inputs":[{"name":"self"},{"name":"filefilterflags"}],"output":{"name":"bool"}}],[11,"ne","","",283,{"inputs":[{"name":"self"},{"name":"filefilterflags"}],"output":{"name":"bool"}}],[11,"clone","","",283,{"inputs":[{"name":"self"}],"output":{"name":"filefilterflags"}}],[11,"partial_cmp","","",283,{"inputs":[{"name":"self"},{"name":"filefilterflags"}],"output":{"name":"option"}}],[11,"lt","","",283,{"inputs":[{"name":"self"},{"name":"filefilterflags"}],"output":{"name":"bool"}}],[11,"le","","",283,{"inputs":[{"name":"self"},{"name":"filefilterflags"}],"output":{"name":"bool"}}],[11,"gt","","",283,{"inputs":[{"name":"self"},{"name":"filefilterflags"}],"output":{"name":"bool"}}],[11,"ge","","",283,{"inputs":[{"name":"self"},{"name":"filefilterflags"}],"output":{"name":"bool"}}],[11,"cmp","","",283,{"inputs":[{"name":"self"},{"name":"filefilterflags"}],"output":{"name":"ordering"}}],[11,"hash","","",283,null],[11,"fmt","","",283,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",283,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",283,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",283,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",283,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",283,{"inputs":[],"output":{"name":"filefilterflags"}}],[11,"all","","Returns the set containing all flags.",283,{"inputs":[],"output":{"name":"filefilterflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",283,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",283,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",283,{"inputs":[{"name":"u32"}],"output":{"name":"filefilterflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",283,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",283,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",283,{"inputs":[{"name":"self"},{"name":"filefilterflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",283,{"inputs":[{"name":"self"},{"name":"filefilterflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",283,{"inputs":[{"name":"self"},{"name":"filefilterflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",283,{"inputs":[{"name":"self"},{"name":"filefilterflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",283,{"inputs":[{"name":"self"},{"name":"filefilterflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",283,{"inputs":[{"name":"self"},{"name":"filefilterflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",283,{"inputs":[{"name":"self"},{"name":"filefilterflags"}],"output":{"name":"filefilterflags"}}],[11,"bitor_assign","","Adds the set of flags.",283,{"inputs":[{"name":"self"},{"name":"filefilterflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",283,{"inputs":[{"name":"self"},{"name":"filefilterflags"}],"output":{"name":"filefilterflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",283,{"inputs":[{"name":"self"},{"name":"filefilterflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",283,{"inputs":[{"name":"self"},{"name":"filefilterflags"}],"output":{"name":"filefilterflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",283,{"inputs":[{"name":"self"},{"name":"filefilterflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",283,{"inputs":[{"name":"self"},{"name":"filefilterflags"}],"output":{"name":"filefilterflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",283,{"inputs":[{"name":"self"},{"name":"filefilterflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",283,{"inputs":[{"name":"self"}],"output":{"name":"filefilterflags"}}],[11,"extend","","",283,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",283,{"inputs":[{"name":"t"}],"output":{"name":"filefilterflags"}}],[11,"static_type","","",283,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",283,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",283,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",283,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"eq","","",284,{"inputs":[{"name":"self"},{"name":"iconlookupflags"}],"output":{"name":"bool"}}],[11,"ne","","",284,{"inputs":[{"name":"self"},{"name":"iconlookupflags"}],"output":{"name":"bool"}}],[11,"clone","","",284,{"inputs":[{"name":"self"}],"output":{"name":"iconlookupflags"}}],[11,"partial_cmp","","",284,{"inputs":[{"name":"self"},{"name":"iconlookupflags"}],"output":{"name":"option"}}],[11,"lt","","",284,{"inputs":[{"name":"self"},{"name":"iconlookupflags"}],"output":{"name":"bool"}}],[11,"le","","",284,{"inputs":[{"name":"self"},{"name":"iconlookupflags"}],"output":{"name":"bool"}}],[11,"gt","","",284,{"inputs":[{"name":"self"},{"name":"iconlookupflags"}],"output":{"name":"bool"}}],[11,"ge","","",284,{"inputs":[{"name":"self"},{"name":"iconlookupflags"}],"output":{"name":"bool"}}],[11,"cmp","","",284,{"inputs":[{"name":"self"},{"name":"iconlookupflags"}],"output":{"name":"ordering"}}],[11,"hash","","",284,null],[11,"fmt","","",284,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",284,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",284,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",284,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",284,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",284,{"inputs":[],"output":{"name":"iconlookupflags"}}],[11,"all","","Returns the set containing all flags.",284,{"inputs":[],"output":{"name":"iconlookupflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",284,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",284,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",284,{"inputs":[{"name":"u32"}],"output":{"name":"iconlookupflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",284,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",284,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",284,{"inputs":[{"name":"self"},{"name":"iconlookupflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",284,{"inputs":[{"name":"self"},{"name":"iconlookupflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",284,{"inputs":[{"name":"self"},{"name":"iconlookupflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",284,{"inputs":[{"name":"self"},{"name":"iconlookupflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",284,{"inputs":[{"name":"self"},{"name":"iconlookupflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",284,{"inputs":[{"name":"self"},{"name":"iconlookupflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",284,{"inputs":[{"name":"self"},{"name":"iconlookupflags"}],"output":{"name":"iconlookupflags"}}],[11,"bitor_assign","","Adds the set of flags.",284,{"inputs":[{"name":"self"},{"name":"iconlookupflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",284,{"inputs":[{"name":"self"},{"name":"iconlookupflags"}],"output":{"name":"iconlookupflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",284,{"inputs":[{"name":"self"},{"name":"iconlookupflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",284,{"inputs":[{"name":"self"},{"name":"iconlookupflags"}],"output":{"name":"iconlookupflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",284,{"inputs":[{"name":"self"},{"name":"iconlookupflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",284,{"inputs":[{"name":"self"},{"name":"iconlookupflags"}],"output":{"name":"iconlookupflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",284,{"inputs":[{"name":"self"},{"name":"iconlookupflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",284,{"inputs":[{"name":"self"}],"output":{"name":"iconlookupflags"}}],[11,"extend","","",284,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",284,{"inputs":[{"name":"t"}],"output":{"name":"iconlookupflags"}}],[11,"static_type","","",284,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",284,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",284,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",284,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"eq","","",285,{"inputs":[{"name":"self"},{"name":"inputhints"}],"output":{"name":"bool"}}],[11,"ne","","",285,{"inputs":[{"name":"self"},{"name":"inputhints"}],"output":{"name":"bool"}}],[11,"clone","","",285,{"inputs":[{"name":"self"}],"output":{"name":"inputhints"}}],[11,"partial_cmp","","",285,{"inputs":[{"name":"self"},{"name":"inputhints"}],"output":{"name":"option"}}],[11,"lt","","",285,{"inputs":[{"name":"self"},{"name":"inputhints"}],"output":{"name":"bool"}}],[11,"le","","",285,{"inputs":[{"name":"self"},{"name":"inputhints"}],"output":{"name":"bool"}}],[11,"gt","","",285,{"inputs":[{"name":"self"},{"name":"inputhints"}],"output":{"name":"bool"}}],[11,"ge","","",285,{"inputs":[{"name":"self"},{"name":"inputhints"}],"output":{"name":"bool"}}],[11,"cmp","","",285,{"inputs":[{"name":"self"},{"name":"inputhints"}],"output":{"name":"ordering"}}],[11,"hash","","",285,null],[11,"fmt","","",285,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",285,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",285,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",285,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",285,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",285,{"inputs":[],"output":{"name":"inputhints"}}],[11,"all","","Returns the set containing all flags.",285,{"inputs":[],"output":{"name":"inputhints"}}],[11,"bits","","Returns the raw value of the flags currently stored.",285,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",285,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",285,{"inputs":[{"name":"u32"}],"output":{"name":"inputhints"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",285,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",285,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",285,{"inputs":[{"name":"self"},{"name":"inputhints"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",285,{"inputs":[{"name":"self"},{"name":"inputhints"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",285,{"inputs":[{"name":"self"},{"name":"inputhints"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",285,{"inputs":[{"name":"self"},{"name":"inputhints"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",285,{"inputs":[{"name":"self"},{"name":"inputhints"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",285,{"inputs":[{"name":"self"},{"name":"inputhints"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",285,{"inputs":[{"name":"self"},{"name":"inputhints"}],"output":{"name":"inputhints"}}],[11,"bitor_assign","","Adds the set of flags.",285,{"inputs":[{"name":"self"},{"name":"inputhints"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",285,{"inputs":[{"name":"self"},{"name":"inputhints"}],"output":{"name":"inputhints"}}],[11,"bitxor_assign","","Toggles the set of flags.",285,{"inputs":[{"name":"self"},{"name":"inputhints"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",285,{"inputs":[{"name":"self"},{"name":"inputhints"}],"output":{"name":"inputhints"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",285,{"inputs":[{"name":"self"},{"name":"inputhints"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",285,{"inputs":[{"name":"self"},{"name":"inputhints"}],"output":{"name":"inputhints"}}],[11,"sub_assign","","Disables all flags enabled in the set.",285,{"inputs":[{"name":"self"},{"name":"inputhints"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",285,{"inputs":[{"name":"self"}],"output":{"name":"inputhints"}}],[11,"extend","","",285,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",285,{"inputs":[{"name":"t"}],"output":{"name":"inputhints"}}],[11,"static_type","","",285,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",285,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",285,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",285,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"eq","","",286,{"inputs":[{"name":"self"},{"name":"junctionsides"}],"output":{"name":"bool"}}],[11,"ne","","",286,{"inputs":[{"name":"self"},{"name":"junctionsides"}],"output":{"name":"bool"}}],[11,"clone","","",286,{"inputs":[{"name":"self"}],"output":{"name":"junctionsides"}}],[11,"partial_cmp","","",286,{"inputs":[{"name":"self"},{"name":"junctionsides"}],"output":{"name":"option"}}],[11,"lt","","",286,{"inputs":[{"name":"self"},{"name":"junctionsides"}],"output":{"name":"bool"}}],[11,"le","","",286,{"inputs":[{"name":"self"},{"name":"junctionsides"}],"output":{"name":"bool"}}],[11,"gt","","",286,{"inputs":[{"name":"self"},{"name":"junctionsides"}],"output":{"name":"bool"}}],[11,"ge","","",286,{"inputs":[{"name":"self"},{"name":"junctionsides"}],"output":{"name":"bool"}}],[11,"cmp","","",286,{"inputs":[{"name":"self"},{"name":"junctionsides"}],"output":{"name":"ordering"}}],[11,"hash","","",286,null],[11,"fmt","","",286,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",286,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",286,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",286,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",286,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",286,{"inputs":[],"output":{"name":"junctionsides"}}],[11,"all","","Returns the set containing all flags.",286,{"inputs":[],"output":{"name":"junctionsides"}}],[11,"bits","","Returns the raw value of the flags currently stored.",286,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",286,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",286,{"inputs":[{"name":"u32"}],"output":{"name":"junctionsides"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",286,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",286,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",286,{"inputs":[{"name":"self"},{"name":"junctionsides"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",286,{"inputs":[{"name":"self"},{"name":"junctionsides"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",286,{"inputs":[{"name":"self"},{"name":"junctionsides"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",286,{"inputs":[{"name":"self"},{"name":"junctionsides"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",286,{"inputs":[{"name":"self"},{"name":"junctionsides"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",286,{"inputs":[{"name":"self"},{"name":"junctionsides"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",286,{"inputs":[{"name":"self"},{"name":"junctionsides"}],"output":{"name":"junctionsides"}}],[11,"bitor_assign","","Adds the set of flags.",286,{"inputs":[{"name":"self"},{"name":"junctionsides"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",286,{"inputs":[{"name":"self"},{"name":"junctionsides"}],"output":{"name":"junctionsides"}}],[11,"bitxor_assign","","Toggles the set of flags.",286,{"inputs":[{"name":"self"},{"name":"junctionsides"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",286,{"inputs":[{"name":"self"},{"name":"junctionsides"}],"output":{"name":"junctionsides"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",286,{"inputs":[{"name":"self"},{"name":"junctionsides"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",286,{"inputs":[{"name":"self"},{"name":"junctionsides"}],"output":{"name":"junctionsides"}}],[11,"sub_assign","","Disables all flags enabled in the set.",286,{"inputs":[{"name":"self"},{"name":"junctionsides"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",286,{"inputs":[{"name":"self"}],"output":{"name":"junctionsides"}}],[11,"extend","","",286,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",286,{"inputs":[{"name":"t"}],"output":{"name":"junctionsides"}}],[11,"static_type","","",286,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",286,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",286,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",286,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"eq","","",287,{"inputs":[{"name":"self"},{"name":"placesopenflags"}],"output":{"name":"bool"}}],[11,"ne","","",287,{"inputs":[{"name":"self"},{"name":"placesopenflags"}],"output":{"name":"bool"}}],[11,"clone","","",287,{"inputs":[{"name":"self"}],"output":{"name":"placesopenflags"}}],[11,"partial_cmp","","",287,{"inputs":[{"name":"self"},{"name":"placesopenflags"}],"output":{"name":"option"}}],[11,"lt","","",287,{"inputs":[{"name":"self"},{"name":"placesopenflags"}],"output":{"name":"bool"}}],[11,"le","","",287,{"inputs":[{"name":"self"},{"name":"placesopenflags"}],"output":{"name":"bool"}}],[11,"gt","","",287,{"inputs":[{"name":"self"},{"name":"placesopenflags"}],"output":{"name":"bool"}}],[11,"ge","","",287,{"inputs":[{"name":"self"},{"name":"placesopenflags"}],"output":{"name":"bool"}}],[11,"cmp","","",287,{"inputs":[{"name":"self"},{"name":"placesopenflags"}],"output":{"name":"ordering"}}],[11,"hash","","",287,null],[11,"fmt","","",287,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",287,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",287,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",287,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",287,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",287,{"inputs":[],"output":{"name":"placesopenflags"}}],[11,"all","","Returns the set containing all flags.",287,{"inputs":[],"output":{"name":"placesopenflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",287,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",287,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",287,{"inputs":[{"name":"u32"}],"output":{"name":"placesopenflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",287,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",287,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",287,{"inputs":[{"name":"self"},{"name":"placesopenflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",287,{"inputs":[{"name":"self"},{"name":"placesopenflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",287,{"inputs":[{"name":"self"},{"name":"placesopenflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",287,{"inputs":[{"name":"self"},{"name":"placesopenflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",287,{"inputs":[{"name":"self"},{"name":"placesopenflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",287,{"inputs":[{"name":"self"},{"name":"placesopenflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",287,{"inputs":[{"name":"self"},{"name":"placesopenflags"}],"output":{"name":"placesopenflags"}}],[11,"bitor_assign","","Adds the set of flags.",287,{"inputs":[{"name":"self"},{"name":"placesopenflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",287,{"inputs":[{"name":"self"},{"name":"placesopenflags"}],"output":{"name":"placesopenflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",287,{"inputs":[{"name":"self"},{"name":"placesopenflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",287,{"inputs":[{"name":"self"},{"name":"placesopenflags"}],"output":{"name":"placesopenflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",287,{"inputs":[{"name":"self"},{"name":"placesopenflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",287,{"inputs":[{"name":"self"},{"name":"placesopenflags"}],"output":{"name":"placesopenflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",287,{"inputs":[{"name":"self"},{"name":"placesopenflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",287,{"inputs":[{"name":"self"}],"output":{"name":"placesopenflags"}}],[11,"extend","","",287,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",287,{"inputs":[{"name":"t"}],"output":{"name":"placesopenflags"}}],[11,"static_type","","",287,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",287,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",287,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",287,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"eq","","",288,{"inputs":[{"name":"self"},{"name":"recentfilterflags"}],"output":{"name":"bool"}}],[11,"ne","","",288,{"inputs":[{"name":"self"},{"name":"recentfilterflags"}],"output":{"name":"bool"}}],[11,"clone","","",288,{"inputs":[{"name":"self"}],"output":{"name":"recentfilterflags"}}],[11,"partial_cmp","","",288,{"inputs":[{"name":"self"},{"name":"recentfilterflags"}],"output":{"name":"option"}}],[11,"lt","","",288,{"inputs":[{"name":"self"},{"name":"recentfilterflags"}],"output":{"name":"bool"}}],[11,"le","","",288,{"inputs":[{"name":"self"},{"name":"recentfilterflags"}],"output":{"name":"bool"}}],[11,"gt","","",288,{"inputs":[{"name":"self"},{"name":"recentfilterflags"}],"output":{"name":"bool"}}],[11,"ge","","",288,{"inputs":[{"name":"self"},{"name":"recentfilterflags"}],"output":{"name":"bool"}}],[11,"cmp","","",288,{"inputs":[{"name":"self"},{"name":"recentfilterflags"}],"output":{"name":"ordering"}}],[11,"hash","","",288,null],[11,"fmt","","",288,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",288,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",288,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",288,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",288,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",288,{"inputs":[],"output":{"name":"recentfilterflags"}}],[11,"all","","Returns the set containing all flags.",288,{"inputs":[],"output":{"name":"recentfilterflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",288,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",288,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",288,{"inputs":[{"name":"u32"}],"output":{"name":"recentfilterflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",288,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",288,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",288,{"inputs":[{"name":"self"},{"name":"recentfilterflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",288,{"inputs":[{"name":"self"},{"name":"recentfilterflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",288,{"inputs":[{"name":"self"},{"name":"recentfilterflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",288,{"inputs":[{"name":"self"},{"name":"recentfilterflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",288,{"inputs":[{"name":"self"},{"name":"recentfilterflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",288,{"inputs":[{"name":"self"},{"name":"recentfilterflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",288,{"inputs":[{"name":"self"},{"name":"recentfilterflags"}],"output":{"name":"recentfilterflags"}}],[11,"bitor_assign","","Adds the set of flags.",288,{"inputs":[{"name":"self"},{"name":"recentfilterflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",288,{"inputs":[{"name":"self"},{"name":"recentfilterflags"}],"output":{"name":"recentfilterflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",288,{"inputs":[{"name":"self"},{"name":"recentfilterflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",288,{"inputs":[{"name":"self"},{"name":"recentfilterflags"}],"output":{"name":"recentfilterflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",288,{"inputs":[{"name":"self"},{"name":"recentfilterflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",288,{"inputs":[{"name":"self"},{"name":"recentfilterflags"}],"output":{"name":"recentfilterflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",288,{"inputs":[{"name":"self"},{"name":"recentfilterflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",288,{"inputs":[{"name":"self"}],"output":{"name":"recentfilterflags"}}],[11,"extend","","",288,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",288,{"inputs":[{"name":"t"}],"output":{"name":"recentfilterflags"}}],[11,"static_type","","",288,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",288,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",288,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",288,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"eq","","",289,{"inputs":[{"name":"self"},{"name":"regionflags"}],"output":{"name":"bool"}}],[11,"ne","","",289,{"inputs":[{"name":"self"},{"name":"regionflags"}],"output":{"name":"bool"}}],[11,"clone","","",289,{"inputs":[{"name":"self"}],"output":{"name":"regionflags"}}],[11,"partial_cmp","","",289,{"inputs":[{"name":"self"},{"name":"regionflags"}],"output":{"name":"option"}}],[11,"lt","","",289,{"inputs":[{"name":"self"},{"name":"regionflags"}],"output":{"name":"bool"}}],[11,"le","","",289,{"inputs":[{"name":"self"},{"name":"regionflags"}],"output":{"name":"bool"}}],[11,"gt","","",289,{"inputs":[{"name":"self"},{"name":"regionflags"}],"output":{"name":"bool"}}],[11,"ge","","",289,{"inputs":[{"name":"self"},{"name":"regionflags"}],"output":{"name":"bool"}}],[11,"cmp","","",289,{"inputs":[{"name":"self"},{"name":"regionflags"}],"output":{"name":"ordering"}}],[11,"hash","","",289,null],[11,"fmt","","",289,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",289,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",289,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",289,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",289,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",289,{"inputs":[],"output":{"name":"regionflags"}}],[11,"all","","Returns the set containing all flags.",289,{"inputs":[],"output":{"name":"regionflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",289,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",289,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",289,{"inputs":[{"name":"u32"}],"output":{"name":"regionflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",289,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",289,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",289,{"inputs":[{"name":"self"},{"name":"regionflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",289,{"inputs":[{"name":"self"},{"name":"regionflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",289,{"inputs":[{"name":"self"},{"name":"regionflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",289,{"inputs":[{"name":"self"},{"name":"regionflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",289,{"inputs":[{"name":"self"},{"name":"regionflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",289,{"inputs":[{"name":"self"},{"name":"regionflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",289,{"inputs":[{"name":"self"},{"name":"regionflags"}],"output":{"name":"regionflags"}}],[11,"bitor_assign","","Adds the set of flags.",289,{"inputs":[{"name":"self"},{"name":"regionflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",289,{"inputs":[{"name":"self"},{"name":"regionflags"}],"output":{"name":"regionflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",289,{"inputs":[{"name":"self"},{"name":"regionflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",289,{"inputs":[{"name":"self"},{"name":"regionflags"}],"output":{"name":"regionflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",289,{"inputs":[{"name":"self"},{"name":"regionflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",289,{"inputs":[{"name":"self"},{"name":"regionflags"}],"output":{"name":"regionflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",289,{"inputs":[{"name":"self"},{"name":"regionflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",289,{"inputs":[{"name":"self"}],"output":{"name":"regionflags"}}],[11,"extend","","",289,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",289,{"inputs":[{"name":"t"}],"output":{"name":"regionflags"}}],[11,"static_type","","",289,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",289,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",289,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",289,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"eq","","",290,{"inputs":[{"name":"self"},{"name":"stateflags"}],"output":{"name":"bool"}}],[11,"ne","","",290,{"inputs":[{"name":"self"},{"name":"stateflags"}],"output":{"name":"bool"}}],[11,"clone","","",290,{"inputs":[{"name":"self"}],"output":{"name":"stateflags"}}],[11,"partial_cmp","","",290,{"inputs":[{"name":"self"},{"name":"stateflags"}],"output":{"name":"option"}}],[11,"lt","","",290,{"inputs":[{"name":"self"},{"name":"stateflags"}],"output":{"name":"bool"}}],[11,"le","","",290,{"inputs":[{"name":"self"},{"name":"stateflags"}],"output":{"name":"bool"}}],[11,"gt","","",290,{"inputs":[{"name":"self"},{"name":"stateflags"}],"output":{"name":"bool"}}],[11,"ge","","",290,{"inputs":[{"name":"self"},{"name":"stateflags"}],"output":{"name":"bool"}}],[11,"cmp","","",290,{"inputs":[{"name":"self"},{"name":"stateflags"}],"output":{"name":"ordering"}}],[11,"hash","","",290,null],[11,"fmt","","",290,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",290,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",290,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",290,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",290,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",290,{"inputs":[],"output":{"name":"stateflags"}}],[11,"all","","Returns the set containing all flags.",290,{"inputs":[],"output":{"name":"stateflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",290,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",290,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",290,{"inputs":[{"name":"u32"}],"output":{"name":"stateflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",290,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",290,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",290,{"inputs":[{"name":"self"},{"name":"stateflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",290,{"inputs":[{"name":"self"},{"name":"stateflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",290,{"inputs":[{"name":"self"},{"name":"stateflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",290,{"inputs":[{"name":"self"},{"name":"stateflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",290,{"inputs":[{"name":"self"},{"name":"stateflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",290,{"inputs":[{"name":"self"},{"name":"stateflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",290,{"inputs":[{"name":"self"},{"name":"stateflags"}],"output":{"name":"stateflags"}}],[11,"bitor_assign","","Adds the set of flags.",290,{"inputs":[{"name":"self"},{"name":"stateflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",290,{"inputs":[{"name":"self"},{"name":"stateflags"}],"output":{"name":"stateflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",290,{"inputs":[{"name":"self"},{"name":"stateflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",290,{"inputs":[{"name":"self"},{"name":"stateflags"}],"output":{"name":"stateflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",290,{"inputs":[{"name":"self"},{"name":"stateflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",290,{"inputs":[{"name":"self"},{"name":"stateflags"}],"output":{"name":"stateflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",290,{"inputs":[{"name":"self"},{"name":"stateflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",290,{"inputs":[{"name":"self"}],"output":{"name":"stateflags"}}],[11,"extend","","",290,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",290,{"inputs":[{"name":"t"}],"output":{"name":"stateflags"}}],[11,"static_type","","",290,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",290,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",290,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",290,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"eq","","",291,{"inputs":[{"name":"self"},{"name":"stylecontextprintflags"}],"output":{"name":"bool"}}],[11,"ne","","",291,{"inputs":[{"name":"self"},{"name":"stylecontextprintflags"}],"output":{"name":"bool"}}],[11,"clone","","",291,{"inputs":[{"name":"self"}],"output":{"name":"stylecontextprintflags"}}],[11,"partial_cmp","","",291,{"inputs":[{"name":"self"},{"name":"stylecontextprintflags"}],"output":{"name":"option"}}],[11,"lt","","",291,{"inputs":[{"name":"self"},{"name":"stylecontextprintflags"}],"output":{"name":"bool"}}],[11,"le","","",291,{"inputs":[{"name":"self"},{"name":"stylecontextprintflags"}],"output":{"name":"bool"}}],[11,"gt","","",291,{"inputs":[{"name":"self"},{"name":"stylecontextprintflags"}],"output":{"name":"bool"}}],[11,"ge","","",291,{"inputs":[{"name":"self"},{"name":"stylecontextprintflags"}],"output":{"name":"bool"}}],[11,"cmp","","",291,{"inputs":[{"name":"self"},{"name":"stylecontextprintflags"}],"output":{"name":"ordering"}}],[11,"hash","","",291,null],[11,"fmt","","",291,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",291,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",291,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",291,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",291,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",291,{"inputs":[],"output":{"name":"stylecontextprintflags"}}],[11,"all","","Returns the set containing all flags.",291,{"inputs":[],"output":{"name":"stylecontextprintflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",291,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",291,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",291,{"inputs":[{"name":"u32"}],"output":{"name":"stylecontextprintflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",291,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",291,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",291,{"inputs":[{"name":"self"},{"name":"stylecontextprintflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",291,{"inputs":[{"name":"self"},{"name":"stylecontextprintflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",291,{"inputs":[{"name":"self"},{"name":"stylecontextprintflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",291,{"inputs":[{"name":"self"},{"name":"stylecontextprintflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",291,{"inputs":[{"name":"self"},{"name":"stylecontextprintflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",291,{"inputs":[{"name":"self"},{"name":"stylecontextprintflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",291,{"inputs":[{"name":"self"},{"name":"stylecontextprintflags"}],"output":{"name":"stylecontextprintflags"}}],[11,"bitor_assign","","Adds the set of flags.",291,{"inputs":[{"name":"self"},{"name":"stylecontextprintflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",291,{"inputs":[{"name":"self"},{"name":"stylecontextprintflags"}],"output":{"name":"stylecontextprintflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",291,{"inputs":[{"name":"self"},{"name":"stylecontextprintflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",291,{"inputs":[{"name":"self"},{"name":"stylecontextprintflags"}],"output":{"name":"stylecontextprintflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",291,{"inputs":[{"name":"self"},{"name":"stylecontextprintflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",291,{"inputs":[{"name":"self"},{"name":"stylecontextprintflags"}],"output":{"name":"stylecontextprintflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",291,{"inputs":[{"name":"self"},{"name":"stylecontextprintflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",291,{"inputs":[{"name":"self"}],"output":{"name":"stylecontextprintflags"}}],[11,"extend","","",291,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",291,{"inputs":[{"name":"t"}],"output":{"name":"stylecontextprintflags"}}],[11,"static_type","","",291,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",291,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",291,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",291,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"eq","","",292,{"inputs":[{"name":"self"},{"name":"targetflags"}],"output":{"name":"bool"}}],[11,"ne","","",292,{"inputs":[{"name":"self"},{"name":"targetflags"}],"output":{"name":"bool"}}],[11,"clone","","",292,{"inputs":[{"name":"self"}],"output":{"name":"targetflags"}}],[11,"partial_cmp","","",292,{"inputs":[{"name":"self"},{"name":"targetflags"}],"output":{"name":"option"}}],[11,"lt","","",292,{"inputs":[{"name":"self"},{"name":"targetflags"}],"output":{"name":"bool"}}],[11,"le","","",292,{"inputs":[{"name":"self"},{"name":"targetflags"}],"output":{"name":"bool"}}],[11,"gt","","",292,{"inputs":[{"name":"self"},{"name":"targetflags"}],"output":{"name":"bool"}}],[11,"ge","","",292,{"inputs":[{"name":"self"},{"name":"targetflags"}],"output":{"name":"bool"}}],[11,"cmp","","",292,{"inputs":[{"name":"self"},{"name":"targetflags"}],"output":{"name":"ordering"}}],[11,"hash","","",292,null],[11,"fmt","","",292,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",292,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",292,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",292,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",292,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",292,{"inputs":[],"output":{"name":"targetflags"}}],[11,"all","","Returns the set containing all flags.",292,{"inputs":[],"output":{"name":"targetflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",292,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",292,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",292,{"inputs":[{"name":"u32"}],"output":{"name":"targetflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",292,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",292,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",292,{"inputs":[{"name":"self"},{"name":"targetflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",292,{"inputs":[{"name":"self"},{"name":"targetflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",292,{"inputs":[{"name":"self"},{"name":"targetflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",292,{"inputs":[{"name":"self"},{"name":"targetflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",292,{"inputs":[{"name":"self"},{"name":"targetflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",292,{"inputs":[{"name":"self"},{"name":"targetflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",292,{"inputs":[{"name":"self"},{"name":"targetflags"}],"output":{"name":"targetflags"}}],[11,"bitor_assign","","Adds the set of flags.",292,{"inputs":[{"name":"self"},{"name":"targetflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",292,{"inputs":[{"name":"self"},{"name":"targetflags"}],"output":{"name":"targetflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",292,{"inputs":[{"name":"self"},{"name":"targetflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",292,{"inputs":[{"name":"self"},{"name":"targetflags"}],"output":{"name":"targetflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",292,{"inputs":[{"name":"self"},{"name":"targetflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",292,{"inputs":[{"name":"self"},{"name":"targetflags"}],"output":{"name":"targetflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",292,{"inputs":[{"name":"self"},{"name":"targetflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",292,{"inputs":[{"name":"self"}],"output":{"name":"targetflags"}}],[11,"extend","","",292,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",292,{"inputs":[{"name":"t"}],"output":{"name":"targetflags"}}],[11,"static_type","","",292,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",292,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",292,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",292,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"eq","","",293,{"inputs":[{"name":"self"},{"name":"textsearchflags"}],"output":{"name":"bool"}}],[11,"ne","","",293,{"inputs":[{"name":"self"},{"name":"textsearchflags"}],"output":{"name":"bool"}}],[11,"clone","","",293,{"inputs":[{"name":"self"}],"output":{"name":"textsearchflags"}}],[11,"partial_cmp","","",293,{"inputs":[{"name":"self"},{"name":"textsearchflags"}],"output":{"name":"option"}}],[11,"lt","","",293,{"inputs":[{"name":"self"},{"name":"textsearchflags"}],"output":{"name":"bool"}}],[11,"le","","",293,{"inputs":[{"name":"self"},{"name":"textsearchflags"}],"output":{"name":"bool"}}],[11,"gt","","",293,{"inputs":[{"name":"self"},{"name":"textsearchflags"}],"output":{"name":"bool"}}],[11,"ge","","",293,{"inputs":[{"name":"self"},{"name":"textsearchflags"}],"output":{"name":"bool"}}],[11,"cmp","","",293,{"inputs":[{"name":"self"},{"name":"textsearchflags"}],"output":{"name":"ordering"}}],[11,"hash","","",293,null],[11,"fmt","","",293,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",293,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",293,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",293,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",293,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",293,{"inputs":[],"output":{"name":"textsearchflags"}}],[11,"all","","Returns the set containing all flags.",293,{"inputs":[],"output":{"name":"textsearchflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",293,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",293,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",293,{"inputs":[{"name":"u32"}],"output":{"name":"textsearchflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",293,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",293,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",293,{"inputs":[{"name":"self"},{"name":"textsearchflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",293,{"inputs":[{"name":"self"},{"name":"textsearchflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",293,{"inputs":[{"name":"self"},{"name":"textsearchflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",293,{"inputs":[{"name":"self"},{"name":"textsearchflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",293,{"inputs":[{"name":"self"},{"name":"textsearchflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",293,{"inputs":[{"name":"self"},{"name":"textsearchflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",293,{"inputs":[{"name":"self"},{"name":"textsearchflags"}],"output":{"name":"textsearchflags"}}],[11,"bitor_assign","","Adds the set of flags.",293,{"inputs":[{"name":"self"},{"name":"textsearchflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",293,{"inputs":[{"name":"self"},{"name":"textsearchflags"}],"output":{"name":"textsearchflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",293,{"inputs":[{"name":"self"},{"name":"textsearchflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",293,{"inputs":[{"name":"self"},{"name":"textsearchflags"}],"output":{"name":"textsearchflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",293,{"inputs":[{"name":"self"},{"name":"textsearchflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",293,{"inputs":[{"name":"self"},{"name":"textsearchflags"}],"output":{"name":"textsearchflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",293,{"inputs":[{"name":"self"},{"name":"textsearchflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",293,{"inputs":[{"name":"self"}],"output":{"name":"textsearchflags"}}],[11,"extend","","",293,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",293,{"inputs":[{"name":"t"}],"output":{"name":"textsearchflags"}}],[11,"static_type","","",293,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",293,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",293,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",293,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"eq","","",294,{"inputs":[{"name":"self"},{"name":"toolpalettedragtargets"}],"output":{"name":"bool"}}],[11,"ne","","",294,{"inputs":[{"name":"self"},{"name":"toolpalettedragtargets"}],"output":{"name":"bool"}}],[11,"clone","","",294,{"inputs":[{"name":"self"}],"output":{"name":"toolpalettedragtargets"}}],[11,"partial_cmp","","",294,{"inputs":[{"name":"self"},{"name":"toolpalettedragtargets"}],"output":{"name":"option"}}],[11,"lt","","",294,{"inputs":[{"name":"self"},{"name":"toolpalettedragtargets"}],"output":{"name":"bool"}}],[11,"le","","",294,{"inputs":[{"name":"self"},{"name":"toolpalettedragtargets"}],"output":{"name":"bool"}}],[11,"gt","","",294,{"inputs":[{"name":"self"},{"name":"toolpalettedragtargets"}],"output":{"name":"bool"}}],[11,"ge","","",294,{"inputs":[{"name":"self"},{"name":"toolpalettedragtargets"}],"output":{"name":"bool"}}],[11,"cmp","","",294,{"inputs":[{"name":"self"},{"name":"toolpalettedragtargets"}],"output":{"name":"ordering"}}],[11,"hash","","",294,null],[11,"fmt","","",294,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",294,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",294,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",294,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",294,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",294,{"inputs":[],"output":{"name":"toolpalettedragtargets"}}],[11,"all","","Returns the set containing all flags.",294,{"inputs":[],"output":{"name":"toolpalettedragtargets"}}],[11,"bits","","Returns the raw value of the flags currently stored.",294,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",294,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",294,{"inputs":[{"name":"u32"}],"output":{"name":"toolpalettedragtargets"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",294,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",294,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",294,{"inputs":[{"name":"self"},{"name":"toolpalettedragtargets"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",294,{"inputs":[{"name":"self"},{"name":"toolpalettedragtargets"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",294,{"inputs":[{"name":"self"},{"name":"toolpalettedragtargets"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",294,{"inputs":[{"name":"self"},{"name":"toolpalettedragtargets"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",294,{"inputs":[{"name":"self"},{"name":"toolpalettedragtargets"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",294,{"inputs":[{"name":"self"},{"name":"toolpalettedragtargets"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",294,{"inputs":[{"name":"self"},{"name":"toolpalettedragtargets"}],"output":{"name":"toolpalettedragtargets"}}],[11,"bitor_assign","","Adds the set of flags.",294,{"inputs":[{"name":"self"},{"name":"toolpalettedragtargets"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",294,{"inputs":[{"name":"self"},{"name":"toolpalettedragtargets"}],"output":{"name":"toolpalettedragtargets"}}],[11,"bitxor_assign","","Toggles the set of flags.",294,{"inputs":[{"name":"self"},{"name":"toolpalettedragtargets"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",294,{"inputs":[{"name":"self"},{"name":"toolpalettedragtargets"}],"output":{"name":"toolpalettedragtargets"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",294,{"inputs":[{"name":"self"},{"name":"toolpalettedragtargets"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",294,{"inputs":[{"name":"self"},{"name":"toolpalettedragtargets"}],"output":{"name":"toolpalettedragtargets"}}],[11,"sub_assign","","Disables all flags enabled in the set.",294,{"inputs":[{"name":"self"},{"name":"toolpalettedragtargets"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",294,{"inputs":[{"name":"self"}],"output":{"name":"toolpalettedragtargets"}}],[11,"extend","","",294,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",294,{"inputs":[{"name":"t"}],"output":{"name":"toolpalettedragtargets"}}],[11,"static_type","","",294,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",294,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",294,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",294,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"eq","","",295,{"inputs":[{"name":"self"},{"name":"treemodelflags"}],"output":{"name":"bool"}}],[11,"ne","","",295,{"inputs":[{"name":"self"},{"name":"treemodelflags"}],"output":{"name":"bool"}}],[11,"clone","","",295,{"inputs":[{"name":"self"}],"output":{"name":"treemodelflags"}}],[11,"partial_cmp","","",295,{"inputs":[{"name":"self"},{"name":"treemodelflags"}],"output":{"name":"option"}}],[11,"lt","","",295,{"inputs":[{"name":"self"},{"name":"treemodelflags"}],"output":{"name":"bool"}}],[11,"le","","",295,{"inputs":[{"name":"self"},{"name":"treemodelflags"}],"output":{"name":"bool"}}],[11,"gt","","",295,{"inputs":[{"name":"self"},{"name":"treemodelflags"}],"output":{"name":"bool"}}],[11,"ge","","",295,{"inputs":[{"name":"self"},{"name":"treemodelflags"}],"output":{"name":"bool"}}],[11,"cmp","","",295,{"inputs":[{"name":"self"},{"name":"treemodelflags"}],"output":{"name":"ordering"}}],[11,"hash","","",295,null],[11,"fmt","","",295,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",295,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",295,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",295,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",295,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",295,{"inputs":[],"output":{"name":"treemodelflags"}}],[11,"all","","Returns the set containing all flags.",295,{"inputs":[],"output":{"name":"treemodelflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",295,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",295,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",295,{"inputs":[{"name":"u32"}],"output":{"name":"treemodelflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",295,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",295,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",295,{"inputs":[{"name":"self"},{"name":"treemodelflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",295,{"inputs":[{"name":"self"},{"name":"treemodelflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",295,{"inputs":[{"name":"self"},{"name":"treemodelflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",295,{"inputs":[{"name":"self"},{"name":"treemodelflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",295,{"inputs":[{"name":"self"},{"name":"treemodelflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",295,{"inputs":[{"name":"self"},{"name":"treemodelflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",295,{"inputs":[{"name":"self"},{"name":"treemodelflags"}],"output":{"name":"treemodelflags"}}],[11,"bitor_assign","","Adds the set of flags.",295,{"inputs":[{"name":"self"},{"name":"treemodelflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",295,{"inputs":[{"name":"self"},{"name":"treemodelflags"}],"output":{"name":"treemodelflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",295,{"inputs":[{"name":"self"},{"name":"treemodelflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",295,{"inputs":[{"name":"self"},{"name":"treemodelflags"}],"output":{"name":"treemodelflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",295,{"inputs":[{"name":"self"},{"name":"treemodelflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",295,{"inputs":[{"name":"self"},{"name":"treemodelflags"}],"output":{"name":"treemodelflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",295,{"inputs":[{"name":"self"},{"name":"treemodelflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",295,{"inputs":[{"name":"self"}],"output":{"name":"treemodelflags"}}],[11,"extend","","",295,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",295,{"inputs":[{"name":"t"}],"output":{"name":"treemodelflags"}}],[11,"static_type","","",295,{"inputs":[],"output":{"name":"type"}}],[11,"from_value_optional","","",295,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"from_value","","",295,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"set_value","","",295,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"clone","","",296,{"inputs":[{"name":"self"}],"output":{"name":"appchooser"}}],[11,"fmt","","",296,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",296,null],[11,"static_type","","",296,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",296,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Application` instance.",100,{"inputs":[{"name":"i"},{"name":"applicationflags"}],"output":{"name":"result"}}],[11,"new_from_file","","Builds the [`Builder` UI definition][BUILDER-UI] in the file `filename`.",107,{"inputs":[{"name":"t"}],"output":{"name":"builder"}}],[11,"get_object","","Gets the object named `name`. Note that this function does not increment the reference count of the returned object. ## `name` name of object to get",107,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"add_from_file","","Parses a file containing a [`Builder` UI definition][BUILDER-UI] and merges it with the current contents of `self`.",107,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"new_with_buttons","","Creates a new `Dialog` with title `title` (or `None` for the default title; see `Window::set_title`) and transient parent `parent` (or `None` for none; see `Window::set_transient_for`). The `flags` argument can be used to make the dialog modal (`DialogFlags::Modal`) and/or to have it destroyed along with its transient parent (`DialogFlags::DestroyWithParent`). After `flags`, button text/response ID pairs should be listed, with a `None` pointer ending the list. Button text can be arbitrary text. A response ID can be any positive number, or one of the values in the `ResponseType` enumeration. If the user clicks one of these dialog buttons, `Dialog` will emit the `Dialog::response` signal with the corresponding response ID. If a `Dialog` receives the `Widget::delete-event` signal, it will emit ::response with a response ID of `ResponseType::DeleteEvent`. However, destroying a dialog does not emit the ::response signal; so be careful relying on ::response when using the `DialogFlags::DestroyWithParent` flag. Buttons are from left to right, so the first button in the list will be the leftmost button in the dialog.",136,null],[11,"clone","","",297,{"inputs":[{"name":"self"}],"output":{"name":"entrybuffer"}}],[11,"fmt","","",297,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",297,null],[11,"static_type","","",297,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",297,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Create a new `EntryBuffer` object.",297,{"inputs":[{"name":"option"}],"output":{"name":"entrybuffer"}}],[11,"delete_text","","Deletes a sequence of characters from the buffer. `n_chars` characters are deleted starting at `position`. If `n_chars` is negative, then all characters until the end of the text are deleted.",297,{"inputs":[{"name":"self"},{"name":"u16"},{"name":"option"}],"output":{"name":"u16"}}],[11,"get_bytes","","Retrieves the length in bytes of the buffer. See `EntryBuffer::get_length`.",297,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"get_length","","Retrieves the length in characters of the buffer.",297,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"get_max_length","","Retrieves the maximum allowed length of the text in `self`. See `EntryBuffer::set_max_length`.",297,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_text","","Retrieves the contents of the buffer.",297,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"insert_text","","Inserts `n_chars` characters of `chars` into the contents of the buffer, at position `position`.",297,{"inputs":[{"name":"self"},{"name":"u16"},{"name":"str"}],"output":{"name":"u16"}}],[11,"set_max_length","","Sets the maximum allowed length of the contents of the buffer. If the current contents are longer than the given length, then they will be truncated to fit. ## `max_length` the maximum length of the entry buffer, or 0 for no maximum.  (other than the maximum length of entries.) The value passed in will  be clamped to the range 0-65536.",297,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[11,"set_text","","Sets the text in the buffer.",297,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[11,"into","","",32,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"into","","",64,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"new","","Creates a new `FileChooserDialog`. This function is analogous to `Dialog::new_with_buttons`. ## `title` Title of the dialog, or `None` ## `parent` Transient parent of the dialog, or `None` ## `action` Open or save mode for the dialog ## `first_button_text` stock ID or text to go in the first button, or `None`",146,{"inputs":[{"name":"option"},{"name":"option"},{"name":"filechooseraction"}],"output":{"name":"filechooserdialog"}}],[11,"new","","Creates a new list store as with `n_columns` columns each of the types passed in. Note that only types derived from standard GObject fundamental types are supported.",184,null],[11,"new","","Creates a new message dialog, which is a simple dialog with some text the user may want to see. When the user clicks a button a “response” signal is emitted with response IDs from `ResponseType`. See `Dialog` for more details. ## `parent` transient parent, or `None` for none ## `flags` flags ## `type_` type of message ## `buttons` set of buttons to use ## `message_format` `printf`-style format string, or `None`",191,{"inputs":[{"name":"option"},{"name":"dialogflags"},{"name":"messagetype"},{"name":"buttonstype"},{"name":"str"}],"output":{"name":"messagedialog"}}],[11,"new","","Creates a new `RadioButton`. To be of any practical value, a widget should then be packed into the radio button. ## `group` an existing  radio button group, or `None` if you are creating a new group.",205,{"inputs":[],"output":{"name":"radiobutton"}}],[11,"new_with_label","","Creates a new `RadioButton` with a text label. ## `group` an existing  radio button group, or `None` if you are creating a new group. ## `label` the text label to display next to the radio button.",205,{"inputs":[{"name":"str"}],"output":{"name":"radiobutton"}}],[11,"new_with_mnemonic","","Creates a new `RadioButton` containing a label, adding it to the same group as `group`. The label will be created using `Label::new_with_mnemonic`, so underscores in `label` indicate the mnemonic for the button. ## `group` the radio button  group, or `None` ## `label` the text of the button, with an underscore in front of the  mnemonic character",205,{"inputs":[{"name":"str"}],"output":{"name":"radiobutton"}}],[11,"new","","",206,{"inputs":[],"output":{"name":"radiomenuitem"}}],[11,"new_with_label","","",206,{"inputs":[{"name":"str"}],"output":{"name":"radiomenuitem"}}],[11,"new_with_mnemonic","","",206,{"inputs":[{"name":"str"}],"output":{"name":"radiomenuitem"}}],[11,"new","","Creates a new `RecentChooserDialog`. This function is analogous to `Dialog::new_with_buttons`. ## `title` Title of the dialog, or `None` ## `parent` Transient parent of the dialog, or `None`, ## `first_button_text` stock ID or text to go in the first button, or `None`",209,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"recentchooserdialog"}}],[11,"new_for_manager","","Creates a new `RecentChooserDialog` with a specified recent manager.",209,{"inputs":[{"name":"option"},{"name":"option"},{"name":"recentmanager"}],"output":{"name":"recentchooserdialog"}}],[11,"connect_change_value","","",227,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_input","","",227,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_output","","",227,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_value_changed","","",227,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_wrapped","","",227,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[11,"clone","","",298,{"inputs":[{"name":"self"}],"output":{"name":"targetentry"}}],[11,"fmt","","",298,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",298,{"inputs":[{"name":"str"},{"name":"targetflags"},{"name":"u32"}],"output":{"name":"targetentry"}}],[11,"get_target","","",298,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"get_flags","","",298,{"inputs":[{"name":"self"}],"output":{"name":"targetflags"}}],[11,"get_info","","",298,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"static_type","","",298,{"inputs":[],"output":{"name":"type"}}],[11,"new","","",272,null],[11,"get_attributes","","Computes the effect of any tags applied to this spot in the text. The `values` parameter should be initialized to the default settings you wish to use if no tags are in effect. You’d typically obtain the defaults from `TextView::get_default_attributes`.",274,{"inputs":[{"name":"self"},{"name":"textattributes"}],"output":{"name":"bool"}}],[11,"new","","",254,{"inputs":[{"name":"t"},{"name":"option"}],"output":{"name":"treemodelfilter"}}],[11,"get_indices","","Returns the current indices of `self`.",276,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"new","","Creates a new tree store as with `n_columns` columns each of the types passed in. Note that only types derived from standard GObject fundamental types are supported.",257,null],[0,"prelude","","Traits and essential types inteded for blanket imports.",null,null],[3,"Inhibit","gtk::prelude","Whether to propagate the signal to the default handler.",null,null],[12,"0","","",5,null],[5,"idle_add","","Adds a closure to be called by the default main loop when it's idle.",null,{"inputs":[{"name":"f"}],"output":{"name":"sourceid"}}],[5,"timeout_add","","Adds a closure to be called by the default main loop at regular intervals with millisecond granularity.",null,{"inputs":[{"name":"u32"},{"name":"f"}],"output":{"name":"sourceid"}}],[5,"timeout_add_seconds","","Adds a closure to be called by the default main loop at regular intervals with second granularity.",null,{"inputs":[{"name":"u32"},{"name":"f"}],"output":{"name":"sourceid"}}],[8,"AboutDialogExt","","",null,null],[10,"add_credit_section","","",299,null],[10,"get_artists","","",299,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_authors","","",299,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_comments","","",299,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_copyright","","",299,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_documenters","","",299,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_license","","",299,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_license_type","","",299,{"inputs":[{"name":"self"}],"output":{"name":"license"}}],[10,"get_logo","","",299,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_logo_icon_name","","",299,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_program_name","","",299,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_translator_credits","","",299,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_version","","",299,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_website","","",299,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_website_label","","",299,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_wrap_license","","",299,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_artists","","",299,null],[10,"set_authors","","",299,null],[10,"set_comments","","",299,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_copyright","","",299,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_documenters","","",299,null],[10,"set_license","","",299,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_license_type","","",299,{"inputs":[{"name":"self"},{"name":"license"}],"output":null}],[10,"set_logo","","",299,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_logo_icon_name","","",299,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_program_name","","",299,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_translator_credits","","",299,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_version","","",299,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_website","","",299,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_website_label","","",299,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_wrap_license","","",299,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_activate_link","","",299,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_artists_notify","","",299,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_authors_notify","","",299,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_comments_notify","","",299,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_copyright_notify","","",299,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_documenters_notify","","",299,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_license_notify","","",299,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_license_type_notify","","",299,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_logo_notify","","",299,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_logo_icon_name_notify","","",299,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_program_name_notify","","",299,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_translator_credits_notify","","",299,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_version_notify","","",299,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_website_notify","","",299,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_website_label_notify","","",299,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_wrap_license_notify","","",299,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"AccelGroupExt","","",null,null],[10,"disconnect_key","","",300,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"modifiertype"}],"output":{"name":"bool"}}],[10,"get_is_locked","","",300,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_modifier_mask","","",300,{"inputs":[{"name":"self"}],"output":{"name":"modifiertype"}}],[10,"lock","","",300,{"inputs":[{"name":"self"}],"output":null}],[10,"unlock","","",300,{"inputs":[{"name":"self"}],"output":null}],[10,"connect_accel_activate","","",300,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_is_locked_notify","","",300,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_modifier_mask_notify","","",300,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ActionBarExt","","",null,null],[10,"get_center_widget","","",301,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"pack_end","","",301,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"pack_start","","",301,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_center_widget","","",301,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"get_child_pack_type","","",301,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"packtype"}}],[10,"set_child_pack_type","","",301,{"inputs":[{"name":"self"},{"name":"t"},{"name":"packtype"}],"output":null}],[10,"get_child_position","","",301,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"i32"}}],[10,"set_child_position","","",301,{"inputs":[{"name":"self"},{"name":"t"},{"name":"i32"}],"output":null}],[8,"ActionableExt","","Trait containing all `Actionable` methods.",null,null],[10,"get_action_name","","Gets the action name for `self`.",302,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_action_target_value","","Gets the current target value of `actionabe`.",302,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_action_name","","Specifies the name of the action with which this widget should be associated. If `action_name` is `None` then the widget will be unassociated from any previous action.",302,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_action_target_value","","Sets the target value of an actionable widget.",302,{"inputs":[{"name":"self"},{"name":"variant"}],"output":null}],[10,"set_detailed_action_name","","Sets the action-name and associated string target value of an actionable widget.",302,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"connect_property_action_name_notify","","",302,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"AdjustmentExt","","",null,null],[10,"changed","","",303,{"inputs":[{"name":"self"}],"output":null}],[10,"clamp_page","","",303,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"configure","","",303,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"get_lower","","",303,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_minimum_increment","","",303,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_page_increment","","",303,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_page_size","","",303,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_step_increment","","",303,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_upper","","",303,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_value","","",303,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"set_lower","","",303,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"set_page_increment","","",303,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"set_page_size","","",303,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"set_step_increment","","",303,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"set_upper","","",303,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"set_value","","",303,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"value_changed","","",303,{"inputs":[{"name":"self"}],"output":null}],[10,"connect_changed","","",303,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_value_changed","","",303,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_lower_notify","","",303,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_page_increment_notify","","",303,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_page_size_notify","","",303,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_step_increment_notify","","",303,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_upper_notify","","",303,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_value_notify","","",303,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"AlignmentExt","","",null,null],[10,"get_padding","","",304,null],[10,"set","","",304,{"inputs":[{"name":"self"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":null}],[10,"set_padding","","",304,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[10,"get_property_bottom_padding","","",304,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_bottom_padding","","",304,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_left_padding","","",304,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_left_padding","","",304,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_right_padding","","",304,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_right_padding","","",304,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_top_padding","","",304,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_top_padding","","",304,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_xalign","","",304,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_xalign","","",304,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"get_property_xscale","","",304,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_xscale","","",304,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"get_property_yalign","","",304,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_yalign","","",304,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"get_property_yscale","","",304,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_yscale","","",304,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"connect_property_bottom_padding_notify","","",304,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_left_padding_notify","","",304,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_right_padding_notify","","",304,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_top_padding_notify","","",304,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_xalign_notify","","",304,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_xscale_notify","","",304,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_yalign_notify","","",304,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_yscale_notify","","",304,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"AppChooserDialogExt","","",null,null],[10,"get_heading","","",305,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_widget","","",305,{"inputs":[{"name":"self"}],"output":{"name":"widget"}}],[10,"set_heading","","",305,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"connect_property_gfile_notify","","",305,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_heading_notify","","",305,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"AppChooserWidgetExt","","",null,null],[10,"get_default_text","","",306,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_show_all","","",306,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_default","","",306,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_fallback","","",306,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_other","","",306,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_recommended","","",306,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_default_text","","",306,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_show_all","","",306,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_default","","",306,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_fallback","","",306,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_other","","",306,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_recommended","","",306,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_application_activated","","",306,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_application_selected","","",306,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_populate_popup","","",306,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_default_text_notify","","",306,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_all_notify","","",306,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_default_notify","","",306,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_fallback_notify","","",306,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_other_notify","","",306,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_recommended_notify","","",306,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"GtkApplicationExt","","",null,null],[10,"add_accelerator","","",307,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"},{"name":"p"}],"output":null}],[10,"add_window","","",307,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"get_accels_for_action","","",307,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"vec"}}],[10,"get_actions_for_accel","","",307,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"vec"}}],[10,"get_active_window","","",307,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_app_menu","","",307,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_menu_by_id","","",307,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_menubar","","",307,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_window_by_id","","",307,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[10,"get_windows","","",307,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"inhibit","","",307,{"inputs":[{"name":"self"},{"name":"q"},{"name":"applicationinhibitflags"},{"name":"r"}],"output":{"name":"u32"}}],[10,"is_inhibited","","",307,{"inputs":[{"name":"self"},{"name":"applicationinhibitflags"}],"output":{"name":"bool"}}],[10,"list_action_descriptions","","",307,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"prefers_app_menu","","",307,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"remove_accelerator","","",307,{"inputs":[{"name":"self"},{"name":"str"},{"name":"p"}],"output":null}],[10,"remove_window","","",307,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_accels_for_action","","",307,null],[10,"set_app_menu","","",307,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_menubar","","",307,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"uninhibit","","",307,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_active_window","","",307,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_property_register_session","","",307,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_register_session","","",307,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_window_added","","",307,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_window_removed","","",307,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_active_window_notify","","",307,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_app_menu_notify","","",307,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_menubar_notify","","",307,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_register_session_notify","","",307,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ApplicationWindowExt","","",null,null],[10,"get_help_overlay","","",308,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_id","","",308,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_show_menubar","","",308,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_help_overlay","","",308,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_show_menubar","","",308,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_property_show_menubar_notify","","",308,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ArrowExt","","",null,null],[10,"set","","",309,{"inputs":[{"name":"self"},{"name":"arrowtype"},{"name":"shadowtype"}],"output":null}],[10,"get_property_arrow_type","","",309,{"inputs":[{"name":"self"}],"output":{"name":"arrowtype"}}],[10,"set_property_arrow_type","","",309,{"inputs":[{"name":"self"},{"name":"arrowtype"}],"output":null}],[10,"get_property_shadow_type","","",309,{"inputs":[{"name":"self"}],"output":{"name":"shadowtype"}}],[10,"set_property_shadow_type","","",309,{"inputs":[{"name":"self"},{"name":"shadowtype"}],"output":null}],[10,"connect_property_arrow_type_notify","","",309,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_shadow_type_notify","","",309,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"AspectFrameExt","","",null,null],[10,"set","","",310,{"inputs":[{"name":"self"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"bool"}],"output":null}],[10,"get_property_obey_child","","",310,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_obey_child","","",310,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_ratio","","",310,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_ratio","","",310,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"get_property_xalign","","",310,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_xalign","","",310,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"get_property_yalign","","",310,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_yalign","","",310,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"connect_property_obey_child_notify","","",310,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_ratio_notify","","",310,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_xalign_notify","","",310,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_yalign_notify","","",310,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"AssistantExt","","",null,null],[10,"add_action_widget","","",311,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"append_page","","",311,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"i32"}}],[10,"commit","","",311,{"inputs":[{"name":"self"}],"output":null}],[10,"get_current_page","","",311,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_n_pages","","",311,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_nth_page","","",311,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_page_complete","","",311,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"get_page_has_padding","","",311,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"get_page_title","","",311,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[10,"get_page_type","","",311,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"assistantpagetype"}}],[10,"insert_page","","",311,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":{"name":"i32"}}],[10,"next_page","","",311,{"inputs":[{"name":"self"}],"output":null}],[10,"prepend_page","","",311,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"i32"}}],[10,"previous_page","","",311,{"inputs":[{"name":"self"}],"output":null}],[10,"remove_action_widget","","",311,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"remove_page","","",311,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_current_page","","",311,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_page_complete","","",311,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"}],"output":null}],[10,"set_page_has_padding","","",311,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"}],"output":null}],[10,"set_page_title","","",311,{"inputs":[{"name":"self"},{"name":"p"},{"name":"str"}],"output":null}],[10,"set_page_type","","",311,{"inputs":[{"name":"self"},{"name":"p"},{"name":"assistantpagetype"}],"output":null}],[10,"update_buttons_state","","",311,{"inputs":[{"name":"self"}],"output":null}],[10,"get_property_use_header_bar","","",311,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_child_complete","","",311,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[10,"set_child_complete","","",311,{"inputs":[{"name":"self"},{"name":"t"},{"name":"bool"}],"output":null}],[10,"get_child_has_padding","","",311,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[10,"set_child_has_padding","","",311,{"inputs":[{"name":"self"},{"name":"t"},{"name":"bool"}],"output":null}],[10,"get_child_page_type","","",311,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"assistantpagetype"}}],[10,"set_child_page_type","","",311,{"inputs":[{"name":"self"},{"name":"t"},{"name":"assistantpagetype"}],"output":null}],[10,"get_child_title","","",311,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"option"}}],[10,"set_child_title","","",311,{"inputs":[{"name":"self"},{"name":"t"},{"name":"p"}],"output":null}],[10,"connect_apply","","",311,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_cancel","","",311,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_close","","",311,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_escape","","",311,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_prepare","","",311,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_header_bar_notify","","",311,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"BinExt","","Trait containing all `Bin` methods.",null,null],[10,"get_child","","Gets the child of the `Bin`, or `None` if the bin contains no child widget. The returned widget does not have a reference added, so you do not need to unref it.",312,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"BoxExt","","Trait containing all `Box` methods.",null,null],[10,"get_baseline_position","","Gets the value set by `BoxExt::set_baseline_position`.",313,{"inputs":[{"name":"self"}],"output":{"name":"baselineposition"}}],[10,"get_center_widget","","Retrieves the center widget of the box.",313,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_homogeneous","","Returns whether the box is homogeneous (all children are the same size). See `BoxExt::set_homogeneous`.",313,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_spacing","","Gets the value set by `BoxExt::set_spacing`.",313,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"pack_end","","Adds `child` to `self`, packed with reference to the end of `self`. The `child` is packed after (away from end of) any other child packed with reference to the end of `self`. ## `child` the `Widget` to be added to `self` ## `expand` `true` if the new child is to be given extra space allocated  to `self`. The extra space will be divided evenly between all children  of `self` that use this option ## `fill` `true` if space given to `child` by the `expand` option is  actually allocated to `child`, rather than just padding it. This  parameter has no effect if `expand` is set to `false`. A child is  always allocated the full height of a horizontal `Box` and the full width  of a vertical `Box`. This option affects the other dimension ## `padding` extra space in pixels to put between this child and its  neighbors, over and above the global amount specified by  `Box:spacing` property. If `child` is a widget at one of the  reference ends of `self`, then `padding` pixels are also put between  `child` and the reference edge of `self`",313,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"},{"name":"bool"},{"name":"u32"}],"output":null}],[10,"pack_start","","Adds `child` to `self`, packed with reference to the start of `self`. The `child` is packed after any other child packed with reference to the start of `self`. ## `child` the `Widget` to be added to `self` ## `expand` `true` if the new child is to be given extra space allocated  to `self`. The extra space will be divided evenly between all children  that use this option ## `fill` `true` if space given to `child` by the `expand` option is  actually allocated to `child`, rather than just padding it. This  parameter has no effect if `expand` is set to `false`. A child is  always allocated the full height of a horizontal `Box` and the full width  of a vertical `Box`. This option affects the other dimension ## `padding` extra space in pixels to put between this child and its  neighbors, over and above the global amount specified by  `Box:spacing` property. If `child` is a widget at one of the  reference ends of `self`, then `padding` pixels are also put between  `child` and the reference edge of `self`",313,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"},{"name":"bool"},{"name":"u32"}],"output":null}],[10,"query_child_packing","","Obtains information about how `child` is packed into `self`. ## `child` the `Widget` of the child to query ## `expand` pointer to return location for expand child  property ## `fill` pointer to return location for fill child  property ## `padding` pointer to return location for padding  child property ## `pack_type` pointer to return location for pack-type  child property",313,null],[10,"reorder_child","","Moves `child` to a new `position` in the list of `self` children. The list contains widgets packed `PackType::Start` as well as widgets packed `PackType::End`, in the order that these widgets were added to `self`.",313,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":null}],[10,"set_baseline_position","","Sets the baseline position of a box. This affects only horizontal boxes with at least one baseline aligned child. If there is more vertical space available than requested, and the baseline is not allocated by the parent then `position` is used to allocate the baseline wrt the extra space available.",313,{"inputs":[{"name":"self"},{"name":"baselineposition"}],"output":null}],[10,"set_center_widget","","Sets a center widget; that is a child widget that will be centered with respect to the full width of the box, even if the children at either side take up different amounts of space.",313,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_child_packing","","Sets the way `child` is packed into `self`. ## `child` the `Widget` of the child to set ## `expand` the new value of the expand child property ## `fill` the new value of the fill child property ## `padding` the new value of the padding child property ## `pack_type` the new value of the pack-type child property",313,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"},{"name":"bool"},{"name":"u32"},{"name":"packtype"}],"output":null}],[10,"set_homogeneous","","Sets the `Box:homogeneous` property of `self`, controlling whether or not all children of `self` are given equal space in the box. ## `homogeneous` a boolean value, `true` to create equal allotments,  `false` for variable allotments",313,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_spacing","","Sets the `Box:spacing` property of `self`, which is the number of pixels to place between children of `self`. ## `spacing` the number of pixels to put between children",313,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_child_position","","",313,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"i32"}}],[10,"set_child_position","","",313,{"inputs":[{"name":"self"},{"name":"t"},{"name":"i32"}],"output":null}],[10,"connect_property_baseline_position_notify","","",313,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_homogeneous_notify","","",313,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_spacing_notify","","",313,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"BuilderExt","","",null,null],[10,"add_from_resource","","",314,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"add_from_string","","",314,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"add_objects_from_resource","","",314,null],[10,"add_objects_from_string","","",314,null],[10,"expose_object","","",314,{"inputs":[{"name":"self"},{"name":"str"},{"name":"p"}],"output":null}],[10,"extend_with_template","","",314,{"inputs":[{"name":"self"},{"name":"p"},{"name":"type"},{"name":"str"}],"output":{"name":"result"}}],[10,"get_application","","",314,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_objects","","",314,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_translation_domain","","",314,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_type_from_name","","",314,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"type"}}],[10,"set_application","","",314,{"inputs":[{"name":"self"},{"name":"application"}],"output":null}],[10,"set_translation_domain","","",314,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"value_from_string_type","","",314,{"inputs":[{"name":"self"},{"name":"type"},{"name":"str"}],"output":{"name":"result"}}],[10,"connect_property_translation_domain_notify","","",314,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ButtonExt","","Trait containing all `Button` methods.",null,null],[10,"clicked","","Emits a `Button::clicked` signal to the given `Button`.",315,{"inputs":[{"name":"self"}],"output":null}],[10,"get_alignment","","Gets the alignment of the child in the button.",315,null],[10,"get_always_show_image","","Returns whether the button will ignore the `Settings:gtk-button-images` setting and always show the image, if available.",315,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_event_window","","Returns the button’s event window if it is realized, `None` otherwise. This function should be rarely needed.",315,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_image","","Gets the widget that is currenty set as the image of `self`. This may have been explicitly set by `ButtonExt::set_image` or constructed by `Button::new_from_stock`.",315,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_image_position","","Gets the position of the image relative to the text inside the button.",315,{"inputs":[{"name":"self"}],"output":{"name":"positiontype"}}],[10,"get_label","","Fetches the text from the label of the button, as set by `ButtonExt::set_label`. If the label text has not been set the return value will be `None`. This will be the case if you create an empty button with `Button::new` to use as a container.",315,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_relief","","Returns the current relief style of the given `Button`.",315,{"inputs":[{"name":"self"}],"output":{"name":"reliefstyle"}}],[10,"get_use_stock","","Returns whether the button label is a stock item.",315,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_use_underline","","Returns whether an embedded underline in the button label indicates a mnemonic. See gtk_button_set_use_underline ().",315,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_alignment","","Sets the alignment of the child. This property has no effect unless the child is a `Misc` or a `Alignment`.",315,{"inputs":[{"name":"self"},{"name":"f32"},{"name":"f32"}],"output":null}],[10,"set_always_show_image","","If `true`, the button will ignore the `Settings:gtk-button-images` setting and always show the image, if available.",315,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_image","","Set the image of `self` to the given widget. The image will be displayed if the label text is `None` or if `Button:always-show-image` is `true`. You don’t have to call `Widget::show` on `image` yourself. ## `image` a widget to set as the image for the button",315,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_image_position","","Sets the position of the image relative to the text inside the button. ## `position` the position",315,{"inputs":[{"name":"self"},{"name":"positiontype"}],"output":null}],[10,"set_label","","Sets the text of the label of the button to `str`. This text is also used to select the stock item if `ButtonExt::set_use_stock` is used.",315,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_relief","","Sets the relief style of the edges of the given `Button` widget. Two styles exist, `ReliefStyle::Normal` and `ReliefStyle::None`. The default style is, as one can guess, `ReliefStyle::Normal`. The deprecated value `ReliefStyle::Half` behaves the same as `ReliefStyle::Normal`. ## `relief` The `ReliefStyle` as described above",315,{"inputs":[{"name":"self"},{"name":"reliefstyle"}],"output":null}],[10,"set_use_stock","","If `true`, the label set on the button is used as a stock id to select the stock item for the button.",315,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_use_underline","","If true, an underline in the text of the button label indicates the next character should be used for the mnemonic accelerator key. ## `use_underline` `true` if underlines in the text indicate mnemonics",315,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_xalign","","",315,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_xalign","","",315,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"get_property_yalign","","",315,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_yalign","","",315,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"connect_activate","","",315,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_clicked","","",315,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_always_show_image_notify","","",315,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_image_notify","","",315,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_image_position_notify","","",315,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_label_notify","","",315,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_relief_notify","","",315,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_stock_notify","","",315,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_underline_notify","","",315,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_xalign_notify","","",315,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_yalign_notify","","",315,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ButtonBoxExt","","",null,null],[10,"get_child_non_homogeneous","","",316,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"get_child_secondary","","",316,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"get_layout","","",316,{"inputs":[{"name":"self"}],"output":{"name":"buttonboxstyle"}}],[10,"set_child_non_homogeneous","","",316,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"}],"output":null}],[10,"set_child_secondary","","",316,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"}],"output":null}],[10,"set_layout","","",316,{"inputs":[{"name":"self"},{"name":"buttonboxstyle"}],"output":null}],[10,"get_property_layout_style","","",316,{"inputs":[{"name":"self"}],"output":{"name":"buttonboxstyle"}}],[10,"set_property_layout_style","","",316,{"inputs":[{"name":"self"},{"name":"buttonboxstyle"}],"output":null}],[10,"connect_property_layout_style_notify","","",316,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CalendarExt","","",null,null],[10,"clear_marks","","",317,{"inputs":[{"name":"self"}],"output":null}],[10,"get_date","","",317,null],[10,"get_day_is_marked","","",317,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"bool"}}],[10,"get_detail_height_rows","","",317,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_detail_width_chars","","",317,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_display_options","","",317,{"inputs":[{"name":"self"}],"output":{"name":"calendardisplayoptions"}}],[10,"mark_day","","",317,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"select_day","","",317,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"select_month","","",317,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":null}],[10,"set_detail_height_rows","","",317,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_detail_width_chars","","",317,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_display_options","","",317,{"inputs":[{"name":"self"},{"name":"calendardisplayoptions"}],"output":null}],[10,"unmark_day","","",317,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_day","","",317,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_day","","",317,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_month","","",317,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_month","","",317,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_no_month_change","","",317,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_no_month_change","","",317,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_show_day_names","","",317,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_show_day_names","","",317,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_show_details","","",317,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_show_details","","",317,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_show_heading","","",317,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_show_heading","","",317,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_show_week_numbers","","",317,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_show_week_numbers","","",317,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_year","","",317,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_year","","",317,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"connect_day_selected","","",317,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_day_selected_double_click","","",317,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_month_changed","","",317,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_next_month","","",317,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_next_year","","",317,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_prev_month","","",317,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_prev_year","","",317,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_day_notify","","",317,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_detail_height_rows_notify","","",317,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_detail_width_chars_notify","","",317,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_month_notify","","",317,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_no_month_change_notify","","",317,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_day_names_notify","","",317,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_details_notify","","",317,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_heading_notify","","",317,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_week_numbers_notify","","",317,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_year_notify","","",317,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CellAreaExt","","Trait containing all `CellArea` methods.",null,null],[10,"activate","","Activates `self`, usually by activating the currently focused cell, however some subclasses which embed widgets in the area can also activate a widget if it currently has the focus. ## `context` the `CellAreaContext` in context with the current row data ## `widget` the `Widget` that `self` is rendering on ## `cell_area` the size and location of `self` relative to `widget`’s allocation ## `flags` the `CellRendererState` flags for `self` for this row of data. ## `edit_only` if `true` then only cell renderers that are `CellRendererMode::Editable`  will be activated.",318,{"inputs":[{"name":"self"},{"name":"cellareacontext"},{"name":"p"},{"name":"rectangle"},{"name":"cellrendererstate"},{"name":"bool"}],"output":{"name":"bool"}}],[10,"activate_cell","","This is used by `CellArea` subclasses when handling events to activate cells, the base `CellArea` class activates cells for keyboard events for free in its own `CellArea`->`activate` implementation. ## `widget` the `Widget` that `self` is rendering onto ## `renderer` the `CellRenderer` in `self` to activate ## `event` the `GdkEvent` for which cell activation should occur ## `cell_area` the `gdk::Rectangle` in `widget` relative coordinates  of `renderer` for the current row. ## `flags` the `CellRendererState` for `renderer`",318,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"},{"name":"event"},{"name":"rectangle"},{"name":"cellrendererstate"}],"output":{"name":"bool"}}],[10,"add","","Adds `renderer` to `self` with the default child cell properties. ## `renderer` the `CellRenderer` to add to `self`",318,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"add_focus_sibling","","Adds `sibling` to `renderer`’s focusable area, focus will be drawn around `renderer` and all of its siblings if `renderer` can focus for a given row.",318,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":null}],[10,"apply_attributes","","Applies any connected attributes to the renderers in `self` by pulling the values from `tree_model`. ## `tree_model` the `TreeModel` to pull values from ## `iter` the `TreeIter` in `tree_model` to apply values for ## `is_expander` whether `iter` has children ## `is_expanded` whether `iter` is expanded in the view and  children are visible",318,{"inputs":[{"name":"self"},{"name":"p"},{"name":"treeiter"},{"name":"bool"},{"name":"bool"}],"output":null}],[10,"attribute_connect","","Connects an `attribute` to apply values from `column` for the `TreeModel` in use. ## `renderer` the `CellRenderer` to connect an attribute for ## `attribute` the attribute name ## `column` the `TreeModel` column to fetch attribute values from",318,{"inputs":[{"name":"self"},{"name":"p"},{"name":"str"},{"name":"i32"}],"output":null}],[10,"attribute_disconnect","","Disconnects `attribute` for the `renderer` in `self` so that attribute will no longer be updated with values from the model. ## `renderer` the `CellRenderer` to disconnect an attribute for ## `attribute` the attribute name",318,{"inputs":[{"name":"self"},{"name":"p"},{"name":"str"}],"output":null}],[10,"attribute_get_column","","Returns the model column that an attribute has been mapped to, or -1 if the attribute is not mapped.",318,{"inputs":[{"name":"self"},{"name":"p"},{"name":"str"}],"output":{"name":"i32"}}],[10,"copy_context","","This is sometimes needed for cases where rows need to share alignments in one orientation but may be separately grouped in the opposing orientation.",318,{"inputs":[{"name":"self"},{"name":"cellareacontext"}],"output":{"name":"option"}}],[10,"create_context","","Creates a `CellAreaContext` to be used with `self` for all purposes. `CellAreaContext` stores geometry information for rows for which it was operated on, it is important to use the same context for the same row of data at all times (i.e. one should render and handle events with the same `CellAreaContext` which was used to request the size of those rows of data).",318,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"event","","Delegates event handling to a `CellArea`. ## `context` the `CellAreaContext` for this row of data. ## `widget` the `Widget` that `self` is rendering to ## `event` the `GdkEvent` to handle ## `cell_area` the `widget` relative coordinates for `self` ## `flags` the `CellRendererState` for `self` in this row.",318,{"inputs":[{"name":"self"},{"name":"cellareacontext"},{"name":"p"},{"name":"event"},{"name":"rectangle"},{"name":"cellrendererstate"}],"output":{"name":"i32"}}],[10,"focus","","This should be called by the `self`’s owning layout widget when focus is to be passed to `self`, or moved within `self` for a given `direction` and row data.",318,{"inputs":[{"name":"self"},{"name":"directiontype"}],"output":{"name":"bool"}}],[10,"get_cell_allocation","","Derives the allocation of `renderer` inside `self` if `self` were to be renderered in `cell_area`. ## `context` the `CellAreaContext` used to hold sizes for `self`. ## `widget` the `Widget` that `self` is rendering on ## `renderer` the `CellRenderer` to get the allocation for ## `cell_area` the whole allocated area for `self` in `widget`  for this row ## `allocation` where to store the allocation for `renderer`",318,{"inputs":[{"name":"self"},{"name":"cellareacontext"},{"name":"p"},{"name":"q"},{"name":"rectangle"}],"output":{"name":"rectangle"}}],[10,"get_cell_at_position","","Gets the `CellRenderer` at `x` and `y` coordinates inside `self` and optionally returns the full cell allocation for it inside `cell_area`. ## `context` the `CellAreaContext` used to hold sizes for `self`. ## `widget` the `Widget` that `self` is rendering on ## `cell_area` the whole allocated area for `self` in `widget`  for this row ## `x` the x position ## `y` the y position ## `alloc_area` where to store the inner allocated area of the  returned cell renderer, or `None`.",318,null],[10,"get_current_path_string","","Gets the current `TreePath` string for the currently applied `TreeIter`, this is implicitly updated when `CellAreaExt::apply_attributes` is called and can be used to interact with renderers from `CellArea` subclasses.",318,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_edit_widget","","Gets the `CellEditable` widget currently used to edit the currently edited cell.",318,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_edited_cell","","Gets the `CellRenderer` in `self` that is currently being edited.",318,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_focus_cell","","Retrieves the currently focused cell for `self`",318,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_focus_from_sibling","","Gets the `CellRenderer` which is expected to be focusable for which `renderer` is, or may be a sibling.",318,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[10,"get_focus_siblings","","Gets the focus sibling cell renderers for `renderer`. ## `renderer` the `CellRenderer` expected to have focus",318,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"vec"}}],[10,"get_preferred_height","","Retrieves a cell area’s initial minimum and natural height.",318,null],[10,"get_preferred_height_for_width","","Retrieves a cell area’s minimum and natural height if it would be given the specified `width`.",318,null],[10,"get_preferred_width","","Retrieves a cell area’s initial minimum and natural width.",318,null],[10,"get_preferred_width_for_height","","Retrieves a cell area’s minimum and natural width if it would be given the specified `height`.",318,null],[10,"get_request_mode","","Gets whether the area prefers a height-for-width layout or a width-for-height layout.",318,{"inputs":[{"name":"self"}],"output":{"name":"sizerequestmode"}}],[10,"has_renderer","","Checks if `self` contains `renderer`. ## `renderer` the `CellRenderer` to check",318,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"inner_cell_area","","This is a convenience function for `CellArea` implementations to get the inner area where a given `CellRenderer` will be rendered. It removes any padding previously added by `CellAreaExt::request_renderer`. ## `widget` the `Widget` that `self` is rendering onto ## `cell_area` the `widget` relative coordinates where one of `self`’s cells  is to be placed ## `inner_area` the return location for the inner cell area",318,{"inputs":[{"name":"self"},{"name":"p"},{"name":"rectangle"}],"output":{"name":"rectangle"}}],[10,"is_activatable","","Returns whether the area can do anything when activated, after applying new attributes to `self`.",318,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_focus_sibling","","Returns whether `sibling` is one of `renderer`’s focus siblings (see `CellAreaExt::add_focus_sibling`). ## `renderer` the `CellRenderer` expected to have focus ## `sibling` the `CellRenderer` to check against `renderer`’s sibling list",318,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":{"name":"bool"}}],[10,"remove","","Removes `renderer` from `self`. ## `renderer` the `CellRenderer` to remove from `self`",318,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"remove_focus_sibling","","Removes `sibling` from `renderer`’s focus sibling list (see `CellAreaExt::add_focus_sibling`). ## `renderer` the `CellRenderer` expected to have focus ## `sibling` the `CellRenderer` to remove from `renderer`’s focus area",318,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":null}],[10,"render","","Renders `self`’s cells according to `self`’s layout onto `widget` at the given coordinates. ## `context` the `CellAreaContext` for this row of data. ## `widget` the `Widget` that `self` is rendering to ## `cr` the `cairo::Context` to render with ## `background_area` the `widget` relative coordinates for `self`’s background ## `cell_area` the `widget` relative coordinates for `self` ## `flags` the `CellRendererState` for `self` in this row. ## `paint_focus` whether `self` should paint focus on focused cells for focused rows or not.",318,{"inputs":[{"name":"self"},{"name":"cellareacontext"},{"name":"p"},{"name":"context"},{"name":"rectangle"},{"name":"rectangle"},{"name":"cellrendererstate"},{"name":"bool"}],"output":null}],[10,"request_renderer","","This is a convenience function for `CellArea` implementations to request size for cell renderers. It’s important to use this function to request size and then use `CellAreaExt::inner_cell_area` at render and event time since this function will add padding around the cell for focus painting. ## `renderer` the `CellRenderer` to request size for ## `orientation` the `Orientation` in which to request size ## `widget` the `Widget` that `self` is rendering onto ## `for_size` the allocation contextual size to request for, or -1 if the base request for the orientation is to be returned. ## `minimum_size` location to store the minimum size, or `None` ## `natural_size` location to store the natural size, or `None`",318,null],[10,"set_focus_cell","","Explicitly sets the currently focused cell to `renderer`.",318,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"stop_editing","","Explicitly stops the editing of the currently edited cell.",318,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_add_editable","","",318,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_apply_attributes","","",318,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_focus_changed","","",318,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_remove_editable","","",318,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_edit_widget_notify","","",318,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_edited_cell_notify","","",318,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_focus_cell_notify","","",318,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CellAreaBoxExt","","",null,null],[10,"get_spacing","","",319,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"pack_end","","",319,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"},{"name":"bool"},{"name":"bool"}],"output":null}],[10,"pack_start","","",319,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"},{"name":"bool"},{"name":"bool"}],"output":null}],[10,"set_spacing","","",319,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"connect_property_spacing_notify","","",319,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CellAreaContextExt","","",null,null],[10,"allocate","","",320,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"get_allocation","","",320,null],[10,"get_area","","",320,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_preferred_height","","",320,null],[10,"get_preferred_height_for_width","","",320,null],[10,"get_preferred_width","","",320,null],[10,"get_preferred_width_for_height","","",320,null],[10,"push_preferred_height","","",320,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"push_preferred_width","","",320,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"reset","","",320,{"inputs":[{"name":"self"}],"output":null}],[10,"get_property_minimum_height","","",320,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_property_minimum_width","","",320,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_property_natural_height","","",320,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_property_natural_width","","",320,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"connect_property_area_notify","","",320,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_minimum_height_notify","","",320,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_minimum_width_notify","","",320,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_natural_height_notify","","",320,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_natural_width_notify","","",320,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CellEditableExt","","Trait containing all `CellEditable` methods.",null,null],[10,"editing_done","","Emits the `CellEditable::editing-done` signal.",321,{"inputs":[{"name":"self"}],"output":null}],[10,"remove_widget","","Emits the `CellEditable::remove-widget` signal.",321,{"inputs":[{"name":"self"}],"output":null}],[10,"start_editing","","Begins editing on a `self`. `event` is the `GdkEvent` that began the editing process. It may be `None`, in the instance that editing was initiated through programatic means. ## `event` A `GdkEvent`, or `None`",321,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"get_property_editing_canceled","","",321,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_editing_canceled","","",321,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_editing_done","","",321,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_remove_widget","","",321,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_editing_canceled_notify","","",321,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CellLayoutExt","","Trait containing all `CellLayout` methods.",null,null],[10,"add_attribute","","Adds an attribute mapping to the list in `self`.",322,{"inputs":[{"name":"self"},{"name":"p"},{"name":"str"},{"name":"i32"}],"output":null}],[10,"clear","","Unsets all the mappings on all renderers on `self` and removes all renderers from `self`.",322,{"inputs":[{"name":"self"}],"output":null}],[10,"clear_attributes","","Clears all existing attributes previously set with `CellLayout::set_attributes`. ## `cell` a `CellRenderer` to clear the attribute mapping on",322,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"get_area","","Returns the underlying `CellArea` which might be `self` if called on a `CellArea` or might be `None` if no `CellArea` is used by `self`.",322,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_cells","","Returns the cell renderers which have been added to `self`.",322,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"pack_end","","Adds the `cell` to the end of `self`. If `expand` is `false`, then the `cell` is allocated no more space than it needs. Any unused space is divided evenly between cells for which `expand` is `true`.",322,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"}],"output":null}],[10,"pack_start","","Packs the `cell` into the beginning of `self`. If `expand` is `false`, then the `cell` is allocated no more space than it needs. Any unused space is divided evenly between cells for which `expand` is `true`.",322,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"}],"output":null}],[10,"reorder","","Re-inserts `cell` at `position`.",322,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":null}],[8,"CellRendererExt","","Trait containing all `CellRenderer` methods.",null,null],[10,"activate","","Passes an activate event to the cell renderer for possible processing. Some cell renderers may use events; for example, `CellRendererToggle` toggles when it gets a mouse click. ## `event` a `GdkEvent` ## `widget` widget that received the event ## `path` widget-dependent string representation of the event location;  e.g. for `TreeView`, a string representation of `TreePath` ## `background_area` background area as passed to `CellRendererExt::render` ## `cell_area` cell area as passed to `CellRendererExt::render` ## `flags` render flags",323,{"inputs":[{"name":"self"},{"name":"event"},{"name":"p"},{"name":"str"},{"name":"rectangle"},{"name":"rectangle"},{"name":"cellrendererstate"}],"output":{"name":"bool"}}],[10,"get_aligned_area","","Gets the aligned area used by `self` inside `cell_area`. Used for finding the appropriate edit and focus rectangle. ## `widget` the `Widget` this cell will be rendering to ## `flags` render flags ## `cell_area` cell area which would be passed to `CellRendererExt::render` ## `aligned_area` the return location for the space inside `cell_area`  that would acually be used to render.",323,{"inputs":[{"name":"self"},{"name":"p"},{"name":"cellrendererstate"},{"name":"rectangle"}],"output":{"name":"rectangle"}}],[10,"get_alignment","","Fills in `xalign` and `yalign` with the appropriate values of `self`. ## `xalign` location to fill in with the x alignment of the cell, or `None` ## `yalign` location to fill in with the y alignment of the cell, or `None`",323,null],[10,"get_fixed_size","","Fills in `width` and `height` with the appropriate size of `self`. ## `width` location to fill in with the fixed width of the cell, or `None` ## `height` location to fill in with the fixed height of the cell, or `None`",323,null],[10,"get_padding","","Fills in `xpad` and `ypad` with the appropriate values of `self`. ## `xpad` location to fill in with the x padding of the cell, or `None` ## `ypad` location to fill in with the y padding of the cell, or `None`",323,null],[10,"get_preferred_height","","Retreives a renderer’s natural size when rendered to `widget`. ## `widget` the `Widget` this cell will be rendering to ## `minimum_size` location to store the minimum size, or `None` ## `natural_size` location to store the natural size, or `None`",323,null],[10,"get_preferred_height_for_width","","Retreives a cell renderers’s minimum and natural height if it were rendered to `widget` with the specified `width`. ## `widget` the `Widget` this cell will be rendering to ## `width` the size which is available for allocation ## `minimum_height` location for storing the minimum size, or `None` ## `natural_height` location for storing the preferred size, or `None`",323,null],[10,"get_preferred_size","","Retrieves the minimum and natural size of a cell taking into account the widget’s preference for height-for-width management. ## `widget` the `Widget` this cell will be rendering to ## `minimum_size` location for storing the minimum size, or `None` ## `natural_size` location for storing the natural size, or `None`",323,null],[10,"get_preferred_width","","Retreives a renderer’s natural size when rendered to `widget`. ## `widget` the `Widget` this cell will be rendering to ## `minimum_size` location to store the minimum size, or `None` ## `natural_size` location to store the natural size, or `None`",323,null],[10,"get_preferred_width_for_height","","Retreives a cell renderers’s minimum and natural width if it were rendered to `widget` with the specified `height`. ## `widget` the `Widget` this cell will be rendering to ## `height` the size which is available for allocation ## `minimum_width` location for storing the minimum size, or `None` ## `natural_width` location for storing the preferred size, or `None`",323,null],[10,"get_request_mode","","Gets whether the cell renderer prefers a height-for-width layout or a width-for-height layout.",323,{"inputs":[{"name":"self"}],"output":{"name":"sizerequestmode"}}],[10,"get_sensitive","","Returns the cell renderer’s sensitivity.",323,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_state","","Translates the cell renderer state to `StateFlags`, based on the cell renderer and widget sensitivity, and the given `CellRendererState`. ## `widget` a `Widget`, or `None` ## `cell_state` cell renderer state",323,{"inputs":[{"name":"self"},{"name":"q"},{"name":"cellrendererstate"}],"output":{"name":"stateflags"}}],[10,"get_visible","","Returns the cell renderer’s visibility.",323,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_activatable","","Checks whether the cell renderer can do something when activated.",323,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"render","","Invokes the virtual render function of the `CellRenderer`. The three passed-in rectangles are areas in `cr`. Most renderers will draw within `cell_area`; the xalign, yalign, xpad, and ypad fields of the `CellRenderer` should be honored with respect to `cell_area`. `background_area` includes the blank space around the cell, and also the area containing the tree expander; so the `background_area` rectangles for all cells tile to cover the entire `window`. ## `cr` a cairo context to draw to ## `widget` the widget owning `window` ## `background_area` entire cell area (including tree expanders and maybe  padding on the sides) ## `cell_area` area normally rendered by a cell renderer ## `flags` flags that affect rendering",323,{"inputs":[{"name":"self"},{"name":"context"},{"name":"p"},{"name":"rectangle"},{"name":"rectangle"},{"name":"cellrendererstate"}],"output":null}],[10,"set_alignment","","Sets the renderer’s alignment within its available space. ## `xalign` the x alignment of the cell renderer ## `yalign` the y alignment of the cell renderer",323,{"inputs":[{"name":"self"},{"name":"f32"},{"name":"f32"}],"output":null}],[10,"set_fixed_size","","Sets the renderer size to be explicit, independent of the properties set. ## `width` the width of the cell renderer, or -1 ## `height` the height of the cell renderer, or -1",323,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_padding","","Sets the renderer’s padding. ## `xpad` the x padding of the cell renderer ## `ypad` the y padding of the cell renderer",323,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_sensitive","","Sets the cell renderer’s sensitivity. ## `sensitive` the sensitivity of the cell",323,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_visible","","Sets the cell renderer’s visibility. ## `visible` the visibility of the cell",323,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"start_editing","","Passes an activate event to the cell renderer for possible processing. ## `event` a `GdkEvent` ## `widget` widget that received the event ## `path` widget-dependent string representation of the event location;  e.g. for `TreeView`, a string representation of `TreePath` ## `background_area` background area as passed to `CellRendererExt::render` ## `cell_area` cell area as passed to `CellRendererExt::render` ## `flags` render flags",323,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"},{"name":"str"},{"name":"rectangle"},{"name":"rectangle"},{"name":"cellrendererstate"}],"output":{"name":"option"}}],[10,"stop_editing","","Informs the cell renderer that the editing is stopped. If `canceled` is `true`, the cell renderer will emit the `CellRenderer::editing-canceled` signal.",323,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_property_cell_background","","",323,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_cell_background_rgba","","",323,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_cell_background_rgba","","",323,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_cell_background_set","","",323,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_cell_background_set","","",323,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_editing","","",323,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_height","","",323,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_height","","",323,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_is_expanded","","",323,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_is_expanded","","",323,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_is_expander","","",323,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_is_expander","","",323,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_mode","","",323,{"inputs":[{"name":"self"}],"output":{"name":"cellrenderermode"}}],[10,"set_property_mode","","",323,{"inputs":[{"name":"self"},{"name":"cellrenderermode"}],"output":null}],[10,"get_property_width","","",323,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_width","","",323,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_xalign","","",323,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_xalign","","",323,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"get_property_xpad","","",323,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_xpad","","",323,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_yalign","","",323,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_yalign","","",323,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"get_property_ypad","","",323,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_ypad","","",323,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"connect_editing_canceled","","",323,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_editing_started","","",323,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_cell_background_notify","","",323,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_cell_background_rgba_notify","","",323,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_cell_background_set_notify","","",323,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_editing_notify","","",323,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_height_notify","","",323,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_is_expanded_notify","","",323,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_is_expander_notify","","",323,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_mode_notify","","",323,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_sensitive_notify","","",323,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_visible_notify","","",323,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_width_notify","","",323,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_xalign_notify","","",323,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_xpad_notify","","",323,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_yalign_notify","","",323,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_ypad_notify","","",323,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CellRendererAccelExt","","",null,null],[10,"get_property_accel_key","","",324,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_accel_key","","",324,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_accel_mode","","",324,{"inputs":[{"name":"self"}],"output":{"name":"cellrendereraccelmode"}}],[10,"set_property_accel_mode","","",324,{"inputs":[{"name":"self"},{"name":"cellrendereraccelmode"}],"output":null}],[10,"get_property_accel_mods","","",324,{"inputs":[{"name":"self"}],"output":{"name":"modifiertype"}}],[10,"set_property_accel_mods","","",324,{"inputs":[{"name":"self"},{"name":"modifiertype"}],"output":null}],[10,"get_property_keycode","","",324,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_keycode","","",324,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"connect_accel_cleared","","",324,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_accel_edited","","",324,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_accel_key_notify","","",324,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_accel_mode_notify","","",324,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_accel_mods_notify","","",324,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_keycode_notify","","",324,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CellRendererComboExt","","",null,null],[10,"get_property_has_entry","","",325,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_has_entry","","",325,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_model","","",325,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_model","","",325,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_text_column","","",325,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_text_column","","",325,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"connect_changed","","",325,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_has_entry_notify","","",325,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_model_notify","","",325,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_text_column_notify","","",325,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CellRendererPixbufExt","","",null,null],[10,"get_property_follow_state","","",326,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_follow_state","","",326,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gicon","","",326,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gicon","","",326,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_icon_name","","",326,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_icon_name","","",326,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_pixbuf","","",326,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_pixbuf","","",326,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_pixbuf_expander_closed","","",326,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_pixbuf_expander_closed","","",326,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_pixbuf_expander_open","","",326,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_pixbuf_expander_open","","",326,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_stock_detail","","",326,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_stock_detail","","",326,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_stock_id","","",326,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_stock_id","","",326,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_stock_size","","",326,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_stock_size","","",326,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"connect_property_follow_state_notify","","",326,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gicon_notify","","",326,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_icon_name_notify","","",326,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pixbuf_notify","","",326,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pixbuf_expander_closed_notify","","",326,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pixbuf_expander_open_notify","","",326,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_stock_detail_notify","","",326,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_stock_id_notify","","",326,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_stock_size_notify","","",326,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CellRendererProgressExt","","",null,null],[10,"get_property_inverted","","",327,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_inverted","","",327,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_pulse","","",327,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_pulse","","",327,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_text","","",327,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_text","","",327,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_text_xalign","","",327,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_text_xalign","","",327,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"get_property_text_yalign","","",327,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_text_yalign","","",327,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"get_property_value","","",327,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_value","","",327,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"connect_property_inverted_notify","","",327,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pulse_notify","","",327,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_text_notify","","",327,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_text_xalign_notify","","",327,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_text_yalign_notify","","",327,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_value_notify","","",327,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CellRendererSpinExt","","",null,null],[10,"get_property_adjustment","","",328,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_adjustment","","",328,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_climb_rate","","",328,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"set_property_climb_rate","","",328,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"get_property_digits","","",328,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_digits","","",328,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"connect_property_adjustment_notify","","",328,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_climb_rate_notify","","",328,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_digits_notify","","",328,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CellRendererSpinnerExt","","",null,null],[10,"get_property_active","","",329,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_active","","",329,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_pulse","","",329,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_pulse","","",329,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_size","","",329,{"inputs":[{"name":"self"}],"output":{"name":"iconsize"}}],[10,"set_property_size","","",329,{"inputs":[{"name":"self"},{"name":"iconsize"}],"output":null}],[10,"connect_property_active_notify","","",329,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pulse_notify","","",329,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_size_notify","","",329,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CellRendererTextExt","","Trait containing all `CellRendererText` methods.",null,null],[10,"set_fixed_height_from_font","","Sets the height of a renderer to explicitly be determined by the “font” and “y_pad” property set on it. Further changes in these properties do not affect the height, so they must be accompanied by a subsequent call to this function. Using this function is unflexible, and should really only be used if calculating the size of a cell is too slow (ie, a massive number of cells displayed). If `number_of_rows` is -1, then the fixed height is unset, and the height is determined by the properties again. ## `number_of_rows` Number of rows of text each cell renderer is allocated, or -1",330,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_align_set","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_align_set","","",330,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_property_background","","",330,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_background_rgba","","",330,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_background_rgba","","",330,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_background_set","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_background_set","","",330,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_editable","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_editable","","",330,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_editable_set","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_editable_set","","",330,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_ellipsize","","",330,{"inputs":[{"name":"self"}],"output":{"name":"ellipsizemode"}}],[10,"set_property_ellipsize","","",330,{"inputs":[{"name":"self"},{"name":"ellipsizemode"}],"output":null}],[10,"get_property_ellipsize_set","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_ellipsize_set","","",330,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_family","","",330,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_family","","",330,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_family_set","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_family_set","","",330,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_font","","",330,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_font","","",330,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"set_property_foreground","","",330,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_foreground_rgba","","",330,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_foreground_rgba","","",330,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_foreground_set","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_foreground_set","","",330,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_language","","",330,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_language","","",330,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_language_set","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_language_set","","",330,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_property_markup","","",330,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_max_width_chars","","",330,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_max_width_chars","","",330,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_placeholder_text","","",330,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_placeholder_text","","",330,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_rise","","",330,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_rise","","",330,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_rise_set","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_rise_set","","",330,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_scale","","",330,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"set_property_scale","","",330,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"get_property_scale_set","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_scale_set","","",330,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_single_paragraph_mode","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_single_paragraph_mode","","",330,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_size","","",330,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_size","","",330,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_size_points","","",330,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"set_property_size_points","","",330,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"get_property_size_set","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_size_set","","",330,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_stretch","","",330,{"inputs":[{"name":"self"}],"output":{"name":"stretch"}}],[10,"set_property_stretch","","",330,{"inputs":[{"name":"self"},{"name":"stretch"}],"output":null}],[10,"get_property_stretch_set","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_stretch_set","","",330,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_strikethrough","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_strikethrough","","",330,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_strikethrough_set","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_strikethrough_set","","",330,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_style","","",330,{"inputs":[{"name":"self"}],"output":{"name":"style"}}],[10,"set_property_style","","",330,{"inputs":[{"name":"self"},{"name":"style"}],"output":null}],[10,"get_property_style_set","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_style_set","","",330,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_text","","",330,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_text","","",330,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_underline","","",330,{"inputs":[{"name":"self"}],"output":{"name":"underline"}}],[10,"set_property_underline","","",330,{"inputs":[{"name":"self"},{"name":"underline"}],"output":null}],[10,"get_property_underline_set","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_underline_set","","",330,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_variant","","",330,{"inputs":[{"name":"self"}],"output":{"name":"variant"}}],[10,"set_property_variant","","",330,{"inputs":[{"name":"self"},{"name":"variant"}],"output":null}],[10,"get_property_variant_set","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_variant_set","","",330,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_weight","","",330,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_weight","","",330,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_weight_set","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_weight_set","","",330,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_width_chars","","",330,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_width_chars","","",330,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_wrap_mode","","",330,{"inputs":[{"name":"self"}],"output":{"name":"wrapmode"}}],[10,"set_property_wrap_mode","","",330,{"inputs":[{"name":"self"},{"name":"wrapmode"}],"output":null}],[10,"get_property_wrap_width","","",330,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_wrap_width","","",330,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"connect_edited","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_align_set_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_alignment_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_background_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_background_rgba_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_background_set_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_editable_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_editable_set_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_ellipsize_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_ellipsize_set_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_family_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_family_set_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_font_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_foreground_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_foreground_rgba_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_foreground_set_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_language_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_language_set_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_markup_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_max_width_chars_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_placeholder_text_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_rise_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_rise_set_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_scale_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_scale_set_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_single_paragraph_mode_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_size_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_size_points_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_size_set_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_stretch_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_stretch_set_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_strikethrough_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_strikethrough_set_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_style_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_style_set_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_text_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_underline_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_underline_set_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_variant_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_variant_set_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_weight_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_weight_set_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_width_chars_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_wrap_mode_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_wrap_width_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CellRendererToggleExt","","",null,null],[10,"get_activatable","","",331,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_active","","",331,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_radio","","",331,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_activatable","","",331,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_active","","",331,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_radio","","",331,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_inconsistent","","",331,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_inconsistent","","",331,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_indicator_size","","",331,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_indicator_size","","",331,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"connect_toggled","","",331,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_activatable_notify","","",331,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_active_notify","","",331,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_inconsistent_notify","","",331,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_indicator_size_notify","","",331,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_radio_notify","","",331,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CheckMenuItemExt","","",null,null],[10,"get_active","","",332,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_draw_as_radio","","",332,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_inconsistent","","",332,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_active","","",332,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_draw_as_radio","","",332,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_inconsistent","","",332,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"toggled","","",332,{"inputs":[{"name":"self"}],"output":null}],[10,"connect_toggled","","",332,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_active_notify","","",332,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_draw_as_radio_notify","","",332,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_inconsistent_notify","","",332,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ClipboardExt","","",null,null],[10,"clear","","",333,{"inputs":[{"name":"self"}],"output":null}],[10,"get_display","","",333,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_owner","","",333,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_selection","","",333,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_image","","",333,{"inputs":[{"name":"self"},{"name":"pixbuf"}],"output":null}],[10,"set_text","","",333,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"store","","",333,{"inputs":[{"name":"self"}],"output":null}],[10,"wait_for_contents","","",333,{"inputs":[{"name":"self"},{"name":"atom"}],"output":{"name":"option"}}],[10,"wait_for_image","","",333,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"wait_for_rich_text","","",333,null],[10,"wait_for_targets","","",333,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"wait_for_text","","",333,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"wait_for_uris","","",333,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"wait_is_image_available","","",333,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"wait_is_rich_text_available","","",333,{"inputs":[{"name":"self"},{"name":"textbuffer"}],"output":{"name":"bool"}}],[10,"wait_is_target_available","","",333,{"inputs":[{"name":"self"},{"name":"atom"}],"output":{"name":"bool"}}],[10,"wait_is_text_available","","",333,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"wait_is_uris_available","","",333,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"ColorButtonExt","","",null,null],[10,"get_title","","",334,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_title","","",334,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"get_property_alpha","","",334,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_alpha","","",334,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_show_editor","","",334,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_show_editor","","",334,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_color_set","","",334,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_alpha_notify","","",334,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_rgba_notify","","",334,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_editor_notify","","",334,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_title_notify","","",334,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_alpha_notify","","",334,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ColorChooserExt","","Trait containing all `ColorChooser` methods.",null,null],[10,"get_rgba","","Gets the currently-selected color. ## `color` a `gdk::RGBA` to fill in with the current color",335,{"inputs":[{"name":"self"}],"output":{"name":"rgba"}}],[10,"get_use_alpha","","Returns whether the color chooser shows the alpha channel.",335,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_rgba","","Sets the color. ## `color` the new color",335,{"inputs":[{"name":"self"},{"name":"rgba"}],"output":null}],[10,"set_use_alpha","","Sets whether or not the color chooser should use the alpha channel. ## `use_alpha` `true` if color chooser should use alpha channel, `false` if not",335,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_color_activated","","",335,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_rgba_notify","","",335,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_alpha_notify","","",335,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ColorChooserDialogExt","","",null,null],[10,"get_property_show_editor","","",336,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_show_editor","","",336,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_property_show_editor_notify","","",336,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ColorChooserWidgetExt","","",null,null],[10,"get_property_show_editor","","",337,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_show_editor","","",337,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_property_show_editor_notify","","",337,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ComboBoxExt","","Trait containing all `ComboBox` methods.",null,null],[10,"get_active","","Returns the index of the currently active item, or -1 if there’s no active item. If the model is a non-flat treemodel, and the active item is not an immediate child of the root of the tree, this function returns `gtk_tree_path_get_indices (path)[0]`, where `path` is the `TreePath` of the active item.",338,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_active_id","","Returns the ID of the active row of `self`. This value is taken from the active row and the column specified by the `ComboBox:id-column` property of `self` (see `ComboBoxExt::set_id_column`).",338,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_active_iter","","Sets `iter` to point to the current active item, if it exists. ## `iter` The uninitialized `TreeIter`",338,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_add_tearoffs","","Gets the current value of the :add-tearoffs property.",338,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_button_sensitivity","","Returns whether the combo box sets the dropdown button sensitive or not when there are no items in the model.",338,{"inputs":[{"name":"self"}],"output":{"name":"sensitivitytype"}}],[10,"get_column_span_column","","Returns the column with column span information for `self`.",338,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_entry_text_column","","Returns the column which `self` is using to get the strings from to display in the internal entry.",338,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_has_entry","","Returns whether the combo box has an entry.",338,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_id_column","","Returns the column which `self` is using to get string IDs for values from.",338,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_model","","Returns the `TreeModel` which is acting as data source for `self`.",338,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_popup_fixed_width","","Gets whether the popup uses a fixed width matching the allocated width of the combo box.",338,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_row_span_column","","Returns the column with row span information for `self`.",338,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_title","","Gets the current title of the menu in tearoff mode. See `ComboBoxExt::set_add_tearoffs`.",338,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_wrap_width","","Returns the wrap width which is used to determine the number of columns for the popup menu. If the wrap width is larger than 1, the combo box is in table mode.",338,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"popdown","","Hides the menu or dropdown list of `self`.",338,{"inputs":[{"name":"self"}],"output":null}],[10,"popup","","Pops up the menu or dropdown list of `self`.",338,{"inputs":[{"name":"self"}],"output":null}],[10,"popup_for_device","","Pops up the menu or dropdown list of `self`, the popup window will be grabbed so only `device` and its associated pointer/keyboard are the only `GdkDevices` able to send events to it. ## `device` a `gdk::Device`",338,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_active","","Sets the active item of `self` to be the item at `index`. ## `index_` An index in the model passed during construction, or -1 to have no active item",338,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_active_id","","Changes the active row of `self` to the one that has an ID equal to `active_id`, or unsets the active row if `active_id` is `None`. Rows having a `None` ID string cannot be made active by this function.",338,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"set_active_iter","","Sets the current active item to be the one referenced by `iter`, or unsets the active item if `iter` is `None`. ## `iter` The `TreeIter`, or `None`",338,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_add_tearoffs","","Sets whether the popup menu should have a tearoff menu item.",338,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_button_sensitivity","","Sets whether the dropdown button of the combo box should be always sensitive (`SensitivityType::On`), never sensitive (`SensitivityType::Off`) or only if there is at least one item to display (`SensitivityType::Auto`). ## `sensitivity` specify the sensitivity of the dropdown button",338,{"inputs":[{"name":"self"},{"name":"sensitivitytype"}],"output":null}],[10,"set_column_span_column","","Sets the column with column span information for `self` to be `column_span`. The column span column contains integers which indicate how many columns an item should span. ## `column_span` A column in the model passed during construction",338,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_entry_text_column","","Sets the model column which `self` should use to get strings from to be `text_column`. The column `text_column` in the model of `self` must be of type `G_TYPE_STRING`.",338,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_id_column","","Sets the model column which `self` should use to get string IDs for values from. The column `id_column` in the model of `self` must be of type `G_TYPE_STRING`. ## `id_column` A column in `model` to get string IDs for values from",338,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_model","","Sets the model used by `self` to be `model`. Will unset a previously set model (if applicable). If model is `None`, then it will unset the model.",338,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_popup_fixed_width","","Specifies whether the popup’s width should be a fixed width matching the allocated width of the combo box. ## `fixed` whether to use a fixed popup width",338,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_row_span_column","","Sets the column with row span information for `self` to be `row_span`. The row span column contains integers which indicate how many rows an item should span. ## `row_span` A column in the model passed during construction.",338,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_title","","Sets the menu’s title in tearoff mode.",338,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_wrap_width","","Sets the wrap width of `self` to be `width`. The wrap width is basically the preferred number of columns when you want the popup to be layed out in a table. ## `width` Preferred number of columns",338,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_cell_area","","",338,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_property_has_frame","","",338,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_has_frame","","",338,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_popup_shown","","",338,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_tearoff_title","","",338,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_tearoff_title","","",338,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"connect_changed","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_format_entry_text","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_active","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_popdown","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_popup","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_active_notify","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_active_id_notify","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_add_tearoffs_notify","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_button_sensitivity_notify","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_cell_area_notify","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_column_span_column_notify","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_entry_text_column_notify","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_has_entry_notify","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_has_frame_notify","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_id_column_notify","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_model_notify","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_popup_fixed_width_notify","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_popup_shown_notify","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_row_span_column_notify","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_tearoff_title_notify","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_wrap_width_notify","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ComboBoxTextExt","","",null,null],[10,"append","","",339,{"inputs":[{"name":"self"},{"name":"p"},{"name":"str"}],"output":null}],[10,"append_text","","",339,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"get_active_text","","",339,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"insert","","",339,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"p"},{"name":"str"}],"output":null}],[10,"insert_text","","",339,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"str"}],"output":null}],[10,"prepend","","",339,{"inputs":[{"name":"self"},{"name":"p"},{"name":"str"}],"output":null}],[10,"prepend_text","","",339,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"remove","","",339,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"remove_all","","",339,{"inputs":[{"name":"self"}],"output":null}],[8,"ContainerExt","","Trait containing all `Container` methods.",null,null],[10,"add","","Adds `widget` to `self`. Typically used for simple containers such as `Window`, `Frame`, or `Button`; for more complicated layout containers such as `Box` or `Grid`, this function will pick default packing parameters that may not be correct. So consider functions such as `BoxExt::pack_start` and `Grid::attach` as an alternative to `ContainerExt::add` in those cases. A widget may be added to only one container at a time; you can’t place the same widget inside two different containers.",340,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"check_resize","","",340,{"inputs":[{"name":"self"}],"output":null}],[10,"child_notify","","Emits a `Widget::child-notify` signal for the child property `child_property` on widget.",340,{"inputs":[{"name":"self"},{"name":"p"},{"name":"str"}],"output":null}],[10,"child_type","","Returns the type of the children supported by the container.",340,{"inputs":[{"name":"self"}],"output":{"name":"type"}}],[10,"get_border_width","","Retrieves the border width of the container. See `ContainerExt::set_border_width`.",340,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_children","","Returns the container’s non-internal children. See `ContainerExt::forall` for details on what constitutes an \"internal\" child.",340,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_focus_child","","Returns the current focus child widget inside `self`. This is not the currently focused widget. That can be obtained by calling `Window::get_focus`.",340,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_focus_hadjustment","","Retrieves the horizontal focus adjustment for the container. See gtk_container_set_focus_hadjustment ().",340,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_focus_vadjustment","","Retrieves the vertical focus adjustment for the container. See `ContainerExt::set_focus_vadjustment`.",340,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_resize_mode","","Returns the resize mode for the container. See gtk_container_set_resize_mode ().",340,{"inputs":[{"name":"self"}],"output":{"name":"resizemode"}}],[10,"propagate_draw","","When a container receives a call to the draw function, it must send synthetic `Widget::draw` calls to all children that don’t have their own `GdkWindows`. This function provides a convenient way of doing this. A container, when it receives a call to its `Widget::draw` function, calls `ContainerExt::propagate_draw` once for each child, passing in the `cr` the container received.",340,{"inputs":[{"name":"self"},{"name":"p"},{"name":"context"}],"output":null}],[10,"remove","","Removes `widget` from `self`. `widget` must be inside `self`. Note that `self` will own a reference to `widget`, and that this may be the last reference held; so removing a widget from its container can destroy that widget. If you want to use `widget` again, you need to add a reference to it while it’s not inside a container, using `gobject::Object::ref`. If you don’t want to use `widget` again it’s usually more efficient to simply destroy it directly using `Widget::destroy` since this will remove it from the container and help break any circular reference count cycles. ## `widget` a current child of `self`",340,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"resize_children","","",340,{"inputs":[{"name":"self"}],"output":null}],[10,"set_border_width","","Sets the border width of the container.",340,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"set_focus_chain","","Sets a focus chain, overriding the one computed automatically by GTK+.",340,null],[10,"set_focus_child","","Sets, or unsets if `child` is `None`, the focused child of `self`.",340,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_focus_hadjustment","","Hooks up an adjustment to focus handling in a container, so when a child of the container is focused, the adjustment is scrolled to show that widget. This function sets the horizontal alignment. See `ScrolledWindow::get_hadjustment` for a typical way of obtaining the adjustment and `ContainerExt::set_focus_vadjustment` for setting the vertical adjustment.",340,{"inputs":[{"name":"self"},{"name":"adjustment"}],"output":null}],[10,"set_focus_vadjustment","","Hooks up an adjustment to focus handling in a container, so when a child of the container is focused, the adjustment is scrolled to show that widget. This function sets the vertical alignment. See `ScrolledWindow::get_vadjustment` for a typical way of obtaining the adjustment and `ContainerExt::set_focus_hadjustment` for setting the horizontal adjustment.",340,{"inputs":[{"name":"self"},{"name":"adjustment"}],"output":null}],[10,"set_reallocate_redraws","","Sets the `reallocate_redraws` flag of the container to the given value.",340,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_resize_mode","","Sets the resize mode for the container.",340,{"inputs":[{"name":"self"},{"name":"resizemode"}],"output":null}],[10,"unset_focus_chain","","Removes a focus chain explicitly set with `ContainerExt::set_focus_chain`.",340,{"inputs":[{"name":"self"}],"output":null}],[10,"set_property_child","","",340,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"connect_add","","",340,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_check_resize","","",340,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_remove","","",340,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_set_focus_child","","",340,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_border_width_notify","","",340,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_child_notify","","",340,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_resize_mode_notify","","",340,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CssProviderExt","","",null,null],[10,"load_from_data","","",341,null],[10,"load_from_path","","",341,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"load_from_resource","","",341,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"to_string","","",341,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[10,"connect_parsing_error","","",341,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"DialogExt","","Trait containing all `Dialog` methods.",null,null],[10,"add_action_widget","","Adds an activatable widget to the action area of a `Dialog`, connecting a signal handler that will emit the `Dialog::response` signal on the dialog when the widget is activated. The widget is appended to the end of the dialog’s action area. If you want to add a non-activatable widget, simply pack it into the `action_area` field of the `Dialog` struct. ## `child` an activatable widget ## `response_id` response ID for `child`",342,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":null}],[10,"add_button","","Adds a button with the given text and sets things up so that clicking the button will emit the `Dialog::response` signal with the given `response_id`. The button is appended to the end of the dialog’s action area. The button widget is returned, but usually you don’t need it. ## `button_text` text of button ## `response_id` response ID for the button",342,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"}],"output":{"name":"widget"}}],[10,"get_action_area","","Returns the action area of `self`.",342,{"inputs":[{"name":"self"}],"output":{"name":"widget"}}],[10,"get_content_area","","Returns the content area of `self`.",342,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[10,"get_header_bar","","Returns the header bar of `self`. Note that the headerbar is only used by the dialog if the `Dialog:use-header-bar` property is `true`.",342,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_response_for_widget","","Gets the response id of a widget in the action area of a dialog. ## `widget` a widget in the action area of `self`",342,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"i32"}}],[10,"get_widget_for_response","","Gets the widget button that uses the given response ID in the action area of a dialog. ## `response_id` the response ID used by the `self` widget",342,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[10,"response","","Emits the `Dialog::response` signal with the given response ID. Used to indicate that the user has responded to the dialog in some way; typically either you or `DialogExt::run` will be monitoring the ::response signal and take appropriate action. ## `response_id` response ID",342,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"run","","Blocks in a recursive main loop until the `self` either emits the `Dialog::response` signal, or is destroyed. If the dialog is destroyed during the call to `DialogExt::run`, `DialogExt::run` returns `ResponseType::None`. Otherwise, it returns the response ID from the ::response signal emission.",342,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_alternative_button_order_from_array","","Sets an alternative button order. If the `Settings:gtk-alternative-button-order` setting is set to `true`, the dialog buttons are reordered according to the order of the response ids in `new_order`.",342,null],[10,"set_default_response","","Sets the last widget in the dialog’s action area with the given `response_id` as the default widget for the dialog. Pressing “Enter” normally activates the default widget. ## `response_id` a response ID",342,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_response_sensitive","","Calls `gtk_widget_set_sensitive (widget, @setting)` for each widget in the dialog’s action area with the given `response_id`. A convenient way to sensitize/desensitize dialog buttons. ## `response_id` a response ID ## `setting` `true` for sensitive",342,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"bool"}],"output":null}],[10,"get_property_use_header_bar","","",342,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"connect_close","","",342,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_response","","",342,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_header_bar_notify","","",342,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"EditableExt","","Trait containing all `Editable` methods.",null,null],[10,"copy_clipboard","","Copies the contents of the currently selected content in the editable and puts it on the clipboard.",343,{"inputs":[{"name":"self"}],"output":null}],[10,"cut_clipboard","","Removes the contents of the currently selected content in the editable and puts it on the clipboard.",343,{"inputs":[{"name":"self"}],"output":null}],[10,"delete_selection","","Deletes the currently selected text of the editable. This call doesn’t do anything if there is no selected text.",343,{"inputs":[{"name":"self"}],"output":null}],[10,"delete_text","","Deletes a sequence of characters. The characters that are deleted are those characters at positions from `start_pos` up to, but not including `end_pos`. If `end_pos` is negative, then the characters deleted are those from `start_pos` to the end of the text.",343,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"get_chars","","Retrieves a sequence of characters. The characters that are retrieved are those characters at positions from `start_pos` up to, but not including `end_pos`. If `end_pos` is negative, then the characters retrieved are those characters from `start_pos` to the end of the text.",343,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_editable","","Retrieves whether `self` is editable. See `Editable::set_editable`.",343,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_position","","Retrieves the current position of the cursor relative to the start of the content of the editable.",343,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_selection_bounds","","Retrieves the selection bound of the editable. start_pos will be filled with the start of the selection and `end_pos` with end. If no text was selected both will be identical and `false` will be returned.",343,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"insert_text","","Inserts `new_text_length` bytes of `new_text` into the contents of the widget, at position `position`.",343,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"}],"output":null}],[10,"paste_clipboard","","Pastes the content of the clipboard to the current position of the cursor in the editable.",343,{"inputs":[{"name":"self"}],"output":null}],[10,"select_region","","Selects a region of text. The characters that are selected are those characters at positions from `start_pos` up to, but not including `end_pos`. If `end_pos` is negative, then the characters selected are those characters from `start_pos` to the end of the text.",343,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_editable","","Determines if the user can edit the text in the editable widget or not. ## `is_editable` `true` if the user is allowed to edit the text  in the widget",343,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_position","","Sets the cursor position in the editable to the given value.",343,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[8,"EntryExt","","Trait containing all `Entry` methods.",null,null],[10,"get_activates_default","","Retrieves the value set by `EntryExt::set_activates_default`.",344,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_alignment","","Gets the value set by `EntryExt::set_alignment`.",344,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"get_attributes","","Gets the attribute list that was set on the entry using `EntryExt::set_attributes`, if any.",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_buffer","","Get the `EntryBuffer` object which holds the text for this widget.",344,{"inputs":[{"name":"self"}],"output":{"name":"entrybuffer"}}],[10,"get_completion","","Returns the auxiliary completion object currently in use by `self`.",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_current_icon_drag_source","","Returns the index of the icon which is the source of the current DND operation, or -1.",344,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_cursor_hadjustment","","Retrieves the horizontal cursor adjustment for the entry. See `EntryExt::set_cursor_hadjustment`.",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_has_frame","","Gets the value set by `EntryExt::set_has_frame`.",344,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_icon_activatable","","Returns whether the icon is activatable. ## `icon_pos` Icon position",344,{"inputs":[{"name":"self"},{"name":"entryiconposition"}],"output":{"name":"bool"}}],[10,"get_icon_area","","Gets the area where entry’s icon at `icon_pos` is drawn. This function is useful when drawing something to the entry in a draw callback.",344,{"inputs":[{"name":"self"},{"name":"entryiconposition"}],"output":{"name":"rectangle"}}],[10,"get_icon_at_pos","","Finds the icon at the given position and return its index. The position’s coordinates are relative to the `self`’s top left corner. If `x`, `y` doesn’t lie inside an icon, -1 is returned. This function is intended for use in a `Widget::query-tooltip` signal handler. ## `x` the x coordinate of the position to find ## `y` the y coordinate of the position to find",344,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[10,"get_icon_gicon","","Retrieves the `gio::Icon` used for the icon, or `None` if there is no icon or if the icon was set by some other method (e.g., by stock, pixbuf, or icon name). ## `icon_pos` Icon position",344,{"inputs":[{"name":"self"},{"name":"entryiconposition"}],"output":{"name":"option"}}],[10,"get_icon_name","","Retrieves the icon name used for the icon, or `None` if there is no icon or if the icon was set by some other method (e.g., by pixbuf, stock or gicon). ## `icon_pos` Icon position",344,{"inputs":[{"name":"self"},{"name":"entryiconposition"}],"output":{"name":"option"}}],[10,"get_icon_pixbuf","","Retrieves the image used for the icon.",344,{"inputs":[{"name":"self"},{"name":"entryiconposition"}],"output":{"name":"option"}}],[10,"get_icon_sensitive","","Returns whether the icon appears sensitive or insensitive. ## `icon_pos` Icon position",344,{"inputs":[{"name":"self"},{"name":"entryiconposition"}],"output":{"name":"bool"}}],[10,"get_icon_stock","","Retrieves the stock id used for the icon, or `None` if there is no icon or if the icon was set by some other method (e.g., by pixbuf, icon name or gicon).",344,{"inputs":[{"name":"self"},{"name":"entryiconposition"}],"output":{"name":"option"}}],[10,"get_icon_storage_type","","Gets the type of representation being used by the icon to store image data. If the icon has no image data, the return value will be `ImageType::Empty`. ## `icon_pos` Icon position",344,{"inputs":[{"name":"self"},{"name":"entryiconposition"}],"output":{"name":"imagetype"}}],[10,"get_icon_tooltip_markup","","Gets the contents of the tooltip on the icon at the specified position in `self`. ## `icon_pos` the icon position",344,{"inputs":[{"name":"self"},{"name":"entryiconposition"}],"output":{"name":"option"}}],[10,"get_icon_tooltip_text","","Gets the contents of the tooltip on the icon at the specified position in `self`. ## `icon_pos` the icon position",344,{"inputs":[{"name":"self"},{"name":"entryiconposition"}],"output":{"name":"option"}}],[10,"get_input_hints","","Gets the value of the `Entry:input-hints` property.",344,{"inputs":[{"name":"self"}],"output":{"name":"inputhints"}}],[10,"get_input_purpose","","Gets the value of the `Entry:input-purpose` property.",344,{"inputs":[{"name":"self"}],"output":{"name":"inputpurpose"}}],[10,"get_invisible_char","","Retrieves the character displayed in place of the real characters for entries with visibility set to false. See `EntryExt::set_invisible_char`.",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_layout","","Gets the `pango::Layout` used to display the entry. The layout is useful to e.g. convert text positions to pixel positions, in combination with `EntryExt::get_layout_offsets`. The returned layout is owned by the entry and must not be modified or freed by the caller.",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_layout_offsets","","Obtains the position of the `pango::Layout` used to render text in the entry, in widget coordinates. Useful if you want to line up the text in an entry with some other text, e.g. when using the entry to implement editable cells in a sheet widget.",344,null],[10,"get_max_length","","Retrieves the maximum allowed length of the text in `self`. See `EntryExt::set_max_length`.",344,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_max_width_chars","","Retrieves the desired maximum width of `self`, in characters. See `EntryExt::set_max_width_chars`.",344,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_overwrite_mode","","Gets the value set by `EntryExt::set_overwrite_mode`.",344,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_placeholder_text","","Retrieves the text that will be displayed when `self` is empty and unfocused",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_progress_fraction","","Returns the current fraction of the task that’s been completed. See `EntryExt::set_progress_fraction`.",344,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_progress_pulse_step","","Retrieves the pulse step set with `EntryExt::set_progress_pulse_step`.",344,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_tabs","","Gets the tabstops that were set on the entry using `EntryExt::set_tabs`, if any.",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_text","","Retrieves the contents of the entry widget. See also `Editable::get_chars`.",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_text_area","","Gets the area where the entry’s text is drawn. This function is useful when drawing something to the entry in a draw callback.",344,{"inputs":[{"name":"self"}],"output":{"name":"rectangle"}}],[10,"get_text_length","","Retrieves the current length of the text in `self`.",344,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[10,"get_visibility","","Retrieves whether the text in `self` is visible. See `EntryExt::set_visibility`.",344,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_width_chars","","Gets the value set by `EntryExt::set_width_chars`.",344,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"grab_focus_without_selecting","","Causes `self` to have keyboard focus.",344,{"inputs":[{"name":"self"}],"output":null}],[10,"im_context_filter_keypress","","Allow the `Entry` input method to internally handle key press and release events. If this function returns `true`, then no further processing should be done for this key event. See `IMContext::filter_keypress`.",344,{"inputs":[{"name":"self"},{"name":"eventkey"}],"output":{"name":"bool"}}],[10,"layout_index_to_text_index","","Converts from a position in the entry contents (returned by `EntryExt::get_text`) to a position in the entry’s `pango::Layout` (returned by `EntryExt::get_layout`, with text retrieved via `pango::Layout::get_text`). ## `layout_index` byte index into the entry layout text",344,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"i32"}}],[10,"progress_pulse","","Indicates that some progress is made, but you don’t know how much. Causes the entry’s progress indicator to enter “activity mode,” where a block bounces back and forth. Each call to `EntryExt::progress_pulse` causes the block to move by a little bit (the amount of movement per pulse is determined by `EntryExt::set_progress_pulse_step`).",344,{"inputs":[{"name":"self"}],"output":null}],[10,"reset_im_context","","Reset the input method context of the entry if needed.",344,{"inputs":[{"name":"self"}],"output":null}],[10,"set_activates_default","","If `setting` is `true`, pressing Enter in the `self` will activate the default widget for the window containing the entry. This usually means that the dialog box containing the entry will be closed, since the default widget is usually one of the dialog buttons.",344,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_alignment","","Sets the alignment for the contents of the entry. This controls the horizontal positioning of the contents when the displayed text is shorter than the width of the entry. ## `xalign` The horizontal alignment, from 0 (left) to 1 (right).  Reversed for RTL layouts",344,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"set_attributes","","Sets a `pango::AttrList`; the attributes in the list are applied to the entry text.",344,{"inputs":[{"name":"self"},{"name":"attrlist"}],"output":null}],[10,"set_buffer","","Set the `EntryBuffer` object which holds the text for this widget. ## `buffer` a `EntryBuffer`",344,{"inputs":[{"name":"self"},{"name":"entrybuffer"}],"output":null}],[10,"set_completion","","Sets `completion` to be the auxiliary completion object to use with `self`. All further configuration of the completion mechanism is done on `completion` using the `EntryCompletion` API. Completion is disabled if `completion` is set to `None`. ## `completion` The `EntryCompletion` or `None`",344,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_cursor_hadjustment","","Hooks up an adjustment to the cursor position in an entry, so that when the cursor is moved, the adjustment is scrolled to show that position. See `ScrolledWindow::get_hadjustment` for a typical way of obtaining the adjustment.",344,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_has_frame","","Sets whether the entry has a beveled frame around it. ## `setting` new value",344,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_icon_activatable","","Sets whether the icon is activatable. ## `icon_pos` Icon position ## `activatable` `true` if the icon should be activatable",344,{"inputs":[{"name":"self"},{"name":"entryiconposition"},{"name":"bool"}],"output":null}],[10,"set_icon_drag_source","","Sets up the icon at the given position so that GTK+ will start a drag operation when the user clicks and drags the icon.",344,{"inputs":[{"name":"self"},{"name":"entryiconposition"},{"name":"targetlist"},{"name":"dragaction"}],"output":null}],[10,"set_icon_from_gicon","","Sets the icon shown in the entry at the specified position from the current icon theme. If the icon isn’t known, a “broken image” icon will be displayed instead.",344,{"inputs":[{"name":"self"},{"name":"entryiconposition"},{"name":"q"}],"output":null}],[10,"set_icon_from_icon_name","","Sets the icon shown in the entry at the specified position from the current icon theme.",344,{"inputs":[{"name":"self"},{"name":"entryiconposition"},{"name":"p"}],"output":null}],[10,"set_icon_from_pixbuf","","Sets the icon shown in the specified position using a pixbuf.",344,{"inputs":[{"name":"self"},{"name":"entryiconposition"},{"name":"p"}],"output":null}],[10,"set_icon_from_stock","","Sets the icon shown in the entry at the specified position from a stock image.",344,{"inputs":[{"name":"self"},{"name":"entryiconposition"},{"name":"p"}],"output":null}],[10,"set_icon_sensitive","","Sets the sensitivity for the specified icon. ## `icon_pos` Icon position ## `sensitive` Specifies whether the icon should appear  sensitive or insensitive",344,{"inputs":[{"name":"self"},{"name":"entryiconposition"},{"name":"bool"}],"output":null}],[10,"set_icon_tooltip_markup","","Sets `tooltip` as the contents of the tooltip for the icon at the specified position. `tooltip` is assumed to be marked up with the [Pango text markup language][PangoMarkupFormat].",344,{"inputs":[{"name":"self"},{"name":"entryiconposition"},{"name":"p"}],"output":null}],[10,"set_icon_tooltip_text","","Sets `tooltip` as the contents of the tooltip for the icon at the specified position.",344,{"inputs":[{"name":"self"},{"name":"entryiconposition"},{"name":"p"}],"output":null}],[10,"set_input_hints","","Sets the `Entry:input-hints` property, which allows input methods to fine-tune their behaviour.",344,{"inputs":[{"name":"self"},{"name":"inputhints"}],"output":null}],[10,"set_input_purpose","","Sets the `Entry:input-purpose` property which can be used by on-screen keyboards and other input methods to adjust their behaviour.",344,{"inputs":[{"name":"self"},{"name":"inputpurpose"}],"output":null}],[10,"set_invisible_char","","Sets the character to use in place of the actual text when `EntryExt::set_visibility` has been called to set text visibility to `false`. i.e. this is the character used in “password mode” to show the user how many characters have been typed. By default, GTK+ picks the best invisible char available in the current font. If you set the invisible char to 0, then the user will get no feedback at all; there will be no text on the screen as they type. ## `ch` a Unicode character",344,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_max_length","","Sets the maximum allowed length of the contents of the widget. If the current contents are longer than the given length, then they will be truncated to fit.",344,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_max_width_chars","","Sets the desired maximum width in characters of `self`.",344,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_overwrite_mode","","Sets whether the text is overwritten when typing in the `Entry`. ## `overwrite` new value",344,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_placeholder_text","","Sets text to be displayed in `self` when it is empty and unfocused. This can be used to give a visual hint of the expected contents of the `Entry`.",344,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_progress_fraction","","Causes the entry’s progress indicator to “fill in” the given fraction of the bar. The fraction should be between 0.0 and 1.0, inclusive. ## `fraction` fraction of the task that’s been completed",344,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"set_progress_pulse_step","","Sets the fraction of total entry width to move the progress bouncing block for each call to `EntryExt::progress_pulse`. ## `fraction` fraction between 0.0 and 1.0",344,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"set_tabs","","Sets a `pango::TabArray`; the tabstops in the array are applied to the entry text.",344,{"inputs":[{"name":"self"},{"name":"tabarray"}],"output":null}],[10,"set_text","","Sets the text in the widget to the given value, replacing the current contents.",344,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_visibility","","Sets whether the contents of the entry are visible or not. When visibility is set to `false`, characters are displayed as the invisible char, and will also appear that way when the text in the entry widget is copied elsewhere.",344,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_width_chars","","Changes the size request of the entry to be about the right size for `n_chars` characters. Note that it changes the size request, the size can still be affected by how you pack the widget into containers. If `n_chars` is -1, the size reverts to the default entry size. ## `n_chars` width in chars",344,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"text_index_to_layout_index","","Converts from a position in the entry’s `pango::Layout` (returned by `EntryExt::get_layout`) to a position in the entry contents (returned by `EntryExt::get_text`). ## `text_index` byte index into the entry contents",344,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"i32"}}],[10,"unset_invisible_char","","Unsets the invisible char previously set with `EntryExt::set_invisible_char`. So that the default invisible char is used again.",344,{"inputs":[{"name":"self"}],"output":null}],[10,"get_property_caps_lock_warning","","",344,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_caps_lock_warning","","",344,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_cursor_position","","",344,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_property_im_module","","",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_im_module","","",344,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_invisible_char_set","","",344,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_invisible_char_set","","",344,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_populate_all","","",344,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_populate_all","","",344,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_primary_icon_activatable","","",344,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_primary_icon_activatable","","",344,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_primary_icon_gicon","","",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_primary_icon_gicon","","",344,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_primary_icon_name","","",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_primary_icon_name","","",344,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_primary_icon_pixbuf","","",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_primary_icon_pixbuf","","",344,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_primary_icon_sensitive","","",344,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_primary_icon_sensitive","","",344,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_primary_icon_stock","","",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_primary_icon_stock","","",344,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_primary_icon_storage_type","","",344,{"inputs":[{"name":"self"}],"output":{"name":"imagetype"}}],[10,"get_property_primary_icon_tooltip_markup","","",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_primary_icon_tooltip_markup","","",344,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_primary_icon_tooltip_text","","",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_primary_icon_tooltip_text","","",344,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_scroll_offset","","",344,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_property_secondary_icon_activatable","","",344,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_secondary_icon_activatable","","",344,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_secondary_icon_gicon","","",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_secondary_icon_gicon","","",344,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_secondary_icon_name","","",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_secondary_icon_name","","",344,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_secondary_icon_pixbuf","","",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_secondary_icon_pixbuf","","",344,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_secondary_icon_sensitive","","",344,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_secondary_icon_sensitive","","",344,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_secondary_icon_stock","","",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_secondary_icon_stock","","",344,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_secondary_icon_storage_type","","",344,{"inputs":[{"name":"self"}],"output":{"name":"imagetype"}}],[10,"get_property_secondary_icon_tooltip_markup","","",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_secondary_icon_tooltip_markup","","",344,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_secondary_icon_tooltip_text","","",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_secondary_icon_tooltip_text","","",344,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_selection_bound","","",344,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_property_shadow_type","","",344,{"inputs":[{"name":"self"}],"output":{"name":"shadowtype"}}],[10,"set_property_shadow_type","","",344,{"inputs":[{"name":"self"},{"name":"shadowtype"}],"output":null}],[10,"get_property_truncate_multiline","","",344,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_truncate_multiline","","",344,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_xalign","","",344,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_xalign","","",344,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"connect_activate","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_backspace","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_copy_clipboard","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_cut_clipboard","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_delete_from_cursor","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_icon_press","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_icon_release","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_insert_at_cursor","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_cursor","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_paste_clipboard","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_populate_popup","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_preedit_changed","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_toggle_overwrite","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_activates_default_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_attributes_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_buffer_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_caps_lock_warning_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_completion_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_cursor_position_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_editable_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_has_frame_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_im_module_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_input_hints_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_input_purpose_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_invisible_char_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_invisible_char_set_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_max_length_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_max_width_chars_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_overwrite_mode_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_placeholder_text_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_populate_all_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_primary_icon_activatable_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_primary_icon_gicon_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_primary_icon_name_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_primary_icon_pixbuf_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_primary_icon_sensitive_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_primary_icon_stock_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_primary_icon_storage_type_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_primary_icon_tooltip_markup_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_primary_icon_tooltip_text_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_progress_fraction_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_progress_pulse_step_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_scroll_offset_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_secondary_icon_activatable_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_secondary_icon_gicon_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_secondary_icon_name_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_secondary_icon_pixbuf_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_secondary_icon_sensitive_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_secondary_icon_stock_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_secondary_icon_storage_type_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_secondary_icon_tooltip_markup_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_secondary_icon_tooltip_text_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_selection_bound_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_shadow_type_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_text_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_text_length_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_truncate_multiline_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_visibility_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_width_chars_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_xalign_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"EntryCompletionExt","","",null,null],[10,"complete","","",345,{"inputs":[{"name":"self"}],"output":null}],[10,"compute_prefix","","",345,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"delete_action","","",345,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_completion_prefix","","",345,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_entry","","",345,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_inline_completion","","",345,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_inline_selection","","",345,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_minimum_key_length","","",345,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_model","","",345,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_popup_completion","","",345,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_popup_set_width","","",345,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_popup_single_match","","",345,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_text_column","","",345,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"insert_action_markup","","",345,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"str"}],"output":null}],[10,"insert_action_text","","",345,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"str"}],"output":null}],[10,"insert_prefix","","",345,{"inputs":[{"name":"self"}],"output":null}],[10,"set_inline_completion","","",345,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_inline_selection","","",345,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_minimum_key_length","","",345,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_model","","",345,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_popup_completion","","",345,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_popup_set_width","","",345,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_popup_single_match","","",345,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_text_column","","",345,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_cell_area","","",345,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_action_activated","","",345,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_cursor_on_match","","",345,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_insert_prefix","","",345,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_match_selected","","",345,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_no_matches","","",345,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_cell_area_notify","","",345,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_inline_completion_notify","","",345,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_inline_selection_notify","","",345,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_minimum_key_length_notify","","",345,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_model_notify","","",345,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_popup_completion_notify","","",345,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_popup_set_width_notify","","",345,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_popup_single_match_notify","","",345,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_text_column_notify","","",345,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"EventBoxExt","","",null,null],[10,"get_above_child","","",346,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_visible_window","","",346,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_above_child","","",346,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_visible_window","","",346,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_property_above_child_notify","","",346,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_visible_window_notify","","",346,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"EventControllerExt","","Trait containing all `EventController` methods.",null,null],[10,"get_propagation_phase","","Gets the propagation phase at which `self` handles events.",347,{"inputs":[{"name":"self"}],"output":{"name":"propagationphase"}}],[10,"get_widget","","Returns the `Widget` this controller relates to.",347,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"handle_event","","Feeds an events into `self`, so it can be interpreted and the controller actions triggered.",347,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"bool"}}],[10,"reset","","Resets the `self` to a clean state. Every interaction the controller did through `EventController::handle-event` will be dropped at this point.",347,{"inputs":[{"name":"self"}],"output":null}],[10,"set_propagation_phase","","Sets the propagation phase at which a controller handles events.",347,{"inputs":[{"name":"self"},{"name":"propagationphase"}],"output":null}],[10,"connect_property_propagation_phase_notify","","",347,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_widget_notify","","",347,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ExpanderExt","","",null,null],[10,"get_expanded","","",348,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_label","","",348,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_label_fill","","",348,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_label_widget","","",348,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_resize_toplevel","","",348,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_spacing","","",348,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_use_markup","","",348,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_use_underline","","",348,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_expanded","","",348,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_label","","",348,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_label_fill","","",348,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_label_widget","","",348,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_resize_toplevel","","",348,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_spacing","","",348,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_use_markup","","",348,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_use_underline","","",348,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_activate","","",348,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_expanded_notify","","",348,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_label_notify","","",348,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_label_fill_notify","","",348,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_label_widget_notify","","",348,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_resize_toplevel_notify","","",348,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_spacing_notify","","",348,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_markup_notify","","",348,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_underline_notify","","",348,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"FileChooserExt","","Trait containing all `FileChooser` methods.",null,null],[10,"add_filter","","Adds `filter` to the list of filters that the user can select between. When a filter is selected, only files that are passed by that filter are displayed.",349,{"inputs":[{"name":"self"},{"name":"filefilter"}],"output":null}],[10,"add_shortcut_folder","","Adds a folder to be displayed with the shortcut folders in a file chooser. Note that shortcut folders do not get saved, as they are provided by the application. For example, you can use this to add a “/usr/share/mydrawprogram/Clipart” folder to the volume list. ## `folder` filename of the folder to add",349,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"add_shortcut_folder_uri","","Adds a folder URI to be displayed with the shortcut folders in a file chooser. Note that shortcut folders do not get saved, as they are provided by the application. For example, you can use this to add a “file:///usr/share/mydrawprogram/Clipart” folder to the volume list. ## `uri` URI of the folder to add",349,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"get_action","","Gets the type of operation that the file chooser is performing; see `FileChooser::set_action`.",349,{"inputs":[{"name":"self"}],"output":{"name":"filechooseraction"}}],[10,"get_choice","","",349,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_create_folders","","Gets whether file choser will offer to create new folders. See `FileChooser::set_create_folders`.",349,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_current_folder","","Gets the current folder of `self` as a local filename. See `FileChooser::set_current_folder`.",349,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_current_folder_uri","","Gets the current folder of `self` as an URI. See `FileChooser::set_current_folder_uri`.",349,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_current_name","","Gets the current name in the file selector, as entered by the user in the text entry for “Name”.",349,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_do_overwrite_confirmation","","Queries whether a file chooser is set to confirm for overwriting when the user types a file name that already exists.",349,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_extra_widget","","Gets the current preview widget; see `FileChooser::set_extra_widget`.",349,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_filename","","Gets the filename for the currently selected file in the file selector. The filename is returned as an absolute path. If multiple files are selected, one of the filenames will be returned at random.",349,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_filenames","","Lists all the selected files and subfolders in the current folder of `self`. The returned names are full absolute paths. If files in the current folder cannot be represented as local filenames they will be ignored. (See `FileChooser::get_uris`)",349,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_filter","","Gets the current filter; see `FileChooser::set_filter`.",349,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_local_only","","Gets whether only local files can be selected in the file selector. See `FileChooser::set_local_only`",349,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_preview_filename","","Gets the filename that should be previewed in a custom preview widget. See `FileChooser::set_preview_widget`.",349,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_preview_uri","","Gets the URI that should be previewed in a custom preview widget. See `FileChooser::set_preview_widget`.",349,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_preview_widget","","Gets the current preview widget; see `FileChooser::set_preview_widget`.",349,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_preview_widget_active","","Gets whether the preview widget set by `FileChooser::set_preview_widget` should be shown for the current filename. See `FileChooser::set_preview_widget_active`.",349,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_select_multiple","","Gets whether multiple files can be selected in the file selector. See `FileChooser::set_select_multiple`.",349,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_hidden","","Gets whether hidden files and folders are displayed in the file selector. See `FileChooser::set_show_hidden`.",349,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_uri","","Gets the URI for the currently selected file in the file selector. If multiple files are selected, one of the filenames will be returned at random.",349,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_uris","","Lists all the selected files and subfolders in the current folder of `self`. The returned names are full absolute URIs.",349,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_use_preview_label","","Gets whether a stock label should be drawn with the name of the previewed file. See `FileChooser::set_use_preview_label`.",349,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"list_filters","","Lists the current set of user-selectable filters; see `FileChooser::add_filter`, `FileChooser::remove_filter`.",349,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"list_shortcut_folder_uris","","Queries the list of shortcut folders in the file chooser, as set by `FileChooser::add_shortcut_folder_uri`.",349,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"list_shortcut_folders","","Queries the list of shortcut folders in the file chooser, as set by `FileChooser::add_shortcut_folder`.",349,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"remove_choice","","",349,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"remove_filter","","Removes `filter` from the list of filters that the user can select between. ## `filter` a `FileFilter`",349,{"inputs":[{"name":"self"},{"name":"filefilter"}],"output":null}],[10,"remove_shortcut_folder","","Removes a folder from a file chooser’s list of shortcut folders. ## `folder` filename of the folder to remove",349,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"remove_shortcut_folder_uri","","Removes a folder URI from a file chooser’s list of shortcut folders. ## `uri` URI of the folder to remove",349,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"select_all","","Selects all the files in the current folder of a file chooser.",349,{"inputs":[{"name":"self"}],"output":null}],[10,"select_filename","","Selects a filename. If the file name isn’t in the current folder of `self`, then the current folder of `self` will be changed to the folder containing `filename`. ## `filename` the filename to select",349,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"select_uri","","Selects the file to by `uri`. If the URI doesn’t refer to a file in the current folder of `self`, then the current folder of `self` will be changed to the folder containing `filename`. ## `uri` the URI to select",349,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"set_action","","Sets the type of operation that the chooser is performing; the user interface is adapted to suit the selected action. For example, an option to create a new folder might be shown if the action is `FileChooserAction::Save` but not if the action is `FileChooserAction::Open`. ## `action` the action that the file selector is performing",349,{"inputs":[{"name":"self"},{"name":"filechooseraction"}],"output":null}],[10,"set_choice","","",349,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":null}],[10,"set_create_folders","","Sets whether file choser will offer to create new folders. This is only relevant if the action is not set to be `FileChooserAction::Open`. ## `create_folders` `true` if the Create Folder button should be displayed",349,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_current_folder","","Sets the current folder for `self` from a local filename. The user will be shown the full contents of the current folder, plus user interface elements for navigating to other folders.",349,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"set_current_folder_uri","","Sets the current folder for `self` from an URI. The user will be shown the full contents of the current folder, plus user interface elements for navigating to other folders.",349,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"set_current_name","","Sets the current name in the file selector, as if entered by the user. Note that the name passed in here is a UTF-8 string rather than a filename. This function is meant for such uses as a suggested name in a “Save As...” dialog. You can pass “Untitled.doc” or a similarly suitable suggestion for the `name`.",349,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_do_overwrite_confirmation","","Sets whether a file chooser in `FileChooserAction::Save` mode will present a confirmation dialog if the user types a file name that already exists. This is `false` by default.",349,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_extra_widget","","Sets an application-supplied widget to provide extra options to the user. ## `extra_widget` widget for extra options",349,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_filename","","Sets `filename` as the current filename for the file chooser, by changing to the file’s parent folder and actually selecting the file in list; all other files will be unselected. If the `self` is in `FileChooserAction::Save` mode, the file’s base name will also appear in the dialog’s file name entry.",349,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"set_filter","","Sets the current filter; only the files that pass the filter will be displayed. If the user-selectable list of filters is non-empty, then the filter should be one of the filters in that list. Setting the current filter when the list of filters is empty is useful if you want to restrict the displayed set of files without letting the user change it. ## `filter` a `FileFilter`",349,{"inputs":[{"name":"self"},{"name":"filefilter"}],"output":null}],[10,"set_local_only","","Sets whether only local files can be selected in the file selector. If `local_only` is `true` (the default), then the selected file or files are guaranteed to be accessible through the operating systems native file system and therefore the application only needs to worry about the filename functions in `FileChooser`, like `FileChooser::get_filename`, rather than the URI functions like `FileChooser::get_uri`,",349,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_preview_widget","","Sets an application-supplied widget to use to display a custom preview of the currently selected file. To implement a preview, after setting the preview widget, you connect to the `FileChooser::update-preview` signal, and call `FileChooser::get_preview_filename` or `FileChooser::get_preview_uri` on each change. If you can display a preview of the new file, update your widget and set the preview active using `FileChooser::set_preview_widget_active`. Otherwise, set the preview inactive.",349,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_preview_widget_active","","Sets whether the preview widget set by `FileChooser::set_preview_widget` should be shown for the current filename. When `active` is set to false, the file chooser may display an internally generated preview of the current file or it may display no preview at all. See `FileChooser::set_preview_widget` for more details. ## `active` whether to display the user-specified preview widget",349,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_select_multiple","","Sets whether multiple files can be selected in the file selector. This is only relevant if the action is set to be `FileChooserAction::Open` or `FileChooserAction::SelectFolder`. ## `select_multiple` `true` if multiple files can be selected.",349,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_hidden","","Sets whether hidden files and folders are displayed in the file selector. ## `show_hidden` `true` if hidden files and folders should be displayed.",349,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_uri","","Sets the file referred to by `uri` as the current file for the file chooser, by changing to the URI’s parent folder and actually selecting the URI in the list. If the `self` is `FileChooserAction::Save` mode, the URI’s base name will also appear in the dialog’s file name entry.",349,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"set_use_preview_label","","Sets whether the file chooser should display a stock label with the name of the file that is being previewed; the default is `true`. Applications that want to draw the whole preview area themselves should set this to `false` and display the name themselves in their preview widget.",349,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"unselect_all","","Unselects all the files in the current folder of a file chooser.",349,{"inputs":[{"name":"self"}],"output":null}],[10,"unselect_filename","","Unselects a currently selected filename. If the filename is not in the current directory, does not exist, or is otherwise not currently selected, does nothing. ## `filename` the filename to unselect",349,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"unselect_uri","","Unselects the file referred to by `uri`. If the file is not in the current directory, does not exist, or is otherwise not currently selected, does nothing. ## `uri` the URI to unselect",349,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"connect_confirm_overwrite","","",349,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_current_folder_changed","","",349,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_file_activated","","",349,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_selection_changed","","",349,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_update_preview","","",349,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_action_notify","","",349,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_create_folders_notify","","",349,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_do_overwrite_confirmation_notify","","",349,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_extra_widget_notify","","",349,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_filter_notify","","",349,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_local_only_notify","","",349,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_preview_widget_notify","","",349,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_preview_widget_active_notify","","",349,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_select_multiple_notify","","",349,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_hidden_notify","","",349,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_preview_label_notify","","",349,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"FileChooserButtonExt","","",null,null],[10,"get_title","","",350,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_width_chars","","",350,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_title","","",350,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_width_chars","","",350,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"connect_file_set","","",350,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_dialog_notify","","",350,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_title_notify","","",350,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_width_chars_notify","","",350,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"FileChooserWidgetExt","","",null,null],[10,"get_property_search_mode","","",351,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_search_mode","","",351,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_subtitle","","",351,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_desktop_folder","","",351,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_down_folder","","",351,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_home_folder","","",351,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_location_popup","","",351,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_location_popup_on_paste","","",351,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_location_toggle_popup","","",351,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_places_shortcut","","",351,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_quick_bookmark","","",351,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_recent_shortcut","","",351,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_search_shortcut","","",351,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_show_hidden","","",351,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_up_folder","","",351,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_search_mode_notify","","",351,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_subtitle_notify","","",351,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"FileFilterExt","","",null,null],[10,"add_mime_type","","",352,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"add_pattern","","",352,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"add_pixbuf_formats","","",352,{"inputs":[{"name":"self"}],"output":null}],[10,"get_name","","",352,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_needed","","",352,{"inputs":[{"name":"self"}],"output":{"name":"filefilterflags"}}],[10,"set_name","","",352,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"to_gvariant","","",352,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"FixedExt","","",null,null],[10,"move_","","",353,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"put","","",353,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"get_child_x","","",353,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"i32"}}],[10,"set_child_x","","",353,{"inputs":[{"name":"self"},{"name":"t"},{"name":"i32"}],"output":null}],[10,"get_child_y","","",353,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"i32"}}],[10,"set_child_y","","",353,{"inputs":[{"name":"self"},{"name":"t"},{"name":"i32"}],"output":null}],[8,"FlowBoxExt","","",null,null],[10,"get_activate_on_single_click","","",354,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_child_at_index","","",354,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_column_spacing","","",354,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_homogeneous","","",354,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_max_children_per_line","","",354,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_min_children_per_line","","",354,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_row_spacing","","",354,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_selected_children","","",354,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_selection_mode","","",354,{"inputs":[{"name":"self"}],"output":{"name":"selectionmode"}}],[10,"insert","","",354,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":null}],[10,"invalidate_filter","","",354,{"inputs":[{"name":"self"}],"output":null}],[10,"invalidate_sort","","",354,{"inputs":[{"name":"self"}],"output":null}],[10,"select_all","","",354,{"inputs":[{"name":"self"}],"output":null}],[10,"select_child","","",354,{"inputs":[{"name":"self"},{"name":"flowboxchild"}],"output":null}],[10,"set_activate_on_single_click","","",354,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_column_spacing","","",354,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"set_hadjustment","","",354,{"inputs":[{"name":"self"},{"name":"adjustment"}],"output":null}],[10,"set_homogeneous","","",354,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_max_children_per_line","","",354,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"set_min_children_per_line","","",354,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"set_row_spacing","","",354,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"set_selection_mode","","",354,{"inputs":[{"name":"self"},{"name":"selectionmode"}],"output":null}],[10,"set_vadjustment","","",354,{"inputs":[{"name":"self"},{"name":"adjustment"}],"output":null}],[10,"unselect_all","","",354,{"inputs":[{"name":"self"}],"output":null}],[10,"unselect_child","","",354,{"inputs":[{"name":"self"},{"name":"flowboxchild"}],"output":null}],[10,"get_property_activate_on_single_click","","",354,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_activate_on_single_click","","",354,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_column_spacing","","",354,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_column_spacing","","",354,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_homogeneous","","",354,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_homogeneous","","",354,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_max_children_per_line","","",354,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_max_children_per_line","","",354,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_min_children_per_line","","",354,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_min_children_per_line","","",354,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_row_spacing","","",354,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_row_spacing","","",354,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_selection_mode","","",354,{"inputs":[{"name":"self"}],"output":{"name":"selectionmode"}}],[10,"set_property_selection_mode","","",354,{"inputs":[{"name":"self"},{"name":"selectionmode"}],"output":null}],[10,"connect_activate_cursor_child","","",354,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_child_activated","","",354,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_cursor","","",354,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_select_all","","",354,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_selected_children_changed","","",354,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_toggle_cursor_child","","",354,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_unselect_all","","",354,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_activate_on_single_click_notify","","",354,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_column_spacing_notify","","",354,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_homogeneous_notify","","",354,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_max_children_per_line_notify","","",354,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_min_children_per_line_notify","","",354,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_row_spacing_notify","","",354,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_selection_mode_notify","","",354,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"FlowBoxChildExt","","",null,null],[10,"changed","","",355,{"inputs":[{"name":"self"}],"output":null}],[10,"get_index","","",355,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"is_selected","","",355,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"connect_activate","","",355,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"FontButtonExt","","",null,null],[10,"get_font_name","","",356,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_show_size","","",356,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_style","","",356,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_title","","",356,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_use_font","","",356,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_use_size","","",356,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_font_name","","",356,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"set_show_size","","",356,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_style","","",356,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_title","","",356,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_use_font","","",356,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_use_size","","",356,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_font_set","","",356,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_font_name_notify","","",356,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_size_notify","","",356,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_style_notify","","",356,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_title_notify","","",356,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_font_notify","","",356,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_size_notify","","",356,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"FontChooserExt","","Trait containing all `FontChooser` methods.",null,null],[10,"get_font","","Gets the currently-selected font name.",357,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_font_desc","","Gets the currently-selected font.",357,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_font_face","","Gets the `pango::FontFace` representing the selected font group details (i.e. family, slant, weight, width, etc).",357,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_font_family","","Gets the `pango::FontFamily` representing the selected font family. Font families are a collection of font faces.",357,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_font_map","","",357,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_font_size","","The selected font size.",357,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_preview_text","","Gets the text displayed in the preview area.",357,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_show_preview_entry","","Returns whether the preview entry is shown or not.",357,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_font","","Sets the currently-selected font. ## `fontname` a font name like “Helvetica 12” or “Times Bold 18”",357,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_font_desc","","Sets the currently-selected font from `font_desc`. ## `font_desc` a `pango::FontDescription`",357,{"inputs":[{"name":"self"},{"name":"fontdescription"}],"output":null}],[10,"set_font_map","","",357,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_preview_text","","Sets the text displayed in the preview area. The `text` is used to show how the selected font looks. ## `text` the text to display in the preview area",357,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_show_preview_entry","","Shows or hides the editable preview entry. ## `show_preview_entry` whether to show the editable preview entry or not",357,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_font_activated","","",357,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_font_notify","","",357,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_font_desc_notify","","",357,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_preview_text_notify","","",357,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_preview_entry_notify","","",357,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"FrameExt","","Trait containing all `Frame` methods.",null,null],[10,"get_label","","If the frame’s label widget is a `Label`, returns the text in the label widget. (The frame will have a `Label` for the label widget if a non-`None` argument was passed to `Frame::new`.)",358,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_label_align","","Retrieves the X and Y alignment of the frame’s label. See `FrameExt::set_label_align`. ## `xalign` location to store X alignment of  frame’s label, or `None` ## `yalign` location to store X alignment of  frame’s label, or `None`",358,null],[10,"get_label_widget","","Retrieves the label widget for the frame. See `FrameExt::set_label_widget`.",358,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_shadow_type","","Retrieves the shadow type of the frame. See `FrameExt::set_shadow_type`.",358,{"inputs":[{"name":"self"}],"output":{"name":"shadowtype"}}],[10,"set_label","","Sets the text of the label. If `label` is `None`, the current label is removed. ## `label` the text to use as the label of the frame",358,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_label_align","","Sets the alignment of the frame widget’s label. The default values for a newly created frame are 0.0 and 0.5. ## `xalign` The position of the label along the top edge  of the widget. A value of 0.0 represents left alignment;  1.0 represents right alignment. ## `yalign` The y alignment of the label. A value of 0.0 aligns under  the frame; 1.0 aligns above the frame. If the values are exactly  0.0 or 1.0 the gap in the frame won’t be painted because the label  will be completely above or below the frame.",358,{"inputs":[{"name":"self"},{"name":"f32"},{"name":"f32"}],"output":null}],[10,"set_label_widget","","Sets the label widget for the frame. This is the widget that will appear embedded in the top edge of the frame as a title. ## `label_widget` the new label widget",358,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_shadow_type","","Sets the shadow type for `self`. ## `type_` the new `ShadowType`",358,{"inputs":[{"name":"self"},{"name":"shadowtype"}],"output":null}],[10,"get_property_label_xalign","","",358,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_label_xalign","","",358,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"get_property_label_yalign","","",358,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_label_yalign","","",358,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"connect_property_label_notify","","",358,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_label_widget_notify","","",358,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_label_xalign_notify","","",358,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_label_yalign_notify","","",358,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_shadow_type_notify","","",358,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"GLAreaExt","","",null,null],[10,"attach_buffers","","",359,{"inputs":[{"name":"self"}],"output":null}],[10,"get_auto_render","","",359,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_context","","",359,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_error","","",359,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_has_alpha","","",359,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_has_depth_buffer","","",359,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_has_stencil_buffer","","",359,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_required_version","","",359,null],[10,"get_use_es","","",359,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"make_current","","",359,{"inputs":[{"name":"self"}],"output":null}],[10,"queue_render","","",359,{"inputs":[{"name":"self"}],"output":null}],[10,"set_auto_render","","",359,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_error","","",359,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_has_alpha","","",359,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_has_depth_buffer","","",359,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_has_stencil_buffer","","",359,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_required_version","","",359,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_use_es","","",359,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_create_context","","",359,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_render","","",359,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_resize","","",359,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_auto_render_notify","","",359,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_context_notify","","",359,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_has_alpha_notify","","",359,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_has_depth_buffer_notify","","",359,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_has_stencil_buffer_notify","","",359,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_es_notify","","",359,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"GestureExt","","Trait containing all `Gesture` methods.",null,null],[10,"get_bounding_box","","If there are touch sequences being currently handled by `self`, this function returns `true` and fills in `rect` with the bounding box containing all active touches. Otherwise, `false` will be returned.",360,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_bounding_box_center","","If there are touch sequences being currently handled by `self`, this function returns `true` and fills in `x` and `y` with the center of the bounding box containing all active touches. Otherwise, `false` will be returned.",360,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_device","","Returns the master `gdk::Device` that is currently operating on `self`, or `None` if the gesture is not being interacted.",360,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_group","","Returns all gestures in the group of `self`",360,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_window","","Returns the user-defined window that receives the events handled by `self`. See `GestureExt::set_window` for more information.",360,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"group","","Adds `gesture` to the same group than `self`. Gestures are by default isolated in their own groups.",360,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"is_active","","Returns `true` if the gesture is currently active. A gesture is active meanwhile there are touch sequences interacting with it.",360,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_grouped_with","","Returns `true` if both gestures pertain to the same group.",360,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"is_recognized","","Returns `true` if the gesture is currently recognized. A gesture is recognized if there are as many interacting touch sequences as required by `self`, and `Gesture::check` returned `true` for the sequences being currently interpreted.",360,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_state","","Sets the state of all sequences that `self` is currently interacting with. See `GestureExt::set_sequence_state` for more details on sequence states.",360,{"inputs":[{"name":"self"},{"name":"eventsequencestate"}],"output":{"name":"bool"}}],[10,"set_window","","Sets a specific window to receive events about, so `self` will effectively handle only events targeting `window`, or a child of it. `window` must pertain to `EventControllerExt::get_widget`.",360,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"ungroup","","Separates `self` into an isolated group.",360,{"inputs":[{"name":"self"}],"output":null}],[10,"get_property_n_points","","",360,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"connect_property_n_points_notify","","",360,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_window_notify","","",360,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"GestureDragExt","","Trait containing all `GestureDrag` methods.",null,null],[10,"get_offset","","If the `self` is active, this function returns `true` and fills in `x` and `y` with the coordinates of the current point, as an offset to the starting drag point.",361,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_start_point","","If the `self` is active, this function returns `true` and fills in `x` and `y` with the drag start coordinates, in window-relative coordinates.",361,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_drag_begin","","",361,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_drag_end","","",361,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_drag_update","","",361,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"GestureLongPressExt","","",null,null],[10,"get_property_delay_factor","","",362,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"set_property_delay_factor","","",362,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"connect_cancelled","","",362,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_pressed","","",362,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_delay_factor_notify","","",362,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"GestureMultiPressExt","","",null,null],[10,"get_area","","",363,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_area","","",363,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"connect_pressed","","",363,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_released","","",363,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_stopped","","",363,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"GesturePanExt","","",null,null],[10,"get_orientation","","",364,{"inputs":[{"name":"self"}],"output":{"name":"orientation"}}],[10,"set_orientation","","",364,{"inputs":[{"name":"self"},{"name":"orientation"}],"output":null}],[10,"connect_pan","","",364,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_orientation_notify","","",364,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"GestureRotateExt","","",null,null],[10,"get_angle_delta","","",365,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"connect_angle_changed","","",365,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"GestureSingleExt","","Trait containing all `GestureSingle` methods.",null,null],[10,"get_button","","Returns the button number `self` listens for, or 0 if `self` reacts to any button press.",366,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_current_button","","Returns the button number currently interacting with `self`, or 0 if there is none.",366,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_exclusive","","Gets whether a gesture is exclusive. For more information, see `GestureSingleExt::set_exclusive`.",366,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_touch_only","","Returns `true` if the gesture is only triggered by touch events.",366,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_button","","Sets the button number `self` listens to. If non-0, every button press from a different button number will be ignored. Touch events implicitly match with button 1.",366,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"set_exclusive","","Sets whether `self` is exclusive. An exclusive gesture will only handle pointer and \"pointer emulated\" touch events, so at any given time, there is only one sequence able to interact with those.",366,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_touch_only","","If `touch_only` is `true`, `self` will only handle events of type `gdk::EventType::TouchBegin`, `gdk::EventType::TouchUpdate` or `gdk::EventType::TouchEnd`. If `false`, mouse events will be handled too.",366,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_property_button_notify","","",366,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_exclusive_notify","","",366,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_touch_only_notify","","",366,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"GestureSwipeExt","","",null,null],[10,"get_velocity","","",367,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_swipe","","",367,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"GestureZoomExt","","",null,null],[10,"get_scale_delta","","",368,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"connect_scale_changed","","",368,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"GridExt","","",null,null],[10,"attach","","",369,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"attach_next_to","","",369,{"inputs":[{"name":"self"},{"name":"p"},{"name":"r"},{"name":"positiontype"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"get_baseline_row","","",369,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_child_at","","",369,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_column_homogeneous","","",369,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_column_spacing","","",369,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_row_baseline_position","","",369,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"baselineposition"}}],[10,"get_row_homogeneous","","",369,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_row_spacing","","",369,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"insert_column","","",369,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"insert_next_to","","",369,{"inputs":[{"name":"self"},{"name":"p"},{"name":"positiontype"}],"output":null}],[10,"insert_row","","",369,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"remove_column","","",369,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"remove_row","","",369,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_baseline_row","","",369,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_column_homogeneous","","",369,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_column_spacing","","",369,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"set_row_baseline_position","","",369,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"baselineposition"}],"output":null}],[10,"set_row_homogeneous","","",369,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_row_spacing","","",369,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_baseline_row","","",369,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_baseline_row","","",369,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_cell_height","","",369,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"i32"}}],[10,"set_cell_height","","",369,{"inputs":[{"name":"self"},{"name":"t"},{"name":"i32"}],"output":null}],[10,"get_cell_width","","",369,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"i32"}}],[10,"set_cell_width","","",369,{"inputs":[{"name":"self"},{"name":"t"},{"name":"i32"}],"output":null}],[10,"get_cell_left_attach","","",369,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"i32"}}],[10,"set_cell_left_attach","","",369,{"inputs":[{"name":"self"},{"name":"t"},{"name":"i32"}],"output":null}],[10,"get_cell_top_attach","","",369,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"i32"}}],[10,"set_cell_top_attach","","",369,{"inputs":[{"name":"self"},{"name":"t"},{"name":"i32"}],"output":null}],[10,"connect_property_baseline_row_notify","","",369,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_column_homogeneous_notify","","",369,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_column_spacing_notify","","",369,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_row_homogeneous_notify","","",369,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_row_spacing_notify","","",369,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"HeaderBarExt","","",null,null],[10,"get_custom_title","","",370,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_decoration_layout","","",370,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_has_subtitle","","",370,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_close_button","","",370,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_subtitle","","",370,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_title","","",370,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"pack_end","","",370,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"pack_start","","",370,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_custom_title","","",370,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_decoration_layout","","",370,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_has_subtitle","","",370,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_close_button","","",370,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_subtitle","","",370,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_title","","",370,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"get_property_custom_title","","",370,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_custom_title","","",370,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_decoration_layout_set","","",370,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_decoration_layout_set","","",370,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_show_close_button","","",370,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_show_close_button","","",370,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_spacing","","",370,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_spacing","","",370,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_subtitle","","",370,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_subtitle","","",370,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_title","","",370,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_title","","",370,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_child_pack_type","","",370,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"packtype"}}],[10,"set_child_pack_type","","",370,{"inputs":[{"name":"self"},{"name":"t"},{"name":"packtype"}],"output":null}],[10,"get_child_position","","",370,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"i32"}}],[10,"set_child_position","","",370,{"inputs":[{"name":"self"},{"name":"t"},{"name":"i32"}],"output":null}],[10,"connect_property_custom_title_notify","","",370,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_decoration_layout_notify","","",370,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_decoration_layout_set_notify","","",370,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_has_subtitle_notify","","",370,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_close_button_notify","","",370,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_spacing_notify","","",370,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_subtitle_notify","","",370,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_title_notify","","",370,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"IMContextExt","","",null,null],[10,"delete_surrounding","","",371,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"bool"}}],[10,"filter_keypress","","",371,{"inputs":[{"name":"self"},{"name":"eventkey"}],"output":{"name":"bool"}}],[10,"focus_in","","",371,{"inputs":[{"name":"self"}],"output":null}],[10,"focus_out","","",371,{"inputs":[{"name":"self"}],"output":null}],[10,"get_preedit_string","","",371,null],[10,"get_surrounding","","",371,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"reset","","",371,{"inputs":[{"name":"self"}],"output":null}],[10,"set_client_window","","",371,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_cursor_location","","",371,{"inputs":[{"name":"self"},{"name":"rectangle"}],"output":null}],[10,"set_surrounding","","",371,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"}],"output":null}],[10,"set_use_preedit","","",371,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_input_hints","","",371,{"inputs":[{"name":"self"}],"output":{"name":"inputhints"}}],[10,"set_property_input_hints","","",371,{"inputs":[{"name":"self"},{"name":"inputhints"}],"output":null}],[10,"get_property_input_purpose","","",371,{"inputs":[{"name":"self"}],"output":{"name":"inputpurpose"}}],[10,"set_property_input_purpose","","",371,{"inputs":[{"name":"self"},{"name":"inputpurpose"}],"output":null}],[10,"connect_commit","","",371,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_delete_surrounding","","",371,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_preedit_changed","","",371,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_preedit_end","","",371,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_preedit_start","","",371,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_retrieve_surrounding","","",371,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_input_hints_notify","","",371,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_input_purpose_notify","","",371,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"IMMulticontextExt","","",null,null],[10,"append_menuitems","","",372,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"get_context_id","","",372,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_context_id","","",372,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[8,"IconFactoryExt","","",null,null],[10,"add","","",373,{"inputs":[{"name":"self"},{"name":"str"},{"name":"iconset"}],"output":null}],[10,"add_default","","",373,{"inputs":[{"name":"self"}],"output":null}],[10,"lookup","","",373,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"remove_default","","",373,{"inputs":[{"name":"self"}],"output":null}],[8,"IconInfoExt","","",null,null],[10,"copy","","",374,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_base_scale","","",374,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_base_size","","",374,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_builtin_pixbuf","","",374,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_display_name","","",374,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_embedded_rect","","",374,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_filename","","",374,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"is_symbolic","","",374,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"load_icon","","",374,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"load_surface","","",374,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"load_symbolic","","",374,{"inputs":[{"name":"self"},{"name":"rgba"},{"name":"p"},{"name":"q"},{"name":"r"}],"output":{"name":"result"}}],[10,"load_symbolic_for_context","","",374,{"inputs":[{"name":"self"},{"name":"stylecontext"}],"output":{"name":"result"}}],[10,"set_raw_coordinates","","",374,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[8,"IconThemeExt","","",null,null],[10,"add_resource_path","","",375,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"append_search_path","","",375,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"get_example_icon_name","","",375,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"has_icon","","",375,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"list_contexts","","",375,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"list_icons","","",375,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"vec"}}],[10,"load_icon","","",375,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"},{"name":"iconlookupflags"}],"output":{"name":"result"}}],[10,"load_icon_for_scale","","",375,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"},{"name":"i32"},{"name":"iconlookupflags"}],"output":{"name":"result"}}],[10,"load_surface","","",375,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"},{"name":"i32"},{"name":"p"},{"name":"iconlookupflags"}],"output":{"name":"result"}}],[10,"lookup_by_gicon","","",375,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"},{"name":"iconlookupflags"}],"output":{"name":"option"}}],[10,"lookup_by_gicon_for_scale","","",375,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"},{"name":"i32"},{"name":"iconlookupflags"}],"output":{"name":"option"}}],[10,"lookup_icon","","",375,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"},{"name":"iconlookupflags"}],"output":{"name":"option"}}],[10,"lookup_icon_for_scale","","",375,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"},{"name":"i32"},{"name":"iconlookupflags"}],"output":{"name":"option"}}],[10,"prepend_search_path","","",375,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"rescan_if_needed","","",375,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_custom_theme","","",375,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_screen","","",375,{"inputs":[{"name":"self"},{"name":"screen"}],"output":null}],[10,"connect_changed","","",375,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"IconViewExt","","",null,null],[10,"convert_widget_to_bin_window_coords","","",376,null],[10,"create_drag_icon","","",376,{"inputs":[{"name":"self"},{"name":"treepath"}],"output":{"name":"option"}}],[10,"get_activate_on_single_click","","",376,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_cell_rect","","",376,{"inputs":[{"name":"self"},{"name":"treepath"},{"name":"q"}],"output":{"name":"option"}}],[10,"get_column_spacing","","",376,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_columns","","",376,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_cursor","","",376,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_dest_item_at_pos","","",376,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_drag_dest_item","","",376,null],[10,"get_item_at_pos","","",376,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_item_column","","",376,{"inputs":[{"name":"self"},{"name":"treepath"}],"output":{"name":"i32"}}],[10,"get_item_orientation","","",376,{"inputs":[{"name":"self"}],"output":{"name":"orientation"}}],[10,"get_item_padding","","",376,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_item_row","","",376,{"inputs":[{"name":"self"},{"name":"treepath"}],"output":{"name":"i32"}}],[10,"get_item_width","","",376,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_margin","","",376,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_markup_column","","",376,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_model","","",376,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_path_at_pos","","",376,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_pixbuf_column","","",376,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_reorderable","","",376,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_row_spacing","","",376,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_selected_items","","",376,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_selection_mode","","",376,{"inputs":[{"name":"self"}],"output":{"name":"selectionmode"}}],[10,"get_spacing","","",376,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_text_column","","",376,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_tooltip_column","","",376,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_tooltip_context","","",376,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"bool"}],"output":{"name":"option"}}],[10,"get_visible_range","","",376,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"item_activated","","",376,{"inputs":[{"name":"self"},{"name":"treepath"}],"output":null}],[10,"path_is_selected","","",376,{"inputs":[{"name":"self"},{"name":"treepath"}],"output":{"name":"bool"}}],[10,"scroll_to_path","","",376,{"inputs":[{"name":"self"},{"name":"treepath"},{"name":"bool"},{"name":"f32"},{"name":"f32"}],"output":null}],[10,"select_all","","",376,{"inputs":[{"name":"self"}],"output":null}],[10,"select_path","","",376,{"inputs":[{"name":"self"},{"name":"treepath"}],"output":null}],[10,"set_activate_on_single_click","","",376,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_column_spacing","","",376,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_columns","","",376,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_cursor","","",376,{"inputs":[{"name":"self"},{"name":"treepath"},{"name":"q"},{"name":"bool"}],"output":null}],[10,"set_drag_dest_item","","",376,{"inputs":[{"name":"self"},{"name":"p"},{"name":"iconviewdropposition"}],"output":null}],[10,"set_item_orientation","","",376,{"inputs":[{"name":"self"},{"name":"orientation"}],"output":null}],[10,"set_item_padding","","",376,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_item_width","","",376,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_margin","","",376,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_markup_column","","",376,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_model","","",376,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_pixbuf_column","","",376,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_reorderable","","",376,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_row_spacing","","",376,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_selection_mode","","",376,{"inputs":[{"name":"self"},{"name":"selectionmode"}],"output":null}],[10,"set_spacing","","",376,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_text_column","","",376,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_tooltip_cell","","",376,{"inputs":[{"name":"self"},{"name":"tooltip"},{"name":"treepath"},{"name":"q"}],"output":null}],[10,"set_tooltip_column","","",376,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_tooltip_item","","",376,{"inputs":[{"name":"self"},{"name":"tooltip"},{"name":"treepath"}],"output":null}],[10,"unselect_all","","",376,{"inputs":[{"name":"self"}],"output":null}],[10,"unselect_path","","",376,{"inputs":[{"name":"self"},{"name":"treepath"}],"output":null}],[10,"unset_model_drag_dest","","",376,{"inputs":[{"name":"self"}],"output":null}],[10,"unset_model_drag_source","","",376,{"inputs":[{"name":"self"}],"output":null}],[10,"get_property_cell_area","","",376,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_activate_cursor_item","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_item_activated","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_cursor","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_select_all","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_select_cursor_item","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_selection_changed","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_toggle_cursor_item","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_unselect_all","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_activate_on_single_click_notify","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_cell_area_notify","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_column_spacing_notify","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_columns_notify","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_item_orientation_notify","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_item_padding_notify","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_item_width_notify","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_margin_notify","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_markup_column_notify","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_model_notify","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pixbuf_column_notify","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_reorderable_notify","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_row_spacing_notify","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_selection_mode_notify","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_spacing_notify","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_text_column_notify","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_tooltip_column_notify","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ImageExt","","",null,null],[10,"clear","","",377,{"inputs":[{"name":"self"}],"output":null}],[10,"get_animation","","",377,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_gicon","","",377,null],[10,"get_icon_name","","",377,null],[10,"get_icon_set","","",377,null],[10,"get_pixbuf","","",377,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_pixel_size","","",377,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_storage_type","","",377,{"inputs":[{"name":"self"}],"output":{"name":"imagetype"}}],[10,"set_from_animation","","",377,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_from_file","","",377,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_from_gicon","","",377,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":null}],[10,"set_from_icon_name","","",377,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"}],"output":null}],[10,"set_from_icon_set","","",377,{"inputs":[{"name":"self"},{"name":"iconset"},{"name":"i32"}],"output":null}],[10,"set_from_pixbuf","","",377,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_from_resource","","",377,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_from_stock","","",377,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"}],"output":null}],[10,"set_from_surface","","",377,{"inputs":[{"name":"self"},{"name":"surface"}],"output":null}],[10,"set_pixel_size","","",377,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_file","","",377,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_file","","",377,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"set_property_gicon","","",377,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"set_property_icon_name","","",377,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_icon_size","","",377,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_icon_size","","",377,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_property_pixbuf","","",377,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_pixbuf_animation","","",377,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_pixbuf_animation","","",377,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_resource","","",377,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_resource","","",377,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_stock","","",377,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_stock","","",377,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_use_fallback","","",377,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_use_fallback","","",377,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_property_file_notify","","",377,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gicon_notify","","",377,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_icon_name_notify","","",377,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_icon_size_notify","","",377,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pixbuf_notify","","",377,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pixbuf_animation_notify","","",377,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pixel_size_notify","","",377,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_resource_notify","","",377,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_stock_notify","","",377,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_storage_type_notify","","",377,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_fallback_notify","","",377,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ImageMenuItemExt","","",null,null],[10,"get_always_show_image","","",378,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_image","","",378,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_use_stock","","",378,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_accel_group","","",378,{"inputs":[{"name":"self"},{"name":"accelgroup"}],"output":null}],[10,"set_always_show_image","","",378,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_image","","",378,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_use_stock","","",378,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_property_accel_group_notify","","",378,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_always_show_image_notify","","",378,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_image_notify","","",378,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_stock_notify","","",378,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"InfoBarExt","","",null,null],[10,"add_action_widget","","",379,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":null}],[10,"add_button","","",379,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_action_area","","",379,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_content_area","","",379,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_message_type","","",379,{"inputs":[{"name":"self"}],"output":{"name":"messagetype"}}],[10,"get_show_close_button","","",379,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"response","","",379,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_default_response","","",379,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_message_type","","",379,{"inputs":[{"name":"self"},{"name":"messagetype"}],"output":null}],[10,"set_response_sensitive","","",379,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"bool"}],"output":null}],[10,"set_show_close_button","","",379,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_close","","",379,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_response","","",379,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_message_type_notify","","",379,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_close_button_notify","","",379,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"LabelExt","","",null,null],[10,"get_angle","","",380,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_attributes","","",380,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_current_uri","","",380,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_ellipsize","","",380,{"inputs":[{"name":"self"}],"output":{"name":"ellipsizemode"}}],[10,"get_justify","","",380,{"inputs":[{"name":"self"}],"output":{"name":"justification"}}],[10,"get_label","","",380,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_layout","","",380,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_layout_offsets","","",380,null],[10,"get_line_wrap","","",380,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_line_wrap_mode","","",380,{"inputs":[{"name":"self"}],"output":{"name":"wrapmode"}}],[10,"get_lines","","",380,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_max_width_chars","","",380,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_mnemonic_keyval","","",380,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_mnemonic_widget","","",380,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_selectable","","",380,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_selection_bounds","","",380,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_single_line_mode","","",380,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_text","","",380,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_track_visited_links","","",380,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_use_markup","","",380,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_use_underline","","",380,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_width_chars","","",380,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_xalign","","",380,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"get_yalign","","",380,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"select_region","","",380,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_angle","","",380,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"set_attributes","","",380,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_ellipsize","","",380,{"inputs":[{"name":"self"},{"name":"ellipsizemode"}],"output":null}],[10,"set_justify","","",380,{"inputs":[{"name":"self"},{"name":"justification"}],"output":null}],[10,"set_label","","",380,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_line_wrap","","",380,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_line_wrap_mode","","",380,{"inputs":[{"name":"self"},{"name":"wrapmode"}],"output":null}],[10,"set_lines","","",380,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_markup","","",380,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_markup_with_mnemonic","","",380,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_max_width_chars","","",380,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_mnemonic_widget","","",380,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_pattern","","",380,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_selectable","","",380,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_single_line_mode","","",380,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_text","","",380,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_text_with_mnemonic","","",380,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_track_visited_links","","",380,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_use_markup","","",380,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_use_underline","","",380,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_width_chars","","",380,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_xalign","","",380,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"set_yalign","","",380,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"get_property_cursor_position","","",380,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_property_selection_bound","","",380,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_property_wrap","","",380,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_wrap","","",380,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_wrap_mode","","",380,{"inputs":[{"name":"self"}],"output":{"name":"wrapmode"}}],[10,"set_property_wrap_mode","","",380,{"inputs":[{"name":"self"},{"name":"wrapmode"}],"output":null}],[10,"connect_activate_current_link","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_activate_link","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_copy_clipboard","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_cursor","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_populate_popup","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_angle_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_attributes_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_cursor_position_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_ellipsize_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_justify_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_label_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_lines_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_max_width_chars_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_mnemonic_keyval_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_mnemonic_widget_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pattern_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_selectable_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_selection_bound_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_single_line_mode_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_track_visited_links_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_markup_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_underline_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_width_chars_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_wrap_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_wrap_mode_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_xalign_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_yalign_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"LayoutExt","","",null,null],[10,"get_bin_window","","",381,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_size","","",381,null],[10,"move_","","",381,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"put","","",381,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_size","","",381,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":null}],[10,"get_property_height","","",381,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_height","","",381,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_width","","",381,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_width","","",381,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_child_x","","",381,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"i32"}}],[10,"set_child_x","","",381,{"inputs":[{"name":"self"},{"name":"t"},{"name":"i32"}],"output":null}],[10,"get_child_y","","",381,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"i32"}}],[10,"set_child_y","","",381,{"inputs":[{"name":"self"},{"name":"t"},{"name":"i32"}],"output":null}],[10,"connect_property_height_notify","","",381,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_width_notify","","",381,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"LevelBarExt","","",null,null],[10,"add_offset_value","","",382,{"inputs":[{"name":"self"},{"name":"str"},{"name":"f64"}],"output":null}],[10,"get_inverted","","",382,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_max_value","","",382,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_min_value","","",382,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_mode","","",382,{"inputs":[{"name":"self"}],"output":{"name":"levelbarmode"}}],[10,"get_offset_value","","",382,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[10,"get_value","","",382,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"remove_offset_value","","",382,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_inverted","","",382,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_max_value","","",382,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"set_min_value","","",382,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"set_mode","","",382,{"inputs":[{"name":"self"},{"name":"levelbarmode"}],"output":null}],[10,"set_value","","",382,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"connect_offset_changed","","",382,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_inverted_notify","","",382,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_max_value_notify","","",382,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_min_value_notify","","",382,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_mode_notify","","",382,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_value_notify","","",382,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"LinkButtonExt","","",null,null],[10,"get_uri","","",383,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_visited","","",383,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_uri","","",383,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_visited","","",383,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_activate_link","","",383,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_uri_notify","","",383,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_visited_notify","","",383,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ListBoxExt","","",null,null],[10,"drag_highlight_row","","",384,{"inputs":[{"name":"self"},{"name":"listboxrow"}],"output":null}],[10,"drag_unhighlight_row","","",384,{"inputs":[{"name":"self"}],"output":null}],[10,"get_activate_on_single_click","","",384,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_adjustment","","",384,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_row_at_index","","",384,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_row_at_y","","",384,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_selected_row","","",384,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_selected_rows","","",384,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_selection_mode","","",384,{"inputs":[{"name":"self"}],"output":{"name":"selectionmode"}}],[10,"insert","","",384,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":null}],[10,"invalidate_filter","","",384,{"inputs":[{"name":"self"}],"output":null}],[10,"invalidate_headers","","",384,{"inputs":[{"name":"self"}],"output":null}],[10,"invalidate_sort","","",384,{"inputs":[{"name":"self"}],"output":null}],[10,"prepend","","",384,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"select_all","","",384,{"inputs":[{"name":"self"}],"output":null}],[10,"select_row","","",384,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_activate_on_single_click","","",384,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_adjustment","","",384,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_placeholder","","",384,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_selection_mode","","",384,{"inputs":[{"name":"self"},{"name":"selectionmode"}],"output":null}],[10,"unselect_all","","",384,{"inputs":[{"name":"self"}],"output":null}],[10,"unselect_row","","",384,{"inputs":[{"name":"self"},{"name":"listboxrow"}],"output":null}],[10,"get_property_activate_on_single_click","","",384,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_activate_on_single_click","","",384,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_selection_mode","","",384,{"inputs":[{"name":"self"}],"output":{"name":"selectionmode"}}],[10,"set_property_selection_mode","","",384,{"inputs":[{"name":"self"},{"name":"selectionmode"}],"output":null}],[10,"connect_activate_cursor_row","","",384,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_cursor","","",384,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_row_activated","","",384,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_row_selected","","",384,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_select_all","","",384,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_selected_rows_changed","","",384,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_toggle_cursor_row","","",384,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_unselect_all","","",384,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_activate_on_single_click_notify","","",384,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_selection_mode_notify","","",384,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ListBoxRowExt","","",null,null],[10,"changed","","",385,{"inputs":[{"name":"self"}],"output":null}],[10,"get_activatable","","",385,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_header","","",385,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_index","","",385,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_selectable","","",385,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_selected","","",385,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_activatable","","",385,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_header","","",385,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_selectable","","",385,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_activate","","",385,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_activatable_notify","","",385,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_selectable_notify","","",385,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ListStoreExt","","",null,null],[10,"append","","",386,{"inputs":[{"name":"self"}],"output":{"name":"treeiter"}}],[10,"clear","","",386,{"inputs":[{"name":"self"}],"output":null}],[10,"insert","","",386,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"treeiter"}}],[10,"insert_after","","",386,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"treeiter"}}],[10,"insert_before","","",386,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"treeiter"}}],[10,"iter_is_valid","","",386,{"inputs":[{"name":"self"},{"name":"treeiter"}],"output":{"name":"bool"}}],[10,"move_after","","",386,{"inputs":[{"name":"self"},{"name":"treeiter"},{"name":"p"}],"output":null}],[10,"move_before","","",386,{"inputs":[{"name":"self"},{"name":"treeiter"},{"name":"p"}],"output":null}],[10,"prepend","","",386,{"inputs":[{"name":"self"}],"output":{"name":"treeiter"}}],[10,"remove","","",386,{"inputs":[{"name":"self"},{"name":"treeiter"}],"output":{"name":"bool"}}],[10,"swap","","",386,{"inputs":[{"name":"self"},{"name":"treeiter"},{"name":"treeiter"}],"output":null}],[8,"MenuExt","","",null,null],[10,"attach","","",387,{"inputs":[{"name":"self"},{"name":"p"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[10,"detach","","",387,{"inputs":[{"name":"self"}],"output":null}],[10,"get_accel_group","","",387,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_accel_path","","",387,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_active","","",387,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_attach_widget","","",387,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_monitor","","",387,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_reserve_toggle_size","","",387,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_tearoff_state","","",387,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_title","","",387,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"place_on_monitor","","",387,{"inputs":[{"name":"self"},{"name":"monitor"}],"output":null}],[10,"popdown","","",387,{"inputs":[{"name":"self"}],"output":null}],[10,"popup_at_pointer","","",387,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"popup_at_rect","","",387,{"inputs":[{"name":"self"},{"name":"window"},{"name":"rectangle"},{"name":"gravity"},{"name":"gravity"},{"name":"p"}],"output":null}],[10,"popup_at_widget","","",387,{"inputs":[{"name":"self"},{"name":"p"},{"name":"gravity"},{"name":"gravity"},{"name":"q"}],"output":null}],[10,"reorder_child","","",387,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":null}],[10,"reposition","","",387,{"inputs":[{"name":"self"}],"output":null}],[10,"set_accel_group","","",387,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_accel_path","","",387,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_active","","",387,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"set_monitor","","",387,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_reserve_toggle_size","","",387,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_screen","","",387,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_tearoff_state","","",387,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_title","","",387,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"get_property_anchor_hints","","",387,{"inputs":[{"name":"self"}],"output":{"name":"anchorhints"}}],[10,"set_property_anchor_hints","","",387,{"inputs":[{"name":"self"},{"name":"anchorhints"}],"output":null}],[10,"set_property_attach_widget","","",387,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_menu_type_hint","","",387,{"inputs":[{"name":"self"}],"output":{"name":"windowtypehint"}}],[10,"set_property_menu_type_hint","","",387,{"inputs":[{"name":"self"},{"name":"windowtypehint"}],"output":null}],[10,"get_property_rect_anchor_dx","","",387,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_rect_anchor_dx","","",387,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_rect_anchor_dy","","",387,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_rect_anchor_dy","","",387,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_tearoff_title","","",387,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_tearoff_title","","",387,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_item_bottom_attach","","",387,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"i32"}}],[10,"set_item_bottom_attach","","",387,{"inputs":[{"name":"self"},{"name":"t"},{"name":"i32"}],"output":null}],[10,"get_item_left_attach","","",387,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"i32"}}],[10,"set_item_left_attach","","",387,{"inputs":[{"name":"self"},{"name":"t"},{"name":"i32"}],"output":null}],[10,"get_item_right_attach","","",387,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"i32"}}],[10,"set_item_right_attach","","",387,{"inputs":[{"name":"self"},{"name":"t"},{"name":"i32"}],"output":null}],[10,"get_item_top_attach","","",387,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"i32"}}],[10,"set_item_top_attach","","",387,{"inputs":[{"name":"self"},{"name":"t"},{"name":"i32"}],"output":null}],[10,"connect_move_scroll","","",387,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_accel_group_notify","","",387,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_accel_path_notify","","",387,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_active_notify","","",387,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_anchor_hints_notify","","",387,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_attach_widget_notify","","",387,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_menu_type_hint_notify","","",387,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_monitor_notify","","",387,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_rect_anchor_dx_notify","","",387,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_rect_anchor_dy_notify","","",387,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_reserve_toggle_size_notify","","",387,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_tearoff_state_notify","","",387,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_tearoff_title_notify","","",387,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"MenuBarExt","","",null,null],[10,"get_child_pack_direction","","",388,{"inputs":[{"name":"self"}],"output":{"name":"packdirection"}}],[10,"get_pack_direction","","",388,{"inputs":[{"name":"self"}],"output":{"name":"packdirection"}}],[10,"set_child_pack_direction","","",388,{"inputs":[{"name":"self"},{"name":"packdirection"}],"output":null}],[10,"set_pack_direction","","",388,{"inputs":[{"name":"self"},{"name":"packdirection"}],"output":null}],[10,"connect_property_child_pack_direction_notify","","",388,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pack_direction_notify","","",388,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"MenuButtonExt","","",null,null],[10,"get_align_widget","","",389,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_direction","","",389,{"inputs":[{"name":"self"}],"output":{"name":"arrowtype"}}],[10,"get_menu_model","","",389,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_popover","","",389,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_popup","","",389,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_use_popover","","",389,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_align_widget","","",389,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_direction","","",389,{"inputs":[{"name":"self"},{"name":"arrowtype"}],"output":null}],[10,"set_menu_model","","",389,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_popover","","",389,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_popup","","",389,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_use_popover","","",389,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_property_align_widget_notify","","",389,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_direction_notify","","",389,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_menu_model_notify","","",389,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_popover_notify","","",389,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_popup_notify","","",389,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_popover_notify","","",389,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"MenuItemExt","","Trait containing all `MenuItem` methods.",null,null],[10,"deselect","","Emits the `MenuItem::deselect` signal on the given item.",390,{"inputs":[{"name":"self"}],"output":null}],[10,"get_accel_path","","Retrieve the accelerator path that was previously set on `self`.",390,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_label","","Sets `text` on the `self` label",390,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_reserve_indicator","","Returns whether the `self` reserves space for the submenu indicator, regardless if it has a submenu or not.",390,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_submenu","","Gets the submenu underneath this menu item, if any. See `MenuItemExt::set_submenu`.",390,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_use_underline","","Checks if an underline in the text indicates the next character should be used for the mnemonic accelerator key.",390,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"select","","Emits the `MenuItem::select` signal on the given item.",390,{"inputs":[{"name":"self"}],"output":null}],[10,"set_accel_path","","Set the accelerator path on `self`, through which runtime changes of the menu item’s accelerator caused by the user can be identified and saved to persistent storage (see `AccelMap::save` on this). To set up a default accelerator for this menu item, call `AccelMap::add_entry` with the same `accel_path`. See also `AccelMap::add_entry` on the specifics of accelerator paths, and `Menu::set_accel_path` for a more convenient variant of this function.",390,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_label","","Sets `text` on the `self` label ## `label` the text you want to set",390,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_reserve_indicator","","Sets whether the `self` should reserve space for the submenu indicator, regardless if it actually has a submenu or not.",390,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_submenu","","Sets or replaces the menu item’s submenu, or removes it when a `None` submenu is passed. ## `submenu` the submenu, or `None`",390,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_use_underline","","If true, an underline in the text indicates the next character should be used for the mnemonic accelerator key. ## `setting` `true` if underlines in the text indicate mnemonics",390,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"toggle_size_allocate","","Emits the `MenuItem::toggle-size-allocate` signal on the given item. ## `allocation` the allocation to use as signal data.",390,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"toggle_size_request","","Emits the `MenuItem::toggle-size-request` signal on the given item. ## `requisition` the requisition to use as signal data.",390,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_right_justified","","",390,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_right_justified","","",390,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_activate","","",390,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_activate_item","","",390,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_deselect","","",390,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_select","","",390,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_toggle_size_allocate","","",390,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_accel_path_notify","","",390,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_label_notify","","",390,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_right_justified_notify","","",390,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_submenu_notify","","",390,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_underline_notify","","",390,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"MenuShellExt","","Trait containing all `MenuShell` methods.",null,null],[10,"activate_item","","Activates the menu item within the menu shell. ## `menu_item` the `MenuItem` to activate ## `force_deactivate` if `true`, force the deactivation of the  menu shell after the menu item is activated",391,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"}],"output":null}],[10,"append","","Adds a new `MenuItem` to the end of the menu shell's item list. ## `child` The `MenuItem` to add",391,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"bind_model","","Establishes a binding between a `MenuShell` and a `gio::MenuModel`.",391,{"inputs":[{"name":"self"},{"name":"q"},{"name":"r"},{"name":"bool"}],"output":null}],[10,"cancel","","Cancels the selection within the menu shell.",391,{"inputs":[{"name":"self"}],"output":null}],[10,"deactivate","","Deactivates the menu shell.",391,{"inputs":[{"name":"self"}],"output":null}],[10,"deselect","","Deselects the currently selected item from the menu shell, if any.",391,{"inputs":[{"name":"self"}],"output":null}],[10,"get_parent_shell","","Gets the parent menu shell.",391,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_selected_item","","Gets the currently selected item.",391,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_take_focus","","Returns `true` if the menu shell will take the keyboard focus on popup.",391,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"insert","","Adds a new `MenuItem` to the menu shell’s item list at the position indicated by `position`. ## `child` The `MenuItem` to add ## `position` The position in the item list where `child`  is added. Positions are numbered from 0 to n-1",391,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":null}],[10,"prepend","","Adds a new `MenuItem` to the beginning of the menu shell's item list. ## `child` The `MenuItem` to add",391,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"select_first","","Select the first visible or selectable child of the menu shell; don’t select tearoff items unless the only item is a tearoff item. ## `search_sensitive` if `true`, search for the first selectable  menu item, otherwise select nothing if  the first item isn’t sensitive. This  should be `false` if the menu is being  popped up initially.",391,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"select_item","","Selects the menu item from the menu shell. ## `menu_item` The `MenuItem` to select",391,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_take_focus","","If `take_focus` is `true` (the default) the menu shell will take the keyboard focus so that it will receive all keyboard events which is needed to enable keyboard navigation in menus.",391,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_activate_current","","",391,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_cancel","","",391,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_cycle_focus","","",391,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_deactivate","","",391,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_insert","","",391,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_current","","",391,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_selected","","",391,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_selection_done","","",391,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_take_focus_notify","","",391,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"MenuToolButtonExt","","",null,null],[10,"get_menu","","",392,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_arrow_tooltip_markup","","",392,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_arrow_tooltip_text","","",392,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_menu","","",392,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"connect_show_menu","","",392,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_menu_notify","","",392,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"MessageDialogExt","","",null,null],[10,"get_image","","",393,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_message_area","","",393,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_image","","",393,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_markup","","",393,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"get_property_message_type","","",393,{"inputs":[{"name":"self"}],"output":{"name":"messagetype"}}],[10,"set_property_message_type","","",393,{"inputs":[{"name":"self"},{"name":"messagetype"}],"output":null}],[10,"get_property_secondary_text","","",393,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_secondary_text","","",393,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_secondary_use_markup","","",393,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_secondary_use_markup","","",393,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_text","","",393,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_text","","",393,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_use_markup","","",393,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_use_markup","","",393,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_property_buttons_notify","","",393,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_image_notify","","",393,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_message_area_notify","","",393,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_message_type_notify","","",393,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_secondary_text_notify","","",393,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_secondary_use_markup_notify","","",393,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_text_notify","","",393,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_markup_notify","","",393,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"MiscExt","","`[Deprecated since 3.14]` Trait containing all `Misc` methods.",null,null],[10,"get_alignment","","Gets the X and Y alignment of the widget within its allocation. See `MiscExt::set_alignment`.",394,null],[10,"get_padding","","Gets the padding in the X and Y directions of the widget. See `MiscExt::set_padding`.",394,null],[10,"set_alignment","","Sets the alignment of the widget.",394,{"inputs":[{"name":"self"},{"name":"f32"},{"name":"f32"}],"output":null}],[10,"set_padding","","Sets the amount of space to add around the widget.",394,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"get_property_xalign","","",394,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_xalign","","",394,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"get_property_xpad","","",394,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_xpad","","",394,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_yalign","","",394,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_yalign","","",394,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"get_property_ypad","","",394,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_ypad","","",394,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"connect_property_xalign_notify","","",394,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_xpad_notify","","",394,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_yalign_notify","","",394,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_ypad_notify","","",394,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ModelButtonExt","","",null,null],[10,"get_property_active","","",395,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_active","","",395,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_centered","","",395,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_centered","","",395,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_icon","","",395,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_icon","","",395,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_iconic","","",395,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_iconic","","",395,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_inverted","","",395,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_inverted","","",395,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_menu_name","","",395,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_menu_name","","",395,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_role","","",395,{"inputs":[{"name":"self"}],"output":{"name":"buttonrole"}}],[10,"set_property_role","","",395,{"inputs":[{"name":"self"},{"name":"buttonrole"}],"output":null}],[10,"get_property_text","","",395,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_text","","",395,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"connect_property_active_notify","","",395,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_centered_notify","","",395,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_icon_notify","","",395,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_iconic_notify","","",395,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_inverted_notify","","",395,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_menu_name_notify","","",395,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_role_notify","","",395,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_text_notify","","",395,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"NotebookExt","","",null,null],[10,"detach_tab","","",396,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"get_action_widget","","",396,{"inputs":[{"name":"self"},{"name":"packtype"}],"output":{"name":"option"}}],[10,"get_group_name","","",396,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_menu_label","","",396,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[10,"get_menu_label_text","","",396,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[10,"get_scrollable","","",396,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_border","","",396,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_tabs","","",396,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_tab_detachable","","",396,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"get_tab_label","","",396,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[10,"get_tab_label_text","","",396,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[10,"get_tab_pos","","",396,{"inputs":[{"name":"self"}],"output":{"name":"positiontype"}}],[10,"get_tab_reorderable","","",396,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"next_page","","",396,{"inputs":[{"name":"self"}],"output":null}],[10,"popup_disable","","",396,{"inputs":[{"name":"self"}],"output":null}],[10,"popup_enable","","",396,{"inputs":[{"name":"self"}],"output":null}],[10,"prev_page","","",396,{"inputs":[{"name":"self"}],"output":null}],[10,"set_action_widget","","",396,{"inputs":[{"name":"self"},{"name":"p"},{"name":"packtype"}],"output":null}],[10,"set_group_name","","",396,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_menu_label","","",396,{"inputs":[{"name":"self"},{"name":"p"},{"name":"r"}],"output":null}],[10,"set_menu_label_text","","",396,{"inputs":[{"name":"self"},{"name":"p"},{"name":"str"}],"output":null}],[10,"set_scrollable","","",396,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_border","","",396,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_tabs","","",396,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_tab_detachable","","",396,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"}],"output":null}],[10,"set_tab_label","","",396,{"inputs":[{"name":"self"},{"name":"p"},{"name":"r"}],"output":null}],[10,"set_tab_label_text","","",396,{"inputs":[{"name":"self"},{"name":"p"},{"name":"str"}],"output":null}],[10,"set_tab_pos","","",396,{"inputs":[{"name":"self"},{"name":"positiontype"}],"output":null}],[10,"set_tab_reorderable","","",396,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"}],"output":null}],[10,"get_property_enable_popup","","",396,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_enable_popup","","",396,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_page","","",396,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_page","","",396,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"connect_change_current_page","","",396,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_create_window","","",396,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_focus_tab","","",396,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_focus_out","","",396,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_page_added","","",396,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_page_removed","","",396,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_page_reordered","","",396,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_reorder_tab","","",396,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_select_page","","",396,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_switch_page","","",396,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_enable_popup_notify","","",396,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_group_name_notify","","",396,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_page_notify","","",396,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_scrollable_notify","","",396,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_border_notify","","",396,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_tabs_notify","","",396,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_tab_pos_notify","","",396,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"OrientableExt","","Trait containing all `Orientable` methods.",null,null],[10,"get_orientation","","Retrieves the orientation of the `self`.",397,{"inputs":[{"name":"self"}],"output":{"name":"orientation"}}],[10,"set_orientation","","Sets the orientation of the `self`. ## `orientation` the orientable’s new orientation.",397,{"inputs":[{"name":"self"},{"name":"orientation"}],"output":null}],[10,"connect_property_orientation_notify","","",397,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"OverlayExt","","",null,null],[10,"add_overlay","","",398,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"get_overlay_pass_through","","",398,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"reorder_overlay","","",398,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":null}],[10,"set_overlay_pass_through","","",398,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"}],"output":null}],[10,"get_child_index","","",398,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"i32"}}],[10,"set_child_index","","",398,{"inputs":[{"name":"self"},{"name":"t"},{"name":"i32"}],"output":null}],[8,"PageSetupExt","","",null,null],[10,"copy","","",399,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_bottom_margin","","",399,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"f64"}}],[10,"get_left_margin","","",399,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"f64"}}],[10,"get_orientation","","",399,{"inputs":[{"name":"self"}],"output":{"name":"pageorientation"}}],[10,"get_page_height","","",399,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"f64"}}],[10,"get_page_width","","",399,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"f64"}}],[10,"get_paper_height","","",399,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"f64"}}],[10,"get_paper_size","","",399,{"inputs":[{"name":"self"}],"output":{"name":"papersize"}}],[10,"get_paper_width","","",399,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"f64"}}],[10,"get_right_margin","","",399,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"f64"}}],[10,"get_top_margin","","",399,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"f64"}}],[10,"load_file","","",399,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"load_key_file","","",399,{"inputs":[{"name":"self"},{"name":"keyfile"},{"name":"p"}],"output":{"name":"result"}}],[10,"set_bottom_margin","","",399,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"unit"}],"output":null}],[10,"set_left_margin","","",399,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"unit"}],"output":null}],[10,"set_orientation","","",399,{"inputs":[{"name":"self"},{"name":"pageorientation"}],"output":null}],[10,"set_paper_size","","",399,{"inputs":[{"name":"self"},{"name":"papersize"}],"output":null}],[10,"set_paper_size_and_default_margins","","",399,{"inputs":[{"name":"self"},{"name":"papersize"}],"output":null}],[10,"set_right_margin","","",399,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"unit"}],"output":null}],[10,"set_top_margin","","",399,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"unit"}],"output":null}],[10,"to_file","","",399,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"to_gvariant","","",399,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"to_key_file","","",399,{"inputs":[{"name":"self"},{"name":"keyfile"},{"name":"str"}],"output":null}],[8,"PanedExt","","",null,null],[10,"add1","","",400,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"add2","","",400,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"get_child1","","",400,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_child2","","",400,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_handle_window","","",400,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_position","","",400,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_wide_handle","","",400,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"pack1","","",400,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"},{"name":"bool"}],"output":null}],[10,"pack2","","",400,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"},{"name":"bool"}],"output":null}],[10,"set_position","","",400,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_wide_handle","","",400,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_max_position","","",400,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_property_min_position","","",400,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_property_position_set","","",400,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_position_set","","",400,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_child_resize","","",400,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[10,"set_child_resize","","",400,{"inputs":[{"name":"self"},{"name":"t"},{"name":"bool"}],"output":null}],[10,"get_child_shrink","","",400,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[10,"set_child_shrink","","",400,{"inputs":[{"name":"self"},{"name":"t"},{"name":"bool"}],"output":null}],[10,"connect_accept_position","","",400,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_cancel_position","","",400,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_cycle_child_focus","","",400,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_cycle_handle_focus","","",400,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_handle","","",400,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_toggle_handle_focus","","",400,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_max_position_notify","","",400,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_min_position_notify","","",400,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_position_notify","","",400,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_position_set_notify","","",400,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_wide_handle_notify","","",400,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"PlacesSidebarExt","","",null,null],[10,"get_local_only","","",401,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_open_flags","","",401,{"inputs":[{"name":"self"}],"output":{"name":"placesopenflags"}}],[10,"get_show_connect_to_server","","",401,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_desktop","","",401,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_enter_location","","",401,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_other_locations","","",401,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_recent","","",401,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_trash","","",401,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_drop_targets_visible","","",401,{"inputs":[{"name":"self"},{"name":"bool"},{"name":"dragcontext"}],"output":null}],[10,"set_local_only","","",401,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_open_flags","","",401,{"inputs":[{"name":"self"},{"name":"placesopenflags"}],"output":null}],[10,"set_show_connect_to_server","","",401,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_desktop","","",401,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_enter_location","","",401,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_other_locations","","",401,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_recent","","",401,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_trash","","",401,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_local_only","","",401,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_local_only","","",401,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_open_flags","","",401,{"inputs":[{"name":"self"}],"output":{"name":"placesopenflags"}}],[10,"set_property_open_flags","","",401,{"inputs":[{"name":"self"},{"name":"placesopenflags"}],"output":null}],[10,"get_property_populate_all","","",401,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_populate_all","","",401,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_property_show_connect_to_server","","",401,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_show_desktop","","",401,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_show_desktop","","",401,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_show_enter_location","","",401,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_show_enter_location","","",401,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_show_other_locations","","",401,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_show_other_locations","","",401,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_show_recent","","",401,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_show_recent","","",401,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_show_trash","","",401,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_show_trash","","",401,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_drag_action_ask","","",401,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_show_connect_to_server","","",401,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_show_enter_location","","",401,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_show_error_message","","",401,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_show_other_locations","","",401,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_show_other_locations_with_flags","","",401,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_local_only_notify","","",401,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_location_notify","","",401,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_open_flags_notify","","",401,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_populate_all_notify","","",401,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_connect_to_server_notify","","",401,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_desktop_notify","","",401,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_enter_location_notify","","",401,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_other_locations_notify","","",401,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_recent_notify","","",401,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_trash_notify","","",401,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"PopoverExt","","Trait containing all `Popover` methods.",null,null],[10,"bind_model","","Establishes a binding between a `Popover` and a `gio::MenuModel`.",402,{"inputs":[{"name":"self"},{"name":"q"},{"name":"r"}],"output":null}],[10,"get_constrain_to","","",402,{"inputs":[{"name":"self"}],"output":{"name":"popoverconstraint"}}],[10,"get_default_widget","","",402,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_modal","","Returns whether the popover is modal, see gtk_popover_set_modal to see the implications of this.",402,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_pointing_to","","If a rectangle to point to has been set, this function will return `true` and fill in `rect` with such rectangle, otherwise it will return `false` and fill in `rect` with the attached widget coordinates. ## `rect` location to store the rectangle",402,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_position","","Returns the preferred position of `self`.",402,{"inputs":[{"name":"self"}],"output":{"name":"positiontype"}}],[10,"get_relative_to","","Returns the widget `self` is currently attached to",402,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_transitions_enabled","","Returns whether show/hide transitions are enabled on this popover.",402,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"popdown","","",402,{"inputs":[{"name":"self"}],"output":null}],[10,"popup","","",402,{"inputs":[{"name":"self"}],"output":null}],[10,"set_constrain_to","","",402,{"inputs":[{"name":"self"},{"name":"popoverconstraint"}],"output":null}],[10,"set_default_widget","","",402,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_modal","","Sets whether `self` is modal, a modal popover will grab all input within the toplevel and grab the keyboard focus on it when being displayed. Clicking outside the popover area or pressing Esc will dismiss the popover and ungrab input.",402,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_pointing_to","","Sets the rectangle that `self` will point to, in the coordinate space of the widget `self` is attached to, see `PopoverExt::set_relative_to`.",402,{"inputs":[{"name":"self"},{"name":"rectangle"}],"output":null}],[10,"set_position","","Sets the preferred position for `self` to appear. If the `self` is currently visible, it will be immediately updated.",402,{"inputs":[{"name":"self"},{"name":"positiontype"}],"output":null}],[10,"set_relative_to","","Sets a new widget to be attached to `self`. If `self` is visible, the position will be updated.",402,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_transitions_enabled","","Sets whether show/hide transitions are enabled on this popover",402,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_closed","","",402,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_constrain_to_notify","","",402,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_modal_notify","","",402,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pointing_to_notify","","",402,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_position_notify","","",402,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_relative_to_notify","","",402,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_transitions_enabled_notify","","",402,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"PopoverMenuExt","","",null,null],[10,"open_submenu","","",403,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"get_property_visible_submenu","","",403,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_visible_submenu","","",403,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_child_position","","",403,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"i32"}}],[10,"set_child_position","","",403,{"inputs":[{"name":"self"},{"name":"t"},{"name":"i32"}],"output":null}],[10,"get_child_submenu","","",403,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"option"}}],[10,"set_child_submenu","","",403,{"inputs":[{"name":"self"},{"name":"t"},{"name":"p"}],"output":null}],[10,"connect_property_visible_submenu_notify","","",403,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"PrintContextExt","","",null,null],[10,"create_pango_context","","",404,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"create_pango_layout","","",404,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_cairo_context","","",404,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_dpi_x","","",404,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_dpi_y","","",404,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_hard_margins","","",404,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_height","","",404,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_page_setup","","",404,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_pango_fontmap","","",404,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_width","","",404,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"set_cairo_context","","",404,{"inputs":[{"name":"self"},{"name":"context"},{"name":"f64"},{"name":"f64"}],"output":null}],[8,"PrintSettingsExt","","",null,null],[10,"copy","","",405,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get","","",405,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_bool","","",405,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"get_collate","","",405,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_default_source","","",405,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_dither","","",405,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_double","","",405,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"f64"}}],[10,"get_double_with_default","","",405,{"inputs":[{"name":"self"},{"name":"str"},{"name":"f64"}],"output":{"name":"f64"}}],[10,"get_duplex","","",405,{"inputs":[{"name":"self"}],"output":{"name":"printduplex"}}],[10,"get_finishings","","",405,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_int","","",405,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"i32"}}],[10,"get_int_with_default","","",405,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"}],"output":{"name":"i32"}}],[10,"get_length","","",405,{"inputs":[{"name":"self"},{"name":"str"},{"name":"unit"}],"output":{"name":"f64"}}],[10,"get_media_type","","",405,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_n_copies","","",405,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_number_up","","",405,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_number_up_layout","","",405,{"inputs":[{"name":"self"}],"output":{"name":"numberuplayout"}}],[10,"get_orientation","","",405,{"inputs":[{"name":"self"}],"output":{"name":"pageorientation"}}],[10,"get_output_bin","","",405,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_page_set","","",405,{"inputs":[{"name":"self"}],"output":{"name":"pageset"}}],[10,"get_paper_height","","",405,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"f64"}}],[10,"get_paper_size","","",405,{"inputs":[{"name":"self"}],"output":{"name":"papersize"}}],[10,"get_paper_width","","",405,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"f64"}}],[10,"get_print_pages","","",405,{"inputs":[{"name":"self"}],"output":{"name":"printpages"}}],[10,"get_printer","","",405,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_printer_lpi","","",405,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_quality","","",405,{"inputs":[{"name":"self"}],"output":{"name":"printquality"}}],[10,"get_resolution","","",405,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_resolution_x","","",405,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_resolution_y","","",405,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_reverse","","",405,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_scale","","",405,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_use_color","","",405,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"has_key","","",405,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"load_file","","",405,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"load_key_file","","",405,{"inputs":[{"name":"self"},{"name":"keyfile"},{"name":"p"}],"output":{"name":"result"}}],[10,"set","","",405,{"inputs":[{"name":"self"},{"name":"str"},{"name":"p"}],"output":null}],[10,"set_bool","","",405,{"inputs":[{"name":"self"},{"name":"str"},{"name":"bool"}],"output":null}],[10,"set_collate","","",405,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_default_source","","",405,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_dither","","",405,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_double","","",405,{"inputs":[{"name":"self"},{"name":"str"},{"name":"f64"}],"output":null}],[10,"set_duplex","","",405,{"inputs":[{"name":"self"},{"name":"printduplex"}],"output":null}],[10,"set_finishings","","",405,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_int","","",405,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"}],"output":null}],[10,"set_length","","",405,{"inputs":[{"name":"self"},{"name":"str"},{"name":"f64"},{"name":"unit"}],"output":null}],[10,"set_media_type","","",405,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_n_copies","","",405,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_number_up","","",405,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_number_up_layout","","",405,{"inputs":[{"name":"self"},{"name":"numberuplayout"}],"output":null}],[10,"set_orientation","","",405,{"inputs":[{"name":"self"},{"name":"pageorientation"}],"output":null}],[10,"set_output_bin","","",405,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_page_set","","",405,{"inputs":[{"name":"self"},{"name":"pageset"}],"output":null}],[10,"set_paper_height","","",405,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"unit"}],"output":null}],[10,"set_paper_size","","",405,{"inputs":[{"name":"self"},{"name":"papersize"}],"output":null}],[10,"set_paper_width","","",405,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"unit"}],"output":null}],[10,"set_print_pages","","",405,{"inputs":[{"name":"self"},{"name":"printpages"}],"output":null}],[10,"set_printer","","",405,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_printer_lpi","","",405,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"set_quality","","",405,{"inputs":[{"name":"self"},{"name":"printquality"}],"output":null}],[10,"set_resolution","","",405,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_resolution_xy","","",405,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_reverse","","",405,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_scale","","",405,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"set_use_color","","",405,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"to_file","","",405,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"to_gvariant","","",405,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"to_key_file","","",405,{"inputs":[{"name":"self"},{"name":"keyfile"},{"name":"str"}],"output":null}],[10,"unset","","",405,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[8,"ProgressBarExt","","",null,null],[10,"get_ellipsize","","",406,{"inputs":[{"name":"self"}],"output":{"name":"ellipsizemode"}}],[10,"get_fraction","","",406,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_inverted","","",406,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_pulse_step","","",406,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_show_text","","",406,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_text","","",406,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"pulse","","",406,{"inputs":[{"name":"self"}],"output":null}],[10,"set_ellipsize","","",406,{"inputs":[{"name":"self"},{"name":"ellipsizemode"}],"output":null}],[10,"set_fraction","","",406,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"set_inverted","","",406,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_pulse_step","","",406,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"set_show_text","","",406,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_text","","",406,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"connect_property_ellipsize_notify","","",406,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_fraction_notify","","",406,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_inverted_notify","","",406,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pulse_step_notify","","",406,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_text_notify","","",406,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_text_notify","","",406,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"RadioButtonExt","","",null,null],[10,"get_group","","",407,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"join_group","","",407,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"connect_group_changed","","",407,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"RadioMenuItemExt","","",null,null],[10,"get_group","","",408,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"join_group","","",408,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"connect_group_changed","","",408,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"RangeExt","","Trait containing all `Range` methods.",null,null],[10,"get_adjustment","","Get the `Adjustment` which is the “model” object for `Range`. See `RangeExt::set_adjustment` for details. The return value does not have a reference added, so should not be unreferenced.",409,{"inputs":[{"name":"self"}],"output":{"name":"adjustment"}}],[10,"get_fill_level","","Gets the current position of the fill level indicator.",409,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_flippable","","Gets the value set by `RangeExt::set_flippable`.",409,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_inverted","","Gets the value set by `RangeExt::set_inverted`.",409,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_lower_stepper_sensitivity","","Gets the sensitivity policy for the stepper that points to the 'lower' end of the `Range`’s adjustment.",409,{"inputs":[{"name":"self"}],"output":{"name":"sensitivitytype"}}],[10,"get_min_slider_size","","This function is useful mainly for `Range` subclasses.",409,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_range_rect","","This function returns the area that contains the range’s trough and its steppers, in widget->window coordinates.",409,{"inputs":[{"name":"self"}],"output":{"name":"rectangle"}}],[10,"get_restrict_to_fill_level","","Gets whether the range is restricted to the fill level.",409,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_round_digits","","Gets the number of digits to round the value to when it changes. See `Range::change-value`.",409,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_show_fill_level","","Gets whether the range displays the fill level graphically.",409,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_slider_range","","This function returns sliders range along the long dimension, in widget->window coordinates.",409,null],[10,"get_slider_size_fixed","","This function is useful mainly for `Range` subclasses.",409,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_upper_stepper_sensitivity","","Gets the sensitivity policy for the stepper that points to the 'upper' end of the `Range`’s adjustment.",409,{"inputs":[{"name":"self"}],"output":{"name":"sensitivitytype"}}],[10,"get_value","","Gets the current value of the range.",409,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"set_adjustment","","Sets the adjustment to be used as the “model” object for this range widget. The adjustment indicates the current range value, the minimum and maximum range values, the step/page increments used for keybindings and scrolling, and the page size. The page size is normally 0 for `Scale` and nonzero for `Scrollbar`, and indicates the size of the visible area of the widget being scrolled. The page size affects the size of the scrollbar slider. ## `adjustment` a `Adjustment`",409,{"inputs":[{"name":"self"},{"name":"adjustment"}],"output":null}],[10,"set_fill_level","","Set the new position of the fill level indicator.",409,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"set_flippable","","If a range is flippable, it will switch its direction if it is horizontal and its direction is `TextDirection::Rtl`.",409,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_increments","","Sets the step and page sizes for the range. The step size is used when the user clicks the `Scrollbar` arrows or moves `Scale` via arrow keys. The page size is used for example when moving via Page Up or Page Down keys. ## `step` step size ## `page` page size",409,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"set_inverted","","Ranges normally move from lower to higher values as the slider moves from top to bottom or left to right. Inverted ranges have higher values at the top or on the right rather than on the bottom or left. ## `setting` `true` to invert the range",409,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_lower_stepper_sensitivity","","Sets the sensitivity policy for the stepper that points to the 'lower' end of the `Range`’s adjustment. ## `sensitivity` the lower stepper’s sensitivity policy.",409,{"inputs":[{"name":"self"},{"name":"sensitivitytype"}],"output":null}],[10,"set_min_slider_size","","Sets the minimum size of the range’s slider.",409,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_range","","Sets the allowable values in the `Range`, and clamps the range value to be between `min` and `max`. (If the range has a non-zero page size, it is clamped between `min` and `max` - page-size.) ## `min` minimum range value ## `max` maximum range value",409,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"set_restrict_to_fill_level","","Sets whether the slider is restricted to the fill level. See `RangeExt::set_fill_level` for a general description of the fill level concept. ## `restrict_to_fill_level` Whether the fill level restricts slider movement.",409,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_round_digits","","Sets the number of digits to round the value to when it changes. See `Range::change-value`. ## `round_digits` the precision in digits, or -1",409,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_show_fill_level","","Sets whether a graphical fill level is show on the trough. See `RangeExt::set_fill_level` for a general description of the fill level concept. ## `show_fill_level` Whether a fill level indicator graphics is shown.",409,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_slider_size_fixed","","Sets whether the range’s slider has a fixed size, or a size that depends on its adjustment’s page size.",409,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_upper_stepper_sensitivity","","Sets the sensitivity policy for the stepper that points to the 'upper' end of the `Range`’s adjustment. ## `sensitivity` the upper stepper’s sensitivity policy.",409,{"inputs":[{"name":"self"},{"name":"sensitivitytype"}],"output":null}],[10,"set_value","","Sets the current value of the range; if the value is outside the minimum or maximum range values, it will be clamped to fit inside them. The range emits the `Range::value-changed` signal if the value changes. ## `value` new value of the range",409,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"connect_adjust_bounds","","",409,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_change_value","","",409,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_slider","","",409,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_value_changed","","",409,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_adjustment_notify","","",409,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_fill_level_notify","","",409,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_inverted_notify","","",409,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_lower_stepper_sensitivity_notify","","",409,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_restrict_to_fill_level_notify","","",409,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_round_digits_notify","","",409,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_fill_level_notify","","",409,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_upper_stepper_sensitivity_notify","","",409,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"RecentChooserExt","","Trait containing all `RecentChooser` methods.",null,null],[10,"add_filter","","Adds `filter` to the list of `RecentFilter` objects held by `self`.",410,{"inputs":[{"name":"self"},{"name":"recentfilter"}],"output":null}],[10,"get_current_item","","Gets the `RecentInfo` currently selected by `self`.",410,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_current_uri","","Gets the URI currently selected by `self`.",410,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_filter","","Gets the `RecentFilter` object currently used by `self` to affect the display of the recently used resources.",410,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_items","","Gets the list of recently used resources in form of `RecentInfo` objects.",410,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_limit","","Gets the number of items returned by `RecentChooser::get_items` and `RecentChooser::get_uris`.",410,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_local_only","","Gets whether only local resources should be shown in the recently used resources selector. See `RecentChooser::set_local_only`",410,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_select_multiple","","Gets whether `self` can select multiple items.",410,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_icons","","Retrieves whether `self` should show an icon near the resource.",410,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_not_found","","Retrieves whether `self` should show the recently used resources that were not found.",410,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_private","","Returns whether `self` should display recently used resources registered as private.",410,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_tips","","Gets whether `self` should display tooltips containing the full path of a recently user resource.",410,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_sort_type","","Gets the value set by `RecentChooser::set_sort_type`.",410,{"inputs":[{"name":"self"}],"output":{"name":"recentsorttype"}}],[10,"get_uris","","Gets the URI of the recently used resources.",410,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"list_filters","","Gets the `RecentFilter` objects held by `self`.",410,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"remove_filter","","Removes `filter` from the list of `RecentFilter` objects held by `self`. ## `filter` a `RecentFilter`",410,{"inputs":[{"name":"self"},{"name":"recentfilter"}],"output":null}],[10,"select_all","","Selects all the items inside `self`, if the `self` supports multiple selection.",410,{"inputs":[{"name":"self"}],"output":null}],[10,"select_uri","","Selects `uri` inside `self`. ## `uri` a URI",410,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"set_current_uri","","Sets `uri` as the current URI for `self`. ## `uri` a URI",410,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"set_filter","","Sets `filter` as the current `RecentFilter` object used by `self` to affect the displayed recently used resources. ## `filter` a `RecentFilter`",410,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_limit","","Sets the number of items that should be returned by `RecentChooser::get_items` and `RecentChooser::get_uris`. ## `limit` a positive integer, or -1 for all items",410,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_local_only","","Sets whether only local resources, that is resources using the file:// URI scheme, should be shown in the recently used resources selector. If `local_only` is `true` (the default) then the shown resources are guaranteed to be accessible through the operating system native file system. ## `local_only` `true` if only local files can be shown",410,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_select_multiple","","Sets whether `self` can select multiple items. ## `select_multiple` `true` if `self` can select more than one item",410,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_icons","","Sets whether `self` should show an icon near the resource when displaying it. ## `show_icons` whether to show an icon near the resource",410,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_not_found","","Sets whether `self` should display the recently used resources that it didn’t find. This only applies to local resources. ## `show_not_found` whether to show the local items we didn’t find",410,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_private","","Whether to show recently used resources marked registered as private. ## `show_private` `true` to show private items, `false` otherwise",410,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_tips","","Sets whether to show a tooltips containing the full path of each recently used resource in a `RecentChooser` widget. ## `show_tips` `true` if tooltips should be shown",410,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_sort_type","","Changes the sorting order of the recently used resources list displayed by `self`. ## `sort_type` sort order that the chooser should use",410,{"inputs":[{"name":"self"},{"name":"recentsorttype"}],"output":null}],[10,"unselect_all","","Unselects all the items inside `self`.",410,{"inputs":[{"name":"self"}],"output":null}],[10,"unselect_uri","","Unselects `uri` inside `self`. ## `uri` a URI",410,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"connect_item_activated","","",410,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_selection_changed","","",410,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_filter_notify","","",410,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_limit_notify","","",410,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_local_only_notify","","",410,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_recent_manager_notify","","",410,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_select_multiple_notify","","",410,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_icons_notify","","",410,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_not_found_notify","","",410,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_private_notify","","",410,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_tips_notify","","",410,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_sort_type_notify","","",410,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"RecentFilterExt","","",null,null],[10,"add_age","","",411,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"add_application","","",411,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"add_group","","",411,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"add_mime_type","","",411,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"add_pattern","","",411,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"add_pixbuf_formats","","",411,{"inputs":[{"name":"self"}],"output":null}],[10,"get_name","","",411,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_needed","","",411,{"inputs":[{"name":"self"}],"output":{"name":"recentfilterflags"}}],[10,"set_name","","",411,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[8,"RecentManagerExt","","",null,null],[10,"add_full","","",412,{"inputs":[{"name":"self"},{"name":"str"},{"name":"recentdata"}],"output":{"name":"bool"}}],[10,"add_item","","",412,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"get_items","","",412,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"has_item","","",412,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"lookup_item","","",412,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"move_item","","",412,{"inputs":[{"name":"self"},{"name":"str"},{"name":"p"}],"output":{"name":"result"}}],[10,"purge_items","","",412,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"remove_item","","",412,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"get_property_filename","","",412,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_property_size","","",412,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"connect_changed","","",412,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_filename_notify","","",412,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_size_notify","","",412,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"RevealerExt","","",null,null],[10,"get_child_revealed","","",413,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_reveal_child","","",413,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_transition_duration","","",413,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_transition_type","","",413,{"inputs":[{"name":"self"}],"output":{"name":"revealertransitiontype"}}],[10,"set_reveal_child","","",413,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_transition_duration","","",413,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"set_transition_type","","",413,{"inputs":[{"name":"self"},{"name":"revealertransitiontype"}],"output":null}],[10,"get_property_child_revealed","","",413,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_reveal_child","","",413,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_reveal_child","","",413,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_transition_duration","","",413,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_transition_duration","","",413,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_transition_type","","",413,{"inputs":[{"name":"self"}],"output":{"name":"revealertransitiontype"}}],[10,"set_property_transition_type","","",413,{"inputs":[{"name":"self"},{"name":"revealertransitiontype"}],"output":null}],[10,"connect_property_child_revealed_notify","","",413,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_reveal_child_notify","","",413,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_transition_duration_notify","","",413,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_transition_type_notify","","",413,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ScaleExt","","",null,null],[10,"add_mark","","",414,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"positiontype"},{"name":"p"}],"output":null}],[10,"clear_marks","","",414,{"inputs":[{"name":"self"}],"output":null}],[10,"get_digits","","",414,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_draw_value","","",414,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_has_origin","","",414,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_layout","","",414,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_layout_offsets","","",414,null],[10,"get_value_pos","","",414,{"inputs":[{"name":"self"}],"output":{"name":"positiontype"}}],[10,"set_digits","","",414,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_draw_value","","",414,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_has_origin","","",414,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_value_pos","","",414,{"inputs":[{"name":"self"},{"name":"positiontype"}],"output":null}],[10,"connect_format_value","","",414,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_digits_notify","","",414,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_draw_value_notify","","",414,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_has_origin_notify","","",414,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_value_pos_notify","","",414,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ScaleButtonExt","","Trait containing all `ScaleButton` methods.",null,null],[10,"get_adjustment","","Gets the `Adjustment` associated with the `ScaleButton`’s scale. See `RangeExt::get_adjustment` for details.",415,{"inputs":[{"name":"self"}],"output":{"name":"adjustment"}}],[10,"get_minus_button","","Retrieves the minus button of the `ScaleButton`.",415,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_plus_button","","Retrieves the plus button of the `ScaleButton`.",415,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_popup","","Retrieves the popup of the `ScaleButton`.",415,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_value","","Gets the current value of the scale button.",415,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"set_adjustment","","Sets the `Adjustment` to be used as a model for the `ScaleButton`’s scale. See `RangeExt::set_adjustment` for details. ## `adjustment` a `Adjustment`",415,{"inputs":[{"name":"self"},{"name":"adjustment"}],"output":null}],[10,"set_icons","","Sets the icons to be used by the scale button. For details, see the `ScaleButton:icons` property. ## `icons` a `None`-terminated array of icon names",415,null],[10,"set_value","","Sets the current value of the scale; if the value is outside the minimum or maximum range values, it will be clamped to fit inside them. The scale button emits the `ScaleButton::value-changed` signal if the value changes. ## `value` new value of the scale button",415,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"get_property_size","","",415,{"inputs":[{"name":"self"}],"output":{"name":"iconsize"}}],[10,"set_property_size","","",415,{"inputs":[{"name":"self"},{"name":"iconsize"}],"output":null}],[10,"connect_popdown","","",415,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_popup","","",415,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_value_changed","","",415,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_adjustment_notify","","",415,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_icons_notify","","",415,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_size_notify","","",415,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_value_notify","","",415,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ScrollableExt","","Trait containing all `Scrollable` methods.",null,null],[10,"get_hadjustment","","Retrieves the `Adjustment` used for horizontal scrolling.",416,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_hscroll_policy","","Gets the horizontal `ScrollablePolicy`.",416,{"inputs":[{"name":"self"}],"output":{"name":"scrollablepolicy"}}],[10,"get_vadjustment","","Retrieves the `Adjustment` used for vertical scrolling.",416,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_vscroll_policy","","Gets the vertical `ScrollablePolicy`.",416,{"inputs":[{"name":"self"}],"output":{"name":"scrollablepolicy"}}],[10,"set_hadjustment","","Sets the horizontal adjustment of the `Scrollable`. ## `hadjustment` a `Adjustment`",416,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_hscroll_policy","","Sets the `ScrollablePolicy` to determine whether horizontal scrolling should start below the minimum width or below the natural width. ## `policy` the horizontal `ScrollablePolicy`",416,{"inputs":[{"name":"self"},{"name":"scrollablepolicy"}],"output":null}],[10,"set_vadjustment","","Sets the vertical adjustment of the `Scrollable`. ## `vadjustment` a `Adjustment`",416,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_vscroll_policy","","Sets the `ScrollablePolicy` to determine whether vertical scrolling should start below the minimum height or below the natural height. ## `policy` the vertical `ScrollablePolicy`",416,{"inputs":[{"name":"self"},{"name":"scrollablepolicy"}],"output":null}],[10,"connect_property_hadjustment_notify","","",416,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_hscroll_policy_notify","","",416,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_vadjustment_notify","","",416,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_vscroll_policy_notify","","",416,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ScrolledWindowExt","","Trait containing all `ScrolledWindow` methods.",null,null],[10,"add_with_viewport","","Used to add children without native scrolling capabilities. This is simply a convenience function; it is equivalent to adding the unscrollable child to a viewport, then adding the viewport to the scrolled window. If a child has native scrolling, use `ContainerExt::add` instead of this function.",417,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"get_capture_button_press","","Return whether button presses are captured during kinetic scrolling. See `ScrolledWindowExt::set_capture_button_press`.",417,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_hadjustment","","Returns the horizontal scrollbar’s adjustment, used to connect the horizontal scrollbar to the child widget’s horizontal scroll functionality.",417,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_hscrollbar","","Returns the horizontal scrollbar of `self`.",417,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_kinetic_scrolling","","Returns the specified kinetic scrolling behavior.",417,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_max_content_height","","",417,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_max_content_width","","",417,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_min_content_height","","Gets the minimal content height of `self`, or -1 if not set.",417,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_min_content_width","","Gets the minimum content width of `self`, or -1 if not set.",417,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_overlay_scrolling","","Returns whether overlay scrolling is enabled for this scrolled window.",417,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_placement","","Gets the placement of the contents with respect to the scrollbars for the scrolled window. See `ScrolledWindowExt::set_placement`.",417,{"inputs":[{"name":"self"}],"output":{"name":"cornertype"}}],[10,"get_policy","","Retrieves the current policy values for the horizontal and vertical scrollbars. See `ScrolledWindowExt::set_policy`. ## `hscrollbar_policy` location to store the policy  for the horizontal scrollbar, or `None` ## `vscrollbar_policy` location to store the policy  for the vertical scrollbar, or `None`",417,null],[10,"get_propagate_natural_height","","",417,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_propagate_natural_width","","",417,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_shadow_type","","Gets the shadow type of the scrolled window. See `ScrolledWindowExt::set_shadow_type`.",417,{"inputs":[{"name":"self"}],"output":{"name":"shadowtype"}}],[10,"get_vadjustment","","Returns the vertical scrollbar’s adjustment, used to connect the vertical scrollbar to the child widget’s vertical scroll functionality.",417,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_vscrollbar","","Returns the vertical scrollbar of `self`.",417,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_capture_button_press","","Changes the behaviour of `self` wrt. to the initial event that possibly starts kinetic scrolling. When `capture_button_press` is set to `true`, the event is captured by the scrolled window, and then later replayed if it is meant to go to the child widget.",417,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_hadjustment","","Sets the `Adjustment` for the horizontal scrollbar. ## `hadjustment` horizontal scroll adjustment",417,{"inputs":[{"name":"self"},{"name":"adjustment"}],"output":null}],[10,"set_kinetic_scrolling","","Turns kinetic scrolling on or off. Kinetic scrolling only applies to devices with source `gdk::InputSource::Touchscreen`. ## `kinetic_scrolling` `true` to enable kinetic scrolling",417,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_max_content_height","","",417,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_max_content_width","","",417,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_min_content_height","","Sets the minimum height that `self` should keep visible. Note that this can and (usually will) be smaller than the minimum size of the content. ## `height` the minimal content height",417,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_min_content_width","","Sets the minimum width that `self` should keep visible. Note that this can and (usually will) be smaller than the minimum size of the content. ## `width` the minimal content width",417,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_overlay_scrolling","","Enables or disables overlay scrolling for this scrolled window.",417,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_placement","","Sets the placement of the contents with respect to the scrollbars for the scrolled window.",417,{"inputs":[{"name":"self"},{"name":"cornertype"}],"output":null}],[10,"set_policy","","Sets the scrollbar policy for the horizontal and vertical scrollbars.",417,{"inputs":[{"name":"self"},{"name":"policytype"},{"name":"policytype"}],"output":null}],[10,"set_propagate_natural_height","","",417,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_propagate_natural_width","","",417,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_shadow_type","","Changes the type of shadow drawn around the contents of `self`. ## `type_` kind of shadow to draw around scrolled window contents",417,{"inputs":[{"name":"self"},{"name":"shadowtype"}],"output":null}],[10,"set_vadjustment","","Sets the `Adjustment` for the vertical scrollbar. ## `vadjustment` vertical scroll adjustment",417,{"inputs":[{"name":"self"},{"name":"adjustment"}],"output":null}],[10,"unset_placement","","Unsets the placement of the contents with respect to the scrollbars for the scrolled window. If no window placement is set for a scrolled window, it defaults to `CornerType::TopLeft`.",417,{"inputs":[{"name":"self"}],"output":null}],[10,"get_property_hscrollbar_policy","","",417,{"inputs":[{"name":"self"}],"output":{"name":"policytype"}}],[10,"set_property_hscrollbar_policy","","",417,{"inputs":[{"name":"self"},{"name":"policytype"}],"output":null}],[10,"get_property_vscrollbar_policy","","",417,{"inputs":[{"name":"self"}],"output":{"name":"policytype"}}],[10,"set_property_vscrollbar_policy","","",417,{"inputs":[{"name":"self"},{"name":"policytype"}],"output":null}],[10,"get_property_window_placement","","",417,{"inputs":[{"name":"self"}],"output":{"name":"cornertype"}}],[10,"set_property_window_placement","","",417,{"inputs":[{"name":"self"},{"name":"cornertype"}],"output":null}],[10,"get_property_window_placement_set","","",417,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_window_placement_set","","",417,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_edge_overshot","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_edge_reached","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_focus_out","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_scroll_child","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_hadjustment_notify","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_hscrollbar_policy_notify","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_kinetic_scrolling_notify","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_max_content_height_notify","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_max_content_width_notify","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_min_content_height_notify","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_min_content_width_notify","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_overlay_scrolling_notify","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_propagate_natural_height_notify","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_propagate_natural_width_notify","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_shadow_type_notify","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_vadjustment_notify","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_vscrollbar_policy_notify","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_window_placement_notify","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_window_placement_set_notify","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"SearchBarExt","","",null,null],[10,"connect_entry","","",418,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"get_search_mode","","",418,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_close_button","","",418,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"handle_event","","",418,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"bool"}}],[10,"set_search_mode","","",418,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_close_button","","",418,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_search_mode_enabled","","",418,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_search_mode_enabled","","",418,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_show_close_button","","",418,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_show_close_button","","",418,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_property_search_mode_enabled_notify","","",418,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_close_button_notify","","",418,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"SearchEntryExt","","",null,null],[10,"handle_event","","",419,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"bool"}}],[10,"connect_next_match","","",419,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_previous_match","","",419,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_search_changed","","",419,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_stop_search","","",419,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"SeparatorToolItemExt","","",null,null],[10,"get_draw","","",420,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_draw","","",420,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_property_draw_notify","","",420,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"SettingsExt","","",null,null],[10,"reset_property","","",421,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_double_property","","",421,{"inputs":[{"name":"self"},{"name":"str"},{"name":"f64"},{"name":"str"}],"output":null}],[10,"set_long_property","","",421,{"inputs":[{"name":"self"},{"name":"str"},{"name":"c_long"},{"name":"str"}],"output":null}],[10,"set_string_property","","",421,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":null}],[10,"get_property_gtk_alternative_button_order","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_alternative_button_order","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_alternative_sort_arrows","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_alternative_sort_arrows","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_application_prefer_dark_theme","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_application_prefer_dark_theme","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_auto_mnemonics","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_auto_mnemonics","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_button_images","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_button_images","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_can_change_accels","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_can_change_accels","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_color_palette","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_color_palette","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_color_scheme","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_color_scheme","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_cursor_blink","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_cursor_blink","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_cursor_blink_time","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_cursor_blink_time","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_cursor_blink_timeout","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_cursor_blink_timeout","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_cursor_theme_name","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_cursor_theme_name","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_cursor_theme_size","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_cursor_theme_size","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_decoration_layout","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_decoration_layout","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_dialogs_use_header","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_dialogs_use_header","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_dnd_drag_threshold","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_dnd_drag_threshold","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_double_click_distance","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_double_click_distance","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_double_click_time","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_double_click_time","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_enable_accels","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_enable_accels","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_enable_animations","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_enable_animations","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_enable_event_sounds","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_enable_event_sounds","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_enable_input_feedback_sounds","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_enable_input_feedback_sounds","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_enable_mnemonics","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_enable_mnemonics","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_enable_primary_paste","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_enable_primary_paste","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_enable_tooltips","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_enable_tooltips","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_entry_password_hint_timeout","","",421,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_gtk_entry_password_hint_timeout","","",421,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_gtk_entry_select_on_focus","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_entry_select_on_focus","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_error_bell","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_error_bell","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_fallback_icon_theme","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_fallback_icon_theme","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_file_chooser_backend","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_file_chooser_backend","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_font_name","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_font_name","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_fontconfig_timestamp","","",421,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_gtk_fontconfig_timestamp","","",421,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_gtk_icon_sizes","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_icon_sizes","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_icon_theme_name","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_icon_theme_name","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_im_module","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_im_module","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_im_preedit_style","","",421,{"inputs":[{"name":"self"}],"output":{"name":"impreeditstyle"}}],[10,"set_property_gtk_im_preedit_style","","",421,{"inputs":[{"name":"self"},{"name":"impreeditstyle"}],"output":null}],[10,"get_property_gtk_im_status_style","","",421,{"inputs":[{"name":"self"}],"output":{"name":"imstatusstyle"}}],[10,"set_property_gtk_im_status_style","","",421,{"inputs":[{"name":"self"},{"name":"imstatusstyle"}],"output":null}],[10,"get_property_gtk_key_theme_name","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_key_theme_name","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_keynav_cursor_only","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_keynav_cursor_only","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_keynav_use_caret","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_keynav_use_caret","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_keynav_wrap_around","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_keynav_wrap_around","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_label_select_on_focus","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_label_select_on_focus","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_long_press_time","","",421,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_gtk_long_press_time","","",421,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_gtk_menu_bar_accel","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_menu_bar_accel","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_menu_bar_popup_delay","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_menu_bar_popup_delay","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_menu_images","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_menu_images","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_menu_popdown_delay","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_menu_popdown_delay","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_menu_popup_delay","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_menu_popup_delay","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_modules","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_modules","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_primary_button_warps_slider","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_primary_button_warps_slider","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_print_backends","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_print_backends","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_print_preview_command","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_print_preview_command","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_recent_files_enabled","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_recent_files_enabled","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_recent_files_limit","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_recent_files_limit","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_recent_files_max_age","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_recent_files_max_age","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_scrolled_window_placement","","",421,{"inputs":[{"name":"self"}],"output":{"name":"cornertype"}}],[10,"set_property_gtk_scrolled_window_placement","","",421,{"inputs":[{"name":"self"},{"name":"cornertype"}],"output":null}],[10,"get_property_gtk_shell_shows_app_menu","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_shell_shows_app_menu","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_shell_shows_desktop","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_shell_shows_desktop","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_shell_shows_menubar","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_shell_shows_menubar","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_show_input_method_menu","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_show_input_method_menu","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_show_unicode_menu","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_show_unicode_menu","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_sound_theme_name","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_sound_theme_name","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_split_cursor","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_split_cursor","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_theme_name","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_theme_name","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_timeout_expand","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_timeout_expand","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_timeout_initial","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_timeout_initial","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_timeout_repeat","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_timeout_repeat","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_titlebar_double_click","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_titlebar_double_click","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_titlebar_middle_click","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_titlebar_middle_click","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_titlebar_right_click","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_titlebar_right_click","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_toolbar_icon_size","","",421,{"inputs":[{"name":"self"}],"output":{"name":"iconsize"}}],[10,"set_property_gtk_toolbar_icon_size","","",421,{"inputs":[{"name":"self"},{"name":"iconsize"}],"output":null}],[10,"get_property_gtk_toolbar_style","","",421,{"inputs":[{"name":"self"}],"output":{"name":"toolbarstyle"}}],[10,"set_property_gtk_toolbar_style","","",421,{"inputs":[{"name":"self"},{"name":"toolbarstyle"}],"output":null}],[10,"get_property_gtk_tooltip_browse_mode_timeout","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_tooltip_browse_mode_timeout","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_tooltip_browse_timeout","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_tooltip_browse_timeout","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_tooltip_timeout","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_tooltip_timeout","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_visible_focus","","",421,{"inputs":[{"name":"self"}],"output":{"name":"policytype"}}],[10,"set_property_gtk_visible_focus","","",421,{"inputs":[{"name":"self"},{"name":"policytype"}],"output":null}],[10,"get_property_gtk_xft_antialias","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_xft_antialias","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_xft_dpi","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_xft_dpi","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_xft_hinting","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_xft_hinting","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_xft_hintstyle","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_xft_hintstyle","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_xft_rgba","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_xft_rgba","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"connect_property_color_hash_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_alternative_button_order_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_alternative_sort_arrows_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_application_prefer_dark_theme_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_auto_mnemonics_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_button_images_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_can_change_accels_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_color_palette_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_color_scheme_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_cursor_blink_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_cursor_blink_time_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_cursor_blink_timeout_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_cursor_theme_name_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_cursor_theme_size_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_decoration_layout_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_dialogs_use_header_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_dnd_drag_threshold_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_double_click_distance_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_double_click_time_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_enable_accels_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_enable_animations_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_enable_event_sounds_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_enable_input_feedback_sounds_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_enable_mnemonics_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_enable_primary_paste_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_enable_tooltips_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_entry_password_hint_timeout_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_entry_select_on_focus_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_error_bell_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_fallback_icon_theme_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_file_chooser_backend_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_font_name_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_fontconfig_timestamp_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_icon_sizes_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_icon_theme_name_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_im_module_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_im_preedit_style_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_im_status_style_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_key_theme_name_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_keynav_cursor_only_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_keynav_use_caret_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_keynav_wrap_around_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_label_select_on_focus_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_long_press_time_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_menu_bar_accel_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_menu_bar_popup_delay_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_menu_images_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_menu_popdown_delay_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_menu_popup_delay_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_modules_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_primary_button_warps_slider_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_print_backends_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_print_preview_command_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_recent_files_enabled_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_recent_files_limit_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_recent_files_max_age_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_scrolled_window_placement_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_shell_shows_app_menu_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_shell_shows_desktop_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_shell_shows_menubar_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_show_input_method_menu_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_show_unicode_menu_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_sound_theme_name_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_split_cursor_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_theme_name_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_timeout_expand_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_timeout_initial_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_timeout_repeat_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_titlebar_double_click_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_titlebar_middle_click_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_titlebar_right_click_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_toolbar_icon_size_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_toolbar_style_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_tooltip_browse_mode_timeout_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_tooltip_browse_timeout_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_tooltip_timeout_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_visible_focus_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_xft_antialias_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_xft_dpi_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_xft_hinting_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_xft_hintstyle_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_xft_rgba_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ShortcutsWindowExt","","",null,null],[10,"get_property_section_name","","",422,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_section_name","","",422,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_view_name","","",422,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_view_name","","",422,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"connect_close","","",422,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_search","","",422,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_section_name_notify","","",422,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_view_name_notify","","",422,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"SizeGroupExt","","",null,null],[10,"add_widget","","",423,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"get_ignore_hidden","","",423,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_mode","","",423,{"inputs":[{"name":"self"}],"output":{"name":"sizegroupmode"}}],[10,"get_widgets","","",423,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"remove_widget","","",423,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_ignore_hidden","","",423,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_mode","","",423,{"inputs":[{"name":"self"},{"name":"sizegroupmode"}],"output":null}],[10,"connect_property_ignore_hidden_notify","","",423,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_mode_notify","","",423,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"SpinButtonExt","","",null,null],[10,"configure","","",424,{"inputs":[{"name":"self"},{"name":"p"},{"name":"f64"},{"name":"u32"}],"output":null}],[10,"get_adjustment","","",424,{"inputs":[{"name":"self"}],"output":{"name":"adjustment"}}],[10,"get_digits","","",424,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_increments","","",424,null],[10,"get_numeric","","",424,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_range","","",424,null],[10,"get_snap_to_ticks","","",424,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_update_policy","","",424,{"inputs":[{"name":"self"}],"output":{"name":"spinbuttonupdatepolicy"}}],[10,"get_value","","",424,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_value_as_int","","",424,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_wrap","","",424,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_adjustment","","",424,{"inputs":[{"name":"self"},{"name":"adjustment"}],"output":null}],[10,"set_digits","","",424,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"set_increments","","",424,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"set_numeric","","",424,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_range","","",424,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"set_snap_to_ticks","","",424,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_update_policy","","",424,{"inputs":[{"name":"self"},{"name":"spinbuttonupdatepolicy"}],"output":null}],[10,"set_value","","",424,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"set_wrap","","",424,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"spin","","",424,{"inputs":[{"name":"self"},{"name":"spintype"},{"name":"f64"}],"output":null}],[10,"update","","",424,{"inputs":[{"name":"self"}],"output":null}],[10,"get_property_climb_rate","","",424,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"set_property_climb_rate","","",424,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"connect_property_adjustment_notify","","",424,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_climb_rate_notify","","",424,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_digits_notify","","",424,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_numeric_notify","","",424,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_snap_to_ticks_notify","","",424,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_update_policy_notify","","",424,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_value_notify","","",424,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_wrap_notify","","",424,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"SpinnerExt","","",null,null],[10,"start","","",425,{"inputs":[{"name":"self"}],"output":null}],[10,"stop","","",425,{"inputs":[{"name":"self"}],"output":null}],[10,"get_property_active","","",425,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_active","","",425,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_property_active_notify","","",425,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"StackExt","","",null,null],[10,"add_named","","",426,{"inputs":[{"name":"self"},{"name":"p"},{"name":"str"}],"output":null}],[10,"add_titled","","",426,{"inputs":[{"name":"self"},{"name":"p"},{"name":"str"},{"name":"str"}],"output":null}],[10,"get_child_by_name","","",426,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_hhomogeneous","","",426,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_homogeneous","","",426,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_interpolate_size","","",426,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_transition_duration","","",426,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_transition_running","","",426,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_transition_type","","",426,{"inputs":[{"name":"self"}],"output":{"name":"stacktransitiontype"}}],[10,"get_vhomogeneous","","",426,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_visible_child","","",426,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_visible_child_name","","",426,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_hhomogeneous","","",426,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_homogeneous","","",426,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_interpolate_size","","",426,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_transition_duration","","",426,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"set_transition_type","","",426,{"inputs":[{"name":"self"},{"name":"stacktransitiontype"}],"output":null}],[10,"set_vhomogeneous","","",426,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_visible_child","","",426,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_visible_child_full","","",426,{"inputs":[{"name":"self"},{"name":"str"},{"name":"stacktransitiontype"}],"output":null}],[10,"set_visible_child_name","","",426,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"get_property_homogeneous","","",426,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_homogeneous","","",426,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_interpolate_size","","",426,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_interpolate_size","","",426,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_transition_duration","","",426,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_transition_duration","","",426,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_transition_running","","",426,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_transition_type","","",426,{"inputs":[{"name":"self"}],"output":{"name":"stacktransitiontype"}}],[10,"set_property_transition_type","","",426,{"inputs":[{"name":"self"},{"name":"stacktransitiontype"}],"output":null}],[10,"get_property_visible_child","","",426,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_visible_child","","",426,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_visible_child_name","","",426,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_visible_child_name","","",426,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_child_icon_name","","",426,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"option"}}],[10,"set_child_icon_name","","",426,{"inputs":[{"name":"self"},{"name":"t"},{"name":"p"}],"output":null}],[10,"get_child_name","","",426,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"option"}}],[10,"set_child_name","","",426,{"inputs":[{"name":"self"},{"name":"t"},{"name":"p"}],"output":null}],[10,"get_child_needs_attention","","",426,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[10,"set_child_needs_attention","","",426,{"inputs":[{"name":"self"},{"name":"t"},{"name":"bool"}],"output":null}],[10,"get_child_position","","",426,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"i32"}}],[10,"set_child_position","","",426,{"inputs":[{"name":"self"},{"name":"t"},{"name":"i32"}],"output":null}],[10,"get_child_title","","",426,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"option"}}],[10,"set_child_title","","",426,{"inputs":[{"name":"self"},{"name":"t"},{"name":"p"}],"output":null}],[10,"connect_property_hhomogeneous_notify","","",426,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_homogeneous_notify","","",426,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_interpolate_size_notify","","",426,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_transition_duration_notify","","",426,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_transition_running_notify","","",426,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_transition_type_notify","","",426,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_vhomogeneous_notify","","",426,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_visible_child_notify","","",426,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_visible_child_name_notify","","",426,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"StackSidebarExt","","",null,null],[10,"get_stack","","",427,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_stack","","",427,{"inputs":[{"name":"self"},{"name":"stack"}],"output":null}],[10,"get_property_stack","","",427,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_stack","","",427,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"connect_property_stack_notify","","",427,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"StackSwitcherExt","","",null,null],[10,"get_stack","","",428,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_stack","","",428,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"get_property_icon_size","","",428,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_icon_size","","",428,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_stack","","",428,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_stack","","",428,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"connect_property_icon_size_notify","","",428,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_stack_notify","","",428,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"StatusIconExt","","",null,null],[10,"get_geometry","","",429,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_gicon","","",429,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_has_tooltip","","",429,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_icon_name","","",429,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_pixbuf","","",429,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_screen","","",429,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_size","","",429,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_stock","","",429,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_storage_type","","",429,{"inputs":[{"name":"self"}],"output":{"name":"imagetype"}}],[10,"get_title","","",429,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_tooltip_markup","","",429,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_tooltip_text","","",429,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_visible","","",429,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_x11_window_id","","",429,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"is_embedded","","",429,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_from_file","","",429,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_from_gicon","","",429,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_from_icon_name","","",429,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_from_pixbuf","","",429,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_from_stock","","",429,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_has_tooltip","","",429,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_name","","",429,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_screen","","",429,{"inputs":[{"name":"self"},{"name":"screen"}],"output":null}],[10,"set_title","","",429,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_tooltip_markup","","",429,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_tooltip_text","","",429,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_visible","","",429,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_embedded","","",429,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_file","","",429,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"set_property_gicon","","",429,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"set_property_icon_name","","",429,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_orientation","","",429,{"inputs":[{"name":"self"}],"output":{"name":"orientation"}}],[10,"set_property_pixbuf","","",429,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"set_property_stock","","",429,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"connect_activate","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_button_press_event","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_button_release_event","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_popup_menu","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_query_tooltip","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_scroll_event","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_size_changed","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_embedded_notify","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_file_notify","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gicon_notify","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_has_tooltip_notify","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_icon_name_notify","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_orientation_notify","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pixbuf_notify","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_screen_notify","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_size_notify","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_stock_notify","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_storage_type_notify","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_title_notify","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_tooltip_markup_notify","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_tooltip_text_notify","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_visible_notify","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"StatusbarExt","","",null,null],[10,"get_context_id","","",430,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"u32"}}],[10,"get_message_area","","",430,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"pop","","",430,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"push","","",430,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"str"}],"output":{"name":"u32"}}],[10,"remove","","",430,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":null}],[10,"remove_all","","",430,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"connect_text_popped","","",430,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_text_pushed","","",430,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"StyleContextExt","","",null,null],[10,"add_class","","",431,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"add_provider","","",431,{"inputs":[{"name":"self"},{"name":"p"},{"name":"u32"}],"output":null}],[10,"add_region","","",431,{"inputs":[{"name":"self"},{"name":"str"},{"name":"regionflags"}],"output":null}],[10,"get_background_color","","",431,{"inputs":[{"name":"self"},{"name":"stateflags"}],"output":{"name":"rgba"}}],[10,"get_border_color","","",431,{"inputs":[{"name":"self"},{"name":"stateflags"}],"output":{"name":"rgba"}}],[10,"get_color","","",431,{"inputs":[{"name":"self"},{"name":"stateflags"}],"output":{"name":"rgba"}}],[10,"get_direction","","",431,{"inputs":[{"name":"self"}],"output":{"name":"textdirection"}}],[10,"get_frame_clock","","",431,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_junction_sides","","",431,{"inputs":[{"name":"self"}],"output":{"name":"junctionsides"}}],[10,"get_parent","","",431,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_scale","","",431,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_screen","","",431,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_section","","",431,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_state","","",431,{"inputs":[{"name":"self"}],"output":{"name":"stateflags"}}],[10,"has_class","","",431,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"has_region","","",431,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"invalidate","","",431,{"inputs":[{"name":"self"}],"output":null}],[10,"list_classes","","",431,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"list_regions","","",431,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"lookup_color","","",431,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"lookup_icon_set","","",431,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"pop_animatable_region","","",431,{"inputs":[{"name":"self"}],"output":null}],[10,"remove_class","","",431,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"remove_provider","","",431,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"remove_region","","",431,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"restore","","",431,{"inputs":[{"name":"self"}],"output":null}],[10,"save","","",431,{"inputs":[{"name":"self"}],"output":null}],[10,"scroll_animations","","",431,{"inputs":[{"name":"self"},{"name":"window"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_background","","",431,{"inputs":[{"name":"self"},{"name":"window"}],"output":null}],[10,"set_direction","","",431,{"inputs":[{"name":"self"},{"name":"textdirection"}],"output":null}],[10,"set_frame_clock","","",431,{"inputs":[{"name":"self"},{"name":"frameclock"}],"output":null}],[10,"set_junction_sides","","",431,{"inputs":[{"name":"self"},{"name":"junctionsides"}],"output":null}],[10,"set_parent","","",431,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_scale","","",431,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_screen","","",431,{"inputs":[{"name":"self"},{"name":"screen"}],"output":null}],[10,"set_state","","",431,{"inputs":[{"name":"self"},{"name":"stateflags"}],"output":null}],[10,"state_is_running","","",431,{"inputs":[{"name":"self"},{"name":"statetype"}],"output":{"name":"option"}}],[10,"to_string","","",431,{"inputs":[{"name":"self"},{"name":"stylecontextprintflags"}],"output":{"name":"string"}}],[10,"get_property_paint_clock","","",431,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_paint_clock","","",431,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"connect_changed","","",431,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_direction_notify","","",431,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_paint_clock_notify","","",431,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_parent_notify","","",431,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_screen_notify","","",431,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"StylePropertiesExt","","",null,null],[10,"clear","","",432,{"inputs":[{"name":"self"}],"output":null}],[10,"get_property","","",432,{"inputs":[{"name":"self"},{"name":"str"},{"name":"stateflags"}],"output":{"name":"option"}}],[10,"lookup_color","","",432,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"map_color","","",432,{"inputs":[{"name":"self"},{"name":"str"},{"name":"symboliccolor"}],"output":null}],[10,"merge","","",432,{"inputs":[{"name":"self"},{"name":"styleproperties"},{"name":"bool"}],"output":null}],[10,"set_property","","",432,{"inputs":[{"name":"self"},{"name":"str"},{"name":"stateflags"},{"name":"value"}],"output":null}],[10,"unset_property","","",432,{"inputs":[{"name":"self"},{"name":"str"},{"name":"stateflags"}],"output":null}],[8,"StyleProviderExt","","Trait containing all `StyleProvider` methods.",null,null],[8,"SwitchExt","","",null,null],[10,"get_active","","",433,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_state","","",433,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_active","","",433,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_state","","",433,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_activate","","",433,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_state_set","","",433,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_active_notify","","",433,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_state_notify","","",433,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"TextBufferExt","","",null,null],[10,"add_mark","","",434,{"inputs":[{"name":"self"},{"name":"textmark"},{"name":"textiter"}],"output":null}],[10,"add_selection_clipboard","","",434,{"inputs":[{"name":"self"},{"name":"clipboard"}],"output":null}],[10,"apply_tag","","",434,{"inputs":[{"name":"self"},{"name":"texttag"},{"name":"textiter"},{"name":"textiter"}],"output":null}],[10,"apply_tag_by_name","","",434,{"inputs":[{"name":"self"},{"name":"str"},{"name":"textiter"},{"name":"textiter"}],"output":null}],[10,"backspace","","",434,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"bool"},{"name":"bool"}],"output":{"name":"bool"}}],[10,"begin_user_action","","",434,{"inputs":[{"name":"self"}],"output":null}],[10,"copy_clipboard","","",434,{"inputs":[{"name":"self"},{"name":"clipboard"}],"output":null}],[10,"create_child_anchor","","",434,{"inputs":[{"name":"self"},{"name":"textiter"}],"output":{"name":"option"}}],[10,"create_mark","","",434,{"inputs":[{"name":"self"},{"name":"p"},{"name":"textiter"},{"name":"bool"}],"output":{"name":"option"}}],[10,"cut_clipboard","","",434,{"inputs":[{"name":"self"},{"name":"clipboard"},{"name":"bool"}],"output":null}],[10,"delete","","",434,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"textiter"}],"output":null}],[10,"delete_interactive","","",434,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"textiter"},{"name":"bool"}],"output":{"name":"bool"}}],[10,"delete_mark","","",434,{"inputs":[{"name":"self"},{"name":"textmark"}],"output":null}],[10,"delete_mark_by_name","","",434,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"delete_selection","","",434,{"inputs":[{"name":"self"},{"name":"bool"},{"name":"bool"}],"output":{"name":"bool"}}],[10,"deserialize","","",434,null],[10,"deserialize_get_can_create_tags","","",434,{"inputs":[{"name":"self"},{"name":"atom"}],"output":{"name":"bool"}}],[10,"deserialize_set_can_create_tags","","",434,{"inputs":[{"name":"self"},{"name":"atom"},{"name":"bool"}],"output":null}],[10,"end_user_action","","",434,{"inputs":[{"name":"self"}],"output":null}],[10,"get_bounds","","",434,null],[10,"get_char_count","","",434,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_copy_target_list","","",434,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_deserialize_formats","","",434,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_end_iter","","",434,{"inputs":[{"name":"self"}],"output":{"name":"textiter"}}],[10,"get_has_selection","","",434,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_insert","","",434,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_iter_at_child_anchor","","",434,{"inputs":[{"name":"self"},{"name":"textchildanchor"}],"output":{"name":"textiter"}}],[10,"get_iter_at_line","","",434,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"textiter"}}],[10,"get_iter_at_line_index","","",434,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"textiter"}}],[10,"get_iter_at_line_offset","","",434,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"textiter"}}],[10,"get_iter_at_mark","","",434,{"inputs":[{"name":"self"},{"name":"textmark"}],"output":{"name":"textiter"}}],[10,"get_iter_at_offset","","",434,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"textiter"}}],[10,"get_line_count","","",434,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_mark","","",434,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_modified","","",434,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_paste_target_list","","",434,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_selection_bound","","",434,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_selection_bounds","","",434,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_serialize_formats","","",434,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_slice","","",434,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"textiter"},{"name":"bool"}],"output":{"name":"option"}}],[10,"get_start_iter","","",434,{"inputs":[{"name":"self"}],"output":{"name":"textiter"}}],[10,"get_tag_table","","",434,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_text","","",434,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"textiter"},{"name":"bool"}],"output":{"name":"option"}}],[10,"insert","","",434,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"str"}],"output":null}],[10,"insert_at_cursor","","",434,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"insert_child_anchor","","",434,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"textchildanchor"}],"output":null}],[10,"insert_interactive","","",434,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"str"},{"name":"bool"}],"output":{"name":"bool"}}],[10,"insert_interactive_at_cursor","","",434,{"inputs":[{"name":"self"},{"name":"str"},{"name":"bool"}],"output":{"name":"bool"}}],[10,"insert_markup","","",434,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"str"}],"output":null}],[10,"insert_pixbuf","","",434,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"pixbuf"}],"output":null}],[10,"insert_range","","",434,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"textiter"},{"name":"textiter"}],"output":null}],[10,"insert_range_interactive","","",434,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"textiter"},{"name":"textiter"},{"name":"bool"}],"output":{"name":"bool"}}],[10,"move_mark","","",434,{"inputs":[{"name":"self"},{"name":"textmark"},{"name":"textiter"}],"output":null}],[10,"move_mark_by_name","","",434,{"inputs":[{"name":"self"},{"name":"str"},{"name":"textiter"}],"output":null}],[10,"paste_clipboard","","",434,{"inputs":[{"name":"self"},{"name":"clipboard"},{"name":"p"},{"name":"bool"}],"output":null}],[10,"place_cursor","","",434,{"inputs":[{"name":"self"},{"name":"textiter"}],"output":null}],[10,"register_deserialize_tagset","","",434,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"atom"}}],[10,"register_serialize_tagset","","",434,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"atom"}}],[10,"remove_all_tags","","",434,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"textiter"}],"output":null}],[10,"remove_selection_clipboard","","",434,{"inputs":[{"name":"self"},{"name":"clipboard"}],"output":null}],[10,"remove_tag","","",434,{"inputs":[{"name":"self"},{"name":"texttag"},{"name":"textiter"},{"name":"textiter"}],"output":null}],[10,"remove_tag_by_name","","",434,{"inputs":[{"name":"self"},{"name":"str"},{"name":"textiter"},{"name":"textiter"}],"output":null}],[10,"select_range","","",434,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"textiter"}],"output":null}],[10,"serialize","","",434,{"inputs":[{"name":"self"},{"name":"textbuffer"},{"name":"atom"},{"name":"textiter"},{"name":"textiter"}],"output":{"name":"vec"}}],[10,"set_modified","","",434,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_text","","",434,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"unregister_deserialize_format","","",434,{"inputs":[{"name":"self"},{"name":"atom"}],"output":null}],[10,"unregister_serialize_format","","",434,{"inputs":[{"name":"self"},{"name":"atom"}],"output":null}],[10,"get_property_cursor_position","","",434,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"connect_apply_tag","","",434,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_begin_user_action","","",434,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_changed","","",434,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_delete_range","","",434,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_end_user_action","","",434,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_insert_child_anchor","","",434,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_insert_pixbuf","","",434,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_mark_deleted","","",434,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_mark_set","","",434,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_modified_changed","","",434,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_paste_done","","",434,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_remove_tag","","",434,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_copy_target_list_notify","","",434,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_cursor_position_notify","","",434,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_has_selection_notify","","",434,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_paste_target_list_notify","","",434,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_tag_table_notify","","",434,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_text_notify","","",434,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"TextChildAnchorExt","","",null,null],[10,"get_deleted","","",435,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_widgets","","",435,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[8,"TextMarkExt","","",null,null],[10,"get_buffer","","",436,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_deleted","","",436,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_left_gravity","","",436,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_name","","",436,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_visible","","",436,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_visible","","",436,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_property_left_gravity_notify","","",436,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_name_notify","","",436,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"TextTagExt","","",null,null],[10,"changed","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"event","","",437,{"inputs":[{"name":"self"},{"name":"p"},{"name":"event"},{"name":"textiter"}],"output":{"name":"bool"}}],[10,"get_priority","","",437,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_priority","","",437,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_accumulative_margin","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_accumulative_margin","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_property_background","","",437,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_background_full_height","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_background_full_height","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_background_full_height_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_background_full_height_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_background_rgba","","",437,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_background_rgba","","",437,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_background_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_background_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_direction","","",437,{"inputs":[{"name":"self"}],"output":{"name":"textdirection"}}],[10,"set_property_direction","","",437,{"inputs":[{"name":"self"},{"name":"textdirection"}],"output":null}],[10,"get_property_editable","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_editable","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_editable_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_editable_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_fallback","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_fallback","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_fallback_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_fallback_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_family","","",437,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_family","","",437,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_family_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_family_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_font","","",437,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_font","","",437,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_font_features","","",437,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_font_features","","",437,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_font_features_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_font_features_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_property_foreground","","",437,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_foreground_rgba","","",437,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_foreground_rgba","","",437,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_foreground_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_foreground_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_indent","","",437,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_indent","","",437,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_indent_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_indent_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_invisible","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_invisible","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_invisible_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_invisible_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_justification","","",437,{"inputs":[{"name":"self"}],"output":{"name":"justification"}}],[10,"set_property_justification","","",437,{"inputs":[{"name":"self"},{"name":"justification"}],"output":null}],[10,"get_property_justification_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_justification_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_language","","",437,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_language","","",437,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_language_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_language_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_left_margin","","",437,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_left_margin","","",437,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_left_margin_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_left_margin_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_letter_spacing","","",437,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_letter_spacing","","",437,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_letter_spacing_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_letter_spacing_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_name","","",437,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_paragraph_background","","",437,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_paragraph_background_rgba","","",437,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_paragraph_background_rgba","","",437,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_paragraph_background_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_paragraph_background_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_pixels_above_lines","","",437,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_pixels_above_lines","","",437,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_pixels_above_lines_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_pixels_above_lines_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_pixels_below_lines","","",437,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_pixels_below_lines","","",437,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_pixels_below_lines_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_pixels_below_lines_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_pixels_inside_wrap","","",437,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_pixels_inside_wrap","","",437,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_pixels_inside_wrap_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_pixels_inside_wrap_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_right_margin","","",437,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_right_margin","","",437,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_right_margin_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_right_margin_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_rise","","",437,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_rise","","",437,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_rise_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_rise_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_scale","","",437,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"set_property_scale","","",437,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"get_property_scale_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_scale_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_size","","",437,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_size","","",437,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_size_points","","",437,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"set_property_size_points","","",437,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"get_property_size_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_size_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_stretch","","",437,{"inputs":[{"name":"self"}],"output":{"name":"stretch"}}],[10,"set_property_stretch","","",437,{"inputs":[{"name":"self"},{"name":"stretch"}],"output":null}],[10,"get_property_stretch_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_stretch_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_strikethrough","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_strikethrough","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_strikethrough_rgba","","",437,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_strikethrough_rgba","","",437,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_strikethrough_rgba_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_strikethrough_rgba_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_strikethrough_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_strikethrough_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_style","","",437,{"inputs":[{"name":"self"}],"output":{"name":"style"}}],[10,"set_property_style","","",437,{"inputs":[{"name":"self"},{"name":"style"}],"output":null}],[10,"get_property_style_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_style_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_tabs_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_tabs_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_underline","","",437,{"inputs":[{"name":"self"}],"output":{"name":"underline"}}],[10,"set_property_underline","","",437,{"inputs":[{"name":"self"},{"name":"underline"}],"output":null}],[10,"get_property_underline_rgba","","",437,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_underline_rgba","","",437,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_underline_rgba_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_underline_rgba_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_underline_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_underline_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_variant","","",437,{"inputs":[{"name":"self"}],"output":{"name":"variant"}}],[10,"set_property_variant","","",437,{"inputs":[{"name":"self"},{"name":"variant"}],"output":null}],[10,"get_property_variant_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_variant_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_weight","","",437,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_weight","","",437,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_weight_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_weight_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_wrap_mode","","",437,{"inputs":[{"name":"self"}],"output":{"name":"wrapmode"}}],[10,"set_property_wrap_mode","","",437,{"inputs":[{"name":"self"},{"name":"wrapmode"}],"output":null}],[10,"get_property_wrap_mode_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_wrap_mode_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_event","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_accumulative_margin_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_background_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_background_full_height_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_background_full_height_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_background_rgba_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_background_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_direction_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_editable_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_editable_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_fallback_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_fallback_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_family_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_family_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_font_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_font_features_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_font_features_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_foreground_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_foreground_rgba_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_foreground_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_indent_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_indent_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_invisible_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_invisible_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_justification_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_justification_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_language_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_language_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_left_margin_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_left_margin_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_letter_spacing_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_letter_spacing_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_name_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_paragraph_background_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_paragraph_background_rgba_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_paragraph_background_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pixels_above_lines_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pixels_above_lines_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pixels_below_lines_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pixels_below_lines_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pixels_inside_wrap_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pixels_inside_wrap_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_right_margin_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_right_margin_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_rise_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_rise_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_scale_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_scale_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_size_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_size_points_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_size_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_stretch_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_stretch_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_strikethrough_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_strikethrough_rgba_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_strikethrough_rgba_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_strikethrough_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_style_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_style_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_tabs_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_underline_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_underline_rgba_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_underline_rgba_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_underline_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_variant_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_variant_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_weight_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_weight_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_wrap_mode_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_wrap_mode_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"TextTagTableExt","","",null,null],[10,"add","","",438,{"inputs":[{"name":"self"},{"name":"texttag"}],"output":{"name":"bool"}}],[10,"get_size","","",438,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"lookup","","",438,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"remove","","",438,{"inputs":[{"name":"self"},{"name":"texttag"}],"output":null}],[10,"connect_tag_added","","",438,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_tag_changed","","",438,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_tag_removed","","",438,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"TextViewExt","","",null,null],[10,"add_child_at_anchor","","",439,{"inputs":[{"name":"self"},{"name":"p"},{"name":"textchildanchor"}],"output":null}],[10,"add_child_in_window","","",439,{"inputs":[{"name":"self"},{"name":"p"},{"name":"textwindowtype"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"backward_display_line","","",439,{"inputs":[{"name":"self"},{"name":"textiter"}],"output":{"name":"bool"}}],[10,"backward_display_line_start","","",439,{"inputs":[{"name":"self"},{"name":"textiter"}],"output":{"name":"bool"}}],[10,"buffer_to_window_coords","","",439,null],[10,"forward_display_line","","",439,{"inputs":[{"name":"self"},{"name":"textiter"}],"output":{"name":"bool"}}],[10,"forward_display_line_end","","",439,{"inputs":[{"name":"self"},{"name":"textiter"}],"output":{"name":"bool"}}],[10,"get_accepts_tab","","",439,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_border_window_size","","",439,{"inputs":[{"name":"self"},{"name":"textwindowtype"}],"output":{"name":"i32"}}],[10,"get_bottom_margin","","",439,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_buffer","","",439,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_cursor_locations","","",439,null],[10,"get_cursor_visible","","",439,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_default_attributes","","",439,{"inputs":[{"name":"self"}],"output":{"name":"textattributes"}}],[10,"get_editable","","",439,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_indent","","",439,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_input_hints","","",439,{"inputs":[{"name":"self"}],"output":{"name":"inputhints"}}],[10,"get_input_purpose","","",439,{"inputs":[{"name":"self"}],"output":{"name":"inputpurpose"}}],[10,"get_iter_at_location","","",439,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_iter_at_position","","",439,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_iter_location","","",439,{"inputs":[{"name":"self"},{"name":"textiter"}],"output":{"name":"rectangle"}}],[10,"get_justification","","",439,{"inputs":[{"name":"self"}],"output":{"name":"justification"}}],[10,"get_left_margin","","",439,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_line_at_y","","",439,null],[10,"get_line_yrange","","",439,null],[10,"get_monospace","","",439,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_overwrite","","",439,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_pixels_above_lines","","",439,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_pixels_below_lines","","",439,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_pixels_inside_wrap","","",439,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_right_margin","","",439,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_tabs","","",439,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_top_margin","","",439,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_visible_rect","","",439,{"inputs":[{"name":"self"}],"output":{"name":"rectangle"}}],[10,"get_window","","",439,{"inputs":[{"name":"self"},{"name":"textwindowtype"}],"output":{"name":"option"}}],[10,"get_window_type","","",439,{"inputs":[{"name":"self"},{"name":"window"}],"output":{"name":"textwindowtype"}}],[10,"get_wrap_mode","","",439,{"inputs":[{"name":"self"}],"output":{"name":"wrapmode"}}],[10,"im_context_filter_keypress","","",439,{"inputs":[{"name":"self"},{"name":"eventkey"}],"output":{"name":"bool"}}],[10,"move_child","","",439,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"move_mark_onscreen","","",439,{"inputs":[{"name":"self"},{"name":"textmark"}],"output":{"name":"bool"}}],[10,"move_visually","","",439,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"i32"}],"output":{"name":"bool"}}],[10,"place_cursor_onscreen","","",439,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"reset_cursor_blink","","",439,{"inputs":[{"name":"self"}],"output":null}],[10,"reset_im_context","","",439,{"inputs":[{"name":"self"}],"output":null}],[10,"scroll_mark_onscreen","","",439,{"inputs":[{"name":"self"},{"name":"textmark"}],"output":null}],[10,"scroll_to_iter","","",439,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"f64"},{"name":"bool"},{"name":"f64"},{"name":"f64"}],"output":{"name":"bool"}}],[10,"scroll_to_mark","","",439,{"inputs":[{"name":"self"},{"name":"textmark"},{"name":"f64"},{"name":"bool"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"set_accepts_tab","","",439,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_border_window_size","","",439,{"inputs":[{"name":"self"},{"name":"textwindowtype"},{"name":"i32"}],"output":null}],[10,"set_bottom_margin","","",439,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_buffer","","",439,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_cursor_visible","","",439,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_editable","","",439,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_indent","","",439,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_input_hints","","",439,{"inputs":[{"name":"self"},{"name":"inputhints"}],"output":null}],[10,"set_input_purpose","","",439,{"inputs":[{"name":"self"},{"name":"inputpurpose"}],"output":null}],[10,"set_justification","","",439,{"inputs":[{"name":"self"},{"name":"justification"}],"output":null}],[10,"set_left_margin","","",439,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_monospace","","",439,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_overwrite","","",439,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_pixels_above_lines","","",439,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_pixels_below_lines","","",439,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_pixels_inside_wrap","","",439,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_right_margin","","",439,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_tabs","","",439,{"inputs":[{"name":"self"},{"name":"tabarray"}],"output":null}],[10,"set_top_margin","","",439,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_wrap_mode","","",439,{"inputs":[{"name":"self"},{"name":"wrapmode"}],"output":null}],[10,"starts_display_line","","",439,{"inputs":[{"name":"self"},{"name":"textiter"}],"output":{"name":"bool"}}],[10,"window_to_buffer_coords","","",439,null],[10,"get_property_im_module","","",439,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_im_module","","",439,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_monospace","","",439,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_monospace","","",439,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_populate_all","","",439,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_populate_all","","",439,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_backspace","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_copy_clipboard","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_cut_clipboard","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_delete_from_cursor","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_extend_selection","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_insert_at_cursor","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_cursor","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_viewport","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_paste_clipboard","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_populate_popup","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_preedit_changed","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_select_all","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_set_anchor","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_toggle_cursor_visible","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_toggle_overwrite","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_accepts_tab_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_bottom_margin_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_buffer_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_cursor_visible_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_editable_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_im_module_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_indent_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_input_hints_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_input_purpose_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_justification_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_left_margin_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_monospace_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_overwrite_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pixels_above_lines_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pixels_below_lines_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pixels_inside_wrap_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_populate_all_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_right_margin_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_tabs_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_top_margin_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_wrap_mode_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ToggleButtonExt","","Trait containing all `ToggleButton` methods.",null,null],[10,"get_active","","Queries a `ToggleButton` and returns its current state. Returns `true` if the toggle button is pressed in and `false` if it is raised.",440,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_inconsistent","","Gets the value set by `ToggleButtonExt::set_inconsistent`.",440,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_mode","","Retrieves whether the button is displayed as a separate indicator and label. See `ToggleButtonExt::set_mode`.",440,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_active","","Sets the status of the toggle button. Set to `true` if you want the `ToggleButton` to be “pressed in”, and `false` to raise it. This action causes the `ToggleButton::toggled` signal and the `Button::clicked` signal to be emitted. ## `is_active` `true` or `false`.",440,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_inconsistent","","If the user has selected a range of elements (such as some text or spreadsheet cells) that are affected by a toggle button, and the current values in that range are inconsistent, you may want to display the toggle in an “in between” state. This function turns on “in between” display. Normally you would turn off the inconsistent state again if the user toggles the toggle button. This has to be done manually, `ToggleButtonExt::set_inconsistent` only affects visual appearance, it doesn’t affect the semantics of the button. ## `setting` `true` if state is inconsistent",440,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_mode","","Sets whether the button is displayed as a separate indicator and label. You can call this function on a checkbutton or a radiobutton with `draw_indicator` = `false` to make the button look like a normal button",440,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"toggled","","Emits the `ToggleButton::toggled` signal on the `ToggleButton`. There is no good reason for an application ever to call this function.",440,{"inputs":[{"name":"self"}],"output":null}],[10,"get_property_draw_indicator","","",440,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_draw_indicator","","",440,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_toggled","","",440,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_active_notify","","",440,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_draw_indicator_notify","","",440,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_inconsistent_notify","","",440,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ToggleToolButtonExt","","",null,null],[10,"get_active","","",441,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_active","","",441,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_toggled","","",441,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_active_notify","","",441,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ToolButtonExt","","Trait containing all `ToolButton` methods.",null,null],[10,"get_icon_name","","Returns the name of the themed icon for the tool button, see `ToolButtonExt::set_icon_name`.",442,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_icon_widget","","Return the widget used as icon widget on `self`. See `ToolButtonExt::set_icon_widget`.",442,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_label","","Returns the label used by the tool button, or `None` if the tool button doesn’t have a label. or uses a the label from a stock item. The returned string is owned by GTK+, and must not be modified or freed.",442,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_label_widget","","Returns the widget used as label on `self`. See `ToolButtonExt::set_label_widget`.",442,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_stock_id","","Returns the name of the stock item. See `ToolButtonExt::set_stock_id`. The returned string is owned by GTK+ and must not be freed or modifed.",442,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_use_underline","","Returns whether underscores in the label property are used as mnemonics on menu items on the overflow menu. See `ToolButtonExt::set_use_underline`.",442,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_icon_name","","Sets the icon for the tool button from a named themed icon. See the docs for `IconTheme` for more details. The “icon_name” property only has an effect if not overridden by non-`None` “label”, “icon_widget” and “stock_id” properties. ## `icon_name` the name of the themed icon",442,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_icon_widget","","Sets `icon` as the widget used as icon on `self`. If `icon_widget` is `None` the icon is determined by the “stock_id” property. If the “stock_id” property is also `None`, `self` will not have an icon. ## `icon_widget` the widget used as icon, or `None`",442,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_label","","Sets `label` as the label used for the tool button. The “label” property only has an effect if not overridden by a non-`None` “label_widget” property. If both the “label_widget” and “label” properties are `None`, the label is determined by the “stock_id” property. If the “stock_id” property is also `None`, `self` will not have a label. ## `label` a string that will be used as label, or `None`.",442,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_label_widget","","Sets `label_widget` as the widget that will be used as the label for `self`. If `label_widget` is `None` the “label” property is used as label. If “label” is also `None`, the label in the stock item determined by the “stock_id” property is used as label. If “stock_id” is also `None`, `self` does not have a label. ## `label_widget` the widget used as label, or `None`",442,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_stock_id","","Sets the name of the stock item. See `ToolButton::new_from_stock`. The stock_id property only has an effect if not overridden by non-`None` “label” and “icon_widget” properties.",442,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_use_underline","","If set, an underline in the label property indicates that the next character should be used for the mnemonic accelerator key in the overflow menu. For example, if the label property is “_Open” and `use_underline` is `true`, the label on the tool button will be “Open” and the item on the overflow menu will have an underlined “O”.",442,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_clicked","","",442,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_icon_name_notify","","",442,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_icon_widget_notify","","",442,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_label_notify","","",442,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_label_widget_notify","","",442,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_stock_id_notify","","",442,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_underline_notify","","",442,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ToolItemExt","","Trait containing all `ToolItem` methods.",null,null],[10,"get_ellipsize_mode","","Returns the ellipsize mode used for `self`. Custom subclasses of `ToolItem` should call this function to find out how text should be ellipsized.",443,{"inputs":[{"name":"self"}],"output":{"name":"ellipsizemode"}}],[10,"get_expand","","Returns whether `self` is allocated extra space. See `ToolItemExt::set_expand`.",443,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_homogeneous","","Returns whether `self` is the same size as other homogeneous items. See `ToolItemExt::set_homogeneous`.",443,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_icon_size","","Returns the icon size used for `self`. Custom subclasses of `ToolItem` should call this function to find out what size icons they should use.",443,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_is_important","","Returns whether `self` is considered important. See `ToolItemExt::set_is_important`",443,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_orientation","","Returns the orientation used for `self`. Custom subclasses of `ToolItem` should call this function to find out what size icons they should use.",443,{"inputs":[{"name":"self"}],"output":{"name":"orientation"}}],[10,"get_proxy_menu_item","","If `menu_item_id` matches the string passed to `ToolItemExt::set_proxy_menu_item` return the corresponding `MenuItem`.",443,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_relief_style","","Returns the relief style of `self`. See `ButtonExt::set_relief`. Custom subclasses of `ToolItem` should call this function in the handler of the `ToolItem::toolbar_reconfigured` signal to find out the relief style of buttons.",443,{"inputs":[{"name":"self"}],"output":{"name":"reliefstyle"}}],[10,"get_text_alignment","","Returns the text alignment used for `self`. Custom subclasses of `ToolItem` should call this function to find out how text should be aligned.",443,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"get_text_orientation","","Returns the text orientation used for `self`. Custom subclasses of `ToolItem` should call this function to find out how text should be orientated.",443,{"inputs":[{"name":"self"}],"output":{"name":"orientation"}}],[10,"get_text_size_group","","Returns the size group used for labels in `self`. Custom subclasses of `ToolItem` should call this function and use the size group for labels.",443,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_toolbar_style","","Returns the toolbar style used for `self`. Custom subclasses of `ToolItem` should call this function in the handler of the `ToolItem`::toolbar_reconfigured signal to find out in what style the toolbar is displayed and change themselves accordingly",443,{"inputs":[{"name":"self"}],"output":{"name":"toolbarstyle"}}],[10,"get_use_drag_window","","Returns whether `self` has a drag window. See `ToolItemExt::set_use_drag_window`.",443,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_visible_horizontal","","Returns whether the `self` is visible on toolbars that are docked horizontally.",443,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_visible_vertical","","Returns whether `self` is visible when the toolbar is docked vertically. See `ToolItemExt::set_visible_vertical`.",443,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"rebuild_menu","","Calling this function signals to the toolbar that the overflow menu item for `self` has changed. If the overflow menu is visible when this function it called, the menu will be rebuilt.",443,{"inputs":[{"name":"self"}],"output":null}],[10,"retrieve_proxy_menu_item","","Returns the `MenuItem` that was last set by `ToolItemExt::set_proxy_menu_item`, ie. the `MenuItem` that is going to appear in the overflow menu.",443,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_expand","","Sets whether `self` is allocated extra space when there is more room on the toolbar then needed for the items. The effect is that the item gets bigger when the toolbar gets bigger and smaller when the toolbar gets smaller. ## `expand` Whether `self` is allocated extra space",443,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_homogeneous","","Sets whether `self` is to be allocated the same size as other homogeneous items. The effect is that all homogeneous items will have the same width as the widest of the items. ## `homogeneous` whether `self` is the same size as other homogeneous items",443,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_is_important","","Sets whether `self` should be considered important. The `ToolButton` class uses this property to determine whether to show or hide its label when the toolbar style is `ToolbarStyle::BothHoriz`. The result is that only tool buttons with the “is_important” property set have labels, an effect known as “priority text” ## `is_important` whether the tool item should be considered important",443,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_proxy_menu_item","","Sets the `MenuItem` used in the toolbar overflow menu. The `menu_item_id` is used to identify the caller of this function and should also be used with `ToolItemExt::get_proxy_menu_item`. ## `menu_item_id` a string used to identify `menu_item` ## `menu_item` a `MenuItem` to be used in the overflow menu",443,{"inputs":[{"name":"self"},{"name":"str"},{"name":"p"}],"output":null}],[10,"set_use_drag_window","","Sets whether `self` has a drag window. When `true` the toolitem can be used as a drag source through `Widget::drag_source_set`. When `self` has a drag window it will intercept all events, even those that would otherwise be sent to a child of `self`. ## `use_drag_window` Whether `self` has a drag window.",443,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_visible_horizontal","","Sets whether `self` is visible when the toolbar is docked horizontally. ## `visible_horizontal` Whether `self` is visible when in horizontal mode",443,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_visible_vertical","","Sets whether `self` is visible when the toolbar is docked vertically. Some tool items, such as text entries, are too wide to be useful on a vertically docked toolbar. If `visible_vertical` is `false` `self` will not appear on toolbars that are docked vertically. ## `visible_vertical` whether `self` is visible when the toolbar is in vertical mode",443,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"toolbar_reconfigured","","Emits the signal `ToolItem::toolbar_reconfigured` on `self`. `Toolbar` and other `ToolShell` implementations use this function to notify children, when some aspect of their configuration changes.",443,{"inputs":[{"name":"self"}],"output":null}],[10,"connect_create_menu_proxy","","",443,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_toolbar_reconfigured","","",443,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_is_important_notify","","",443,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_visible_horizontal_notify","","",443,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_visible_vertical_notify","","",443,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ToolItemGroupExt","","",null,null],[10,"get_collapsed","","",444,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_drop_item","","",444,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_ellipsize","","",444,{"inputs":[{"name":"self"}],"output":{"name":"ellipsizemode"}}],[10,"get_header_relief","","",444,{"inputs":[{"name":"self"}],"output":{"name":"reliefstyle"}}],[10,"get_item_position","","",444,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"i32"}}],[10,"get_label","","",444,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_label_widget","","",444,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_n_items","","",444,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_nth_item","","",444,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[10,"insert","","",444,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":null}],[10,"set_collapsed","","",444,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_ellipsize","","",444,{"inputs":[{"name":"self"},{"name":"ellipsizemode"}],"output":null}],[10,"set_header_relief","","",444,{"inputs":[{"name":"self"},{"name":"reliefstyle"}],"output":null}],[10,"set_item_position","","",444,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":null}],[10,"set_label","","",444,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_label_widget","","",444,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"get_item_expand","","",444,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[10,"set_item_expand","","",444,{"inputs":[{"name":"self"},{"name":"t"},{"name":"bool"}],"output":null}],[10,"get_item_fill","","",444,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[10,"set_item_fill","","",444,{"inputs":[{"name":"self"},{"name":"t"},{"name":"bool"}],"output":null}],[10,"get_item_homogeneous","","",444,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[10,"set_item_homogeneous","","",444,{"inputs":[{"name":"self"},{"name":"t"},{"name":"bool"}],"output":null}],[10,"get_item_new_row","","",444,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[10,"set_item_new_row","","",444,{"inputs":[{"name":"self"},{"name":"t"},{"name":"bool"}],"output":null}],[10,"connect_property_collapsed_notify","","",444,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_ellipsize_notify","","",444,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_header_relief_notify","","",444,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_label_notify","","",444,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_label_widget_notify","","",444,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ToolPaletteExt","","",null,null],[10,"add_drag_dest","","",445,{"inputs":[{"name":"self"},{"name":"p"},{"name":"destdefaults"},{"name":"toolpalettedragtargets"},{"name":"dragaction"}],"output":null}],[10,"get_drag_item","","",445,{"inputs":[{"name":"self"},{"name":"selectiondata"}],"output":{"name":"option"}}],[10,"get_drop_group","","",445,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_drop_item","","",445,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_exclusive","","",445,{"inputs":[{"name":"self"},{"name":"toolitemgroup"}],"output":{"name":"bool"}}],[10,"get_expand","","",445,{"inputs":[{"name":"self"},{"name":"toolitemgroup"}],"output":{"name":"bool"}}],[10,"get_group_position","","",445,{"inputs":[{"name":"self"},{"name":"toolitemgroup"}],"output":{"name":"i32"}}],[10,"get_icon_size","","",445,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_style","","",445,{"inputs":[{"name":"self"}],"output":{"name":"toolbarstyle"}}],[10,"set_drag_source","","",445,{"inputs":[{"name":"self"},{"name":"toolpalettedragtargets"}],"output":null}],[10,"set_exclusive","","",445,{"inputs":[{"name":"self"},{"name":"toolitemgroup"},{"name":"bool"}],"output":null}],[10,"set_expand","","",445,{"inputs":[{"name":"self"},{"name":"toolitemgroup"},{"name":"bool"}],"output":null}],[10,"set_group_position","","",445,{"inputs":[{"name":"self"},{"name":"toolitemgroup"},{"name":"i32"}],"output":null}],[10,"set_icon_size","","",445,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_style","","",445,{"inputs":[{"name":"self"},{"name":"toolbarstyle"}],"output":null}],[10,"unset_icon_size","","",445,{"inputs":[{"name":"self"}],"output":null}],[10,"unset_style","","",445,{"inputs":[{"name":"self"}],"output":null}],[10,"get_property_icon_size_set","","",445,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_icon_size_set","","",445,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_toolbar_style","","",445,{"inputs":[{"name":"self"}],"output":{"name":"toolbarstyle"}}],[10,"set_property_toolbar_style","","",445,{"inputs":[{"name":"self"},{"name":"toolbarstyle"}],"output":null}],[10,"connect_property_icon_size_notify","","",445,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_icon_size_set_notify","","",445,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_toolbar_style_notify","","",445,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ToolShellExt","","Trait containing all `ToolShell` methods.",null,null],[10,"get_ellipsize_mode","","Retrieves the current ellipsize mode for the tool shell. Tool items must not call this function directly, but rely on `ToolItemExt::get_ellipsize_mode` instead.",446,{"inputs":[{"name":"self"}],"output":{"name":"ellipsizemode"}}],[10,"get_icon_size","","Retrieves the icon size for the tool shell. Tool items must not call this function directly, but rely on `ToolItemExt::get_icon_size` instead.",446,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_orientation","","Retrieves the current orientation for the tool shell. Tool items must not call this function directly, but rely on `ToolItemExt::get_orientation` instead.",446,{"inputs":[{"name":"self"}],"output":{"name":"orientation"}}],[10,"get_relief_style","","Returns the relief style of buttons on `self`. Tool items must not call this function directly, but rely on `ToolItemExt::get_relief_style` instead.",446,{"inputs":[{"name":"self"}],"output":{"name":"reliefstyle"}}],[10,"get_style","","Retrieves whether the tool shell has text, icons, or both. Tool items must not call this function directly, but rely on `ToolItemExt::get_toolbar_style` instead.",446,{"inputs":[{"name":"self"}],"output":{"name":"toolbarstyle"}}],[10,"get_text_alignment","","Retrieves the current text alignment for the tool shell. Tool items must not call this function directly, but rely on `ToolItemExt::get_text_alignment` instead.",446,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"get_text_orientation","","Retrieves the current text orientation for the tool shell. Tool items must not call this function directly, but rely on `ToolItemExt::get_text_orientation` instead.",446,{"inputs":[{"name":"self"}],"output":{"name":"orientation"}}],[10,"get_text_size_group","","Retrieves the current text size group for the tool shell. Tool items must not call this function directly, but rely on `ToolItemExt::get_text_size_group` instead.",446,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"rebuild_menu","","Calling this function signals the tool shell that the overflow menu item for tool items have changed. If there is an overflow menu and if it is visible when this function it called, the menu will be rebuilt.",446,{"inputs":[{"name":"self"}],"output":null}],[8,"ToolbarExt","","",null,null],[10,"get_drop_index","","",447,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[10,"get_icon_size","","",447,{"inputs":[{"name":"self"}],"output":{"name":"iconsize"}}],[10,"get_item_index","","",447,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"i32"}}],[10,"get_n_items","","",447,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_nth_item","","",447,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_show_arrow","","",447,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"insert","","",447,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":null}],[10,"set_drop_highlight_item","","",447,{"inputs":[{"name":"self"},{"name":"q"},{"name":"i32"}],"output":null}],[10,"set_icon_size","","",447,{"inputs":[{"name":"self"},{"name":"iconsize"}],"output":null}],[10,"set_show_arrow","","",447,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_style","","",447,{"inputs":[{"name":"self"},{"name":"toolbarstyle"}],"output":null}],[10,"unset_icon_size","","",447,{"inputs":[{"name":"self"}],"output":null}],[10,"unset_style","","",447,{"inputs":[{"name":"self"}],"output":null}],[10,"get_property_icon_size_set","","",447,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_icon_size_set","","",447,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_toolbar_style","","",447,{"inputs":[{"name":"self"}],"output":{"name":"toolbarstyle"}}],[10,"set_property_toolbar_style","","",447,{"inputs":[{"name":"self"},{"name":"toolbarstyle"}],"output":null}],[10,"get_item_expand","","",447,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[10,"set_item_expand","","",447,{"inputs":[{"name":"self"},{"name":"t"},{"name":"bool"}],"output":null}],[10,"get_item_homogeneous","","",447,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[10,"set_item_homogeneous","","",447,{"inputs":[{"name":"self"},{"name":"t"},{"name":"bool"}],"output":null}],[10,"connect_focus_home_or_end","","",447,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_orientation_changed","","",447,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_popup_context_menu","","",447,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_style_changed","","",447,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_icon_size_notify","","",447,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_icon_size_set_notify","","",447,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_arrow_notify","","",447,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_toolbar_style_notify","","",447,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"TooltipExt","","",null,null],[10,"set_custom","","",448,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_icon","","",448,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_icon_from_gicon","","",448,{"inputs":[{"name":"self"},{"name":"q"},{"name":"i32"}],"output":null}],[10,"set_icon_from_icon_name","","",448,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":null}],[10,"set_icon_from_stock","","",448,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":null}],[10,"set_markup","","",448,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_text","","",448,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_tip_area","","",448,{"inputs":[{"name":"self"},{"name":"rectangle"}],"output":null}],[8,"TreeModelExt","","Trait containing all `TreeModel` methods.",null,null],[10,"get_column_type","","Returns the type of the column. ## `index_` the column index",449,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"type"}}],[10,"get_flags","","Returns a set of flags supported by this interface.",449,{"inputs":[{"name":"self"}],"output":{"name":"treemodelflags"}}],[10,"get_iter","","Sets `iter` to a valid iterator pointing to `path`. If `path` does not exist, `iter` is set to an invalid iterator and `false` is returned. ## `iter` the uninitialized `TreeIter`-struct ## `path` the `TreePath`-struct",449,{"inputs":[{"name":"self"},{"name":"treepath"}],"output":{"name":"option"}}],[10,"get_iter_first","","Initializes `iter` with the first iterator in the tree (the one at the path \"0\") and returns `true`. Returns `false` if the tree is empty. ## `iter` the uninitialized `TreeIter`-struct",449,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_iter_from_string","","Sets `iter` to a valid iterator pointing to `path_string`, if it exists. Otherwise, `iter` is left invalid and `false` is returned. ## `iter` an uninitialized `TreeIter`-struct ## `path_string` a string representation of a `TreePath`-struct",449,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_n_columns","","Returns the number of columns supported by `self`.",449,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_path","","Returns a newly-created `TreePath`-struct referenced by `iter`.",449,{"inputs":[{"name":"self"},{"name":"treeiter"}],"output":{"name":"option"}}],[10,"get_string_from_iter","","Generates a string representation of the iter.",449,{"inputs":[{"name":"self"},{"name":"treeiter"}],"output":{"name":"option"}}],[10,"get_value","","Initializes and sets `value` to that at `column`.",449,{"inputs":[{"name":"self"},{"name":"treeiter"},{"name":"i32"}],"output":{"name":"value"}}],[10,"iter_children","","Sets `iter` to point to the first child of `parent`.",449,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[10,"iter_has_child","","Returns `true` if `iter` has children, `false` otherwise. ## `iter` the `TreeIter`-struct to test for children",449,{"inputs":[{"name":"self"},{"name":"treeiter"}],"output":{"name":"bool"}}],[10,"iter_n_children","","Returns the number of children that `iter` has.",449,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"i32"}}],[10,"iter_next","","Sets `iter` to point to the node following it at the current level.",449,{"inputs":[{"name":"self"},{"name":"treeiter"}],"output":{"name":"bool"}}],[10,"iter_nth_child","","Sets `iter` to be the child of `parent`, using the given index.",449,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":{"name":"option"}}],[10,"iter_parent","","Sets `iter` to be the parent of `child`.",449,{"inputs":[{"name":"self"},{"name":"treeiter"}],"output":{"name":"option"}}],[10,"iter_previous","","Sets `iter` to point to the previous node at the current level.",449,{"inputs":[{"name":"self"},{"name":"treeiter"}],"output":{"name":"bool"}}],[10,"row_changed","","Emits the `TreeModel::row-changed` signal on `self`. ## `path` a `TreePath`-struct pointing to the changed row ## `iter` a valid `TreeIter`-struct pointing to the changed row",449,{"inputs":[{"name":"self"},{"name":"treepath"},{"name":"treeiter"}],"output":null}],[10,"row_deleted","","Emits the `TreeModel::row-deleted` signal on `self`.",449,{"inputs":[{"name":"self"},{"name":"treepath"}],"output":null}],[10,"row_has_child_toggled","","Emits the `TreeModel::row-has-child-toggled` signal on `self`. This should be called by models after the child state of a node changes. ## `path` a `TreePath`-struct pointing to the changed row ## `iter` a valid `TreeIter`-struct pointing to the changed row",449,{"inputs":[{"name":"self"},{"name":"treepath"},{"name":"treeiter"}],"output":null}],[10,"row_inserted","","Emits the `TreeModel::row-inserted` signal on `self`. ## `path` a `TreePath`-struct pointing to the inserted row ## `iter` a valid `TreeIter`-struct pointing to the inserted row",449,{"inputs":[{"name":"self"},{"name":"treepath"},{"name":"treeiter"}],"output":null}],[10,"rows_reordered_with_length","","Emits the `TreeModel::rows-reordered` signal on `self`.",449,null],[10,"sort_new_with_model","","Creates a new `TreeModel`, with `self` as the child model.",449,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_row_changed","","",449,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_row_deleted","","",449,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_row_has_child_toggled","","",449,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_row_inserted","","",449,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"TreeModelFilterExt","","",null,null],[10,"clear_cache","","",450,{"inputs":[{"name":"self"}],"output":null}],[10,"convert_child_iter_to_iter","","",450,{"inputs":[{"name":"self"},{"name":"treeiter"}],"output":{"name":"option"}}],[10,"convert_child_path_to_path","","",450,{"inputs":[{"name":"self"},{"name":"treepath"}],"output":{"name":"option"}}],[10,"convert_iter_to_child_iter","","",450,{"inputs":[{"name":"self"},{"name":"treeiter"}],"output":{"name":"treeiter"}}],[10,"convert_path_to_child_path","","",450,{"inputs":[{"name":"self"},{"name":"treepath"}],"output":{"name":"option"}}],[10,"get_model","","",450,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"refilter","","",450,{"inputs":[{"name":"self"}],"output":null}],[10,"set_visible_column","","",450,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_child_model","","",450,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_property_child_model_notify","","",450,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"TreeSelectionExt","","",null,null],[10,"count_selected_rows","","",451,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_mode","","",451,{"inputs":[{"name":"self"}],"output":{"name":"selectionmode"}}],[10,"get_selected","","",451,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_selected_rows","","",451,null],[10,"get_tree_view","","",451,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"iter_is_selected","","",451,{"inputs":[{"name":"self"},{"name":"treeiter"}],"output":{"name":"bool"}}],[10,"path_is_selected","","",451,{"inputs":[{"name":"self"},{"name":"treepath"}],"output":{"name":"bool"}}],[10,"select_all","","",451,{"inputs":[{"name":"self"}],"output":null}],[10,"select_iter","","",451,{"inputs":[{"name":"self"},{"name":"treeiter"}],"output":null}],[10,"select_path","","",451,{"inputs":[{"name":"self"},{"name":"treepath"}],"output":null}],[10,"select_range","","",451,{"inputs":[{"name":"self"},{"name":"treepath"},{"name":"treepath"}],"output":null}],[10,"set_mode","","",451,{"inputs":[{"name":"self"},{"name":"selectionmode"}],"output":null}],[10,"unselect_all","","",451,{"inputs":[{"name":"self"}],"output":null}],[10,"unselect_iter","","",451,{"inputs":[{"name":"self"},{"name":"treeiter"}],"output":null}],[10,"unselect_path","","",451,{"inputs":[{"name":"self"},{"name":"treepath"}],"output":null}],[10,"unselect_range","","",451,{"inputs":[{"name":"self"},{"name":"treepath"},{"name":"treepath"}],"output":null}],[10,"connect_changed","","",451,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_mode_notify","","",451,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"TreeSortableExt","","Trait containing all `TreeSortable` methods.",null,null],[10,"has_default_sort_func","","Returns `true` if the model has a default sort function. This is used primarily by `GtkTreeViewColumns` in order to determine if a model can go back to the default state, or not.",452,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"sort_column_changed","","Emits a `TreeSortable::sort-column-changed` signal on `self`.",452,{"inputs":[{"name":"self"}],"output":null}],[10,"connect_sort_column_changed","","",452,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"TreeStoreExt","","",null,null],[10,"append","","",453,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"treeiter"}}],[10,"clear","","",453,{"inputs":[{"name":"self"}],"output":null}],[10,"insert","","",453,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":{"name":"treeiter"}}],[10,"insert_after","","",453,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":{"name":"treeiter"}}],[10,"insert_before","","",453,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":{"name":"treeiter"}}],[10,"is_ancestor","","",453,{"inputs":[{"name":"self"},{"name":"treeiter"},{"name":"treeiter"}],"output":{"name":"bool"}}],[10,"iter_depth","","",453,{"inputs":[{"name":"self"},{"name":"treeiter"}],"output":{"name":"i32"}}],[10,"iter_is_valid","","",453,{"inputs":[{"name":"self"},{"name":"treeiter"}],"output":{"name":"bool"}}],[10,"move_after","","",453,{"inputs":[{"name":"self"},{"name":"treeiter"},{"name":"p"}],"output":null}],[10,"move_before","","",453,{"inputs":[{"name":"self"},{"name":"treeiter"},{"name":"p"}],"output":null}],[10,"prepend","","",453,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"treeiter"}}],[10,"remove","","",453,{"inputs":[{"name":"self"},{"name":"treeiter"}],"output":{"name":"bool"}}],[10,"swap","","",453,{"inputs":[{"name":"self"},{"name":"treeiter"},{"name":"treeiter"}],"output":null}],[8,"TreeViewExt","","",null,null],[10,"append_column","","",454,{"inputs":[{"name":"self"},{"name":"treeviewcolumn"}],"output":{"name":"i32"}}],[10,"collapse_all","","",454,{"inputs":[{"name":"self"}],"output":null}],[10,"collapse_row","","",454,{"inputs":[{"name":"self"},{"name":"treepath"}],"output":{"name":"bool"}}],[10,"columns_autosize","","",454,{"inputs":[{"name":"self"}],"output":null}],[10,"convert_bin_window_to_tree_coords","","",454,null],[10,"convert_bin_window_to_widget_coords","","",454,null],[10,"convert_tree_to_bin_window_coords","","",454,null],[10,"convert_tree_to_widget_coords","","",454,null],[10,"convert_widget_to_bin_window_coords","","",454,null],[10,"convert_widget_to_tree_coords","","",454,null],[10,"create_row_drag_icon","","",454,{"inputs":[{"name":"self"},{"name":"treepath"}],"output":{"name":"option"}}],[10,"expand_all","","",454,{"inputs":[{"name":"self"}],"output":null}],[10,"expand_row","","",454,{"inputs":[{"name":"self"},{"name":"treepath"},{"name":"bool"}],"output":{"name":"bool"}}],[10,"expand_to_path","","",454,{"inputs":[{"name":"self"},{"name":"treepath"}],"output":null}],[10,"get_activate_on_single_click","","",454,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_background_area","","",454,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":{"name":"rectangle"}}],[10,"get_bin_window","","",454,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_cell_area","","",454,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":{"name":"rectangle"}}],[10,"get_column","","",454,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_columns","","",454,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_cursor","","",454,null],[10,"get_dest_row_at_pos","","",454,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_drag_dest_row","","",454,null],[10,"get_enable_search","","",454,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_enable_tree_lines","","",454,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_expander_column","","",454,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_fixed_height_mode","","",454,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_grid_lines","","",454,{"inputs":[{"name":"self"}],"output":{"name":"treeviewgridlines"}}],[10,"get_headers_clickable","","",454,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_headers_visible","","",454,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_hover_expand","","",454,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_hover_selection","","",454,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_level_indentation","","",454,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_model","","",454,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_n_columns","","",454,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_path_at_pos","","",454,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_reorderable","","",454,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_rubber_banding","","",454,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_rules_hint","","",454,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_search_column","","",454,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_search_entry","","",454,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_selection","","",454,{"inputs":[{"name":"self"}],"output":{"name":"treeselection"}}],[10,"get_show_expanders","","",454,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_tooltip_column","","",454,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_tooltip_context","","",454,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"bool"}],"output":{"name":"option"}}],[10,"get_visible_range","","",454,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_visible_rect","","",454,{"inputs":[{"name":"self"}],"output":{"name":"rectangle"}}],[10,"insert_column","","",454,{"inputs":[{"name":"self"},{"name":"treeviewcolumn"},{"name":"i32"}],"output":{"name":"i32"}}],[10,"is_blank_at_pos","","",454,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"is_rubber_banding_active","","",454,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"move_column_after","","",454,{"inputs":[{"name":"self"},{"name":"treeviewcolumn"},{"name":"p"}],"output":null}],[10,"remove_column","","",454,{"inputs":[{"name":"self"},{"name":"treeviewcolumn"}],"output":{"name":"i32"}}],[10,"row_activated","","",454,{"inputs":[{"name":"self"},{"name":"treepath"},{"name":"treeviewcolumn"}],"output":null}],[10,"row_expanded","","",454,{"inputs":[{"name":"self"},{"name":"treepath"}],"output":{"name":"bool"}}],[10,"scroll_to_cell","","",454,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"},{"name":"bool"},{"name":"f32"},{"name":"f32"}],"output":null}],[10,"scroll_to_point","","",454,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_activate_on_single_click","","",454,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_cursor","","",454,{"inputs":[{"name":"self"},{"name":"treepath"},{"name":"p"},{"name":"bool"}],"output":null}],[10,"set_cursor_on_cell","","",454,{"inputs":[{"name":"self"},{"name":"treepath"},{"name":"p"},{"name":"r"},{"name":"bool"}],"output":null}],[10,"set_drag_dest_row","","",454,{"inputs":[{"name":"self"},{"name":"p"},{"name":"treeviewdropposition"}],"output":null}],[10,"set_enable_search","","",454,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_enable_tree_lines","","",454,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_expander_column","","",454,{"inputs":[{"name":"self"},{"name":"treeviewcolumn"}],"output":null}],[10,"set_fixed_height_mode","","",454,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_grid_lines","","",454,{"inputs":[{"name":"self"},{"name":"treeviewgridlines"}],"output":null}],[10,"set_headers_clickable","","",454,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_headers_visible","","",454,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_hover_expand","","",454,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_hover_selection","","",454,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_level_indentation","","",454,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_model","","",454,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_reorderable","","",454,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_rubber_banding","","",454,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_rules_hint","","",454,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_search_column","","",454,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_search_entry","","",454,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_show_expanders","","",454,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_tooltip_cell","","",454,{"inputs":[{"name":"self"},{"name":"tooltip"},{"name":"p"},{"name":"q"},{"name":"s"}],"output":null}],[10,"set_tooltip_column","","",454,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_tooltip_row","","",454,{"inputs":[{"name":"self"},{"name":"tooltip"},{"name":"treepath"}],"output":null}],[10,"unset_rows_drag_dest","","",454,{"inputs":[{"name":"self"}],"output":null}],[10,"unset_rows_drag_source","","",454,{"inputs":[{"name":"self"}],"output":null}],[10,"get_property_enable_grid_lines","","",454,{"inputs":[{"name":"self"}],"output":{"name":"treeviewgridlines"}}],[10,"set_property_enable_grid_lines","","",454,{"inputs":[{"name":"self"},{"name":"treeviewgridlines"}],"output":null}],[10,"set_property_ubuntu_almost_fixed_height_mode","","",454,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_columns_changed","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_cursor_changed","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_expand_collapse_cursor_row","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_cursor","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_row_activated","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_row_collapsed","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_row_expanded","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_select_all","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_select_cursor_parent","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_select_cursor_row","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_start_interactive_search","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_test_collapse_row","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_test_expand_row","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_toggle_cursor_row","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_unselect_all","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_activate_on_single_click_notify","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_enable_grid_lines_notify","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_enable_search_notify","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_enable_tree_lines_notify","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_expander_column_notify","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_fixed_height_mode_notify","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_headers_clickable_notify","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_headers_visible_notify","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_hover_expand_notify","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_hover_selection_notify","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_level_indentation_notify","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_model_notify","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_reorderable_notify","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_rubber_banding_notify","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_rules_hint_notify","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_search_column_notify","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_expanders_notify","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_tooltip_column_notify","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_ubuntu_almost_fixed_height_mode_notify","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"TreeViewColumnExt","","",null,null],[10,"cell_get_position","","",455,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[10,"cell_get_size","","",455,null],[10,"cell_is_visible","","",455,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"cell_set_cell_data","","",455,{"inputs":[{"name":"self"},{"name":"p"},{"name":"treeiter"},{"name":"bool"},{"name":"bool"}],"output":null}],[10,"clicked","","",455,{"inputs":[{"name":"self"}],"output":null}],[10,"focus_cell","","",455,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"get_alignment","","",455,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"get_button","","",455,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_clickable","","",455,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_expand","","",455,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_fixed_width","","",455,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_max_width","","",455,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_min_width","","",455,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_reorderable","","",455,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_resizable","","",455,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_sizing","","",455,{"inputs":[{"name":"self"}],"output":{"name":"treeviewcolumnsizing"}}],[10,"get_sort_column_id","","",455,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_sort_indicator","","",455,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_sort_order","","",455,{"inputs":[{"name":"self"}],"output":{"name":"sorttype"}}],[10,"get_spacing","","",455,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_title","","",455,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_tree_view","","",455,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_visible","","",455,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_widget","","",455,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_width","","",455,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_x_offset","","",455,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"queue_resize","","",455,{"inputs":[{"name":"self"}],"output":null}],[10,"set_alignment","","",455,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"set_clickable","","",455,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_expand","","",455,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_fixed_width","","",455,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_max_width","","",455,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_min_width","","",455,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_reorderable","","",455,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_resizable","","",455,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_sizing","","",455,{"inputs":[{"name":"self"},{"name":"treeviewcolumnsizing"}],"output":null}],[10,"set_sort_column_id","","",455,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_sort_indicator","","",455,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_sort_order","","",455,{"inputs":[{"name":"self"},{"name":"sorttype"}],"output":null}],[10,"set_spacing","","",455,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_title","","",455,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_visible","","",455,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_widget","","",455,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"get_property_cell_area","","",455,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_clicked","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_alignment_notify","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_cell_area_notify","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_clickable_notify","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_expand_notify","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_fixed_width_notify","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_max_width_notify","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_min_width_notify","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_reorderable_notify","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_resizable_notify","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_sizing_notify","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_sort_column_id_notify","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_sort_indicator_notify","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_sort_order_notify","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_spacing_notify","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_title_notify","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_visible_notify","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_widget_notify","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_width_notify","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_x_offset_notify","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ViewportExt","","",null,null],[10,"get_bin_window","","",456,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_shadow_type","","",456,{"inputs":[{"name":"self"}],"output":{"name":"shadowtype"}}],[10,"get_view_window","","",456,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_shadow_type","","",456,{"inputs":[{"name":"self"},{"name":"shadowtype"}],"output":null}],[10,"connect_property_shadow_type_notify","","",456,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"VolumeButtonExt","","",null,null],[10,"get_property_use_symbolic","","",457,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_use_symbolic","","",457,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_property_use_symbolic_notify","","",457,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"WidgetExt","","Trait containing all `Widget` methods.",null,null],[10,"activate","","For widgets that can be “activated” (buttons, menu items, etc.) this function activates them. Activation is what happens when you press Enter on a widget during key navigation. If `self` isn't activatable, the function returns `false`.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"add_accelerator","","Installs an accelerator for this `self` in `accel_group` that causes `accel_signal` to be emitted if the accelerator is activated. The `accel_group` needs to be added to the widget’s toplevel via `Window::add_accel_group`, and the signal must be of type `gobject::SignalFlags::Action`. Accelerators added through this function are not user changeable during runtime. If you want to support accelerators that can be changed by the user, use `AccelMap::add_entry` and `WidgetExt::set_accel_path` or `MenuItemExt::set_accel_path` instead. ## `accel_signal` widget signal to emit on accelerator activation ## `accel_group` accel group for this widget, added to its toplevel ## `accel_key` GDK keyval of the accelerator ## `accel_mods` modifier key combination of the accelerator ## `accel_flags` flag accelerators, e.g. `AccelFlags::Visible`",458,{"inputs":[{"name":"self"},{"name":"str"},{"name":"accelgroup"},{"name":"u32"},{"name":"modifiertype"},{"name":"accelflags"}],"output":null}],[10,"add_device_events","","Adds the device events in the bitfield `events` to the event mask for `self`. See `WidgetExt::set_device_events` for details. ## `device` a `gdk::Device` ## `events` an event mask, see `gdk::EventMask`",458,{"inputs":[{"name":"self"},{"name":"p"},{"name":"eventmask"}],"output":null}],[10,"add_events","","Adds the events in the bitfield `events` to the event mask for `self`. See `WidgetExt::set_events` and the [input handling overview][event-masks] for details. ## `events` an event mask, see `gdk::EventMask`",458,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"add_mnemonic_label","","Adds a widget to the list of mnemonic labels for this widget. (See `WidgetExt::list_mnemonic_labels`). Note the list of mnemonic labels for the widget is cleared when the widget is destroyed, so the caller must make sure to update its internal state at this point as well, by using a connection to the `Widget::destroy` signal or a weak notifier. ## `label` a `Widget` that acts as a mnemonic label for `self`",458,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"can_activate_accel","","Determines whether an accelerator that activates the signal identified by `signal_id` can currently be activated. This is done by emitting the `Widget::can-activate-accel` signal on `self`; if the signal isn’t overridden by a handler or in a derived widget, then the default check is that the widget must be sensitive, and the widget and all its ancestors mapped. ## `signal_id` the ID of a signal installed on `self`",458,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"bool"}}],[10,"child_focus","","This function is used by custom widget implementations; if you're writing an app, you’d use `WidgetExt::grab_focus` to move the focus to a particular widget, and `ContainerExt::set_focus_chain` to change the focus tab order. So you may want to investigate those functions instead.",458,{"inputs":[{"name":"self"},{"name":"directiontype"}],"output":{"name":"bool"}}],[10,"child_notify","","Emits a `Widget::child-notify` signal for the [child property][child-properties] `child_property` on `self`.",458,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"compute_expand","","Computes whether a container should give this widget extra space when possible. Containers should check this, rather than looking at `WidgetExt::get_hexpand` or `WidgetExt::get_vexpand`.",458,{"inputs":[{"name":"self"},{"name":"orientation"}],"output":{"name":"bool"}}],[10,"create_pango_context","","Creates a new `pango::Context` with the appropriate font map, font description, and base direction for drawing text for this widget. See also `WidgetExt::get_pango_context`.",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"create_pango_layout","","Creates a new `pango::Layout` with the appropriate font map, font description, and base direction for drawing text for this widget.",458,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[10,"destroy","","Destroys a widget.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"device_is_shadowed","","Returns `true` if `device` has been shadowed by a GTK+ device grab on another widget, so it would stop sending events to `self`. This may be used in the `Widget::grab-notify` signal to check for specific devices. See `gtk_device_grab_add`. ## `device` a `gdk::Device`",458,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"drag_begin","","This function is equivalent to `WidgetExt::drag_begin_with_coordinates`, passing -1, -1 as coordinates.",458,{"inputs":[{"name":"self"},{"name":"targetlist"},{"name":"dragaction"},{"name":"i32"},{"name":"p"}],"output":{"name":"option"}}],[10,"drag_begin_with_coordinates","","Initiates a drag on the source side. The function only needs to be used when the application is starting drags itself, and is not needed when `WidgetExt::drag_source_set` is used.",458,{"inputs":[{"name":"self"},{"name":"targetlist"},{"name":"dragaction"},{"name":"i32"},{"name":"p"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"drag_check_threshold","","Checks to see if a mouse drag starting at (`start_x`, `start_y`) and ending at (`current_x`, `current_y`) has passed the GTK+ drag threshold, and thus should trigger the beginning of a drag-and-drop operation. ## `start_x` X coordinate of start of drag ## `start_y` Y coordinate of start of drag ## `current_x` current X coordinate ## `current_y` current Y coordinate",458,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"bool"}}],[10,"drag_dest_add_image_targets","","Add the image targets supported by `SelectionData` to the target list of the drag destination. The targets are added with `info` = 0. If you need another value, use `TargetList::add_image_targets` and `WidgetExt::drag_dest_set_target_list`.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"drag_dest_add_text_targets","","Add the text targets supported by `SelectionData` to the target list of the drag destination. The targets are added with `info` = 0. If you need another value, use `TargetList::add_text_targets` and `WidgetExt::drag_dest_set_target_list`.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"drag_dest_add_uri_targets","","Add the URI targets supported by `SelectionData` to the target list of the drag destination. The targets are added with `info` = 0. If you need another value, use `TargetList::add_uri_targets` and `WidgetExt::drag_dest_set_target_list`.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"drag_dest_find_target","","Looks for a match between the supported targets of `context` and the `dest_target_list`, returning the first matching target, otherwise returning `GDK_NONE`. `dest_target_list` should usually be the return value from `WidgetExt::drag_dest_get_target_list`, but some widgets may have different valid targets for different parts of the widget; in that case, they will have to implement a drag_motion handler that passes the correct target list to this function. ## `context` drag context ## `target_list` list of droppable targets, or `None` to use  gtk_drag_dest_get_target_list (`self`).",458,{"inputs":[{"name":"self"},{"name":"dragcontext"},{"name":"p"}],"output":{"name":"option"}}],[10,"drag_dest_get_target_list","","Returns the list of targets this widget can accept from drag-and-drop.",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"drag_dest_get_track_motion","","Returns whether the widget has been configured to always emit `Widget::drag-motion` signals.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"drag_dest_set_proxy","","Sets this widget as a proxy for drops to another window. ## `proxy_window` the window to which to forward drag events ## `protocol` the drag protocol which the `proxy_window` accepts  (You can use `gdk_drag_get_protocol` to determine this) ## `use_coordinates` If `true`, send the same coordinates to the  destination, because it is an embedded  subwindow.",458,{"inputs":[{"name":"self"},{"name":"window"},{"name":"dragprotocol"},{"name":"bool"}],"output":null}],[10,"drag_dest_set_target_list","","Sets the target types that this widget can accept from drag-and-drop. The widget must first be made into a drag destination with `WidgetExt::drag_dest_set`. ## `target_list` list of droppable targets, or `None` for none",458,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"drag_dest_set_track_motion","","Tells the widget to emit `Widget::drag-motion` and `Widget::drag-leave` events regardless of the targets and the `DestDefaults::Motion` flag.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"drag_dest_unset","","Clears information about a drop destination set with `WidgetExt::drag_dest_set`. The widget will no longer receive notification of drags.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"drag_get_data","","Gets the data associated with a drag. When the data is received or the retrieval fails, GTK+ will emit a `Widget::drag-data-received` signal. Failure of the retrieval is indicated by the length field of the `selection_data` signal parameter being negative. However, when `WidgetExt::drag_get_data` is called implicitely because the `DestDefaults::Drop` was set, then the widget will not receive notification of failed drops. ## `context` the drag context ## `target` the target (form of the data) to retrieve ## `time_` a timestamp for retrieving the data. This will  generally be the time received in a `Widget::drag-motion`  or `Widget::drag-drop` signal",458,{"inputs":[{"name":"self"},{"name":"dragcontext"},{"name":"atom"},{"name":"u32"}],"output":null}],[10,"drag_highlight","","Draws a highlight around a widget. This will attach handlers to `Widget::draw`, so the highlight will continue to be displayed until `WidgetExt::drag_unhighlight` is called.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"drag_source_add_image_targets","","Add the writable image targets supported by `SelectionData` to the target list of the drag source. The targets are added with `info` = 0. If you need another value, use `TargetList::add_image_targets` and `WidgetExt::drag_source_set_target_list`.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"drag_source_add_text_targets","","Add the text targets supported by `SelectionData` to the target list of the drag source. The targets are added with `info` = 0. If you need another value, use `TargetList::add_text_targets` and `WidgetExt::drag_source_set_target_list`.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"drag_source_add_uri_targets","","Add the URI targets supported by `SelectionData` to the target list of the drag source. The targets are added with `info` = 0. If you need another value, use `TargetList::add_uri_targets` and `WidgetExt::drag_source_set_target_list`.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"drag_source_get_target_list","","Gets the list of targets this widget can provide for drag-and-drop.",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"drag_source_set_icon_gicon","","Sets the icon that will be used for drags from a particular source to `icon`. See the docs for `IconTheme` for more details. ## `icon` A `gio::Icon`",458,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"drag_source_set_icon_name","","Sets the icon that will be used for drags from a particular source to a themed icon. See the docs for `IconTheme` for more details. ## `icon_name` name of icon to use",458,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"drag_source_set_icon_pixbuf","","Sets the icon that will be used for drags from a particular widget from a `gdk_pixbuf::Pixbuf`. GTK+ retains a reference for `pixbuf` and will release it when it is no longer needed. ## `pixbuf` the `gdk_pixbuf::Pixbuf` for the drag icon",458,{"inputs":[{"name":"self"},{"name":"pixbuf"}],"output":null}],[10,"drag_source_set_icon_stock","","Sets the icon that will be used for drags from a particular source to a stock icon.",458,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"drag_source_set_target_list","","Changes the target types that this widget offers for drag-and-drop. The widget must first be made into a drag source with `WidgetExt::drag_source_set`. ## `target_list` list of draggable targets, or `None` for none",458,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"drag_source_unset","","Undoes the effects of `WidgetExt::drag_source_set`.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"drag_unhighlight","","Removes a highlight set by `WidgetExt::drag_highlight` from a widget.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"draw","","Draws `self` to `cr`. The top left corner of the widget will be drawn to the currently set origin point of `cr`.",458,{"inputs":[{"name":"self"},{"name":"context"}],"output":null}],[10,"error_bell","","Notifies the user about an input-related error on this widget. If the `Settings:gtk-error-bell` setting is `true`, it calls `gdk::Window::beep`, otherwise it does nothing.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"event","","Rarely-used function. This function is used to emit the event signals on a widget (those signals should never be emitted without using this function to do so). If you want to synthesize an event though, don’t use this function; instead, use `gtk_main_do_event` so the event will behave as if it were in the event queue. Don’t synthesize expose events; instead, use `gdk::Window::invalidate_rect` to invalidate a region of the window. ## `event` a `GdkEvent`",458,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"bool"}}],[10,"freeze_child_notify","","Stops emission of `Widget::child-notify` signals on `self`. The signals are queued until `WidgetExt::thaw_child_notify` is called on `self`.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"get_action_group","","Retrieves the `gio::ActionGroup` that was registered using `prefix`. The resulting `gio::ActionGroup` may have been registered to `self` or any `Widget` in its ancestry.",458,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_allocated_baseline","","Returns the baseline that has currently been allocated to `self`. This function is intended to be used when implementing handlers for the `Widget::draw` function, and when allocating child widgets in `Widget::size_allocate`.",458,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_allocated_height","","Returns the height that has currently been allocated to `self`. This function is intended to be used when implementing handlers for the `Widget::draw` function.",458,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_allocated_size","","",458,null],[10,"get_allocated_width","","Returns the width that has currently been allocated to `self`. This function is intended to be used when implementing handlers for the `Widget::draw` function.",458,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_allocation","","Retrieves the widget’s allocation.",458,{"inputs":[{"name":"self"}],"output":{"name":"allocation"}}],[10,"get_ancestor","","Gets the first ancestor of `self` with type `widget_type`. For example, `gtk_widget_get_ancestor (widget, GTK_TYPE_BOX)` gets the first `Box` that’s an ancestor of `self`. No reference will be added to the returned widget; it should not be unreferenced. See note about checking for a toplevel `Window` in the docs for `WidgetExt::get_toplevel`.",458,{"inputs":[{"name":"self"},{"name":"type"}],"output":{"name":"option"}}],[10,"get_app_paintable","","Determines whether the application intends to draw on the widget in an `Widget::draw` handler.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_can_default","","Determines whether `self` can be a default widget. See `WidgetExt::set_can_default`.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_can_focus","","Determines whether `self` can own the input focus. See `WidgetExt::set_can_focus`.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_child_visible","","Gets the value set with `WidgetExt::set_child_visible`. If you feel a need to use this function, your code probably needs reorganization.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_clip","","Retrieves the widget’s clip area.",458,{"inputs":[{"name":"self"}],"output":{"name":"allocation"}}],[10,"get_clipboard","","Returns the clipboard object for the given selection to be used with `self`. `self` must have a `gdk::Display` associated with it, so must be attached to a toplevel window. ## `selection` a `gdk::Atom` which identifies the clipboard  to use. `GDK_SELECTION_CLIPBOARD` gives the  default clipboard. Another common value  is `GDK_SELECTION_PRIMARY`, which gives  the primary X selection.",458,{"inputs":[{"name":"self"},{"name":"atom"}],"output":{"name":"clipboard"}}],[10,"get_composite_name","","Obtains the composite name of a widget.",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_device_enabled","","Returns whether `device` can interact with `self` and its children. See `WidgetExt::set_device_enabled`. ## `device` a `gdk::Device`",458,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"get_device_events","","Returns the events mask for the widget corresponding to an specific device. These are the events that the widget will receive when `device` operates on it. ## `device` a `gdk::Device`",458,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"eventmask"}}],[10,"get_direction","","Gets the reading direction for a particular widget. See `WidgetExt::set_direction`.",458,{"inputs":[{"name":"self"}],"output":{"name":"textdirection"}}],[10,"get_display","","Get the `gdk::Display` for the toplevel window associated with this widget. This function can only be called after the widget has been added to a widget hierarchy with a `Window` at the top.",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_double_buffered","","Determines whether the widget is double buffered.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_events","","Returns the event mask (see `gdk::EventMask`) for the widget. These are the events that the widget will receive.",458,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_focus_on_click","","",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_font_map","","",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_frame_clock","","Obtains the frame clock for a widget. The frame clock is a global “ticker” that can be used to drive animations and repaints. The most common reason to get the frame clock is to call `gdk::FrameClock::get_frame_time`, in order to get a time to use for animating. For example you might record the start of the animation with an initial value from `gdk::FrameClock::get_frame_time`, and then update the animation by calling `gdk::FrameClock::get_frame_time` again during each repaint.",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_halign","","Gets the value of the `Widget:halign` property.",458,{"inputs":[{"name":"self"}],"output":{"name":"align"}}],[10,"get_has_tooltip","","Returns the current value of the has-tooltip property. See `Widget:has-tooltip` for more information.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_has_window","","Determines whether `self` has a `gdk::Window` of its own. See `WidgetExt::set_has_window`.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_hexpand","","Gets whether the widget would like any available extra horizontal space. When a user resizes a `Window`, widgets with expand=TRUE generally receive the extra space. For example, a list or scrollable area or document in your window would often be set to expand.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_hexpand_set","","Gets whether `WidgetExt::set_hexpand` has been used to explicitly set the expand flag on this widget.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_mapped","","Whether the widget is mapped.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_margin_bottom","","Gets the value of the `Widget:margin-bottom` property.",458,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_margin_end","","Gets the value of the `Widget:margin-end` property.",458,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_margin_left","","Gets the value of the `Widget:margin-left` property.",458,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_margin_right","","Gets the value of the `Widget:margin-right` property.",458,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_margin_start","","Gets the value of the `Widget:margin-start` property.",458,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_margin_top","","Gets the value of the `Widget:margin-top` property.",458,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_modifier_mask","","Returns the modifier mask the `self`’s windowing system backend uses for a particular purpose.",458,{"inputs":[{"name":"self"},{"name":"modifierintent"}],"output":{"name":"modifiertype"}}],[10,"get_name","","Retrieves the name of a widget. See `WidgetExt::set_name` for the significance of widget names.",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_no_show_all","","Returns the current value of the `Widget:no-show-all` property, which determines whether calls to `WidgetExt::show_all` will affect this widget.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_opacity","","Fetches the requested opacity for this widget. See `WidgetExt::set_opacity`.",458,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_pango_context","","Gets a `pango::Context` with the appropriate font map, font description, and base direction for this widget. Unlike the context returned by `WidgetExt::create_pango_context`, this context is owned by the widget (it can be used until the screen for the widget changes or the widget is removed from its toplevel), and will be updated to match any changes to the widget’s attributes. This can be tracked by using the `Widget::screen-changed` signal on the widget.",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_parent","","Returns the parent container of `self`.",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_parent_window","","Gets `self`’s parent window.",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_preferred_height","","Retrieves a widget’s initial minimum and natural height.",458,null],[10,"get_preferred_height_and_baseline_for_width","","Retrieves a widget’s minimum and natural height and the corresponding baselines if it would be given the specified `width`, or the default height if `width` is -1. The baselines may be -1 which means that no baseline is requested for this widget.",458,null],[10,"get_preferred_height_for_width","","Retrieves a widget’s minimum and natural height if it would be given the specified `width`.",458,null],[10,"get_preferred_size","","Retrieves the minimum and natural size of a widget, taking into account the widget’s preference for height-for-width management.",458,null],[10,"get_preferred_width","","Retrieves a widget’s initial minimum and natural width.",458,null],[10,"get_preferred_width_for_height","","Retrieves a widget’s minimum and natural width if it would be given the specified `height`.",458,null],[10,"get_realized","","Determines whether `self` is realized.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_receives_default","","Determines whether `self` is always treated as the default widget within its toplevel when it has the focus, even if another widget is the default.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_request_mode","","Gets whether the widget prefers a height-for-width layout or a width-for-height layout.",458,{"inputs":[{"name":"self"}],"output":{"name":"sizerequestmode"}}],[10,"get_root_window","","Get the root window where this widget is located. This function can only be called after the widget has been added to a widget hierarchy with `Window` at the top.",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_scale_factor","","Retrieves the internal scale factor that maps from window coordinates to the actual device pixels. On traditional systems this is 1, on high density outputs, it can be a higher value (typically 2).",458,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_screen","","Get the `gdk::Screen` from the toplevel window associated with this widget. This function can only be called after the widget has been added to a widget hierarchy with a `Window` at the top.",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_sensitive","","Returns the widget’s sensitivity (in the sense of returning the value that has been set using `WidgetExt::set_sensitive`).",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_settings","","Gets the settings object holding the settings used for this widget.",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_size_request","","Gets the size request that was explicitly set for the widget using `WidgetExt::set_size_request`. A value of -1 stored in `width` or `height` indicates that that dimension has not been set explicitly and the natural requisition of the widget will be used intead. See `WidgetExt::set_size_request`. To get the size a widget will actually request, call `WidgetExt::get_preferred_size` instead of this function. ## `width` return location for width, or `None` ## `height` return location for height, or `None`",458,null],[10,"get_state_flags","","Returns the widget state as a flag set. It is worth mentioning that the effective `StateFlags::Insensitive` state will be returned, that is, also based on parent insensitivity, even if `self` itself is sensitive.",458,{"inputs":[{"name":"self"}],"output":{"name":"stateflags"}}],[10,"get_style_context","","Returns the style context associated to `self`.",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_support_multidevice","","Returns `true` if `self` is multiple pointer aware. See `WidgetExt::set_support_multidevice` for more information.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_template_child","","Fetch an object build from the template XML for `widget_type` in this `self` instance.",458,{"inputs":[{"name":"self"},{"name":"type"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_tooltip_markup","","Gets the contents of the tooltip for `self`.",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_tooltip_text","","Gets the contents of the tooltip for `self`.",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_tooltip_window","","Returns the `Window` of the current tooltip. This can be the `Window` created by default, or the custom tooltip window set using `WidgetExt::set_tooltip_window`.",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_toplevel","","This function returns the topmost widget in the container hierarchy `self` is a part of. If `self` has no parent widgets, it will be returned as the topmost widget. No reference will be added to the returned widget; it should not be unreferenced.",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_valign","","Gets the value of the `Widget:valign` property.",458,{"inputs":[{"name":"self"}],"output":{"name":"align"}}],[10,"get_valign_with_baseline","","Gets the value of the `Widget:valign` property, including `Align::Baseline`.",458,{"inputs":[{"name":"self"}],"output":{"name":"align"}}],[10,"get_vexpand","","Gets whether the widget would like any available extra vertical space.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_vexpand_set","","Gets whether `WidgetExt::set_vexpand` has been used to explicitly set the expand flag on this widget.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_visible","","Determines whether the widget is visible. If you want to take into account whether the widget’s parent is also marked as visible, use `WidgetExt::is_visible` instead.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_visual","","Gets the visual that will be used to render `self`.",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_window","","Returns the widget’s window if it is realized, `None` otherwise",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"grab_add","","Makes `self` the current grabbed widget.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"grab_default","","Causes `self` to become the default widget. `self` must be able to be a default widget; typically you would ensure this yourself by calling `WidgetExt::set_can_default` with a `true` value. The default widget is activated when the user presses Enter in a window. Default widgets must be activatable, that is, `WidgetExt::activate` should affect them. Note that `Entry` widgets require the “activates-default” property set to `true` before they activate the default widget when Enter is pressed and the `Entry` is focused.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"grab_focus","","Causes `self` to have the keyboard focus for the `Window` it's inside. `self` must be a focusable widget, such as a `Entry`; something like `Frame` won’t work.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"grab_remove","","Removes the grab from the given widget.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"has_default","","Determines whether `self` is the current default widget within its toplevel. See `WidgetExt::set_can_default`.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"has_focus","","Determines if the widget has the global input focus. See `WidgetExt::is_focus` for the difference between having the global input focus, and only having the focus within a toplevel.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"has_grab","","Determines whether the widget is currently grabbing events, so it is the only widget receiving input events (keyboard and mouse).",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"has_screen","","Checks whether there is a `gdk::Screen` is associated with this widget. All toplevel widgets have an associated screen, and all widgets added into a hierarchy with a toplevel window at the top.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"has_visible_focus","","Determines if the widget should show a visible indication that it has the global input focus. This is a convenience function for use in ::draw handlers that takes into account whether focus indication should currently be shown in the toplevel window of `self`. See `Window::get_focus_visible` for more information about focus indication.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"hide","","Reverses the effects of `WidgetExt::show`, causing the widget to be hidden (invisible to the user).",458,{"inputs":[{"name":"self"}],"output":null}],[10,"hide_on_delete","","Utility function; intended to be connected to the `Widget::delete-event` signal on a `Window`. The function calls `WidgetExt::hide` on its argument, then returns `true`. If connected to ::delete-event, the result is that clicking the close button for a window (on the window frame, top right corner usually) will hide but not destroy the window. By default, GTK+ destroys windows when ::delete-event is received.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"in_destruction","","Returns whether the widget is currently being destroyed. This information can sometimes be used to avoid doing unnecessary work.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"init_template","","Creates and initializes child widgets defined in templates. This function must be called in the instance initializer for any class which assigned itself a template using `WidgetClass::set_template`",458,{"inputs":[{"name":"self"}],"output":null}],[10,"input_shape_combine_region","","Sets an input shape for this widget’s GDK window. This allows for windows which react to mouse click in a nonrectangular region, see `gdk::Window::input_shape_combine_region` for more information. ## `region` shape to be added, or `None` to remove an existing shape",458,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"insert_action_group","","Inserts `group` into `self`. Children of `self` that implement `Actionable` can then be associated with actions in `group` by setting their “action-name” to `prefix`.`action-name`.",458,{"inputs":[{"name":"self"},{"name":"str"},{"name":"q"}],"output":null}],[10,"is_ancestor","","Determines whether `self` is somewhere inside `ancestor`, possibly with intermediate containers. ## `ancestor` another `Widget`",458,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"is_composited","","Whether `self` can rely on having its alpha channel drawn correctly. On X11 this function returns whether a compositing manager is running for `self`’s screen.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_drawable","","Determines whether `self` can be drawn to. A widget can be drawn to if it is mapped and visible.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_focus","","Determines if the widget is the focus widget within its toplevel. (This does not mean that the `Widget:has-focus` property is necessarily set; `Widget:has-focus` will only be set if the toplevel widget additionally has the global input focus.)",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_sensitive","","Returns the widget’s effective sensitivity, which means it is sensitive itself and also its parent widget is sensitive",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_toplevel","","Determines whether `self` is a toplevel widget.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_visible","","Determines whether the widget and all its parents are marked as visible.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"keynav_failed","","This function should be called whenever keyboard navigation within a single widget hits a boundary. The function emits the `Widget::keynav-failed` signal on the widget and its return value should be interpreted in a way similar to the return value of `WidgetExt::child_focus`:",458,{"inputs":[{"name":"self"},{"name":"directiontype"}],"output":{"name":"bool"}}],[10,"list_action_prefixes","","Retrieves a `None`-terminated array of strings containing the prefixes of `gio::ActionGroup`'s available to `self`.",458,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"list_mnemonic_labels","","Returns a newly allocated list of the widgets, normally labels, for which this widget is the target of a mnemonic (see for example, `Label::set_mnemonic_widget`).",458,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"map","","This function is only for use in widget implementations. Causes a widget to be mapped if it isn’t already.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"mnemonic_activate","","Emits the `Widget::mnemonic-activate` signal.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"bool"}}],[10,"override_background_color","","Sets the background color to use for a widget.",458,{"inputs":[{"name":"self"},{"name":"stateflags"},{"name":"p"}],"output":null}],[10,"override_color","","Sets the color to use for a widget.",458,{"inputs":[{"name":"self"},{"name":"stateflags"},{"name":"p"}],"output":null}],[10,"override_cursor","","Sets the cursor color to use in a widget, overriding the cursor-color and secondary-cursor-color style properties. All other style values are left untouched. See also `Widget::modify_style`.",458,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":null}],[10,"override_font","","Sets the font to use for a widget. All other style values are left untouched. See `WidgetExt::override_color`.",458,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"override_symbolic_color","","Sets a symbolic color for a widget.",458,{"inputs":[{"name":"self"},{"name":"str"},{"name":"p"}],"output":null}],[10,"queue_allocate","","",458,{"inputs":[{"name":"self"}],"output":null}],[10,"queue_compute_expand","","Mark `self` as needing to recompute its expand flags. Call this function when setting legacy expand child properties on the child of a container.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"queue_draw","","Equivalent to calling `WidgetExt::queue_draw_area` for the entire area of a widget.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"queue_draw_area","","Convenience function that calls `WidgetExt::queue_draw_region` on the region created from the given coordinates.",458,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"queue_draw_region","","Invalidates the area of `self` defined by `region` by calling `gdk::Window::invalidate_region` on the widget’s window and all its child windows. Once the main loop becomes idle (after the current batch of events has been processed, roughly), the window will receive expose events for the union of all regions that have been invalidated.",458,{"inputs":[{"name":"self"},{"name":"region"}],"output":null}],[10,"queue_resize","","This function is only for use in widget implementations. Flags a widget to have its size renegotiated; should be called when a widget for some reason has a new size request. For example, when you change the text in a `Label`, `Label` queues a resize to ensure there’s enough space for the new text.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"queue_resize_no_redraw","","This function works like `WidgetExt::queue_resize`, except that the widget is not invalidated.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"realize","","Creates the GDK (windowing system) resources associated with a widget. For example, `self`->window will be created when a widget is realized. Normally realization happens implicitly; if you show a widget and all its parent containers, then the widget will be realized and mapped automatically.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"region_intersect","","Computes the intersection of a `self`’s area and `region`, returning the intersection. The result may be empty, use `cairo_region_is_empty` to check.",458,{"inputs":[{"name":"self"},{"name":"region"}],"output":{"name":"option"}}],[10,"register_window","","Registers a `gdk::Window` with the widget and sets it up so that the widget receives events for it. Call `WidgetExt::unregister_window` when destroying the window.",458,{"inputs":[{"name":"self"},{"name":"window"}],"output":null}],[10,"remove_accelerator","","Removes an accelerator from `self`, previously installed with `WidgetExt::add_accelerator`. ## `accel_group` accel group for this widget ## `accel_key` GDK keyval of the accelerator ## `accel_mods` modifier key combination of the accelerator",458,{"inputs":[{"name":"self"},{"name":"accelgroup"},{"name":"u32"},{"name":"modifiertype"}],"output":{"name":"bool"}}],[10,"remove_mnemonic_label","","Removes a widget from the list of mnemonic labels for this widget. (See `WidgetExt::list_mnemonic_labels`). The widget must have previously been added to the list with `WidgetExt::add_mnemonic_label`. ## `label` a `Widget` that was previously set as a mnemnic label for  `self` with `WidgetExt::add_mnemonic_label`.",458,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"remove_tick_callback","","Removes a tick callback previously registered with `WidgetExt::add_tick_callback`.",458,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"render_icon_pixbuf","","A convenience function that uses the theme engine and style settings for `self` to look up `stock_id` and render it to a pixbuf. `stock_id` should be a stock icon ID such as `GTK_STOCK_OPEN` or `GTK_STOCK_OK`. `size` should be a size such as `IconSize::Menu`.",458,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"}],"output":{"name":"option"}}],[10,"reparent","","Moves a widget from one `Container` to another, handling reference count issues to avoid destroying the widget.",458,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"reset_style","","Updates the style context of `self` and all descendents by updating its widget path. `GtkContainers` may want to use this on a child when reordering it in a way that a different style might apply to it. See also `ContainerExt::get_path_for_child`.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"send_expose","","Very rarely-used function. This function is used to emit an expose event on a widget. This function is not normally used directly. The only time it is used is when propagating an expose event to a windowless child widget (`WidgetExt::get_has_window` is `false`), and that is normally done using `ContainerExt::propagate_draw`.",458,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"i32"}}],[10,"send_focus_change","","Sends the focus change `event` to `self`",458,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"bool"}}],[10,"set_accel_path","","Given an accelerator group, `accel_group`, and an accelerator path, `accel_path`, sets up an accelerator in `accel_group` so whenever the key binding that is defined for `accel_path` is pressed, `self` will be activated. This removes any accelerators (for any accelerator group) installed by previous calls to `WidgetExt::set_accel_path`. Associating accelerators with paths allows them to be modified by the user and the modifications to be saved for future use. (See `AccelMap::save`.)",458,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":null}],[10,"set_allocation","","Sets the widget’s allocation. This should not be used directly, but from within a widget’s size_allocate method.",458,{"inputs":[{"name":"self"},{"name":"allocation"}],"output":null}],[10,"set_app_paintable","","Sets whether the application intends to draw on the widget in an `Widget::draw` handler.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_can_default","","Specifies whether `self` can be a default widget. See `WidgetExt::grab_default` for details about the meaning of “default”. ## `can_default` whether or not `self` can be a default widget.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_can_focus","","Specifies whether `self` can own the input focus. See `WidgetExt::grab_focus` for actually setting the input focus on a widget. ## `can_focus` whether or not `self` can own the input focus.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_child_visible","","Sets whether `self` should be mapped along with its when its parent is mapped and `self` has been shown with `WidgetExt::show`.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_clip","","Sets the widget’s clip. This must not be used directly, but from within a widget’s size_allocate method. It must be called after `WidgetExt::set_allocation` (or after chaning up to the parent class), because that function resets the clip.",458,{"inputs":[{"name":"self"},{"name":"allocation"}],"output":null}],[10,"set_composite_name","","Sets a widgets composite name. The widget must be a composite child of its parent; see `Widget::push_composite_child`.",458,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_device_enabled","","Enables or disables a `gdk::Device` to interact with `self` and all its children.",458,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"}],"output":null}],[10,"set_device_events","","Sets the device event mask (see `gdk::EventMask`) for a widget. The event mask determines which events a widget will receive from `device`. Keep in mind that different widgets have different default event masks, and by changing the event mask you may disrupt a widget’s functionality, so be careful. This function must be called while a widget is unrealized. Consider `WidgetExt::add_device_events` for widgets that are already realized, or if you want to preserve the existing event mask. This function can’t be used with windowless widgets (which return `false` from `WidgetExt::get_has_window`); to get events on those widgets, place them inside a `EventBox` and receive events on the event box. ## `device` a `gdk::Device` ## `events` event mask",458,{"inputs":[{"name":"self"},{"name":"p"},{"name":"eventmask"}],"output":null}],[10,"set_direction","","Sets the reading direction on a particular widget. This direction controls the primary direction for widgets containing text, and also the direction in which the children of a container are packed. The ability to set the direction is present in order so that correct localization into languages with right-to-left reading directions can be done. Generally, applications will let the default reading direction present, except for containers where the containers are arranged in an order that is explicitly visual rather than logical (such as buttons for text justification).",458,{"inputs":[{"name":"self"},{"name":"textdirection"}],"output":null}],[10,"set_double_buffered","","Widgets are double buffered by default; you can use this function to turn off the buffering. “Double buffered” simply means that `gdk::Window::begin_paint_region` and `gdk::Window::end_paint` are called automatically around expose events sent to the widget. `gdk::Window::begin_paint_region` diverts all drawing to a widget's window to an offscreen buffer, and `gdk::Window::end_paint` draws the buffer to the screen. The result is that users see the window update in one smooth step, and don’t see individual graphics primitives being rendered.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_events","","Sets the event mask (see `gdk::EventMask`) for a widget. The event mask determines which events a widget will receive. Keep in mind that different widgets have different default event masks, and by changing the event mask you may disrupt a widget’s functionality, so be careful. This function must be called while a widget is unrealized. Consider `WidgetExt::add_events` for widgets that are already realized, or if you want to preserve the existing event mask. This function can’t be used with widgets that have no window. (See `WidgetExt::get_has_window`). To get events on those widgets, place them inside a `EventBox` and receive events on the event box. ## `events` event mask",458,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_focus_on_click","","",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_font_map","","",458,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_halign","","Sets the horizontal alignment of `self`. See the `Widget:halign` property. ## `align` the horizontal alignment",458,{"inputs":[{"name":"self"},{"name":"align"}],"output":null}],[10,"set_has_tooltip","","Sets the has-tooltip property on `self` to `has_tooltip`. See `Widget:has-tooltip` for more information. ## `has_tooltip` whether or not `self` has a tooltip.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_has_window","","Specifies whether `self` has a `gdk::Window` of its own. Note that all realized widgets have a non-`None` “window” pointer (`WidgetExt::get_window` never returns a `None` window when a widget is realized), but for many of them it’s actually the `gdk::Window` of one of its parent widgets. Widgets that do not create a `window` for themselves in `Widget::realize` must announce this by calling this function with `has_window` = `false`.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_hexpand","","Sets whether the widget would like any available extra horizontal space. When a user resizes a `Window`, widgets with expand=TRUE generally receive the extra space. For example, a list or scrollable area or document in your window would often be set to expand.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_hexpand_set","","Sets whether the hexpand flag (see `WidgetExt::get_hexpand`) will be used.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_mapped","","Marks the widget as being realized.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_margin_bottom","","Sets the bottom margin of `self`. See the `Widget:margin-bottom` property. ## `margin` the bottom margin",458,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_margin_end","","Sets the end margin of `self`. See the `Widget:margin-end` property.",458,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_margin_left","","Sets the left margin of `self`. See the `Widget:margin-left` property.",458,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_margin_right","","Sets the right margin of `self`. See the `Widget:margin-right` property.",458,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_margin_start","","Sets the start margin of `self`. See the `Widget:margin-start` property.",458,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_margin_top","","Sets the top margin of `self`. See the `Widget:margin-top` property. ## `margin` the top margin",458,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_name","","Widgets can be named, which allows you to refer to them from a CSS file. You can apply a style to widgets with a particular name in the CSS file. See the documentation for the CSS syntax (on the same page as the docs for `StyleContext`).",458,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_no_show_all","","Sets the `Widget:no-show-all` property, which determines whether calls to `WidgetExt::show_all` will affect this widget.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_opacity","","Request the `self` to be rendered partially transparent, with opacity 0 being fully transparent and 1 fully opaque. (Opacity values are clamped to the [0,1] range.). This works on both toplevel widget, and child widgets, although there are some limitations:",458,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"set_parent","","This function is useful only when implementing subclasses of `Container`. Sets the container as the parent of `self`, and takes care of some details such as updating the state and style of the child to reflect its new location. The opposite function is `WidgetExt::unparent`. ## `parent` parent container",458,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_parent_window","","Sets a non default parent window for `self`.",458,{"inputs":[{"name":"self"},{"name":"window"}],"output":null}],[10,"set_realized","","Marks the widget as being realized. This function must only be called after all `GdkWindows` for the `self` have been created and registered.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_receives_default","","Specifies whether `self` will be treated as the default widget within its toplevel when it has the focus, even if another widget is the default.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_redraw_on_allocate","","Sets whether the entire widget is queued for drawing when its size allocation changes. By default, this setting is `true` and the entire widget is redrawn on every size change. If your widget leaves the upper left unchanged when made bigger, turning this setting off will improve performance.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_sensitive","","Sets the sensitivity of a widget. A widget is sensitive if the user can interact with it. Insensitive widgets are “grayed out” and the user can’t interact with them. Insensitive widgets are known as “inactive”, “disabled”, or “ghosted” in some other toolkits. ## `sensitive` `true` to make the widget sensitive",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_size_request","","Sets the minimum size of a widget; that is, the widget’s size request will be at least `width` by `height`. You can use this function to force a widget to be larger than it normally would be.",458,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_state_flags","","This function is for use in widget implementations. Turns on flag values in the current widget state (insensitive, prelighted, etc.).",458,{"inputs":[{"name":"self"},{"name":"stateflags"},{"name":"bool"}],"output":null}],[10,"set_support_multidevice","","Enables or disables multiple pointer awareness. If this setting is `true`, `self` will start receiving multiple, per device enter/leave events. Note that if custom `GdkWindows` are created in `Widget::realize`, `gdk::Window::set_support_multidevice` will have to be called manually on them. ## `support_multidevice` `true` to support input from multiple devices.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_tooltip_markup","","Sets `markup` as the contents of the tooltip, which is marked up with  the Pango text markup language.",458,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_tooltip_text","","Sets `text` as the contents of the tooltip. This function will take care of setting `Widget:has-tooltip` to `true` and of the default handler for the `Widget::query-tooltip` signal.",458,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_tooltip_window","","Replaces the default, usually yellow, window used for displaying tooltips with `custom_window`. GTK+ will take care of showing and hiding `custom_window` at the right moment, to behave likewise as the default tooltip window. If `custom_window` is `None`, the default tooltip window will be used.",458,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_valign","","Sets the vertical alignment of `self`. See the `Widget:valign` property. ## `align` the vertical alignment",458,{"inputs":[{"name":"self"},{"name":"align"}],"output":null}],[10,"set_vexpand","","Sets whether the widget would like any available extra vertical space.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_vexpand_set","","Sets whether the vexpand flag (see `WidgetExt::get_vexpand`) will be used.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_visible","","Sets the visibility state of `self`. Note that setting this to `true` doesn’t mean the widget is actually viewable, see `WidgetExt::get_visible`.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_visual","","Sets the visual that should be used for by widget and its children for creating `GdkWindows`. The visual must be on the same `gdk::Screen` as returned by `WidgetExt::get_screen`, so handling the `Widget::screen-changed` signal is necessary.",458,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_window","","Sets a widget’s window. This function should only be used in a widget’s `Widget::realize` implementation. The `window` passed is usually either new window created with `gdk::Window::new`, or the window of its parent widget as returned by `WidgetExt::get_parent_window`.",458,{"inputs":[{"name":"self"},{"name":"window"}],"output":null}],[10,"shape_combine_region","","Sets a shape for this widget’s GDK window. This allows for transparent windows etc., see `gdk::Window::shape_combine_region` for more information. ## `region` shape to be added, or `None` to remove an existing shape",458,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"show","","Flags a widget to be displayed. Any widget that isn’t shown will not appear on the screen. If you want to show all the widgets in a container, it’s easier to call `WidgetExt::show_all` on the container, instead of individually showing the widgets.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"show_all","","Recursively shows a widget, and any child widgets (if the widget is a container).",458,{"inputs":[{"name":"self"}],"output":null}],[10,"show_now","","Shows a widget. If the widget is an unmapped toplevel widget (i.e. a `Window` that has not yet been shown), enter the main loop and wait for the window to actually be mapped. Be careful; because the main loop is running, anything can happen during this function.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"size_allocate","","This function is only used by `Container` subclasses, to assign a size and position to their child widgets.",458,{"inputs":[{"name":"self"},{"name":"allocation"}],"output":null}],[10,"size_allocate_with_baseline","","This function is only used by `Container` subclasses, to assign a size, position and (optionally) baseline to their child widgets.",458,{"inputs":[{"name":"self"},{"name":"allocation"},{"name":"i32"}],"output":null}],[10,"thaw_child_notify","","Reverts the effect of a previous call to `WidgetExt::freeze_child_notify`. This causes all queued `Widget::child-notify` signals on `self` to be emitted.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"translate_coordinates","","Translate coordinates relative to `self`’s allocation to coordinates relative to `dest_widget`’s allocations. In order to perform this operation, both widgets must be realized, and must share a common toplevel. ## `dest_widget` a `Widget` ## `src_x` X position relative to `self` ## `src_y` Y position relative to `self` ## `dest_x` location to store X position relative to `dest_widget` ## `dest_y` location to store Y position relative to `dest_widget`",458,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"trigger_tooltip_query","","Triggers a tooltip query on the display where the toplevel of `self` is located. See `Tooltip::trigger_tooltip_query` for more information.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"unmap","","This function is only for use in widget implementations. Causes a widget to be unmapped if it’s currently mapped.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"unparent","","This function is only for use in widget implementations. Should be called by implementations of the remove method on `Container`, to dissociate a child from the container.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"unrealize","","This function is only useful in widget implementations. Causes a widget to be unrealized (frees all GDK resources associated with the widget, such as `self`->window).",458,{"inputs":[{"name":"self"}],"output":null}],[10,"unregister_window","","Unregisters a `gdk::Window` from the widget that was previously set up with `WidgetExt::register_window`. You need to call this when the window is no longer used by the widget, such as when you destroy it.",458,{"inputs":[{"name":"self"},{"name":"window"}],"output":null}],[10,"unset_state_flags","","This function is for use in widget implementations. Turns off flag values for the current widget state (insensitive, prelighted, etc.). See `WidgetExt::set_state_flags`. ## `flags` State flags to turn off",458,{"inputs":[{"name":"self"},{"name":"stateflags"}],"output":null}],[10,"get_property_composite_child","","",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_expand","","",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_expand","","",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_has_default","","",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_has_default","","",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_has_focus","","",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_has_focus","","",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_height_request","","",458,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_height_request","","",458,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_is_focus","","",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_is_focus","","",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_margin","","",458,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_margin","","",458,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_width_request","","",458,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_width_request","","",458,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"connect_accel_closures_changed","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_button_press_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_button_release_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_can_activate_accel","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_composited_changed","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_configure_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_damage_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_delete_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_destroy","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_destroy_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_direction_changed","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_drag_begin","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_drag_data_delete","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_drag_data_get","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_drag_data_received","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_drag_drop","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_drag_end","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_drag_failed","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_drag_leave","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_drag_motion","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_draw","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_enter_notify_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_event_after","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_focus","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_focus_in_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_focus_out_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_grab_broken_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_grab_focus","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_grab_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_hide","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_hierarchy_changed","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_key_press_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_key_release_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_keynav_failed","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_leave_notify_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_map","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_mnemonic_activate","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_motion_notify_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_focus","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_parent_set","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_popup_menu","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_notify_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_proximity_in_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_proximity_out_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_query_tooltip","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_realize","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_screen_changed","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_scroll_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_selection_clear_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_selection_get","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_selection_notify_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_selection_received","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_selection_request_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_show","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_show_help","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_size_allocate","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_state_flags_changed","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_style_updated","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_touch_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_unmap","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_unrealize","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_visibility_notify_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_window_state_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_app_paintable_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_can_default_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_can_focus_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_composite_child_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_double_buffered_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_events_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_expand_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_focus_on_click_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_halign_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_has_default_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_has_focus_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_has_tooltip_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_height_request_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_hexpand_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_hexpand_set_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_is_focus_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_margin_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_margin_bottom_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_margin_end_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_margin_left_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_margin_right_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_margin_start_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_margin_top_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_name_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_no_show_all_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_opacity_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_parent_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_receives_default_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_scale_factor_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_sensitive_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_tooltip_markup_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_tooltip_text_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_valign_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_vexpand_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_vexpand_set_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_visible_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_width_request_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_window_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"WindowExt","","Trait containing all `Window` methods.",null,null],[10,"activate_default","","Activates the default widget for the window, unless the current focused widget has been configured to receive the default action (see `WidgetExt::set_receives_default`), in which case the focused widget is activated.",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"activate_focus","","Activates the current focused widget within the window.",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"activate_key","","Activates mnemonics and accelerators for this `Window`. This is normally called by the default ::key_press_event handler for toplevel windows, however in some cases it may be useful to call this directly when overriding the standard key handling for a toplevel window. ## `event` a `gdk::EventKey`",459,{"inputs":[{"name":"self"},{"name":"eventkey"}],"output":{"name":"bool"}}],[10,"add_accel_group","","Associate `accel_group` with `self`, such that calling `gtk_accel_groups_activate` on `self` will activate accelerators in `accel_group`. ## `accel_group` a `AccelGroup`",459,{"inputs":[{"name":"self"},{"name":"accelgroup"}],"output":null}],[10,"add_mnemonic","","Adds a mnemonic to this window. ## `keyval` the mnemonic ## `target` the widget that gets activated by the mnemonic",459,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"p"}],"output":null}],[10,"begin_move_drag","","Starts moving a window. This function is used if an application has window movement grips. When GDK can support it, the window movement will be done using the standard mechanism for the [window manager][gtk-X11-arch] or windowing system. Otherwise, GDK will try to emulate window movement, potentially not all that well, depending on the windowing system. ## `button` mouse button that initiated the drag ## `root_x` X position where the user clicked to initiate the drag, in root window coordinates ## `root_y` Y position where the user clicked to initiate the drag ## `timestamp` timestamp from the click event that initiated the drag",459,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"u32"}],"output":null}],[10,"begin_resize_drag","","Starts resizing a window. This function is used if an application has window resizing controls. When GDK can support it, the resize will be done using the standard mechanism for the [window manager][gtk-X11-arch] or windowing system. Otherwise, GDK will try to emulate window resizing, potentially not all that well, depending on the windowing system. ## `edge` position of the resize control ## `button` mouse button that initiated the drag ## `root_x` X position where the user clicked to initiate the drag, in root window coordinates ## `root_y` Y position where the user clicked to initiate the drag ## `timestamp` timestamp from the click event that initiated the drag",459,{"inputs":[{"name":"self"},{"name":"windowedge"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"u32"}],"output":null}],[10,"close","","Requests that the window is closed, similar to what happens when a window manager close button is clicked.",459,{"inputs":[{"name":"self"}],"output":null}],[10,"deiconify","","Asks to deiconify (i.e. unminimize) the specified `self`. Note that you shouldn’t assume the window is definitely deiconified afterward, because other entities (e.g. the user or [window manager][gtk-X11-arch])) could iconify it again before your code which assumes deiconification gets to run.",459,{"inputs":[{"name":"self"}],"output":null}],[10,"fullscreen","","Asks to place `self` in the fullscreen state. Note that you shouldn’t assume the window is definitely full screen afterward, because other entities (e.g. the user or [window manager][gtk-X11-arch]) could unfullscreen it again, and not all window managers honor requests to fullscreen windows. But normally the window will end up fullscreen. Just don’t write code that crashes if not.",459,{"inputs":[{"name":"self"}],"output":null}],[10,"fullscreen_on_monitor","","",459,{"inputs":[{"name":"self"},{"name":"screen"},{"name":"i32"}],"output":null}],[10,"get_accept_focus","","Gets the value set by `WindowExt::set_accept_focus`.",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_application","","Gets the `Application` associated with the window (if any).",459,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_attached_to","","Fetches the attach widget for this window. See `WindowExt::set_attached_to`.",459,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_decorated","","Returns whether the window has been set to have decorations such as a title bar via `WindowExt::set_decorated`.",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_default_size","","Gets the default size of the window. A value of -1 for the width or height indicates that a default size has not been explicitly set for that dimension, so the “natural” size of the window will be used. ## `width` location to store the default width, or `None` ## `height` location to store the default height, or `None`",459,null],[10,"get_default_widget","","Returns the default widget for `self`. See `WindowExt::set_default` for more details.",459,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_deletable","","Returns whether the window has been set to have a close button via `WindowExt::set_deletable`.",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_destroy_with_parent","","Returns whether the window will be destroyed with its transient parent. See gtk_window_set_destroy_with_parent ().",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_focus","","Retrieves the current focused widget within the window. Note that this is the widget that would have the focus if the toplevel window focused; if the toplevel window is not focused then `gtk_widget_has_focus (widget)` will not be `true` for the widget.",459,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_focus_on_map","","Gets the value set by `WindowExt::set_focus_on_map`.",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_focus_visible","","Gets the value of the `Window:focus-visible` property.",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_gravity","","Gets the value set by `WindowExt::set_gravity`.",459,{"inputs":[{"name":"self"}],"output":{"name":"gravity"}}],[10,"get_group","","Returns the group for `self` or the default group, if `self` is `None` or if `self` does not have an explicit window group.",459,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_has_resize_grip","","Determines whether the window may have a resize grip.",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_hide_titlebar_when_maximized","","Returns whether the window has requested to have its titlebar hidden when maximized. See gtk_window_set_hide_titlebar_when_maximized ().",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_icon","","Gets the value set by `WindowExt::set_icon` (or if you've called `WindowExt::set_icon_list`, gets the first icon in the icon list).",459,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_icon_list","","Retrieves the list of icons set by `WindowExt::set_icon_list`. The list is copied, but the reference count on each member won’t be incremented.",459,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_icon_name","","Returns the name of the themed icon for the window, see `WindowExt::set_icon_name`.",459,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_mnemonic_modifier","","Returns the mnemonic modifier for this window. See `WindowExt::set_mnemonic_modifier`.",459,{"inputs":[{"name":"self"}],"output":{"name":"modifiertype"}}],[10,"get_mnemonics_visible","","Gets the value of the `Window:mnemonics-visible` property.",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_modal","","Returns whether the window is modal. See `WindowExt::set_modal`.",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_position","","This function returns the position you need to pass to `WindowExt::move` to keep `self` in its current position. This means that the meaning of the returned value varies with window gravity. See `WindowExt::move` for more details.",459,null],[10,"get_resizable","","Gets the value set by `WindowExt::set_resizable`.",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_resize_grip_area","","If a window has a resize grip, this will retrieve the grip position, width and height into the specified `gdk::Rectangle`.",459,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_role","","Returns the role of the window. See `WindowExt::set_role` for further explanation.",459,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_size","","Obtains the current size of `self`. If `self` is not onscreen, it returns the size GTK+ will suggest to the [window manager][gtk-X11-arch] for the initial window size (but this is not reliably the same as the size the window manager will actually select). The size obtained by `WindowExt::get_size` is the last size received in a `gdk::EventConfigure`, that is, GTK+ uses its locally-stored size, rather than querying the X server for the size. As a result, if you call `WindowExt::resize` then immediately call `WindowExt::get_size`, the size won’t have taken effect yet. After the window manager processes the resize request, GTK+ receives notification that the size has changed via a configure event, and the size of the window gets updated.",459,null],[10,"get_skip_pager_hint","","Gets the value set by `WindowExt::set_skip_pager_hint`.",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_skip_taskbar_hint","","Gets the value set by `WindowExt::set_skip_taskbar_hint`",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_title","","Retrieves the title of the window. See `WindowExt::set_title`.",459,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_titlebar","","Returns the custom titlebar that has been set with `WindowExt::set_titlebar`.",459,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_transient_for","","Fetches the transient parent for this window. See `WindowExt::set_transient_for`.",459,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_type_hint","","Gets the type hint for this window. See `WindowExt::set_type_hint`.",459,{"inputs":[{"name":"self"}],"output":{"name":"windowtypehint"}}],[10,"get_urgency_hint","","Gets the value set by `WindowExt::set_urgency_hint`",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_window_type","","Gets the type of the window. See `WindowType`.",459,{"inputs":[{"name":"self"}],"output":{"name":"windowtype"}}],[10,"has_group","","Returns whether `self` has an explicit window group.",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"has_toplevel_focus","","Returns whether the input focus is within this `Window`. For real toplevel windows, this is identical to `WindowExt::is_active`, but for embedded windows, like `Plug`, the results will differ.",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"iconify","","Asks to iconify (i.e. minimize) the specified `self`. Note that you shouldn’t assume the window is definitely iconified afterward, because other entities (e.g. the user or [window manager][gtk-X11-arch]) could deiconify it again, or there may not be a window manager in which case iconification isn’t possible, etc. But normally the window will end up iconified. Just don’t write code that crashes if not.",459,{"inputs":[{"name":"self"}],"output":null}],[10,"is_active","","Returns whether the window is part of the current active toplevel. (That is, the toplevel window receiving keystrokes.) The return value is `true` if the window is active toplevel itself, but also if it is, say, a `Plug` embedded in the active toplevel. You might use this function if you wanted to draw a widget differently in an active window from a widget in an inactive window. See `WindowExt::has_toplevel_focus`",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_maximized","","Retrieves the current maximized state of `self`.",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"maximize","","Asks to maximize `self`, so that it becomes full-screen. Note that you shouldn’t assume the window is definitely maximized afterward, because other entities (e.g. the user or [window manager][gtk-X11-arch]) could unmaximize it again, and not all window managers support maximization. But normally the window will end up maximized. Just don’t write code that crashes if not.",459,{"inputs":[{"name":"self"}],"output":null}],[10,"mnemonic_activate","","Activates the targets associated with the mnemonic. ## `keyval` the mnemonic ## `modifier` the modifiers",459,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"modifiertype"}],"output":{"name":"bool"}}],[10,"move_","","",459,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"parse_geometry","","Parses a standard X Window System geometry string - see the manual page for X (type “man X”) for details on this. `WindowExt::parse_geometry` does work on all GTK+ ports including Win32 but is primarily intended for an X environment.",459,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"present","","Presents a window to the user. This may mean raising the window in the stacking order, deiconifying it, moving it to the current desktop, and/or giving it the keyboard focus, possibly dependent on the user’s platform, window manager, and preferences.",459,{"inputs":[{"name":"self"}],"output":null}],[10,"present_with_time","","Presents a window to the user in response to a user interaction. If you need to present a window without a timestamp, use `WindowExt::present`. See `WindowExt::present` for details. ## `timestamp` the timestamp of the user interaction (typically a  button or key press event) which triggered this call",459,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"propagate_key_event","","Propagate a key press or release event to the focus widget and up the focus container chain until a widget handles `event`. This is normally called by the default ::key_press_event and ::key_release_event handlers for toplevel windows, however in some cases it may be useful to call this directly when overriding the standard key handling for a toplevel window. ## `event` a `gdk::EventKey`",459,{"inputs":[{"name":"self"},{"name":"eventkey"}],"output":{"name":"bool"}}],[10,"remove_accel_group","","Reverses the effects of `WindowExt::add_accel_group`. ## `accel_group` a `AccelGroup`",459,{"inputs":[{"name":"self"},{"name":"accelgroup"}],"output":null}],[10,"remove_mnemonic","","Removes a mnemonic from this window. ## `keyval` the mnemonic ## `target` the widget that gets activated by the mnemonic",459,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"p"}],"output":null}],[10,"reshow_with_initial_size","","Hides `self`, then reshows it, resetting the default size and position of the window. Used by GUI builders only.",459,{"inputs":[{"name":"self"}],"output":null}],[10,"resize","","Resizes the window as if the user had done so, obeying geometry constraints. The default geometry constraint is that windows may not be smaller than their size request; to override this constraint, call `WidgetExt::set_size_request` to set the window's request to a smaller value.",459,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"resize_grip_is_visible","","Determines whether a resize grip is visible for the specified window.",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"resize_to_geometry","","Like `WindowExt::resize`, but `width` and `height` are interpreted in terms of the base size and increment set with gtk_window_set_geometry_hints. ## `width` width in resize increments to resize the window to ## `height` height in resize increments to resize the window to",459,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_accept_focus","","Windows may set a hint asking the desktop environment not to receive the input focus. This function sets this hint. ## `setting` `true` to let this window receive input focus",459,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_application","","Sets or unsets the `Application` associated with the window.",459,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_attached_to","","Marks `self` as attached to `attach_widget`. This creates a logical binding between the window and the widget it belongs to, which is used by GTK+ to propagate information such as styling or accessibility to `self` as if it was a children of `attach_widget`.",459,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_decorated","","By default, windows are decorated with a title bar, resize controls, etc. Some [window managers][gtk-X11-arch] allow GTK+ to disable these decorations, creating a borderless window. If you set the decorated property to `false` using this function, GTK+ will do its best to convince the window manager not to decorate the window. Depending on the system, this function may not have any effect when called on a window that is already visible, so you should call it before calling `WidgetExt::show`.",459,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_default","","The default widget is the widget that’s activated when the user presses Enter in a dialog (for example). This function sets or unsets the default widget for a `Window`. When setting (rather than unsetting) the default widget it’s generally easier to call `WidgetExt::grab_default` on the widget. Before making a widget the default widget, you must call `WidgetExt::set_can_default` on the widget you’d like to make the default. ## `default_widget` widget to be the default, or `None`  to unset the default widget for the toplevel",459,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_default_geometry","","Like `WindowExt::set_default_size`, but `width` and `height` are interpreted in terms of the base size and increment set with gtk_window_set_geometry_hints. ## `width` width in resize increments, or -1 to unset the default width ## `height` height in resize increments, or -1 to unset the default height",459,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_default_size","","Sets the default size of a window. If the window’s “natural” size (its size request) is larger than the default, the default will be ignored. More generally, if the default size does not obey the geometry hints for the window (`WindowExt::set_geometry_hints` can be used to set these explicitly), the default size will be clamped to the nearest permitted size.",459,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_deletable","","By default, windows have a close button in the window frame. Some [window managers][gtk-X11-arch] allow GTK+ to disable this button. If you set the deletable property to `false` using this function, GTK+ will do its best to convince the window manager not to show a close button. Depending on the system, this function may not have any effect when called on a window that is already visible, so you should call it before calling `WidgetExt::show`.",459,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_destroy_with_parent","","If `setting` is `true`, then destroying the transient parent of `self` will also destroy `self` itself. This is useful for dialogs that shouldn’t persist beyond the lifetime of the main window they're associated with, for example. ## `setting` whether to destroy `self` with its transient parent",459,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_focus","","If `focus` is not the current focus widget, and is focusable, sets it as the focus widget for the window. If `focus` is `None`, unsets the focus widget for this window. To set the focus to a particular widget in the toplevel, it is usually more convenient to use `WidgetExt::grab_focus` instead of this function. ## `focus` widget to be the new focus widget, or `None` to unset  any focus widget for the toplevel window.",459,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_focus_on_map","","Windows may set a hint asking the desktop environment not to receive the input focus when the window is mapped. This function sets this hint. ## `setting` `true` to let this window receive input focus on map",459,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_focus_visible","","Sets the `Window:focus-visible` property. ## `setting` the new value",459,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_gravity","","Window gravity defines the meaning of coordinates passed to `WindowExt::move`. See `WindowExt::move` and `gdk::Gravity` for more details.",459,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[10,"set_has_resize_grip","","Sets whether `self` has a corner resize grip.",459,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_has_user_ref_count","","Tells GTK+ whether to drop its extra reference to the window when `WidgetExt::destroy` is called.",459,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_hide_titlebar_when_maximized","","If `setting` is `true`, then `self` will request that it’s titlebar should be hidden when maximized. This is useful for windows that don’t convey any information other than the application name in the titlebar, to put the available screen space to better use. If the underlying window system does not support the request, the setting will not have any effect.",459,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_icon","","Sets up the icon representing a `Window`. This icon is used when the window is minimized (also known as iconified). Some window managers or desktop environments may also place it in the window frame, or display it in other contexts.",459,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_icon_from_file","","Sets the icon for `self`. Warns on failure if `err` is `None`.",459,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"set_icon_list","","Sets up the icon representing a `Window`. The icon is used when the window is minimized (also known as iconified). Some window managers or desktop environments may also place it in the window frame, or display it in other contexts.",459,null],[10,"set_icon_name","","Sets the icon for the window from a named themed icon. See the docs for `IconTheme` for more details.",459,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_keep_above","","Asks to keep `self` above, so that it stays on top. Note that you shouldn’t assume the window is definitely above afterward, because other entities (e.g. the user or [window manager][gtk-X11-arch]) could not keep it above, and not all window managers support keeping windows above. But normally the window will end kept above. Just don’t write code that crashes if not.",459,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_keep_below","","Asks to keep `self` below, so that it stays in bottom. Note that you shouldn’t assume the window is definitely below afterward, because other entities (e.g. the user or [window manager][gtk-X11-arch]) could not keep it below, and not all window managers support putting windows below. But normally the window will be kept below. Just don’t write code that crashes if not.",459,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_mnemonic_modifier","","Sets the mnemonic modifier for this window. ## `modifier` the modifier mask used to activate  mnemonics on this window.",459,{"inputs":[{"name":"self"},{"name":"modifiertype"}],"output":null}],[10,"set_mnemonics_visible","","Sets the `Window:mnemonics-visible` property. ## `setting` the new value",459,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_modal","","Sets a window modal or non-modal. Modal windows prevent interaction with other windows in the same application. To keep modal dialogs on top of main application windows, use `WindowExt::set_transient_for` to make the dialog transient for the parent; most [window managers][gtk-X11-arch] will then disallow lowering the dialog below the parent. ## `modal` whether the window is modal",459,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_position","","Sets a position constraint for this window. If the old or new constraint is `WindowPosition::CenterAlways`, this will also cause the window to be repositioned to satisfy the new constraint. ## `position` a position constraint.",459,{"inputs":[{"name":"self"},{"name":"windowposition"}],"output":null}],[10,"set_resizable","","Sets whether the user can resize a window. Windows are user resizable by default. ## `resizable` `true` if the user can resize this window",459,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_role","","This function is only useful on X11, not with other GTK+ targets.",459,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_screen","","Sets the `gdk::Screen` where the `self` is displayed; if the window is already mapped, it will be unmapped, and then remapped on the new screen. ## `screen` a `gdk::Screen`.",459,{"inputs":[{"name":"self"},{"name":"screen"}],"output":null}],[10,"set_skip_pager_hint","","Windows may set a hint asking the desktop environment not to display the window in the pager. This function sets this hint. (A \"pager\" is any desktop navigation tool such as a workspace switcher that displays a thumbnail representation of the windows on the screen.) ## `setting` `true` to keep this window from appearing in the pager",459,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_skip_taskbar_hint","","Windows may set a hint asking the desktop environment not to display the window in the task bar. This function sets this hint. ## `setting` `true` to keep this window from appearing in the task bar",459,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_startup_id","","Startup notification identifiers are used by desktop environment to track application startup, to provide user feedback and other features. This function changes the corresponding property on the underlying `gdk::Window`. Normally, startup identifier is managed automatically and you should only use this function in special cases like transferring focus from other processes. You should use this function before calling `WindowExt::present` or any equivalent function generating a window map event.",459,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_title","","Sets the title of the `Window`. The title of a window will be displayed in its title bar; on the X Window System, the title bar is rendered by the [window manager][gtk-X11-arch], so exactly how the title appears to users may vary according to a user’s exact configuration. The title should help a user distinguish this window from other windows they may have open. A good title might include the application name and current document filename, for example. ## `title` title of the window",459,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_titlebar","","Sets a custom titlebar for `self`.",459,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_transient_for","","Dialog windows should be set transient for the main application window they were spawned from. This allows [window managers][gtk-X11-arch] to e.g. keep the dialog on top of the main window, or center the dialog over the main window. `Dialog::new_with_buttons` and other convenience functions in GTK+ will sometimes call `WindowExt::set_transient_for` on your behalf.",459,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_type_hint","","By setting the type hint for the window, you allow the window manager to decorate and handle the window in a way which is suitable to the function of the window in your application.",459,{"inputs":[{"name":"self"},{"name":"windowtypehint"}],"output":null}],[10,"set_urgency_hint","","Windows may set a hint asking the desktop environment to draw the users attention to the window. This function sets this hint. ## `setting` `true` to mark this window as urgent",459,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_wmclass","","Don’t use this function. It sets the X Window System “class” and “name” hints for a window. According to the ICCCM, you should always set these to the same value for all windows in an application, and GTK+ sets them to that value by default, so calling this function is sort of pointless. However, you may want to call `WindowExt::set_role` on each window in your application, for the benefit of the session manager. Setting the role allows the window manager to restore window positions when loading a saved session. ## `wmclass_name` window name hint ## `wmclass_class` window class hint",459,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":null}],[10,"stick","","Asks to stick `self`, which means that it will appear on all user desktops. Note that you shouldn’t assume the window is definitely stuck afterward, because other entities (e.g. the user or [window manager][gtk-X11-arch] could unstick it again, and some window managers do not support sticking windows. But normally the window will end up stuck. Just don't write code that crashes if not.",459,{"inputs":[{"name":"self"}],"output":null}],[10,"unfullscreen","","Asks to toggle off the fullscreen state for `self`. Note that you shouldn’t assume the window is definitely not full screen afterward, because other entities (e.g. the user or [window manager][gtk-X11-arch]) could fullscreen it again, and not all window managers honor requests to unfullscreen windows. But normally the window will end up restored to its normal state. Just don’t write code that crashes if not.",459,{"inputs":[{"name":"self"}],"output":null}],[10,"unmaximize","","Asks to unmaximize `self`. Note that you shouldn’t assume the window is definitely unmaximized afterward, because other entities (e.g. the user or [window manager][gtk-X11-arch]) could maximize it again, and not all window managers honor requests to unmaximize. But normally the window will end up unmaximized. Just don’t write code that crashes if not.",459,{"inputs":[{"name":"self"}],"output":null}],[10,"unstick","","Asks to unstick `self`, which means that it will appear on only one of the user’s desktops. Note that you shouldn’t assume the window is definitely unstuck afterward, because other entities (e.g. the user or [window manager][gtk-X11-arch]) could stick it again. But normally the window will end up stuck. Just don’t write code that crashes if not.",459,{"inputs":[{"name":"self"}],"output":null}],[10,"get_property_default_height","","",459,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_default_height","","",459,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_default_width","","",459,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_default_width","","",459,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_has_toplevel_focus","","",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_is_active","","",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_is_maximized","","",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_resize_grip_visible","","",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_type","","",459,{"inputs":[{"name":"self"}],"output":{"name":"windowtype"}}],[10,"get_property_window_position","","",459,{"inputs":[{"name":"self"}],"output":{"name":"windowposition"}}],[10,"set_property_window_position","","",459,{"inputs":[{"name":"self"},{"name":"windowposition"}],"output":null}],[10,"connect_activate_default","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_activate_focus","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_enable_debugging","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_keys_changed","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_set_focus","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_accept_focus_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_application_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_attached_to_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_decorated_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_default_height_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_default_width_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_deletable_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_destroy_with_parent_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_focus_on_map_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_focus_visible_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gravity_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_has_resize_grip_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_has_toplevel_focus_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_hide_titlebar_when_maximized_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_icon_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_icon_name_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_is_active_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_is_maximized_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_mnemonics_visible_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_modal_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_resizable_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_resize_grip_visible_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_role_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_screen_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_skip_pager_hint_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_skip_taskbar_hint_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_startup_id_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_title_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_transient_for_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_type_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_type_hint_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_urgency_hint_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_window_position_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"WindowGroupExt","","",null,null],[10,"add_window","","",460,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"get_current_device_grab","","",460,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[10,"get_current_grab","","",460,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"list_windows","","",460,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"remove_window","","",460,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[8,"AppChooserExt","","Trait containing all `AppChooser` methods.",null,null],[10,"get_app_info","","Returns the currently selected application.",461,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_content_type","","Returns the current value of the `AppChooser:content-type` property.",461,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"refresh","","Reloads the list of applications.",461,{"inputs":[{"name":"self"}],"output":null}],[8,"AssistantExtManual","","",null,null],[10,"set_forward_page_func","","",462,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[8,"ColorButtonExtManual","","",null,null],[10,"new_with_color","","",463,{"inputs":[{"name":"color"}],"output":{"name":"colorbutton"}}],[10,"get_color","","",463,{"inputs":[{"name":"self"}],"output":{"name":"color"}}],[10,"set_color","","",463,{"inputs":[{"name":"self"},{"name":"color"}],"output":null}],[8,"ColorChooserExtManual","","",null,null],[10,"add_palette","","",464,null],[8,"CssProviderExtManual","","",null,null],[10,"load_from_data","","",465,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[8,"DialogExtManual","","",null,null],[10,"add_buttons","","",466,null],[8,"DragContextExtManual","","",null,null],[10,"drag_finish","","",467,{"inputs":[{"name":"self"},{"name":"bool"},{"name":"bool"},{"name":"u32"}],"output":null}],[10,"drag_cancel","","",467,{"inputs":[{"name":"self"}],"output":null}],[10,"drag_get_source_widget","","",467,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"drag_set_icon_default","","",467,{"inputs":[{"name":"self"}],"output":null}],[10,"drag_set_icon_gicon","","",467,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"drag_set_icon_name","","",467,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"drag_set_icon_pixbuf","","",467,{"inputs":[{"name":"self"},{"name":"pixbuf"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"drag_set_icon_stock","","",467,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"drag_set_icon_surface","","",467,{"inputs":[{"name":"self"},{"name":"surface"}],"output":null}],[10,"drag_set_icon_widget","","",467,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"},{"name":"i32"}],"output":null}],[8,"ListStoreExtManual","","",null,null],[10,"insert_with_values","","",468,null],[10,"reorder","","",468,null],[10,"set","","",468,null],[10,"set_value","","",468,{"inputs":[{"name":"self"},{"name":"treeiter"},{"name":"u32"},{"name":"value"}],"output":null}],[8,"MenuExtManual","","",null,null],[10,"popup","","",469,{"inputs":[{"name":"self"},{"name":"option"},{"name":"option"},{"name":"f"},{"name":"u32"},{"name":"u32"}],"output":null}],[10,"popup_easy","","",469,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":null}],[8,"NotebookExtManual","","",null,null],[10,"append_page","","",470,{"inputs":[{"name":"self"},{"name":"t"},{"name":"option"}],"output":{"name":"u32"}}],[10,"append_page_menu","","",470,{"inputs":[{"name":"self"},{"name":"t"},{"name":"option"},{"name":"option"}],"output":{"name":"u32"}}],[10,"get_current_page","","",470,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_n_pages","","",470,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_nth_page","","",470,{"inputs":[{"name":"self"},{"name":"option"}],"output":{"name":"option"}}],[10,"insert_page","","",470,{"inputs":[{"name":"self"},{"name":"t"},{"name":"option"},{"name":"option"}],"output":{"name":"u32"}}],[10,"insert_page_menu","","",470,{"inputs":[{"name":"self"},{"name":"t"},{"name":"option"},{"name":"option"},{"name":"option"}],"output":{"name":"u32"}}],[10,"page_num","","",470,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"option"}}],[10,"prepend_page","","",470,{"inputs":[{"name":"self"},{"name":"t"},{"name":"option"}],"output":{"name":"u32"}}],[10,"prepend_page_menu","","",470,{"inputs":[{"name":"self"},{"name":"t"},{"name":"option"},{"name":"option"}],"output":{"name":"u32"}}],[10,"remove_page","","",470,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"reorder_child","","",470,{"inputs":[{"name":"self"},{"name":"t"},{"name":"option"}],"output":null}],[10,"set_current_page","","",470,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[8,"SwitchExtManual","","",null,null],[10,"connect_changed_active","","",471,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"TextBufferExtManual","","",null,null],[10,"connect_insert_text","","",472,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"TreeModelFilterExtManual","","",null,null],[10,"set_visible_func","","",473,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[8,"TreeSortableExtManual","","",null,null],[10,"set_default_sort_func","","",474,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[10,"set_sort_func","","",474,{"inputs":[{"name":"self"},{"name":"sortcolumn"},{"name":"f"}],"output":null}],[10,"get_sort_column_id","","",474,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_sort_column_id","","",474,{"inputs":[{"name":"self"},{"name":"sortcolumn"},{"name":"sorttype"}],"output":null}],[10,"set_unsorted","","",474,{"inputs":[{"name":"self"}],"output":null}],[8,"TreeStoreExtManual","","",null,null],[10,"insert_with_values","","",475,null],[10,"reorder","","",475,null],[10,"set","","",475,null],[10,"set_value","","",475,{"inputs":[{"name":"self"},{"name":"treeiter"},{"name":"u32"},{"name":"value"}],"output":null}],[8,"WidgetExtManual","","",null,null],[10,"drag_dest_set","","",476,null],[10,"drag_source_set","","",476,null],[10,"intersect","","",476,{"inputs":[{"name":"self"},{"name":"rectangle"},{"name":"option"}],"output":{"name":"bool"}}],[10,"override_font","","",476,{"inputs":[{"name":"self"},{"name":"fontdescription"}],"output":null}],[10,"connect_map_event","","",476,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_unmap_event","","",476,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"EditableSignals","","",null,null],[10,"connect_changed","","",477,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_delete_text","","",477,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_insert_text","","",477,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"SpinButtonSignals","","",null,null],[10,"connect_change_value","","",478,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_input","","",478,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_output","","",478,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_value_changed","","",478,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_wrapped","","",478,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[0,"functions","gtk","",null,null],[5,"accel_groups_activate","gtk::functions","",null,{"inputs":[{"name":"p"},{"name":"u32"},{"name":"modifiertype"}],"output":{"name":"bool"}}],[5,"accel_groups_from_object","","",null,{"inputs":[{"name":"p"}],"output":{"name":"vec"}}],[5,"accelerator_get_default_mod_mask","","",null,{"inputs":[],"output":{"name":"modifiertype"}}],[5,"accelerator_get_label","","",null,{"inputs":[{"name":"u32"},{"name":"modifiertype"}],"output":{"name":"option"}}],[5,"accelerator_get_label_with_keycode","","",null,{"inputs":[{"name":"p"},{"name":"u32"},{"name":"u32"},{"name":"modifiertype"}],"output":{"name":"option"}}],[5,"accelerator_name","","",null,{"inputs":[{"name":"u32"},{"name":"modifiertype"}],"output":{"name":"option"}}],[5,"accelerator_name_with_keycode","","",null,{"inputs":[{"name":"p"},{"name":"u32"},{"name":"u32"},{"name":"modifiertype"}],"output":{"name":"option"}}],[5,"accelerator_parse","","",null,null],[5,"accelerator_set_default_mod_mask","","",null,{"inputs":[{"name":"modifiertype"}],"output":null}],[5,"accelerator_valid","","",null,{"inputs":[{"name":"u32"},{"name":"modifiertype"}],"output":{"name":"bool"}}],[5,"alternative_dialog_button_order","","",null,{"inputs":[{"name":"p"}],"output":{"name":"bool"}}],[5,"bindings_activate","","",null,{"inputs":[{"name":"p"},{"name":"u32"},{"name":"modifiertype"}],"output":{"name":"bool"}}],[5,"bindings_activate_event","","",null,{"inputs":[{"name":"p"},{"name":"eventkey"}],"output":{"name":"bool"}}],[5,"cairo_should_draw_window","","",null,{"inputs":[{"name":"context"},{"name":"window"}],"output":{"name":"bool"}}],[5,"cairo_transform_to_window","","",null,{"inputs":[{"name":"context"},{"name":"p"},{"name":"window"}],"output":null}],[5,"device_grab_add","","",null,{"inputs":[{"name":"p"},{"name":"q"},{"name":"bool"}],"output":null}],[5,"device_grab_remove","","",null,{"inputs":[{"name":"p"},{"name":"q"}],"output":null}],[5,"disable_setlocale","","",null,{"inputs":[],"output":null}],[5,"events_pending","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"false_","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"get_current_event","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"get_current_event_device","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"get_current_event_state","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"get_current_event_time","","",null,{"inputs":[],"output":{"name":"u32"}}],[5,"get_debug_flags","","",null,{"inputs":[],"output":{"name":"u32"}}],[5,"get_default_language","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"get_event_widget","","",null,{"inputs":[{"name":"event"}],"output":{"name":"option"}}],[5,"get_locale_direction","","",null,{"inputs":[],"output":{"name":"textdirection"}}],[5,"grab_get_current","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"main","","",null,{"inputs":[],"output":null}],[5,"main_do_event","","",null,{"inputs":[{"name":"event"}],"output":null}],[5,"main_iteration","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"main_iteration_do","","",null,{"inputs":[{"name":"bool"}],"output":{"name":"bool"}}],[5,"main_level","","",null,{"inputs":[],"output":{"name":"u32"}}],[5,"print_run_page_setup_dialog","","",null,{"inputs":[{"name":"q"},{"name":"r"},{"name":"printsettings"}],"output":{"name":"option"}}],[5,"propagate_event","","",null,{"inputs":[{"name":"p"},{"name":"event"}],"output":null}],[5,"render_activity","","",null,{"inputs":[{"name":"stylecontext"},{"name":"context"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[5,"render_arrow","","",null,{"inputs":[{"name":"stylecontext"},{"name":"context"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[5,"render_background","","",null,{"inputs":[{"name":"stylecontext"},{"name":"context"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[5,"render_background_get_clip","","",null,{"inputs":[{"name":"stylecontext"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"rectangle"}}],[5,"render_check","","",null,{"inputs":[{"name":"stylecontext"},{"name":"context"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[5,"render_expander","","",null,{"inputs":[{"name":"stylecontext"},{"name":"context"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[5,"render_extension","","",null,{"inputs":[{"name":"stylecontext"},{"name":"context"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"positiontype"}],"output":null}],[5,"render_focus","","",null,{"inputs":[{"name":"stylecontext"},{"name":"context"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[5,"render_frame","","",null,{"inputs":[{"name":"stylecontext"},{"name":"context"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[5,"render_frame_gap","","",null,{"inputs":[{"name":"stylecontext"},{"name":"context"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"positiontype"},{"name":"f64"},{"name":"f64"}],"output":null}],[5,"render_handle","","",null,{"inputs":[{"name":"stylecontext"},{"name":"context"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[5,"render_icon","","",null,{"inputs":[{"name":"stylecontext"},{"name":"context"},{"name":"pixbuf"},{"name":"f64"},{"name":"f64"}],"output":null}],[5,"render_icon_pixbuf","","",null,{"inputs":[{"name":"stylecontext"},{"name":"iconsource"},{"name":"i32"}],"output":{"name":"option"}}],[5,"render_icon_surface","","",null,{"inputs":[{"name":"stylecontext"},{"name":"context"},{"name":"surface"},{"name":"f64"},{"name":"f64"}],"output":null}],[5,"render_insertion_cursor","","",null,{"inputs":[{"name":"stylecontext"},{"name":"context"},{"name":"f64"},{"name":"f64"},{"name":"layout"},{"name":"i32"},{"name":"direction"}],"output":null}],[5,"render_layout","","",null,{"inputs":[{"name":"stylecontext"},{"name":"context"},{"name":"f64"},{"name":"f64"},{"name":"layout"}],"output":null}],[5,"render_line","","",null,{"inputs":[{"name":"stylecontext"},{"name":"context"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[5,"render_option","","",null,{"inputs":[{"name":"stylecontext"},{"name":"context"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[5,"render_slider","","",null,{"inputs":[{"name":"stylecontext"},{"name":"context"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"orientation"}],"output":null}],[5,"rgb_to_hsv","","",null,null],[5,"selection_add_target","","",null,{"inputs":[{"name":"p"},{"name":"atom"},{"name":"atom"},{"name":"u32"}],"output":null}],[5,"selection_clear_targets","","",null,{"inputs":[{"name":"p"},{"name":"atom"}],"output":null}],[5,"selection_convert","","",null,{"inputs":[{"name":"p"},{"name":"atom"},{"name":"atom"},{"name":"u32"}],"output":{"name":"bool"}}],[5,"selection_owner_set","","",null,{"inputs":[{"name":"q"},{"name":"atom"},{"name":"u32"}],"output":{"name":"bool"}}],[5,"selection_owner_set_for_display","","",null,{"inputs":[{"name":"display"},{"name":"q"},{"name":"atom"},{"name":"u32"}],"output":{"name":"bool"}}],[5,"selection_remove_all","","",null,{"inputs":[{"name":"p"}],"output":null}],[5,"set_debug_flags","","",null,{"inputs":[{"name":"u32"}],"output":null}],[5,"show_uri","","",null,{"inputs":[{"name":"p"},{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[5,"show_uri_on_window","","",null,{"inputs":[{"name":"q"},{"name":"str"},{"name":"u32"}],"output":{"name":"result"}}],[5,"stock_list_ids","","",null,{"inputs":[],"output":{"name":"vec"}}],[5,"targets_include_image","","",null,null],[5,"targets_include_rich_text","","",null,null],[5,"targets_include_text","","",null,null],[5,"targets_include_uri","","",null,null],[5,"test_create_simple_window","","",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"option"}}],[5,"test_find_label","","",null,{"inputs":[{"name":"p"},{"name":"str"}],"output":{"name":"option"}}],[5,"test_find_sibling","","",null,{"inputs":[{"name":"p"},{"name":"type"}],"output":{"name":"option"}}],[5,"test_find_widget","","",null,{"inputs":[{"name":"p"},{"name":"str"},{"name":"type"}],"output":{"name":"option"}}],[5,"test_register_all_types","","",null,{"inputs":[],"output":null}],[5,"test_slider_get_value","","",null,{"inputs":[{"name":"p"}],"output":{"name":"f64"}}],[5,"test_slider_set_perc","","",null,{"inputs":[{"name":"p"},{"name":"f64"}],"output":null}],[5,"test_spin_button_click","","",null,{"inputs":[{"name":"spinbutton"},{"name":"u32"},{"name":"bool"}],"output":{"name":"bool"}}],[5,"test_text_get","","",null,{"inputs":[{"name":"p"}],"output":{"name":"option"}}],[5,"test_text_set","","",null,{"inputs":[{"name":"p"},{"name":"str"}],"output":null}],[5,"test_widget_click","","",null,{"inputs":[{"name":"p"},{"name":"u32"},{"name":"modifiertype"}],"output":{"name":"bool"}}],[5,"test_widget_send_key","","",null,{"inputs":[{"name":"p"},{"name":"u32"},{"name":"modifiertype"}],"output":{"name":"bool"}}],[5,"test_widget_wait_for_draw","","",null,{"inputs":[{"name":"p"}],"output":null}],[5,"tree_get_row_drag_data","","",null,{"inputs":[{"name":"selectiondata"}],"output":{"name":"option"}}],[5,"tree_set_row_drag_data","","",null,{"inputs":[{"name":"selectiondata"},{"name":"p"},{"name":"treepath"}],"output":{"name":"bool"}}],[5,"true_","","",null,{"inputs":[],"output":{"name":"bool"}}],[17,"STYLE_PROVIDER_PRIORITY_FALLBACK","gtk","",null,null],[17,"STYLE_PROVIDER_PRIORITY_THEME","","",null,null],[17,"STYLE_PROVIDER_PRIORITY_SETTINGS","","",null,null],[17,"STYLE_PROVIDER_PRIORITY_APPLICATION","","",null,null],[17,"STYLE_PROVIDER_PRIORITY_USER","","",null,null],[17,"ACCEL_VISIBLE","","",null,null],[17,"ACCEL_LOCKED","","",null,null],[17,"ACCEL_MASK","","",null,null],[17,"APPLICATION_INHIBIT_LOGOUT","","",null,null],[17,"APPLICATION_INHIBIT_SWITCH","","",null,null],[17,"APPLICATION_INHIBIT_SUSPEND","","",null,null],[17,"APPLICATION_INHIBIT_IDLE","","",null,null],[17,"CALENDAR_SHOW_HEADING","","",null,null],[17,"CALENDAR_SHOW_DAY_NAMES","","",null,null],[17,"CALENDAR_NO_MONTH_CHANGE","","",null,null],[17,"CALENDAR_SHOW_WEEK_NUMBERS","","",null,null],[17,"CALENDAR_SHOW_DETAILS","","",null,null],[17,"CELL_RENDERER_SELECTED","","",null,null],[17,"CELL_RENDERER_PRELIT","","",null,null],[17,"CELL_RENDERER_INSENSITIVE","","",null,null],[17,"CELL_RENDERER_SORTED","","",null,null],[17,"CELL_RENDERER_FOCUSED","","",null,null],[17,"CELL_RENDERER_EXPANDABLE","","",null,null],[17,"CELL_RENDERER_EXPANDED","","",null,null],[17,"DEST_DEFAULT_MOTION","","",null,null],[17,"DEST_DEFAULT_HIGHLIGHT","","",null,null],[17,"DEST_DEFAULT_DROP","","",null,null],[17,"DEST_DEFAULT_ALL","","",null,null],[17,"DIALOG_MODAL","","",null,null],[17,"DIALOG_DESTROY_WITH_PARENT","","",null,null],[17,"DIALOG_USE_HEADER_BAR","","",null,null],[17,"FILE_FILTER_FILENAME","","",null,null],[17,"FILE_FILTER_URI","","",null,null],[17,"FILE_FILTER_DISPLAY_NAME","","",null,null],[17,"FILE_FILTER_MIME_TYPE","","",null,null],[17,"ICON_LOOKUP_NO_SVG","","",null,null],[17,"ICON_LOOKUP_FORCE_SVG","","",null,null],[17,"ICON_LOOKUP_USE_BUILTIN","","",null,null],[17,"ICON_LOOKUP_GENERIC_FALLBACK","","",null,null],[17,"ICON_LOOKUP_FORCE_SIZE","","",null,null],[17,"ICON_LOOKUP_FORCE_REGULAR","","",null,null],[17,"ICON_LOOKUP_FORCE_SYMBOLIC","","",null,null],[17,"ICON_LOOKUP_DIR_LTR","","",null,null],[17,"ICON_LOOKUP_DIR_RTL","","",null,null],[17,"INPUT_HINT_NONE","","",null,null],[17,"INPUT_HINT_SPELLCHECK","","",null,null],[17,"INPUT_HINT_NO_SPELLCHECK","","",null,null],[17,"INPUT_HINT_WORD_COMPLETION","","",null,null],[17,"INPUT_HINT_LOWERCASE","","",null,null],[17,"INPUT_HINT_UPPERCASE_CHARS","","",null,null],[17,"INPUT_HINT_UPPERCASE_WORDS","","",null,null],[17,"INPUT_HINT_UPPERCASE_SENTENCES","","",null,null],[17,"INPUT_HINT_INHIBIT_OSK","","",null,null],[17,"INPUT_HINT_VERTICAL_WRITING","","",null,null],[17,"JUNCTION_NONE","","",null,null],[17,"JUNCTION_CORNER_TOPLEFT","","",null,null],[17,"JUNCTION_CORNER_TOPRIGHT","","",null,null],[17,"JUNCTION_CORNER_BOTTOMLEFT","","",null,null],[17,"JUNCTION_CORNER_BOTTOMRIGHT","","",null,null],[17,"JUNCTION_TOP","","",null,null],[17,"JUNCTION_BOTTOM","","",null,null],[17,"JUNCTION_LEFT","","",null,null],[17,"JUNCTION_RIGHT","","",null,null],[17,"PLACES_OPEN_NORMAL","","",null,null],[17,"PLACES_OPEN_NEW_TAB","","",null,null],[17,"PLACES_OPEN_NEW_WINDOW","","",null,null],[17,"RECENT_FILTER_URI","","",null,null],[17,"RECENT_FILTER_DISPLAY_NAME","","",null,null],[17,"RECENT_FILTER_MIME_TYPE","","",null,null],[17,"RECENT_FILTER_APPLICATION","","",null,null],[17,"RECENT_FILTER_GROUP","","",null,null],[17,"RECENT_FILTER_AGE","","",null,null],[17,"REGION_EVEN","","",null,null],[17,"REGION_ODD","","",null,null],[17,"REGION_FIRST","","",null,null],[17,"REGION_LAST","","",null,null],[17,"REGION_ONLY","","",null,null],[17,"REGION_SORTED","","",null,null],[17,"STATE_FLAG_NORMAL","","",null,null],[17,"STATE_FLAG_ACTIVE","","",null,null],[17,"STATE_FLAG_PRELIGHT","","",null,null],[17,"STATE_FLAG_SELECTED","","",null,null],[17,"STATE_FLAG_INSENSITIVE","","",null,null],[17,"STATE_FLAG_INCONSISTENT","","",null,null],[17,"STATE_FLAG_FOCUSED","","",null,null],[17,"STATE_FLAG_BACKDROP","","",null,null],[17,"STATE_FLAG_DIR_LTR","","",null,null],[17,"STATE_FLAG_DIR_RTL","","",null,null],[17,"STATE_FLAG_LINK","","",null,null],[17,"STATE_FLAG_VISITED","","",null,null],[17,"STATE_FLAG_CHECKED","","",null,null],[17,"STATE_FLAG_DROP_ACTIVE","","",null,null],[17,"STYLE_CONTEXT_PRINT_NONE","","",null,null],[17,"STYLE_CONTEXT_PRINT_RECURSE","","",null,null],[17,"STYLE_CONTEXT_PRINT_SHOW_STYLE","","",null,null],[17,"TARGET_SAME_APP","","",null,null],[17,"TARGET_SAME_WIDGET","","",null,null],[17,"TARGET_OTHER_APP","","",null,null],[17,"TARGET_OTHER_WIDGET","","",null,null],[17,"TEXT_SEARCH_VISIBLE_ONLY","","",null,null],[17,"TEXT_SEARCH_TEXT_ONLY","","",null,null],[17,"TEXT_SEARCH_CASE_INSENSITIVE","","",null,null],[17,"TOOL_PALETTE_DRAG_ITEMS","","",null,null],[17,"TOOL_PALETTE_DRAG_GROUPS","","",null,null],[17,"TREE_MODEL_ITERS_PERSIST","","",null,null],[17,"TREE_MODEL_LIST_ONLY","","",null,null],[8,"AboutDialogExt","","",null,null],[10,"add_credit_section","","",299,null],[10,"get_artists","","",299,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_authors","","",299,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_comments","","",299,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_copyright","","",299,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_documenters","","",299,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_license","","",299,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_license_type","","",299,{"inputs":[{"name":"self"}],"output":{"name":"license"}}],[10,"get_logo","","",299,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_logo_icon_name","","",299,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_program_name","","",299,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_translator_credits","","",299,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_version","","",299,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_website","","",299,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_website_label","","",299,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_wrap_license","","",299,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_artists","","",299,null],[10,"set_authors","","",299,null],[10,"set_comments","","",299,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_copyright","","",299,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_documenters","","",299,null],[10,"set_license","","",299,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_license_type","","",299,{"inputs":[{"name":"self"},{"name":"license"}],"output":null}],[10,"set_logo","","",299,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_logo_icon_name","","",299,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_program_name","","",299,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_translator_credits","","",299,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_version","","",299,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_website","","",299,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_website_label","","",299,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_wrap_license","","",299,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_activate_link","","",299,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_artists_notify","","",299,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_authors_notify","","",299,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_comments_notify","","",299,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_copyright_notify","","",299,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_documenters_notify","","",299,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_license_notify","","",299,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_license_type_notify","","",299,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_logo_notify","","",299,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_logo_icon_name_notify","","",299,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_program_name_notify","","",299,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_translator_credits_notify","","",299,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_version_notify","","",299,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_website_notify","","",299,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_website_label_notify","","",299,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_wrap_license_notify","","",299,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"AccelGroupExt","","",null,null],[10,"disconnect_key","","",300,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"modifiertype"}],"output":{"name":"bool"}}],[10,"get_is_locked","","",300,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_modifier_mask","","",300,{"inputs":[{"name":"self"}],"output":{"name":"modifiertype"}}],[10,"lock","","",300,{"inputs":[{"name":"self"}],"output":null}],[10,"unlock","","",300,{"inputs":[{"name":"self"}],"output":null}],[10,"connect_accel_activate","","",300,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_is_locked_notify","","",300,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_modifier_mask_notify","","",300,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ActionBarExt","","",null,null],[10,"get_center_widget","","",301,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"pack_end","","",301,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"pack_start","","",301,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_center_widget","","",301,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"get_child_pack_type","","",301,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"packtype"}}],[10,"set_child_pack_type","","",301,{"inputs":[{"name":"self"},{"name":"t"},{"name":"packtype"}],"output":null}],[10,"get_child_position","","",301,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"i32"}}],[10,"set_child_position","","",301,{"inputs":[{"name":"self"},{"name":"t"},{"name":"i32"}],"output":null}],[8,"ActionableExt","","Trait containing all `Actionable` methods.",null,null],[10,"get_action_name","","Gets the action name for `self`.",302,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_action_target_value","","Gets the current target value of `actionabe`.",302,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_action_name","","Specifies the name of the action with which this widget should be associated. If `action_name` is `None` then the widget will be unassociated from any previous action.",302,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_action_target_value","","Sets the target value of an actionable widget.",302,{"inputs":[{"name":"self"},{"name":"variant"}],"output":null}],[10,"set_detailed_action_name","","Sets the action-name and associated string target value of an actionable widget.",302,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"connect_property_action_name_notify","","",302,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"AdjustmentExt","","",null,null],[10,"changed","","",303,{"inputs":[{"name":"self"}],"output":null}],[10,"clamp_page","","",303,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"configure","","",303,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"get_lower","","",303,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_minimum_increment","","",303,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_page_increment","","",303,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_page_size","","",303,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_step_increment","","",303,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_upper","","",303,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_value","","",303,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"set_lower","","",303,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"set_page_increment","","",303,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"set_page_size","","",303,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"set_step_increment","","",303,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"set_upper","","",303,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"set_value","","",303,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"value_changed","","",303,{"inputs":[{"name":"self"}],"output":null}],[10,"connect_changed","","",303,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_value_changed","","",303,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_lower_notify","","",303,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_page_increment_notify","","",303,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_page_size_notify","","",303,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_step_increment_notify","","",303,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_upper_notify","","",303,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_value_notify","","",303,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"AlignmentExt","","",null,null],[10,"get_padding","","",304,null],[10,"set","","",304,{"inputs":[{"name":"self"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":null}],[10,"set_padding","","",304,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[10,"get_property_bottom_padding","","",304,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_bottom_padding","","",304,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_left_padding","","",304,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_left_padding","","",304,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_right_padding","","",304,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_right_padding","","",304,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_top_padding","","",304,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_top_padding","","",304,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_xalign","","",304,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_xalign","","",304,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"get_property_xscale","","",304,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_xscale","","",304,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"get_property_yalign","","",304,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_yalign","","",304,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"get_property_yscale","","",304,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_yscale","","",304,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"connect_property_bottom_padding_notify","","",304,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_left_padding_notify","","",304,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_right_padding_notify","","",304,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_top_padding_notify","","",304,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_xalign_notify","","",304,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_xscale_notify","","",304,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_yalign_notify","","",304,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_yscale_notify","","",304,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"AppChooserDialogExt","","",null,null],[10,"get_heading","","",305,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_widget","","",305,{"inputs":[{"name":"self"}],"output":{"name":"widget"}}],[10,"set_heading","","",305,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"connect_property_gfile_notify","","",305,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_heading_notify","","",305,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"AppChooserWidgetExt","","",null,null],[10,"get_default_text","","",306,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_show_all","","",306,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_default","","",306,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_fallback","","",306,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_other","","",306,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_recommended","","",306,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_default_text","","",306,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_show_all","","",306,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_default","","",306,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_fallback","","",306,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_other","","",306,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_recommended","","",306,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_application_activated","","",306,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_application_selected","","",306,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_populate_popup","","",306,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_default_text_notify","","",306,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_all_notify","","",306,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_default_notify","","",306,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_fallback_notify","","",306,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_other_notify","","",306,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_recommended_notify","","",306,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"GtkApplicationExt","","",null,null],[10,"add_accelerator","","",307,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"},{"name":"p"}],"output":null}],[10,"add_window","","",307,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"get_accels_for_action","","",307,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"vec"}}],[10,"get_actions_for_accel","","",307,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"vec"}}],[10,"get_active_window","","",307,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_app_menu","","",307,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_menu_by_id","","",307,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_menubar","","",307,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_window_by_id","","",307,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[10,"get_windows","","",307,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"inhibit","","",307,{"inputs":[{"name":"self"},{"name":"q"},{"name":"applicationinhibitflags"},{"name":"r"}],"output":{"name":"u32"}}],[10,"is_inhibited","","",307,{"inputs":[{"name":"self"},{"name":"applicationinhibitflags"}],"output":{"name":"bool"}}],[10,"list_action_descriptions","","",307,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"prefers_app_menu","","",307,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"remove_accelerator","","",307,{"inputs":[{"name":"self"},{"name":"str"},{"name":"p"}],"output":null}],[10,"remove_window","","",307,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_accels_for_action","","",307,null],[10,"set_app_menu","","",307,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_menubar","","",307,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"uninhibit","","",307,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_active_window","","",307,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_property_register_session","","",307,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_register_session","","",307,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_window_added","","",307,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_window_removed","","",307,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_active_window_notify","","",307,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_app_menu_notify","","",307,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_menubar_notify","","",307,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_register_session_notify","","",307,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ApplicationWindowExt","","",null,null],[10,"get_help_overlay","","",308,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_id","","",308,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_show_menubar","","",308,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_help_overlay","","",308,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_show_menubar","","",308,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_property_show_menubar_notify","","",308,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ArrowExt","","",null,null],[10,"set","","",309,{"inputs":[{"name":"self"},{"name":"arrowtype"},{"name":"shadowtype"}],"output":null}],[10,"get_property_arrow_type","","",309,{"inputs":[{"name":"self"}],"output":{"name":"arrowtype"}}],[10,"set_property_arrow_type","","",309,{"inputs":[{"name":"self"},{"name":"arrowtype"}],"output":null}],[10,"get_property_shadow_type","","",309,{"inputs":[{"name":"self"}],"output":{"name":"shadowtype"}}],[10,"set_property_shadow_type","","",309,{"inputs":[{"name":"self"},{"name":"shadowtype"}],"output":null}],[10,"connect_property_arrow_type_notify","","",309,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_shadow_type_notify","","",309,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"AspectFrameExt","","",null,null],[10,"set","","",310,{"inputs":[{"name":"self"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"bool"}],"output":null}],[10,"get_property_obey_child","","",310,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_obey_child","","",310,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_ratio","","",310,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_ratio","","",310,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"get_property_xalign","","",310,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_xalign","","",310,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"get_property_yalign","","",310,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_yalign","","",310,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"connect_property_obey_child_notify","","",310,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_ratio_notify","","",310,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_xalign_notify","","",310,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_yalign_notify","","",310,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"AssistantExt","","",null,null],[10,"add_action_widget","","",311,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"append_page","","",311,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"i32"}}],[10,"commit","","",311,{"inputs":[{"name":"self"}],"output":null}],[10,"get_current_page","","",311,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_n_pages","","",311,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_nth_page","","",311,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_page_complete","","",311,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"get_page_has_padding","","",311,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"get_page_title","","",311,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[10,"get_page_type","","",311,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"assistantpagetype"}}],[10,"insert_page","","",311,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":{"name":"i32"}}],[10,"next_page","","",311,{"inputs":[{"name":"self"}],"output":null}],[10,"prepend_page","","",311,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"i32"}}],[10,"previous_page","","",311,{"inputs":[{"name":"self"}],"output":null}],[10,"remove_action_widget","","",311,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"remove_page","","",311,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_current_page","","",311,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_page_complete","","",311,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"}],"output":null}],[10,"set_page_has_padding","","",311,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"}],"output":null}],[10,"set_page_title","","",311,{"inputs":[{"name":"self"},{"name":"p"},{"name":"str"}],"output":null}],[10,"set_page_type","","",311,{"inputs":[{"name":"self"},{"name":"p"},{"name":"assistantpagetype"}],"output":null}],[10,"update_buttons_state","","",311,{"inputs":[{"name":"self"}],"output":null}],[10,"get_property_use_header_bar","","",311,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_child_complete","","",311,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[10,"set_child_complete","","",311,{"inputs":[{"name":"self"},{"name":"t"},{"name":"bool"}],"output":null}],[10,"get_child_has_padding","","",311,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[10,"set_child_has_padding","","",311,{"inputs":[{"name":"self"},{"name":"t"},{"name":"bool"}],"output":null}],[10,"get_child_page_type","","",311,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"assistantpagetype"}}],[10,"set_child_page_type","","",311,{"inputs":[{"name":"self"},{"name":"t"},{"name":"assistantpagetype"}],"output":null}],[10,"get_child_title","","",311,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"option"}}],[10,"set_child_title","","",311,{"inputs":[{"name":"self"},{"name":"t"},{"name":"p"}],"output":null}],[10,"connect_apply","","",311,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_cancel","","",311,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_close","","",311,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_escape","","",311,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_prepare","","",311,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_header_bar_notify","","",311,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"BinExt","","Trait containing all `Bin` methods.",null,null],[10,"get_child","","Gets the child of the `Bin`, or `None` if the bin contains no child widget. The returned widget does not have a reference added, so you do not need to unref it.",312,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"BoxExt","","Trait containing all `Box` methods.",null,null],[10,"get_baseline_position","","Gets the value set by `BoxExt::set_baseline_position`.",313,{"inputs":[{"name":"self"}],"output":{"name":"baselineposition"}}],[10,"get_center_widget","","Retrieves the center widget of the box.",313,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_homogeneous","","Returns whether the box is homogeneous (all children are the same size). See `BoxExt::set_homogeneous`.",313,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_spacing","","Gets the value set by `BoxExt::set_spacing`.",313,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"pack_end","","Adds `child` to `self`, packed with reference to the end of `self`. The `child` is packed after (away from end of) any other child packed with reference to the end of `self`. ## `child` the `Widget` to be added to `self` ## `expand` `true` if the new child is to be given extra space allocated  to `self`. The extra space will be divided evenly between all children  of `self` that use this option ## `fill` `true` if space given to `child` by the `expand` option is  actually allocated to `child`, rather than just padding it. This  parameter has no effect if `expand` is set to `false`. A child is  always allocated the full height of a horizontal `Box` and the full width  of a vertical `Box`. This option affects the other dimension ## `padding` extra space in pixels to put between this child and its  neighbors, over and above the global amount specified by  `Box:spacing` property. If `child` is a widget at one of the  reference ends of `self`, then `padding` pixels are also put between  `child` and the reference edge of `self`",313,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"},{"name":"bool"},{"name":"u32"}],"output":null}],[10,"pack_start","","Adds `child` to `self`, packed with reference to the start of `self`. The `child` is packed after any other child packed with reference to the start of `self`. ## `child` the `Widget` to be added to `self` ## `expand` `true` if the new child is to be given extra space allocated  to `self`. The extra space will be divided evenly between all children  that use this option ## `fill` `true` if space given to `child` by the `expand` option is  actually allocated to `child`, rather than just padding it. This  parameter has no effect if `expand` is set to `false`. A child is  always allocated the full height of a horizontal `Box` and the full width  of a vertical `Box`. This option affects the other dimension ## `padding` extra space in pixels to put between this child and its  neighbors, over and above the global amount specified by  `Box:spacing` property. If `child` is a widget at one of the  reference ends of `self`, then `padding` pixels are also put between  `child` and the reference edge of `self`",313,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"},{"name":"bool"},{"name":"u32"}],"output":null}],[10,"query_child_packing","","Obtains information about how `child` is packed into `self`. ## `child` the `Widget` of the child to query ## `expand` pointer to return location for expand child  property ## `fill` pointer to return location for fill child  property ## `padding` pointer to return location for padding  child property ## `pack_type` pointer to return location for pack-type  child property",313,null],[10,"reorder_child","","Moves `child` to a new `position` in the list of `self` children. The list contains widgets packed `PackType::Start` as well as widgets packed `PackType::End`, in the order that these widgets were added to `self`.",313,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":null}],[10,"set_baseline_position","","Sets the baseline position of a box. This affects only horizontal boxes with at least one baseline aligned child. If there is more vertical space available than requested, and the baseline is not allocated by the parent then `position` is used to allocate the baseline wrt the extra space available.",313,{"inputs":[{"name":"self"},{"name":"baselineposition"}],"output":null}],[10,"set_center_widget","","Sets a center widget; that is a child widget that will be centered with respect to the full width of the box, even if the children at either side take up different amounts of space.",313,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_child_packing","","Sets the way `child` is packed into `self`. ## `child` the `Widget` of the child to set ## `expand` the new value of the expand child property ## `fill` the new value of the fill child property ## `padding` the new value of the padding child property ## `pack_type` the new value of the pack-type child property",313,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"},{"name":"bool"},{"name":"u32"},{"name":"packtype"}],"output":null}],[10,"set_homogeneous","","Sets the `Box:homogeneous` property of `self`, controlling whether or not all children of `self` are given equal space in the box. ## `homogeneous` a boolean value, `true` to create equal allotments,  `false` for variable allotments",313,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_spacing","","Sets the `Box:spacing` property of `self`, which is the number of pixels to place between children of `self`. ## `spacing` the number of pixels to put between children",313,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_child_position","","",313,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"i32"}}],[10,"set_child_position","","",313,{"inputs":[{"name":"self"},{"name":"t"},{"name":"i32"}],"output":null}],[10,"connect_property_baseline_position_notify","","",313,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_homogeneous_notify","","",313,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_spacing_notify","","",313,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"BuilderExt","","",null,null],[10,"add_from_resource","","",314,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"add_from_string","","",314,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"add_objects_from_resource","","",314,null],[10,"add_objects_from_string","","",314,null],[10,"expose_object","","",314,{"inputs":[{"name":"self"},{"name":"str"},{"name":"p"}],"output":null}],[10,"extend_with_template","","",314,{"inputs":[{"name":"self"},{"name":"p"},{"name":"type"},{"name":"str"}],"output":{"name":"result"}}],[10,"get_application","","",314,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_objects","","",314,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_translation_domain","","",314,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_type_from_name","","",314,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"type"}}],[10,"set_application","","",314,{"inputs":[{"name":"self"},{"name":"application"}],"output":null}],[10,"set_translation_domain","","",314,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"value_from_string_type","","",314,{"inputs":[{"name":"self"},{"name":"type"},{"name":"str"}],"output":{"name":"result"}}],[10,"connect_property_translation_domain_notify","","",314,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ButtonExt","","Trait containing all `Button` methods.",null,null],[10,"clicked","","Emits a `Button::clicked` signal to the given `Button`.",315,{"inputs":[{"name":"self"}],"output":null}],[10,"get_alignment","","Gets the alignment of the child in the button.",315,null],[10,"get_always_show_image","","Returns whether the button will ignore the `Settings:gtk-button-images` setting and always show the image, if available.",315,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_event_window","","Returns the button’s event window if it is realized, `None` otherwise. This function should be rarely needed.",315,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_image","","Gets the widget that is currenty set as the image of `self`. This may have been explicitly set by `ButtonExt::set_image` or constructed by `Button::new_from_stock`.",315,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_image_position","","Gets the position of the image relative to the text inside the button.",315,{"inputs":[{"name":"self"}],"output":{"name":"positiontype"}}],[10,"get_label","","Fetches the text from the label of the button, as set by `ButtonExt::set_label`. If the label text has not been set the return value will be `None`. This will be the case if you create an empty button with `Button::new` to use as a container.",315,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_relief","","Returns the current relief style of the given `Button`.",315,{"inputs":[{"name":"self"}],"output":{"name":"reliefstyle"}}],[10,"get_use_stock","","Returns whether the button label is a stock item.",315,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_use_underline","","Returns whether an embedded underline in the button label indicates a mnemonic. See gtk_button_set_use_underline ().",315,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_alignment","","Sets the alignment of the child. This property has no effect unless the child is a `Misc` or a `Alignment`.",315,{"inputs":[{"name":"self"},{"name":"f32"},{"name":"f32"}],"output":null}],[10,"set_always_show_image","","If `true`, the button will ignore the `Settings:gtk-button-images` setting and always show the image, if available.",315,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_image","","Set the image of `self` to the given widget. The image will be displayed if the label text is `None` or if `Button:always-show-image` is `true`. You don’t have to call `Widget::show` on `image` yourself. ## `image` a widget to set as the image for the button",315,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_image_position","","Sets the position of the image relative to the text inside the button. ## `position` the position",315,{"inputs":[{"name":"self"},{"name":"positiontype"}],"output":null}],[10,"set_label","","Sets the text of the label of the button to `str`. This text is also used to select the stock item if `ButtonExt::set_use_stock` is used.",315,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_relief","","Sets the relief style of the edges of the given `Button` widget. Two styles exist, `ReliefStyle::Normal` and `ReliefStyle::None`. The default style is, as one can guess, `ReliefStyle::Normal`. The deprecated value `ReliefStyle::Half` behaves the same as `ReliefStyle::Normal`. ## `relief` The `ReliefStyle` as described above",315,{"inputs":[{"name":"self"},{"name":"reliefstyle"}],"output":null}],[10,"set_use_stock","","If `true`, the label set on the button is used as a stock id to select the stock item for the button.",315,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_use_underline","","If true, an underline in the text of the button label indicates the next character should be used for the mnemonic accelerator key. ## `use_underline` `true` if underlines in the text indicate mnemonics",315,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_xalign","","",315,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_xalign","","",315,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"get_property_yalign","","",315,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_yalign","","",315,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"connect_activate","","",315,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_clicked","","",315,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_always_show_image_notify","","",315,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_image_notify","","",315,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_image_position_notify","","",315,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_label_notify","","",315,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_relief_notify","","",315,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_stock_notify","","",315,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_underline_notify","","",315,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_xalign_notify","","",315,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_yalign_notify","","",315,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ButtonBoxExt","","",null,null],[10,"get_child_non_homogeneous","","",316,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"get_child_secondary","","",316,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"get_layout","","",316,{"inputs":[{"name":"self"}],"output":{"name":"buttonboxstyle"}}],[10,"set_child_non_homogeneous","","",316,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"}],"output":null}],[10,"set_child_secondary","","",316,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"}],"output":null}],[10,"set_layout","","",316,{"inputs":[{"name":"self"},{"name":"buttonboxstyle"}],"output":null}],[10,"get_property_layout_style","","",316,{"inputs":[{"name":"self"}],"output":{"name":"buttonboxstyle"}}],[10,"set_property_layout_style","","",316,{"inputs":[{"name":"self"},{"name":"buttonboxstyle"}],"output":null}],[10,"connect_property_layout_style_notify","","",316,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CalendarExt","","",null,null],[10,"clear_marks","","",317,{"inputs":[{"name":"self"}],"output":null}],[10,"get_date","","",317,null],[10,"get_day_is_marked","","",317,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"bool"}}],[10,"get_detail_height_rows","","",317,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_detail_width_chars","","",317,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_display_options","","",317,{"inputs":[{"name":"self"}],"output":{"name":"calendardisplayoptions"}}],[10,"mark_day","","",317,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"select_day","","",317,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"select_month","","",317,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":null}],[10,"set_detail_height_rows","","",317,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_detail_width_chars","","",317,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_display_options","","",317,{"inputs":[{"name":"self"},{"name":"calendardisplayoptions"}],"output":null}],[10,"unmark_day","","",317,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_day","","",317,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_day","","",317,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_month","","",317,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_month","","",317,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_no_month_change","","",317,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_no_month_change","","",317,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_show_day_names","","",317,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_show_day_names","","",317,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_show_details","","",317,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_show_details","","",317,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_show_heading","","",317,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_show_heading","","",317,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_show_week_numbers","","",317,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_show_week_numbers","","",317,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_year","","",317,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_year","","",317,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"connect_day_selected","","",317,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_day_selected_double_click","","",317,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_month_changed","","",317,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_next_month","","",317,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_next_year","","",317,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_prev_month","","",317,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_prev_year","","",317,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_day_notify","","",317,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_detail_height_rows_notify","","",317,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_detail_width_chars_notify","","",317,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_month_notify","","",317,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_no_month_change_notify","","",317,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_day_names_notify","","",317,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_details_notify","","",317,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_heading_notify","","",317,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_week_numbers_notify","","",317,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_year_notify","","",317,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CellAreaExt","","Trait containing all `CellArea` methods.",null,null],[10,"activate","","Activates `self`, usually by activating the currently focused cell, however some subclasses which embed widgets in the area can also activate a widget if it currently has the focus. ## `context` the `CellAreaContext` in context with the current row data ## `widget` the `Widget` that `self` is rendering on ## `cell_area` the size and location of `self` relative to `widget`’s allocation ## `flags` the `CellRendererState` flags for `self` for this row of data. ## `edit_only` if `true` then only cell renderers that are `CellRendererMode::Editable`  will be activated.",318,{"inputs":[{"name":"self"},{"name":"cellareacontext"},{"name":"p"},{"name":"rectangle"},{"name":"cellrendererstate"},{"name":"bool"}],"output":{"name":"bool"}}],[10,"activate_cell","","This is used by `CellArea` subclasses when handling events to activate cells, the base `CellArea` class activates cells for keyboard events for free in its own `CellArea`->`activate` implementation. ## `widget` the `Widget` that `self` is rendering onto ## `renderer` the `CellRenderer` in `self` to activate ## `event` the `GdkEvent` for which cell activation should occur ## `cell_area` the `gdk::Rectangle` in `widget` relative coordinates  of `renderer` for the current row. ## `flags` the `CellRendererState` for `renderer`",318,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"},{"name":"event"},{"name":"rectangle"},{"name":"cellrendererstate"}],"output":{"name":"bool"}}],[10,"add","","Adds `renderer` to `self` with the default child cell properties. ## `renderer` the `CellRenderer` to add to `self`",318,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"add_focus_sibling","","Adds `sibling` to `renderer`’s focusable area, focus will be drawn around `renderer` and all of its siblings if `renderer` can focus for a given row.",318,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":null}],[10,"apply_attributes","","Applies any connected attributes to the renderers in `self` by pulling the values from `tree_model`. ## `tree_model` the `TreeModel` to pull values from ## `iter` the `TreeIter` in `tree_model` to apply values for ## `is_expander` whether `iter` has children ## `is_expanded` whether `iter` is expanded in the view and  children are visible",318,{"inputs":[{"name":"self"},{"name":"p"},{"name":"treeiter"},{"name":"bool"},{"name":"bool"}],"output":null}],[10,"attribute_connect","","Connects an `attribute` to apply values from `column` for the `TreeModel` in use. ## `renderer` the `CellRenderer` to connect an attribute for ## `attribute` the attribute name ## `column` the `TreeModel` column to fetch attribute values from",318,{"inputs":[{"name":"self"},{"name":"p"},{"name":"str"},{"name":"i32"}],"output":null}],[10,"attribute_disconnect","","Disconnects `attribute` for the `renderer` in `self` so that attribute will no longer be updated with values from the model. ## `renderer` the `CellRenderer` to disconnect an attribute for ## `attribute` the attribute name",318,{"inputs":[{"name":"self"},{"name":"p"},{"name":"str"}],"output":null}],[10,"attribute_get_column","","Returns the model column that an attribute has been mapped to, or -1 if the attribute is not mapped.",318,{"inputs":[{"name":"self"},{"name":"p"},{"name":"str"}],"output":{"name":"i32"}}],[10,"copy_context","","This is sometimes needed for cases where rows need to share alignments in one orientation but may be separately grouped in the opposing orientation.",318,{"inputs":[{"name":"self"},{"name":"cellareacontext"}],"output":{"name":"option"}}],[10,"create_context","","Creates a `CellAreaContext` to be used with `self` for all purposes. `CellAreaContext` stores geometry information for rows for which it was operated on, it is important to use the same context for the same row of data at all times (i.e. one should render and handle events with the same `CellAreaContext` which was used to request the size of those rows of data).",318,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"event","","Delegates event handling to a `CellArea`. ## `context` the `CellAreaContext` for this row of data. ## `widget` the `Widget` that `self` is rendering to ## `event` the `GdkEvent` to handle ## `cell_area` the `widget` relative coordinates for `self` ## `flags` the `CellRendererState` for `self` in this row.",318,{"inputs":[{"name":"self"},{"name":"cellareacontext"},{"name":"p"},{"name":"event"},{"name":"rectangle"},{"name":"cellrendererstate"}],"output":{"name":"i32"}}],[10,"focus","","This should be called by the `self`’s owning layout widget when focus is to be passed to `self`, or moved within `self` for a given `direction` and row data.",318,{"inputs":[{"name":"self"},{"name":"directiontype"}],"output":{"name":"bool"}}],[10,"get_cell_allocation","","Derives the allocation of `renderer` inside `self` if `self` were to be renderered in `cell_area`. ## `context` the `CellAreaContext` used to hold sizes for `self`. ## `widget` the `Widget` that `self` is rendering on ## `renderer` the `CellRenderer` to get the allocation for ## `cell_area` the whole allocated area for `self` in `widget`  for this row ## `allocation` where to store the allocation for `renderer`",318,{"inputs":[{"name":"self"},{"name":"cellareacontext"},{"name":"p"},{"name":"q"},{"name":"rectangle"}],"output":{"name":"rectangle"}}],[10,"get_cell_at_position","","Gets the `CellRenderer` at `x` and `y` coordinates inside `self` and optionally returns the full cell allocation for it inside `cell_area`. ## `context` the `CellAreaContext` used to hold sizes for `self`. ## `widget` the `Widget` that `self` is rendering on ## `cell_area` the whole allocated area for `self` in `widget`  for this row ## `x` the x position ## `y` the y position ## `alloc_area` where to store the inner allocated area of the  returned cell renderer, or `None`.",318,null],[10,"get_current_path_string","","Gets the current `TreePath` string for the currently applied `TreeIter`, this is implicitly updated when `CellAreaExt::apply_attributes` is called and can be used to interact with renderers from `CellArea` subclasses.",318,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_edit_widget","","Gets the `CellEditable` widget currently used to edit the currently edited cell.",318,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_edited_cell","","Gets the `CellRenderer` in `self` that is currently being edited.",318,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_focus_cell","","Retrieves the currently focused cell for `self`",318,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_focus_from_sibling","","Gets the `CellRenderer` which is expected to be focusable for which `renderer` is, or may be a sibling.",318,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[10,"get_focus_siblings","","Gets the focus sibling cell renderers for `renderer`. ## `renderer` the `CellRenderer` expected to have focus",318,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"vec"}}],[10,"get_preferred_height","","Retrieves a cell area’s initial minimum and natural height.",318,null],[10,"get_preferred_height_for_width","","Retrieves a cell area’s minimum and natural height if it would be given the specified `width`.",318,null],[10,"get_preferred_width","","Retrieves a cell area’s initial minimum and natural width.",318,null],[10,"get_preferred_width_for_height","","Retrieves a cell area’s minimum and natural width if it would be given the specified `height`.",318,null],[10,"get_request_mode","","Gets whether the area prefers a height-for-width layout or a width-for-height layout.",318,{"inputs":[{"name":"self"}],"output":{"name":"sizerequestmode"}}],[10,"has_renderer","","Checks if `self` contains `renderer`. ## `renderer` the `CellRenderer` to check",318,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"inner_cell_area","","This is a convenience function for `CellArea` implementations to get the inner area where a given `CellRenderer` will be rendered. It removes any padding previously added by `CellAreaExt::request_renderer`. ## `widget` the `Widget` that `self` is rendering onto ## `cell_area` the `widget` relative coordinates where one of `self`’s cells  is to be placed ## `inner_area` the return location for the inner cell area",318,{"inputs":[{"name":"self"},{"name":"p"},{"name":"rectangle"}],"output":{"name":"rectangle"}}],[10,"is_activatable","","Returns whether the area can do anything when activated, after applying new attributes to `self`.",318,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_focus_sibling","","Returns whether `sibling` is one of `renderer`’s focus siblings (see `CellAreaExt::add_focus_sibling`). ## `renderer` the `CellRenderer` expected to have focus ## `sibling` the `CellRenderer` to check against `renderer`’s sibling list",318,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":{"name":"bool"}}],[10,"remove","","Removes `renderer` from `self`. ## `renderer` the `CellRenderer` to remove from `self`",318,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"remove_focus_sibling","","Removes `sibling` from `renderer`’s focus sibling list (see `CellAreaExt::add_focus_sibling`). ## `renderer` the `CellRenderer` expected to have focus ## `sibling` the `CellRenderer` to remove from `renderer`’s focus area",318,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":null}],[10,"render","","Renders `self`’s cells according to `self`’s layout onto `widget` at the given coordinates. ## `context` the `CellAreaContext` for this row of data. ## `widget` the `Widget` that `self` is rendering to ## `cr` the `cairo::Context` to render with ## `background_area` the `widget` relative coordinates for `self`’s background ## `cell_area` the `widget` relative coordinates for `self` ## `flags` the `CellRendererState` for `self` in this row. ## `paint_focus` whether `self` should paint focus on focused cells for focused rows or not.",318,{"inputs":[{"name":"self"},{"name":"cellareacontext"},{"name":"p"},{"name":"context"},{"name":"rectangle"},{"name":"rectangle"},{"name":"cellrendererstate"},{"name":"bool"}],"output":null}],[10,"request_renderer","","This is a convenience function for `CellArea` implementations to request size for cell renderers. It’s important to use this function to request size and then use `CellAreaExt::inner_cell_area` at render and event time since this function will add padding around the cell for focus painting. ## `renderer` the `CellRenderer` to request size for ## `orientation` the `Orientation` in which to request size ## `widget` the `Widget` that `self` is rendering onto ## `for_size` the allocation contextual size to request for, or -1 if the base request for the orientation is to be returned. ## `minimum_size` location to store the minimum size, or `None` ## `natural_size` location to store the natural size, or `None`",318,null],[10,"set_focus_cell","","Explicitly sets the currently focused cell to `renderer`.",318,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"stop_editing","","Explicitly stops the editing of the currently edited cell.",318,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_add_editable","","",318,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_apply_attributes","","",318,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_focus_changed","","",318,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_remove_editable","","",318,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_edit_widget_notify","","",318,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_edited_cell_notify","","",318,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_focus_cell_notify","","",318,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CellAreaBoxExt","","",null,null],[10,"get_spacing","","",319,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"pack_end","","",319,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"},{"name":"bool"},{"name":"bool"}],"output":null}],[10,"pack_start","","",319,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"},{"name":"bool"},{"name":"bool"}],"output":null}],[10,"set_spacing","","",319,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"connect_property_spacing_notify","","",319,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CellAreaContextExt","","",null,null],[10,"allocate","","",320,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"get_allocation","","",320,null],[10,"get_area","","",320,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_preferred_height","","",320,null],[10,"get_preferred_height_for_width","","",320,null],[10,"get_preferred_width","","",320,null],[10,"get_preferred_width_for_height","","",320,null],[10,"push_preferred_height","","",320,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"push_preferred_width","","",320,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"reset","","",320,{"inputs":[{"name":"self"}],"output":null}],[10,"get_property_minimum_height","","",320,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_property_minimum_width","","",320,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_property_natural_height","","",320,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_property_natural_width","","",320,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"connect_property_area_notify","","",320,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_minimum_height_notify","","",320,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_minimum_width_notify","","",320,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_natural_height_notify","","",320,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_natural_width_notify","","",320,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CellEditableExt","","Trait containing all `CellEditable` methods.",null,null],[10,"editing_done","","Emits the `CellEditable::editing-done` signal.",321,{"inputs":[{"name":"self"}],"output":null}],[10,"remove_widget","","Emits the `CellEditable::remove-widget` signal.",321,{"inputs":[{"name":"self"}],"output":null}],[10,"start_editing","","Begins editing on a `self`. `event` is the `GdkEvent` that began the editing process. It may be `None`, in the instance that editing was initiated through programatic means. ## `event` A `GdkEvent`, or `None`",321,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"get_property_editing_canceled","","",321,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_editing_canceled","","",321,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_editing_done","","",321,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_remove_widget","","",321,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_editing_canceled_notify","","",321,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CellLayoutExt","","Trait containing all `CellLayout` methods.",null,null],[10,"add_attribute","","Adds an attribute mapping to the list in `self`.",322,{"inputs":[{"name":"self"},{"name":"p"},{"name":"str"},{"name":"i32"}],"output":null}],[10,"clear","","Unsets all the mappings on all renderers on `self` and removes all renderers from `self`.",322,{"inputs":[{"name":"self"}],"output":null}],[10,"clear_attributes","","Clears all existing attributes previously set with `CellLayout::set_attributes`. ## `cell` a `CellRenderer` to clear the attribute mapping on",322,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"get_area","","Returns the underlying `CellArea` which might be `self` if called on a `CellArea` or might be `None` if no `CellArea` is used by `self`.",322,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_cells","","Returns the cell renderers which have been added to `self`.",322,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"pack_end","","Adds the `cell` to the end of `self`. If `expand` is `false`, then the `cell` is allocated no more space than it needs. Any unused space is divided evenly between cells for which `expand` is `true`.",322,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"}],"output":null}],[10,"pack_start","","Packs the `cell` into the beginning of `self`. If `expand` is `false`, then the `cell` is allocated no more space than it needs. Any unused space is divided evenly between cells for which `expand` is `true`.",322,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"}],"output":null}],[10,"reorder","","Re-inserts `cell` at `position`.",322,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":null}],[8,"CellRendererExt","","Trait containing all `CellRenderer` methods.",null,null],[10,"activate","","Passes an activate event to the cell renderer for possible processing. Some cell renderers may use events; for example, `CellRendererToggle` toggles when it gets a mouse click. ## `event` a `GdkEvent` ## `widget` widget that received the event ## `path` widget-dependent string representation of the event location;  e.g. for `TreeView`, a string representation of `TreePath` ## `background_area` background area as passed to `CellRendererExt::render` ## `cell_area` cell area as passed to `CellRendererExt::render` ## `flags` render flags",323,{"inputs":[{"name":"self"},{"name":"event"},{"name":"p"},{"name":"str"},{"name":"rectangle"},{"name":"rectangle"},{"name":"cellrendererstate"}],"output":{"name":"bool"}}],[10,"get_aligned_area","","Gets the aligned area used by `self` inside `cell_area`. Used for finding the appropriate edit and focus rectangle. ## `widget` the `Widget` this cell will be rendering to ## `flags` render flags ## `cell_area` cell area which would be passed to `CellRendererExt::render` ## `aligned_area` the return location for the space inside `cell_area`  that would acually be used to render.",323,{"inputs":[{"name":"self"},{"name":"p"},{"name":"cellrendererstate"},{"name":"rectangle"}],"output":{"name":"rectangle"}}],[10,"get_alignment","","Fills in `xalign` and `yalign` with the appropriate values of `self`. ## `xalign` location to fill in with the x alignment of the cell, or `None` ## `yalign` location to fill in with the y alignment of the cell, or `None`",323,null],[10,"get_fixed_size","","Fills in `width` and `height` with the appropriate size of `self`. ## `width` location to fill in with the fixed width of the cell, or `None` ## `height` location to fill in with the fixed height of the cell, or `None`",323,null],[10,"get_padding","","Fills in `xpad` and `ypad` with the appropriate values of `self`. ## `xpad` location to fill in with the x padding of the cell, or `None` ## `ypad` location to fill in with the y padding of the cell, or `None`",323,null],[10,"get_preferred_height","","Retreives a renderer’s natural size when rendered to `widget`. ## `widget` the `Widget` this cell will be rendering to ## `minimum_size` location to store the minimum size, or `None` ## `natural_size` location to store the natural size, or `None`",323,null],[10,"get_preferred_height_for_width","","Retreives a cell renderers’s minimum and natural height if it were rendered to `widget` with the specified `width`. ## `widget` the `Widget` this cell will be rendering to ## `width` the size which is available for allocation ## `minimum_height` location for storing the minimum size, or `None` ## `natural_height` location for storing the preferred size, or `None`",323,null],[10,"get_preferred_size","","Retrieves the minimum and natural size of a cell taking into account the widget’s preference for height-for-width management. ## `widget` the `Widget` this cell will be rendering to ## `minimum_size` location for storing the minimum size, or `None` ## `natural_size` location for storing the natural size, or `None`",323,null],[10,"get_preferred_width","","Retreives a renderer’s natural size when rendered to `widget`. ## `widget` the `Widget` this cell will be rendering to ## `minimum_size` location to store the minimum size, or `None` ## `natural_size` location to store the natural size, or `None`",323,null],[10,"get_preferred_width_for_height","","Retreives a cell renderers’s minimum and natural width if it were rendered to `widget` with the specified `height`. ## `widget` the `Widget` this cell will be rendering to ## `height` the size which is available for allocation ## `minimum_width` location for storing the minimum size, or `None` ## `natural_width` location for storing the preferred size, or `None`",323,null],[10,"get_request_mode","","Gets whether the cell renderer prefers a height-for-width layout or a width-for-height layout.",323,{"inputs":[{"name":"self"}],"output":{"name":"sizerequestmode"}}],[10,"get_sensitive","","Returns the cell renderer’s sensitivity.",323,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_state","","Translates the cell renderer state to `StateFlags`, based on the cell renderer and widget sensitivity, and the given `CellRendererState`. ## `widget` a `Widget`, or `None` ## `cell_state` cell renderer state",323,{"inputs":[{"name":"self"},{"name":"q"},{"name":"cellrendererstate"}],"output":{"name":"stateflags"}}],[10,"get_visible","","Returns the cell renderer’s visibility.",323,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_activatable","","Checks whether the cell renderer can do something when activated.",323,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"render","","Invokes the virtual render function of the `CellRenderer`. The three passed-in rectangles are areas in `cr`. Most renderers will draw within `cell_area`; the xalign, yalign, xpad, and ypad fields of the `CellRenderer` should be honored with respect to `cell_area`. `background_area` includes the blank space around the cell, and also the area containing the tree expander; so the `background_area` rectangles for all cells tile to cover the entire `window`. ## `cr` a cairo context to draw to ## `widget` the widget owning `window` ## `background_area` entire cell area (including tree expanders and maybe  padding on the sides) ## `cell_area` area normally rendered by a cell renderer ## `flags` flags that affect rendering",323,{"inputs":[{"name":"self"},{"name":"context"},{"name":"p"},{"name":"rectangle"},{"name":"rectangle"},{"name":"cellrendererstate"}],"output":null}],[10,"set_alignment","","Sets the renderer’s alignment within its available space. ## `xalign` the x alignment of the cell renderer ## `yalign` the y alignment of the cell renderer",323,{"inputs":[{"name":"self"},{"name":"f32"},{"name":"f32"}],"output":null}],[10,"set_fixed_size","","Sets the renderer size to be explicit, independent of the properties set. ## `width` the width of the cell renderer, or -1 ## `height` the height of the cell renderer, or -1",323,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_padding","","Sets the renderer’s padding. ## `xpad` the x padding of the cell renderer ## `ypad` the y padding of the cell renderer",323,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_sensitive","","Sets the cell renderer’s sensitivity. ## `sensitive` the sensitivity of the cell",323,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_visible","","Sets the cell renderer’s visibility. ## `visible` the visibility of the cell",323,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"start_editing","","Passes an activate event to the cell renderer for possible processing. ## `event` a `GdkEvent` ## `widget` widget that received the event ## `path` widget-dependent string representation of the event location;  e.g. for `TreeView`, a string representation of `TreePath` ## `background_area` background area as passed to `CellRendererExt::render` ## `cell_area` cell area as passed to `CellRendererExt::render` ## `flags` render flags",323,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"},{"name":"str"},{"name":"rectangle"},{"name":"rectangle"},{"name":"cellrendererstate"}],"output":{"name":"option"}}],[10,"stop_editing","","Informs the cell renderer that the editing is stopped. If `canceled` is `true`, the cell renderer will emit the `CellRenderer::editing-canceled` signal.",323,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_property_cell_background","","",323,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_cell_background_rgba","","",323,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_cell_background_rgba","","",323,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_cell_background_set","","",323,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_cell_background_set","","",323,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_editing","","",323,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_height","","",323,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_height","","",323,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_is_expanded","","",323,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_is_expanded","","",323,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_is_expander","","",323,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_is_expander","","",323,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_mode","","",323,{"inputs":[{"name":"self"}],"output":{"name":"cellrenderermode"}}],[10,"set_property_mode","","",323,{"inputs":[{"name":"self"},{"name":"cellrenderermode"}],"output":null}],[10,"get_property_width","","",323,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_width","","",323,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_xalign","","",323,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_xalign","","",323,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"get_property_xpad","","",323,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_xpad","","",323,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_yalign","","",323,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_yalign","","",323,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"get_property_ypad","","",323,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_ypad","","",323,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"connect_editing_canceled","","",323,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_editing_started","","",323,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_cell_background_notify","","",323,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_cell_background_rgba_notify","","",323,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_cell_background_set_notify","","",323,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_editing_notify","","",323,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_height_notify","","",323,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_is_expanded_notify","","",323,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_is_expander_notify","","",323,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_mode_notify","","",323,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_sensitive_notify","","",323,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_visible_notify","","",323,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_width_notify","","",323,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_xalign_notify","","",323,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_xpad_notify","","",323,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_yalign_notify","","",323,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_ypad_notify","","",323,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CellRendererAccelExt","","",null,null],[10,"get_property_accel_key","","",324,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_accel_key","","",324,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_accel_mode","","",324,{"inputs":[{"name":"self"}],"output":{"name":"cellrendereraccelmode"}}],[10,"set_property_accel_mode","","",324,{"inputs":[{"name":"self"},{"name":"cellrendereraccelmode"}],"output":null}],[10,"get_property_accel_mods","","",324,{"inputs":[{"name":"self"}],"output":{"name":"modifiertype"}}],[10,"set_property_accel_mods","","",324,{"inputs":[{"name":"self"},{"name":"modifiertype"}],"output":null}],[10,"get_property_keycode","","",324,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_keycode","","",324,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"connect_accel_cleared","","",324,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_accel_edited","","",324,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_accel_key_notify","","",324,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_accel_mode_notify","","",324,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_accel_mods_notify","","",324,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_keycode_notify","","",324,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CellRendererComboExt","","",null,null],[10,"get_property_has_entry","","",325,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_has_entry","","",325,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_model","","",325,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_model","","",325,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_text_column","","",325,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_text_column","","",325,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"connect_changed","","",325,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_has_entry_notify","","",325,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_model_notify","","",325,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_text_column_notify","","",325,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CellRendererPixbufExt","","",null,null],[10,"get_property_follow_state","","",326,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_follow_state","","",326,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gicon","","",326,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gicon","","",326,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_icon_name","","",326,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_icon_name","","",326,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_pixbuf","","",326,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_pixbuf","","",326,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_pixbuf_expander_closed","","",326,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_pixbuf_expander_closed","","",326,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_pixbuf_expander_open","","",326,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_pixbuf_expander_open","","",326,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_stock_detail","","",326,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_stock_detail","","",326,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_stock_id","","",326,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_stock_id","","",326,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_stock_size","","",326,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_stock_size","","",326,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"connect_property_follow_state_notify","","",326,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gicon_notify","","",326,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_icon_name_notify","","",326,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pixbuf_notify","","",326,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pixbuf_expander_closed_notify","","",326,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pixbuf_expander_open_notify","","",326,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_stock_detail_notify","","",326,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_stock_id_notify","","",326,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_stock_size_notify","","",326,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CellRendererProgressExt","","",null,null],[10,"get_property_inverted","","",327,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_inverted","","",327,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_pulse","","",327,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_pulse","","",327,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_text","","",327,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_text","","",327,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_text_xalign","","",327,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_text_xalign","","",327,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"get_property_text_yalign","","",327,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_text_yalign","","",327,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"get_property_value","","",327,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_value","","",327,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"connect_property_inverted_notify","","",327,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pulse_notify","","",327,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_text_notify","","",327,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_text_xalign_notify","","",327,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_text_yalign_notify","","",327,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_value_notify","","",327,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CellRendererSpinExt","","",null,null],[10,"get_property_adjustment","","",328,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_adjustment","","",328,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_climb_rate","","",328,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"set_property_climb_rate","","",328,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"get_property_digits","","",328,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_digits","","",328,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"connect_property_adjustment_notify","","",328,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_climb_rate_notify","","",328,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_digits_notify","","",328,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CellRendererSpinnerExt","","",null,null],[10,"get_property_active","","",329,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_active","","",329,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_pulse","","",329,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_pulse","","",329,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_size","","",329,{"inputs":[{"name":"self"}],"output":{"name":"iconsize"}}],[10,"set_property_size","","",329,{"inputs":[{"name":"self"},{"name":"iconsize"}],"output":null}],[10,"connect_property_active_notify","","",329,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pulse_notify","","",329,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_size_notify","","",329,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CellRendererTextExt","","Trait containing all `CellRendererText` methods.",null,null],[10,"set_fixed_height_from_font","","Sets the height of a renderer to explicitly be determined by the “font” and “y_pad” property set on it. Further changes in these properties do not affect the height, so they must be accompanied by a subsequent call to this function. Using this function is unflexible, and should really only be used if calculating the size of a cell is too slow (ie, a massive number of cells displayed). If `number_of_rows` is -1, then the fixed height is unset, and the height is determined by the properties again. ## `number_of_rows` Number of rows of text each cell renderer is allocated, or -1",330,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_align_set","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_align_set","","",330,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_property_background","","",330,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_background_rgba","","",330,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_background_rgba","","",330,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_background_set","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_background_set","","",330,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_editable","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_editable","","",330,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_editable_set","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_editable_set","","",330,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_ellipsize","","",330,{"inputs":[{"name":"self"}],"output":{"name":"ellipsizemode"}}],[10,"set_property_ellipsize","","",330,{"inputs":[{"name":"self"},{"name":"ellipsizemode"}],"output":null}],[10,"get_property_ellipsize_set","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_ellipsize_set","","",330,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_family","","",330,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_family","","",330,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_family_set","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_family_set","","",330,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_font","","",330,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_font","","",330,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"set_property_foreground","","",330,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_foreground_rgba","","",330,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_foreground_rgba","","",330,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_foreground_set","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_foreground_set","","",330,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_language","","",330,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_language","","",330,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_language_set","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_language_set","","",330,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_property_markup","","",330,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_max_width_chars","","",330,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_max_width_chars","","",330,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_placeholder_text","","",330,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_placeholder_text","","",330,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_rise","","",330,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_rise","","",330,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_rise_set","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_rise_set","","",330,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_scale","","",330,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"set_property_scale","","",330,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"get_property_scale_set","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_scale_set","","",330,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_single_paragraph_mode","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_single_paragraph_mode","","",330,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_size","","",330,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_size","","",330,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_size_points","","",330,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"set_property_size_points","","",330,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"get_property_size_set","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_size_set","","",330,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_stretch","","",330,{"inputs":[{"name":"self"}],"output":{"name":"stretch"}}],[10,"set_property_stretch","","",330,{"inputs":[{"name":"self"},{"name":"stretch"}],"output":null}],[10,"get_property_stretch_set","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_stretch_set","","",330,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_strikethrough","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_strikethrough","","",330,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_strikethrough_set","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_strikethrough_set","","",330,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_style","","",330,{"inputs":[{"name":"self"}],"output":{"name":"style"}}],[10,"set_property_style","","",330,{"inputs":[{"name":"self"},{"name":"style"}],"output":null}],[10,"get_property_style_set","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_style_set","","",330,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_text","","",330,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_text","","",330,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_underline","","",330,{"inputs":[{"name":"self"}],"output":{"name":"underline"}}],[10,"set_property_underline","","",330,{"inputs":[{"name":"self"},{"name":"underline"}],"output":null}],[10,"get_property_underline_set","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_underline_set","","",330,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_variant","","",330,{"inputs":[{"name":"self"}],"output":{"name":"variant"}}],[10,"set_property_variant","","",330,{"inputs":[{"name":"self"},{"name":"variant"}],"output":null}],[10,"get_property_variant_set","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_variant_set","","",330,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_weight","","",330,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_weight","","",330,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_weight_set","","",330,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_weight_set","","",330,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_width_chars","","",330,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_width_chars","","",330,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_wrap_mode","","",330,{"inputs":[{"name":"self"}],"output":{"name":"wrapmode"}}],[10,"set_property_wrap_mode","","",330,{"inputs":[{"name":"self"},{"name":"wrapmode"}],"output":null}],[10,"get_property_wrap_width","","",330,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_wrap_width","","",330,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"connect_edited","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_align_set_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_alignment_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_background_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_background_rgba_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_background_set_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_editable_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_editable_set_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_ellipsize_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_ellipsize_set_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_family_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_family_set_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_font_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_foreground_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_foreground_rgba_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_foreground_set_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_language_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_language_set_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_markup_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_max_width_chars_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_placeholder_text_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_rise_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_rise_set_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_scale_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_scale_set_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_single_paragraph_mode_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_size_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_size_points_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_size_set_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_stretch_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_stretch_set_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_strikethrough_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_strikethrough_set_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_style_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_style_set_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_text_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_underline_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_underline_set_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_variant_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_variant_set_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_weight_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_weight_set_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_width_chars_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_wrap_mode_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_wrap_width_notify","","",330,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CellRendererToggleExt","","",null,null],[10,"get_activatable","","",331,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_active","","",331,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_radio","","",331,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_activatable","","",331,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_active","","",331,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_radio","","",331,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_inconsistent","","",331,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_inconsistent","","",331,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_indicator_size","","",331,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_indicator_size","","",331,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"connect_toggled","","",331,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_activatable_notify","","",331,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_active_notify","","",331,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_inconsistent_notify","","",331,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_indicator_size_notify","","",331,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_radio_notify","","",331,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CheckMenuItemExt","","",null,null],[10,"get_active","","",332,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_draw_as_radio","","",332,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_inconsistent","","",332,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_active","","",332,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_draw_as_radio","","",332,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_inconsistent","","",332,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"toggled","","",332,{"inputs":[{"name":"self"}],"output":null}],[10,"connect_toggled","","",332,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_active_notify","","",332,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_draw_as_radio_notify","","",332,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_inconsistent_notify","","",332,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ClipboardExt","","",null,null],[10,"clear","","",333,{"inputs":[{"name":"self"}],"output":null}],[10,"get_display","","",333,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_owner","","",333,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_selection","","",333,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_image","","",333,{"inputs":[{"name":"self"},{"name":"pixbuf"}],"output":null}],[10,"set_text","","",333,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"store","","",333,{"inputs":[{"name":"self"}],"output":null}],[10,"wait_for_contents","","",333,{"inputs":[{"name":"self"},{"name":"atom"}],"output":{"name":"option"}}],[10,"wait_for_image","","",333,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"wait_for_rich_text","","",333,null],[10,"wait_for_targets","","",333,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"wait_for_text","","",333,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"wait_for_uris","","",333,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"wait_is_image_available","","",333,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"wait_is_rich_text_available","","",333,{"inputs":[{"name":"self"},{"name":"textbuffer"}],"output":{"name":"bool"}}],[10,"wait_is_target_available","","",333,{"inputs":[{"name":"self"},{"name":"atom"}],"output":{"name":"bool"}}],[10,"wait_is_text_available","","",333,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"wait_is_uris_available","","",333,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"ColorButtonExt","","",null,null],[10,"get_title","","",334,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_title","","",334,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"get_property_alpha","","",334,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_alpha","","",334,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_show_editor","","",334,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_show_editor","","",334,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_color_set","","",334,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_alpha_notify","","",334,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_rgba_notify","","",334,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_editor_notify","","",334,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_title_notify","","",334,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_alpha_notify","","",334,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ColorChooserExt","","Trait containing all `ColorChooser` methods.",null,null],[10,"get_rgba","","Gets the currently-selected color. ## `color` a `gdk::RGBA` to fill in with the current color",335,{"inputs":[{"name":"self"}],"output":{"name":"rgba"}}],[10,"get_use_alpha","","Returns whether the color chooser shows the alpha channel.",335,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_rgba","","Sets the color. ## `color` the new color",335,{"inputs":[{"name":"self"},{"name":"rgba"}],"output":null}],[10,"set_use_alpha","","Sets whether or not the color chooser should use the alpha channel. ## `use_alpha` `true` if color chooser should use alpha channel, `false` if not",335,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_color_activated","","",335,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_rgba_notify","","",335,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_alpha_notify","","",335,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ColorChooserDialogExt","","",null,null],[10,"get_property_show_editor","","",336,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_show_editor","","",336,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_property_show_editor_notify","","",336,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ColorChooserWidgetExt","","",null,null],[10,"get_property_show_editor","","",337,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_show_editor","","",337,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_property_show_editor_notify","","",337,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ComboBoxExt","","Trait containing all `ComboBox` methods.",null,null],[10,"get_active","","Returns the index of the currently active item, or -1 if there’s no active item. If the model is a non-flat treemodel, and the active item is not an immediate child of the root of the tree, this function returns `gtk_tree_path_get_indices (path)[0]`, where `path` is the `TreePath` of the active item.",338,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_active_id","","Returns the ID of the active row of `self`. This value is taken from the active row and the column specified by the `ComboBox:id-column` property of `self` (see `ComboBoxExt::set_id_column`).",338,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_active_iter","","Sets `iter` to point to the current active item, if it exists. ## `iter` The uninitialized `TreeIter`",338,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_add_tearoffs","","Gets the current value of the :add-tearoffs property.",338,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_button_sensitivity","","Returns whether the combo box sets the dropdown button sensitive or not when there are no items in the model.",338,{"inputs":[{"name":"self"}],"output":{"name":"sensitivitytype"}}],[10,"get_column_span_column","","Returns the column with column span information for `self`.",338,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_entry_text_column","","Returns the column which `self` is using to get the strings from to display in the internal entry.",338,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_has_entry","","Returns whether the combo box has an entry.",338,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_id_column","","Returns the column which `self` is using to get string IDs for values from.",338,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_model","","Returns the `TreeModel` which is acting as data source for `self`.",338,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_popup_fixed_width","","Gets whether the popup uses a fixed width matching the allocated width of the combo box.",338,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_row_span_column","","Returns the column with row span information for `self`.",338,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_title","","Gets the current title of the menu in tearoff mode. See `ComboBoxExt::set_add_tearoffs`.",338,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_wrap_width","","Returns the wrap width which is used to determine the number of columns for the popup menu. If the wrap width is larger than 1, the combo box is in table mode.",338,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"popdown","","Hides the menu or dropdown list of `self`.",338,{"inputs":[{"name":"self"}],"output":null}],[10,"popup","","Pops up the menu or dropdown list of `self`.",338,{"inputs":[{"name":"self"}],"output":null}],[10,"popup_for_device","","Pops up the menu or dropdown list of `self`, the popup window will be grabbed so only `device` and its associated pointer/keyboard are the only `GdkDevices` able to send events to it. ## `device` a `gdk::Device`",338,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_active","","Sets the active item of `self` to be the item at `index`. ## `index_` An index in the model passed during construction, or -1 to have no active item",338,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_active_id","","Changes the active row of `self` to the one that has an ID equal to `active_id`, or unsets the active row if `active_id` is `None`. Rows having a `None` ID string cannot be made active by this function.",338,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"set_active_iter","","Sets the current active item to be the one referenced by `iter`, or unsets the active item if `iter` is `None`. ## `iter` The `TreeIter`, or `None`",338,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_add_tearoffs","","Sets whether the popup menu should have a tearoff menu item.",338,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_button_sensitivity","","Sets whether the dropdown button of the combo box should be always sensitive (`SensitivityType::On`), never sensitive (`SensitivityType::Off`) or only if there is at least one item to display (`SensitivityType::Auto`). ## `sensitivity` specify the sensitivity of the dropdown button",338,{"inputs":[{"name":"self"},{"name":"sensitivitytype"}],"output":null}],[10,"set_column_span_column","","Sets the column with column span information for `self` to be `column_span`. The column span column contains integers which indicate how many columns an item should span. ## `column_span` A column in the model passed during construction",338,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_entry_text_column","","Sets the model column which `self` should use to get strings from to be `text_column`. The column `text_column` in the model of `self` must be of type `G_TYPE_STRING`.",338,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_id_column","","Sets the model column which `self` should use to get string IDs for values from. The column `id_column` in the model of `self` must be of type `G_TYPE_STRING`. ## `id_column` A column in `model` to get string IDs for values from",338,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_model","","Sets the model used by `self` to be `model`. Will unset a previously set model (if applicable). If model is `None`, then it will unset the model.",338,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_popup_fixed_width","","Specifies whether the popup’s width should be a fixed width matching the allocated width of the combo box. ## `fixed` whether to use a fixed popup width",338,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_row_span_column","","Sets the column with row span information for `self` to be `row_span`. The row span column contains integers which indicate how many rows an item should span. ## `row_span` A column in the model passed during construction.",338,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_title","","Sets the menu’s title in tearoff mode.",338,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_wrap_width","","Sets the wrap width of `self` to be `width`. The wrap width is basically the preferred number of columns when you want the popup to be layed out in a table. ## `width` Preferred number of columns",338,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_cell_area","","",338,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_property_has_frame","","",338,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_has_frame","","",338,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_popup_shown","","",338,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_tearoff_title","","",338,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_tearoff_title","","",338,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"connect_changed","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_format_entry_text","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_active","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_popdown","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_popup","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_active_notify","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_active_id_notify","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_add_tearoffs_notify","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_button_sensitivity_notify","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_cell_area_notify","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_column_span_column_notify","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_entry_text_column_notify","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_has_entry_notify","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_has_frame_notify","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_id_column_notify","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_model_notify","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_popup_fixed_width_notify","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_popup_shown_notify","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_row_span_column_notify","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_tearoff_title_notify","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_wrap_width_notify","","",338,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ComboBoxTextExt","","",null,null],[10,"append","","",339,{"inputs":[{"name":"self"},{"name":"p"},{"name":"str"}],"output":null}],[10,"append_text","","",339,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"get_active_text","","",339,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"insert","","",339,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"p"},{"name":"str"}],"output":null}],[10,"insert_text","","",339,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"str"}],"output":null}],[10,"prepend","","",339,{"inputs":[{"name":"self"},{"name":"p"},{"name":"str"}],"output":null}],[10,"prepend_text","","",339,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"remove","","",339,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"remove_all","","",339,{"inputs":[{"name":"self"}],"output":null}],[8,"ContainerExt","","Trait containing all `Container` methods.",null,null],[10,"add","","Adds `widget` to `self`. Typically used for simple containers such as `Window`, `Frame`, or `Button`; for more complicated layout containers such as `Box` or `Grid`, this function will pick default packing parameters that may not be correct. So consider functions such as `BoxExt::pack_start` and `Grid::attach` as an alternative to `ContainerExt::add` in those cases. A widget may be added to only one container at a time; you can’t place the same widget inside two different containers.",340,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"check_resize","","",340,{"inputs":[{"name":"self"}],"output":null}],[10,"child_notify","","Emits a `Widget::child-notify` signal for the child property `child_property` on widget.",340,{"inputs":[{"name":"self"},{"name":"p"},{"name":"str"}],"output":null}],[10,"child_type","","Returns the type of the children supported by the container.",340,{"inputs":[{"name":"self"}],"output":{"name":"type"}}],[10,"get_border_width","","Retrieves the border width of the container. See `ContainerExt::set_border_width`.",340,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_children","","Returns the container’s non-internal children. See `ContainerExt::forall` for details on what constitutes an \"internal\" child.",340,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_focus_child","","Returns the current focus child widget inside `self`. This is not the currently focused widget. That can be obtained by calling `Window::get_focus`.",340,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_focus_hadjustment","","Retrieves the horizontal focus adjustment for the container. See gtk_container_set_focus_hadjustment ().",340,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_focus_vadjustment","","Retrieves the vertical focus adjustment for the container. See `ContainerExt::set_focus_vadjustment`.",340,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_resize_mode","","Returns the resize mode for the container. See gtk_container_set_resize_mode ().",340,{"inputs":[{"name":"self"}],"output":{"name":"resizemode"}}],[10,"propagate_draw","","When a container receives a call to the draw function, it must send synthetic `Widget::draw` calls to all children that don’t have their own `GdkWindows`. This function provides a convenient way of doing this. A container, when it receives a call to its `Widget::draw` function, calls `ContainerExt::propagate_draw` once for each child, passing in the `cr` the container received.",340,{"inputs":[{"name":"self"},{"name":"p"},{"name":"context"}],"output":null}],[10,"remove","","Removes `widget` from `self`. `widget` must be inside `self`. Note that `self` will own a reference to `widget`, and that this may be the last reference held; so removing a widget from its container can destroy that widget. If you want to use `widget` again, you need to add a reference to it while it’s not inside a container, using `gobject::Object::ref`. If you don’t want to use `widget` again it’s usually more efficient to simply destroy it directly using `Widget::destroy` since this will remove it from the container and help break any circular reference count cycles. ## `widget` a current child of `self`",340,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"resize_children","","",340,{"inputs":[{"name":"self"}],"output":null}],[10,"set_border_width","","Sets the border width of the container.",340,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"set_focus_chain","","Sets a focus chain, overriding the one computed automatically by GTK+.",340,null],[10,"set_focus_child","","Sets, or unsets if `child` is `None`, the focused child of `self`.",340,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_focus_hadjustment","","Hooks up an adjustment to focus handling in a container, so when a child of the container is focused, the adjustment is scrolled to show that widget. This function sets the horizontal alignment. See `ScrolledWindow::get_hadjustment` for a typical way of obtaining the adjustment and `ContainerExt::set_focus_vadjustment` for setting the vertical adjustment.",340,{"inputs":[{"name":"self"},{"name":"adjustment"}],"output":null}],[10,"set_focus_vadjustment","","Hooks up an adjustment to focus handling in a container, so when a child of the container is focused, the adjustment is scrolled to show that widget. This function sets the vertical alignment. See `ScrolledWindow::get_vadjustment` for a typical way of obtaining the adjustment and `ContainerExt::set_focus_hadjustment` for setting the horizontal adjustment.",340,{"inputs":[{"name":"self"},{"name":"adjustment"}],"output":null}],[10,"set_reallocate_redraws","","Sets the `reallocate_redraws` flag of the container to the given value.",340,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_resize_mode","","Sets the resize mode for the container.",340,{"inputs":[{"name":"self"},{"name":"resizemode"}],"output":null}],[10,"unset_focus_chain","","Removes a focus chain explicitly set with `ContainerExt::set_focus_chain`.",340,{"inputs":[{"name":"self"}],"output":null}],[10,"set_property_child","","",340,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"connect_add","","",340,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_check_resize","","",340,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_remove","","",340,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_set_focus_child","","",340,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_border_width_notify","","",340,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_child_notify","","",340,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_resize_mode_notify","","",340,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CssProviderExt","","",null,null],[10,"load_from_data","","",341,null],[10,"load_from_path","","",341,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"load_from_resource","","",341,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"to_string","","",341,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[10,"connect_parsing_error","","",341,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"DialogExt","","Trait containing all `Dialog` methods.",null,null],[10,"add_action_widget","","Adds an activatable widget to the action area of a `Dialog`, connecting a signal handler that will emit the `Dialog::response` signal on the dialog when the widget is activated. The widget is appended to the end of the dialog’s action area. If you want to add a non-activatable widget, simply pack it into the `action_area` field of the `Dialog` struct. ## `child` an activatable widget ## `response_id` response ID for `child`",342,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":null}],[10,"add_button","","Adds a button with the given text and sets things up so that clicking the button will emit the `Dialog::response` signal with the given `response_id`. The button is appended to the end of the dialog’s action area. The button widget is returned, but usually you don’t need it. ## `button_text` text of button ## `response_id` response ID for the button",342,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"}],"output":{"name":"widget"}}],[10,"get_action_area","","Returns the action area of `self`.",342,{"inputs":[{"name":"self"}],"output":{"name":"widget"}}],[10,"get_content_area","","Returns the content area of `self`.",342,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[10,"get_header_bar","","Returns the header bar of `self`. Note that the headerbar is only used by the dialog if the `Dialog:use-header-bar` property is `true`.",342,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_response_for_widget","","Gets the response id of a widget in the action area of a dialog. ## `widget` a widget in the action area of `self`",342,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"i32"}}],[10,"get_widget_for_response","","Gets the widget button that uses the given response ID in the action area of a dialog. ## `response_id` the response ID used by the `self` widget",342,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[10,"response","","Emits the `Dialog::response` signal with the given response ID. Used to indicate that the user has responded to the dialog in some way; typically either you or `DialogExt::run` will be monitoring the ::response signal and take appropriate action. ## `response_id` response ID",342,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"run","","Blocks in a recursive main loop until the `self` either emits the `Dialog::response` signal, or is destroyed. If the dialog is destroyed during the call to `DialogExt::run`, `DialogExt::run` returns `ResponseType::None`. Otherwise, it returns the response ID from the ::response signal emission.",342,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_alternative_button_order_from_array","","Sets an alternative button order. If the `Settings:gtk-alternative-button-order` setting is set to `true`, the dialog buttons are reordered according to the order of the response ids in `new_order`.",342,null],[10,"set_default_response","","Sets the last widget in the dialog’s action area with the given `response_id` as the default widget for the dialog. Pressing “Enter” normally activates the default widget. ## `response_id` a response ID",342,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_response_sensitive","","Calls `gtk_widget_set_sensitive (widget, @setting)` for each widget in the dialog’s action area with the given `response_id`. A convenient way to sensitize/desensitize dialog buttons. ## `response_id` a response ID ## `setting` `true` for sensitive",342,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"bool"}],"output":null}],[10,"get_property_use_header_bar","","",342,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"connect_close","","",342,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_response","","",342,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_header_bar_notify","","",342,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"EditableExt","","Trait containing all `Editable` methods.",null,null],[10,"copy_clipboard","","Copies the contents of the currently selected content in the editable and puts it on the clipboard.",343,{"inputs":[{"name":"self"}],"output":null}],[10,"cut_clipboard","","Removes the contents of the currently selected content in the editable and puts it on the clipboard.",343,{"inputs":[{"name":"self"}],"output":null}],[10,"delete_selection","","Deletes the currently selected text of the editable. This call doesn’t do anything if there is no selected text.",343,{"inputs":[{"name":"self"}],"output":null}],[10,"delete_text","","Deletes a sequence of characters. The characters that are deleted are those characters at positions from `start_pos` up to, but not including `end_pos`. If `end_pos` is negative, then the characters deleted are those from `start_pos` to the end of the text.",343,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"get_chars","","Retrieves a sequence of characters. The characters that are retrieved are those characters at positions from `start_pos` up to, but not including `end_pos`. If `end_pos` is negative, then the characters retrieved are those characters from `start_pos` to the end of the text.",343,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_editable","","Retrieves whether `self` is editable. See `Editable::set_editable`.",343,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_position","","Retrieves the current position of the cursor relative to the start of the content of the editable.",343,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_selection_bounds","","Retrieves the selection bound of the editable. start_pos will be filled with the start of the selection and `end_pos` with end. If no text was selected both will be identical and `false` will be returned.",343,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"insert_text","","Inserts `new_text_length` bytes of `new_text` into the contents of the widget, at position `position`.",343,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"}],"output":null}],[10,"paste_clipboard","","Pastes the content of the clipboard to the current position of the cursor in the editable.",343,{"inputs":[{"name":"self"}],"output":null}],[10,"select_region","","Selects a region of text. The characters that are selected are those characters at positions from `start_pos` up to, but not including `end_pos`. If `end_pos` is negative, then the characters selected are those characters from `start_pos` to the end of the text.",343,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_editable","","Determines if the user can edit the text in the editable widget or not. ## `is_editable` `true` if the user is allowed to edit the text  in the widget",343,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_position","","Sets the cursor position in the editable to the given value.",343,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[8,"EntryExt","","Trait containing all `Entry` methods.",null,null],[10,"get_activates_default","","Retrieves the value set by `EntryExt::set_activates_default`.",344,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_alignment","","Gets the value set by `EntryExt::set_alignment`.",344,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"get_attributes","","Gets the attribute list that was set on the entry using `EntryExt::set_attributes`, if any.",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_buffer","","Get the `EntryBuffer` object which holds the text for this widget.",344,{"inputs":[{"name":"self"}],"output":{"name":"entrybuffer"}}],[10,"get_completion","","Returns the auxiliary completion object currently in use by `self`.",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_current_icon_drag_source","","Returns the index of the icon which is the source of the current DND operation, or -1.",344,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_cursor_hadjustment","","Retrieves the horizontal cursor adjustment for the entry. See `EntryExt::set_cursor_hadjustment`.",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_has_frame","","Gets the value set by `EntryExt::set_has_frame`.",344,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_icon_activatable","","Returns whether the icon is activatable. ## `icon_pos` Icon position",344,{"inputs":[{"name":"self"},{"name":"entryiconposition"}],"output":{"name":"bool"}}],[10,"get_icon_area","","Gets the area where entry’s icon at `icon_pos` is drawn. This function is useful when drawing something to the entry in a draw callback.",344,{"inputs":[{"name":"self"},{"name":"entryiconposition"}],"output":{"name":"rectangle"}}],[10,"get_icon_at_pos","","Finds the icon at the given position and return its index. The position’s coordinates are relative to the `self`’s top left corner. If `x`, `y` doesn’t lie inside an icon, -1 is returned. This function is intended for use in a `Widget::query-tooltip` signal handler. ## `x` the x coordinate of the position to find ## `y` the y coordinate of the position to find",344,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[10,"get_icon_gicon","","Retrieves the `gio::Icon` used for the icon, or `None` if there is no icon or if the icon was set by some other method (e.g., by stock, pixbuf, or icon name). ## `icon_pos` Icon position",344,{"inputs":[{"name":"self"},{"name":"entryiconposition"}],"output":{"name":"option"}}],[10,"get_icon_name","","Retrieves the icon name used for the icon, or `None` if there is no icon or if the icon was set by some other method (e.g., by pixbuf, stock or gicon). ## `icon_pos` Icon position",344,{"inputs":[{"name":"self"},{"name":"entryiconposition"}],"output":{"name":"option"}}],[10,"get_icon_pixbuf","","Retrieves the image used for the icon.",344,{"inputs":[{"name":"self"},{"name":"entryiconposition"}],"output":{"name":"option"}}],[10,"get_icon_sensitive","","Returns whether the icon appears sensitive or insensitive. ## `icon_pos` Icon position",344,{"inputs":[{"name":"self"},{"name":"entryiconposition"}],"output":{"name":"bool"}}],[10,"get_icon_stock","","Retrieves the stock id used for the icon, or `None` if there is no icon or if the icon was set by some other method (e.g., by pixbuf, icon name or gicon).",344,{"inputs":[{"name":"self"},{"name":"entryiconposition"}],"output":{"name":"option"}}],[10,"get_icon_storage_type","","Gets the type of representation being used by the icon to store image data. If the icon has no image data, the return value will be `ImageType::Empty`. ## `icon_pos` Icon position",344,{"inputs":[{"name":"self"},{"name":"entryiconposition"}],"output":{"name":"imagetype"}}],[10,"get_icon_tooltip_markup","","Gets the contents of the tooltip on the icon at the specified position in `self`. ## `icon_pos` the icon position",344,{"inputs":[{"name":"self"},{"name":"entryiconposition"}],"output":{"name":"option"}}],[10,"get_icon_tooltip_text","","Gets the contents of the tooltip on the icon at the specified position in `self`. ## `icon_pos` the icon position",344,{"inputs":[{"name":"self"},{"name":"entryiconposition"}],"output":{"name":"option"}}],[10,"get_input_hints","","Gets the value of the `Entry:input-hints` property.",344,{"inputs":[{"name":"self"}],"output":{"name":"inputhints"}}],[10,"get_input_purpose","","Gets the value of the `Entry:input-purpose` property.",344,{"inputs":[{"name":"self"}],"output":{"name":"inputpurpose"}}],[10,"get_invisible_char","","Retrieves the character displayed in place of the real characters for entries with visibility set to false. See `EntryExt::set_invisible_char`.",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_layout","","Gets the `pango::Layout` used to display the entry. The layout is useful to e.g. convert text positions to pixel positions, in combination with `EntryExt::get_layout_offsets`. The returned layout is owned by the entry and must not be modified or freed by the caller.",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_layout_offsets","","Obtains the position of the `pango::Layout` used to render text in the entry, in widget coordinates. Useful if you want to line up the text in an entry with some other text, e.g. when using the entry to implement editable cells in a sheet widget.",344,null],[10,"get_max_length","","Retrieves the maximum allowed length of the text in `self`. See `EntryExt::set_max_length`.",344,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_max_width_chars","","Retrieves the desired maximum width of `self`, in characters. See `EntryExt::set_max_width_chars`.",344,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_overwrite_mode","","Gets the value set by `EntryExt::set_overwrite_mode`.",344,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_placeholder_text","","Retrieves the text that will be displayed when `self` is empty and unfocused",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_progress_fraction","","Returns the current fraction of the task that’s been completed. See `EntryExt::set_progress_fraction`.",344,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_progress_pulse_step","","Retrieves the pulse step set with `EntryExt::set_progress_pulse_step`.",344,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_tabs","","Gets the tabstops that were set on the entry using `EntryExt::set_tabs`, if any.",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_text","","Retrieves the contents of the entry widget. See also `Editable::get_chars`.",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_text_area","","Gets the area where the entry’s text is drawn. This function is useful when drawing something to the entry in a draw callback.",344,{"inputs":[{"name":"self"}],"output":{"name":"rectangle"}}],[10,"get_text_length","","Retrieves the current length of the text in `self`.",344,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[10,"get_visibility","","Retrieves whether the text in `self` is visible. See `EntryExt::set_visibility`.",344,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_width_chars","","Gets the value set by `EntryExt::set_width_chars`.",344,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"grab_focus_without_selecting","","Causes `self` to have keyboard focus.",344,{"inputs":[{"name":"self"}],"output":null}],[10,"im_context_filter_keypress","","Allow the `Entry` input method to internally handle key press and release events. If this function returns `true`, then no further processing should be done for this key event. See `IMContext::filter_keypress`.",344,{"inputs":[{"name":"self"},{"name":"eventkey"}],"output":{"name":"bool"}}],[10,"layout_index_to_text_index","","Converts from a position in the entry contents (returned by `EntryExt::get_text`) to a position in the entry’s `pango::Layout` (returned by `EntryExt::get_layout`, with text retrieved via `pango::Layout::get_text`). ## `layout_index` byte index into the entry layout text",344,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"i32"}}],[10,"progress_pulse","","Indicates that some progress is made, but you don’t know how much. Causes the entry’s progress indicator to enter “activity mode,” where a block bounces back and forth. Each call to `EntryExt::progress_pulse` causes the block to move by a little bit (the amount of movement per pulse is determined by `EntryExt::set_progress_pulse_step`).",344,{"inputs":[{"name":"self"}],"output":null}],[10,"reset_im_context","","Reset the input method context of the entry if needed.",344,{"inputs":[{"name":"self"}],"output":null}],[10,"set_activates_default","","If `setting` is `true`, pressing Enter in the `self` will activate the default widget for the window containing the entry. This usually means that the dialog box containing the entry will be closed, since the default widget is usually one of the dialog buttons.",344,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_alignment","","Sets the alignment for the contents of the entry. This controls the horizontal positioning of the contents when the displayed text is shorter than the width of the entry. ## `xalign` The horizontal alignment, from 0 (left) to 1 (right).  Reversed for RTL layouts",344,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"set_attributes","","Sets a `pango::AttrList`; the attributes in the list are applied to the entry text.",344,{"inputs":[{"name":"self"},{"name":"attrlist"}],"output":null}],[10,"set_buffer","","Set the `EntryBuffer` object which holds the text for this widget. ## `buffer` a `EntryBuffer`",344,{"inputs":[{"name":"self"},{"name":"entrybuffer"}],"output":null}],[10,"set_completion","","Sets `completion` to be the auxiliary completion object to use with `self`. All further configuration of the completion mechanism is done on `completion` using the `EntryCompletion` API. Completion is disabled if `completion` is set to `None`. ## `completion` The `EntryCompletion` or `None`",344,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_cursor_hadjustment","","Hooks up an adjustment to the cursor position in an entry, so that when the cursor is moved, the adjustment is scrolled to show that position. See `ScrolledWindow::get_hadjustment` for a typical way of obtaining the adjustment.",344,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_has_frame","","Sets whether the entry has a beveled frame around it. ## `setting` new value",344,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_icon_activatable","","Sets whether the icon is activatable. ## `icon_pos` Icon position ## `activatable` `true` if the icon should be activatable",344,{"inputs":[{"name":"self"},{"name":"entryiconposition"},{"name":"bool"}],"output":null}],[10,"set_icon_drag_source","","Sets up the icon at the given position so that GTK+ will start a drag operation when the user clicks and drags the icon.",344,{"inputs":[{"name":"self"},{"name":"entryiconposition"},{"name":"targetlist"},{"name":"dragaction"}],"output":null}],[10,"set_icon_from_gicon","","Sets the icon shown in the entry at the specified position from the current icon theme. If the icon isn’t known, a “broken image” icon will be displayed instead.",344,{"inputs":[{"name":"self"},{"name":"entryiconposition"},{"name":"q"}],"output":null}],[10,"set_icon_from_icon_name","","Sets the icon shown in the entry at the specified position from the current icon theme.",344,{"inputs":[{"name":"self"},{"name":"entryiconposition"},{"name":"p"}],"output":null}],[10,"set_icon_from_pixbuf","","Sets the icon shown in the specified position using a pixbuf.",344,{"inputs":[{"name":"self"},{"name":"entryiconposition"},{"name":"p"}],"output":null}],[10,"set_icon_from_stock","","Sets the icon shown in the entry at the specified position from a stock image.",344,{"inputs":[{"name":"self"},{"name":"entryiconposition"},{"name":"p"}],"output":null}],[10,"set_icon_sensitive","","Sets the sensitivity for the specified icon. ## `icon_pos` Icon position ## `sensitive` Specifies whether the icon should appear  sensitive or insensitive",344,{"inputs":[{"name":"self"},{"name":"entryiconposition"},{"name":"bool"}],"output":null}],[10,"set_icon_tooltip_markup","","Sets `tooltip` as the contents of the tooltip for the icon at the specified position. `tooltip` is assumed to be marked up with the [Pango text markup language][PangoMarkupFormat].",344,{"inputs":[{"name":"self"},{"name":"entryiconposition"},{"name":"p"}],"output":null}],[10,"set_icon_tooltip_text","","Sets `tooltip` as the contents of the tooltip for the icon at the specified position.",344,{"inputs":[{"name":"self"},{"name":"entryiconposition"},{"name":"p"}],"output":null}],[10,"set_input_hints","","Sets the `Entry:input-hints` property, which allows input methods to fine-tune their behaviour.",344,{"inputs":[{"name":"self"},{"name":"inputhints"}],"output":null}],[10,"set_input_purpose","","Sets the `Entry:input-purpose` property which can be used by on-screen keyboards and other input methods to adjust their behaviour.",344,{"inputs":[{"name":"self"},{"name":"inputpurpose"}],"output":null}],[10,"set_invisible_char","","Sets the character to use in place of the actual text when `EntryExt::set_visibility` has been called to set text visibility to `false`. i.e. this is the character used in “password mode” to show the user how many characters have been typed. By default, GTK+ picks the best invisible char available in the current font. If you set the invisible char to 0, then the user will get no feedback at all; there will be no text on the screen as they type. ## `ch` a Unicode character",344,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_max_length","","Sets the maximum allowed length of the contents of the widget. If the current contents are longer than the given length, then they will be truncated to fit.",344,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_max_width_chars","","Sets the desired maximum width in characters of `self`.",344,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_overwrite_mode","","Sets whether the text is overwritten when typing in the `Entry`. ## `overwrite` new value",344,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_placeholder_text","","Sets text to be displayed in `self` when it is empty and unfocused. This can be used to give a visual hint of the expected contents of the `Entry`.",344,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_progress_fraction","","Causes the entry’s progress indicator to “fill in” the given fraction of the bar. The fraction should be between 0.0 and 1.0, inclusive. ## `fraction` fraction of the task that’s been completed",344,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"set_progress_pulse_step","","Sets the fraction of total entry width to move the progress bouncing block for each call to `EntryExt::progress_pulse`. ## `fraction` fraction between 0.0 and 1.0",344,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"set_tabs","","Sets a `pango::TabArray`; the tabstops in the array are applied to the entry text.",344,{"inputs":[{"name":"self"},{"name":"tabarray"}],"output":null}],[10,"set_text","","Sets the text in the widget to the given value, replacing the current contents.",344,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_visibility","","Sets whether the contents of the entry are visible or not. When visibility is set to `false`, characters are displayed as the invisible char, and will also appear that way when the text in the entry widget is copied elsewhere.",344,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_width_chars","","Changes the size request of the entry to be about the right size for `n_chars` characters. Note that it changes the size request, the size can still be affected by how you pack the widget into containers. If `n_chars` is -1, the size reverts to the default entry size. ## `n_chars` width in chars",344,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"text_index_to_layout_index","","Converts from a position in the entry’s `pango::Layout` (returned by `EntryExt::get_layout`) to a position in the entry contents (returned by `EntryExt::get_text`). ## `text_index` byte index into the entry contents",344,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"i32"}}],[10,"unset_invisible_char","","Unsets the invisible char previously set with `EntryExt::set_invisible_char`. So that the default invisible char is used again.",344,{"inputs":[{"name":"self"}],"output":null}],[10,"get_property_caps_lock_warning","","",344,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_caps_lock_warning","","",344,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_cursor_position","","",344,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_property_im_module","","",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_im_module","","",344,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_invisible_char_set","","",344,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_invisible_char_set","","",344,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_populate_all","","",344,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_populate_all","","",344,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_primary_icon_activatable","","",344,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_primary_icon_activatable","","",344,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_primary_icon_gicon","","",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_primary_icon_gicon","","",344,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_primary_icon_name","","",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_primary_icon_name","","",344,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_primary_icon_pixbuf","","",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_primary_icon_pixbuf","","",344,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_primary_icon_sensitive","","",344,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_primary_icon_sensitive","","",344,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_primary_icon_stock","","",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_primary_icon_stock","","",344,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_primary_icon_storage_type","","",344,{"inputs":[{"name":"self"}],"output":{"name":"imagetype"}}],[10,"get_property_primary_icon_tooltip_markup","","",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_primary_icon_tooltip_markup","","",344,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_primary_icon_tooltip_text","","",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_primary_icon_tooltip_text","","",344,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_scroll_offset","","",344,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_property_secondary_icon_activatable","","",344,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_secondary_icon_activatable","","",344,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_secondary_icon_gicon","","",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_secondary_icon_gicon","","",344,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_secondary_icon_name","","",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_secondary_icon_name","","",344,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_secondary_icon_pixbuf","","",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_secondary_icon_pixbuf","","",344,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_secondary_icon_sensitive","","",344,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_secondary_icon_sensitive","","",344,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_secondary_icon_stock","","",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_secondary_icon_stock","","",344,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_secondary_icon_storage_type","","",344,{"inputs":[{"name":"self"}],"output":{"name":"imagetype"}}],[10,"get_property_secondary_icon_tooltip_markup","","",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_secondary_icon_tooltip_markup","","",344,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_secondary_icon_tooltip_text","","",344,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_secondary_icon_tooltip_text","","",344,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_selection_bound","","",344,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_property_shadow_type","","",344,{"inputs":[{"name":"self"}],"output":{"name":"shadowtype"}}],[10,"set_property_shadow_type","","",344,{"inputs":[{"name":"self"},{"name":"shadowtype"}],"output":null}],[10,"get_property_truncate_multiline","","",344,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_truncate_multiline","","",344,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_xalign","","",344,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_xalign","","",344,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"connect_activate","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_backspace","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_copy_clipboard","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_cut_clipboard","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_delete_from_cursor","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_icon_press","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_icon_release","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_insert_at_cursor","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_cursor","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_paste_clipboard","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_populate_popup","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_preedit_changed","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_toggle_overwrite","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_activates_default_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_attributes_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_buffer_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_caps_lock_warning_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_completion_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_cursor_position_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_editable_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_has_frame_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_im_module_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_input_hints_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_input_purpose_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_invisible_char_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_invisible_char_set_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_max_length_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_max_width_chars_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_overwrite_mode_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_placeholder_text_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_populate_all_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_primary_icon_activatable_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_primary_icon_gicon_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_primary_icon_name_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_primary_icon_pixbuf_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_primary_icon_sensitive_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_primary_icon_stock_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_primary_icon_storage_type_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_primary_icon_tooltip_markup_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_primary_icon_tooltip_text_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_progress_fraction_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_progress_pulse_step_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_scroll_offset_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_secondary_icon_activatable_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_secondary_icon_gicon_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_secondary_icon_name_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_secondary_icon_pixbuf_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_secondary_icon_sensitive_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_secondary_icon_stock_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_secondary_icon_storage_type_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_secondary_icon_tooltip_markup_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_secondary_icon_tooltip_text_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_selection_bound_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_shadow_type_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_text_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_text_length_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_truncate_multiline_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_visibility_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_width_chars_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_xalign_notify","","",344,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"EntryCompletionExt","","",null,null],[10,"complete","","",345,{"inputs":[{"name":"self"}],"output":null}],[10,"compute_prefix","","",345,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"delete_action","","",345,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_completion_prefix","","",345,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_entry","","",345,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_inline_completion","","",345,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_inline_selection","","",345,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_minimum_key_length","","",345,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_model","","",345,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_popup_completion","","",345,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_popup_set_width","","",345,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_popup_single_match","","",345,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_text_column","","",345,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"insert_action_markup","","",345,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"str"}],"output":null}],[10,"insert_action_text","","",345,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"str"}],"output":null}],[10,"insert_prefix","","",345,{"inputs":[{"name":"self"}],"output":null}],[10,"set_inline_completion","","",345,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_inline_selection","","",345,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_minimum_key_length","","",345,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_model","","",345,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_popup_completion","","",345,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_popup_set_width","","",345,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_popup_single_match","","",345,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_text_column","","",345,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_cell_area","","",345,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_action_activated","","",345,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_cursor_on_match","","",345,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_insert_prefix","","",345,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_match_selected","","",345,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_no_matches","","",345,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_cell_area_notify","","",345,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_inline_completion_notify","","",345,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_inline_selection_notify","","",345,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_minimum_key_length_notify","","",345,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_model_notify","","",345,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_popup_completion_notify","","",345,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_popup_set_width_notify","","",345,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_popup_single_match_notify","","",345,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_text_column_notify","","",345,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"EventBoxExt","","",null,null],[10,"get_above_child","","",346,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_visible_window","","",346,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_above_child","","",346,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_visible_window","","",346,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_property_above_child_notify","","",346,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_visible_window_notify","","",346,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"EventControllerExt","","Trait containing all `EventController` methods.",null,null],[10,"get_propagation_phase","","Gets the propagation phase at which `self` handles events.",347,{"inputs":[{"name":"self"}],"output":{"name":"propagationphase"}}],[10,"get_widget","","Returns the `Widget` this controller relates to.",347,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"handle_event","","Feeds an events into `self`, so it can be interpreted and the controller actions triggered.",347,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"bool"}}],[10,"reset","","Resets the `self` to a clean state. Every interaction the controller did through `EventController::handle-event` will be dropped at this point.",347,{"inputs":[{"name":"self"}],"output":null}],[10,"set_propagation_phase","","Sets the propagation phase at which a controller handles events.",347,{"inputs":[{"name":"self"},{"name":"propagationphase"}],"output":null}],[10,"connect_property_propagation_phase_notify","","",347,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_widget_notify","","",347,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ExpanderExt","","",null,null],[10,"get_expanded","","",348,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_label","","",348,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_label_fill","","",348,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_label_widget","","",348,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_resize_toplevel","","",348,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_spacing","","",348,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_use_markup","","",348,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_use_underline","","",348,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_expanded","","",348,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_label","","",348,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_label_fill","","",348,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_label_widget","","",348,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_resize_toplevel","","",348,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_spacing","","",348,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_use_markup","","",348,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_use_underline","","",348,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_activate","","",348,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_expanded_notify","","",348,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_label_notify","","",348,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_label_fill_notify","","",348,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_label_widget_notify","","",348,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_resize_toplevel_notify","","",348,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_spacing_notify","","",348,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_markup_notify","","",348,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_underline_notify","","",348,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"FileChooserExt","","Trait containing all `FileChooser` methods.",null,null],[10,"add_filter","","Adds `filter` to the list of filters that the user can select between. When a filter is selected, only files that are passed by that filter are displayed.",349,{"inputs":[{"name":"self"},{"name":"filefilter"}],"output":null}],[10,"add_shortcut_folder","","Adds a folder to be displayed with the shortcut folders in a file chooser. Note that shortcut folders do not get saved, as they are provided by the application. For example, you can use this to add a “/usr/share/mydrawprogram/Clipart” folder to the volume list. ## `folder` filename of the folder to add",349,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"add_shortcut_folder_uri","","Adds a folder URI to be displayed with the shortcut folders in a file chooser. Note that shortcut folders do not get saved, as they are provided by the application. For example, you can use this to add a “file:///usr/share/mydrawprogram/Clipart” folder to the volume list. ## `uri` URI of the folder to add",349,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"get_action","","Gets the type of operation that the file chooser is performing; see `FileChooser::set_action`.",349,{"inputs":[{"name":"self"}],"output":{"name":"filechooseraction"}}],[10,"get_choice","","",349,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_create_folders","","Gets whether file choser will offer to create new folders. See `FileChooser::set_create_folders`.",349,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_current_folder","","Gets the current folder of `self` as a local filename. See `FileChooser::set_current_folder`.",349,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_current_folder_uri","","Gets the current folder of `self` as an URI. See `FileChooser::set_current_folder_uri`.",349,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_current_name","","Gets the current name in the file selector, as entered by the user in the text entry for “Name”.",349,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_do_overwrite_confirmation","","Queries whether a file chooser is set to confirm for overwriting when the user types a file name that already exists.",349,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_extra_widget","","Gets the current preview widget; see `FileChooser::set_extra_widget`.",349,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_filename","","Gets the filename for the currently selected file in the file selector. The filename is returned as an absolute path. If multiple files are selected, one of the filenames will be returned at random.",349,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_filenames","","Lists all the selected files and subfolders in the current folder of `self`. The returned names are full absolute paths. If files in the current folder cannot be represented as local filenames they will be ignored. (See `FileChooser::get_uris`)",349,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_filter","","Gets the current filter; see `FileChooser::set_filter`.",349,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_local_only","","Gets whether only local files can be selected in the file selector. See `FileChooser::set_local_only`",349,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_preview_filename","","Gets the filename that should be previewed in a custom preview widget. See `FileChooser::set_preview_widget`.",349,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_preview_uri","","Gets the URI that should be previewed in a custom preview widget. See `FileChooser::set_preview_widget`.",349,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_preview_widget","","Gets the current preview widget; see `FileChooser::set_preview_widget`.",349,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_preview_widget_active","","Gets whether the preview widget set by `FileChooser::set_preview_widget` should be shown for the current filename. See `FileChooser::set_preview_widget_active`.",349,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_select_multiple","","Gets whether multiple files can be selected in the file selector. See `FileChooser::set_select_multiple`.",349,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_hidden","","Gets whether hidden files and folders are displayed in the file selector. See `FileChooser::set_show_hidden`.",349,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_uri","","Gets the URI for the currently selected file in the file selector. If multiple files are selected, one of the filenames will be returned at random.",349,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_uris","","Lists all the selected files and subfolders in the current folder of `self`. The returned names are full absolute URIs.",349,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_use_preview_label","","Gets whether a stock label should be drawn with the name of the previewed file. See `FileChooser::set_use_preview_label`.",349,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"list_filters","","Lists the current set of user-selectable filters; see `FileChooser::add_filter`, `FileChooser::remove_filter`.",349,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"list_shortcut_folder_uris","","Queries the list of shortcut folders in the file chooser, as set by `FileChooser::add_shortcut_folder_uri`.",349,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"list_shortcut_folders","","Queries the list of shortcut folders in the file chooser, as set by `FileChooser::add_shortcut_folder`.",349,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"remove_choice","","",349,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"remove_filter","","Removes `filter` from the list of filters that the user can select between. ## `filter` a `FileFilter`",349,{"inputs":[{"name":"self"},{"name":"filefilter"}],"output":null}],[10,"remove_shortcut_folder","","Removes a folder from a file chooser’s list of shortcut folders. ## `folder` filename of the folder to remove",349,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"remove_shortcut_folder_uri","","Removes a folder URI from a file chooser’s list of shortcut folders. ## `uri` URI of the folder to remove",349,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"select_all","","Selects all the files in the current folder of a file chooser.",349,{"inputs":[{"name":"self"}],"output":null}],[10,"select_filename","","Selects a filename. If the file name isn’t in the current folder of `self`, then the current folder of `self` will be changed to the folder containing `filename`. ## `filename` the filename to select",349,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"select_uri","","Selects the file to by `uri`. If the URI doesn’t refer to a file in the current folder of `self`, then the current folder of `self` will be changed to the folder containing `filename`. ## `uri` the URI to select",349,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"set_action","","Sets the type of operation that the chooser is performing; the user interface is adapted to suit the selected action. For example, an option to create a new folder might be shown if the action is `FileChooserAction::Save` but not if the action is `FileChooserAction::Open`. ## `action` the action that the file selector is performing",349,{"inputs":[{"name":"self"},{"name":"filechooseraction"}],"output":null}],[10,"set_choice","","",349,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":null}],[10,"set_create_folders","","Sets whether file choser will offer to create new folders. This is only relevant if the action is not set to be `FileChooserAction::Open`. ## `create_folders` `true` if the Create Folder button should be displayed",349,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_current_folder","","Sets the current folder for `self` from a local filename. The user will be shown the full contents of the current folder, plus user interface elements for navigating to other folders.",349,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"set_current_folder_uri","","Sets the current folder for `self` from an URI. The user will be shown the full contents of the current folder, plus user interface elements for navigating to other folders.",349,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"set_current_name","","Sets the current name in the file selector, as if entered by the user. Note that the name passed in here is a UTF-8 string rather than a filename. This function is meant for such uses as a suggested name in a “Save As...” dialog. You can pass “Untitled.doc” or a similarly suitable suggestion for the `name`.",349,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_do_overwrite_confirmation","","Sets whether a file chooser in `FileChooserAction::Save` mode will present a confirmation dialog if the user types a file name that already exists. This is `false` by default.",349,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_extra_widget","","Sets an application-supplied widget to provide extra options to the user. ## `extra_widget` widget for extra options",349,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_filename","","Sets `filename` as the current filename for the file chooser, by changing to the file’s parent folder and actually selecting the file in list; all other files will be unselected. If the `self` is in `FileChooserAction::Save` mode, the file’s base name will also appear in the dialog’s file name entry.",349,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"set_filter","","Sets the current filter; only the files that pass the filter will be displayed. If the user-selectable list of filters is non-empty, then the filter should be one of the filters in that list. Setting the current filter when the list of filters is empty is useful if you want to restrict the displayed set of files without letting the user change it. ## `filter` a `FileFilter`",349,{"inputs":[{"name":"self"},{"name":"filefilter"}],"output":null}],[10,"set_local_only","","Sets whether only local files can be selected in the file selector. If `local_only` is `true` (the default), then the selected file or files are guaranteed to be accessible through the operating systems native file system and therefore the application only needs to worry about the filename functions in `FileChooser`, like `FileChooser::get_filename`, rather than the URI functions like `FileChooser::get_uri`,",349,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_preview_widget","","Sets an application-supplied widget to use to display a custom preview of the currently selected file. To implement a preview, after setting the preview widget, you connect to the `FileChooser::update-preview` signal, and call `FileChooser::get_preview_filename` or `FileChooser::get_preview_uri` on each change. If you can display a preview of the new file, update your widget and set the preview active using `FileChooser::set_preview_widget_active`. Otherwise, set the preview inactive.",349,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_preview_widget_active","","Sets whether the preview widget set by `FileChooser::set_preview_widget` should be shown for the current filename. When `active` is set to false, the file chooser may display an internally generated preview of the current file or it may display no preview at all. See `FileChooser::set_preview_widget` for more details. ## `active` whether to display the user-specified preview widget",349,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_select_multiple","","Sets whether multiple files can be selected in the file selector. This is only relevant if the action is set to be `FileChooserAction::Open` or `FileChooserAction::SelectFolder`. ## `select_multiple` `true` if multiple files can be selected.",349,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_hidden","","Sets whether hidden files and folders are displayed in the file selector. ## `show_hidden` `true` if hidden files and folders should be displayed.",349,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_uri","","Sets the file referred to by `uri` as the current file for the file chooser, by changing to the URI’s parent folder and actually selecting the URI in the list. If the `self` is `FileChooserAction::Save` mode, the URI’s base name will also appear in the dialog’s file name entry.",349,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"set_use_preview_label","","Sets whether the file chooser should display a stock label with the name of the file that is being previewed; the default is `true`. Applications that want to draw the whole preview area themselves should set this to `false` and display the name themselves in their preview widget.",349,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"unselect_all","","Unselects all the files in the current folder of a file chooser.",349,{"inputs":[{"name":"self"}],"output":null}],[10,"unselect_filename","","Unselects a currently selected filename. If the filename is not in the current directory, does not exist, or is otherwise not currently selected, does nothing. ## `filename` the filename to unselect",349,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"unselect_uri","","Unselects the file referred to by `uri`. If the file is not in the current directory, does not exist, or is otherwise not currently selected, does nothing. ## `uri` the URI to unselect",349,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"connect_confirm_overwrite","","",349,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_current_folder_changed","","",349,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_file_activated","","",349,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_selection_changed","","",349,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_update_preview","","",349,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_action_notify","","",349,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_create_folders_notify","","",349,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_do_overwrite_confirmation_notify","","",349,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_extra_widget_notify","","",349,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_filter_notify","","",349,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_local_only_notify","","",349,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_preview_widget_notify","","",349,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_preview_widget_active_notify","","",349,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_select_multiple_notify","","",349,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_hidden_notify","","",349,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_preview_label_notify","","",349,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"FileChooserButtonExt","","",null,null],[10,"get_title","","",350,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_width_chars","","",350,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_title","","",350,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_width_chars","","",350,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"connect_file_set","","",350,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_dialog_notify","","",350,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_title_notify","","",350,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_width_chars_notify","","",350,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"FileChooserWidgetExt","","",null,null],[10,"get_property_search_mode","","",351,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_search_mode","","",351,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_subtitle","","",351,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_desktop_folder","","",351,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_down_folder","","",351,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_home_folder","","",351,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_location_popup","","",351,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_location_popup_on_paste","","",351,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_location_toggle_popup","","",351,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_places_shortcut","","",351,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_quick_bookmark","","",351,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_recent_shortcut","","",351,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_search_shortcut","","",351,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_show_hidden","","",351,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_up_folder","","",351,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_search_mode_notify","","",351,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_subtitle_notify","","",351,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"FileFilterExt","","",null,null],[10,"add_mime_type","","",352,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"add_pattern","","",352,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"add_pixbuf_formats","","",352,{"inputs":[{"name":"self"}],"output":null}],[10,"get_name","","",352,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_needed","","",352,{"inputs":[{"name":"self"}],"output":{"name":"filefilterflags"}}],[10,"set_name","","",352,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"to_gvariant","","",352,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[8,"FixedExt","","",null,null],[10,"move_","","",353,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"put","","",353,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"get_child_x","","",353,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"i32"}}],[10,"set_child_x","","",353,{"inputs":[{"name":"self"},{"name":"t"},{"name":"i32"}],"output":null}],[10,"get_child_y","","",353,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"i32"}}],[10,"set_child_y","","",353,{"inputs":[{"name":"self"},{"name":"t"},{"name":"i32"}],"output":null}],[8,"FlowBoxExt","","",null,null],[10,"get_activate_on_single_click","","",354,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_child_at_index","","",354,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_column_spacing","","",354,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_homogeneous","","",354,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_max_children_per_line","","",354,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_min_children_per_line","","",354,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_row_spacing","","",354,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_selected_children","","",354,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_selection_mode","","",354,{"inputs":[{"name":"self"}],"output":{"name":"selectionmode"}}],[10,"insert","","",354,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":null}],[10,"invalidate_filter","","",354,{"inputs":[{"name":"self"}],"output":null}],[10,"invalidate_sort","","",354,{"inputs":[{"name":"self"}],"output":null}],[10,"select_all","","",354,{"inputs":[{"name":"self"}],"output":null}],[10,"select_child","","",354,{"inputs":[{"name":"self"},{"name":"flowboxchild"}],"output":null}],[10,"set_activate_on_single_click","","",354,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_column_spacing","","",354,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"set_hadjustment","","",354,{"inputs":[{"name":"self"},{"name":"adjustment"}],"output":null}],[10,"set_homogeneous","","",354,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_max_children_per_line","","",354,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"set_min_children_per_line","","",354,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"set_row_spacing","","",354,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"set_selection_mode","","",354,{"inputs":[{"name":"self"},{"name":"selectionmode"}],"output":null}],[10,"set_vadjustment","","",354,{"inputs":[{"name":"self"},{"name":"adjustment"}],"output":null}],[10,"unselect_all","","",354,{"inputs":[{"name":"self"}],"output":null}],[10,"unselect_child","","",354,{"inputs":[{"name":"self"},{"name":"flowboxchild"}],"output":null}],[10,"get_property_activate_on_single_click","","",354,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_activate_on_single_click","","",354,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_column_spacing","","",354,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_column_spacing","","",354,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_homogeneous","","",354,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_homogeneous","","",354,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_max_children_per_line","","",354,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_max_children_per_line","","",354,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_min_children_per_line","","",354,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_min_children_per_line","","",354,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_row_spacing","","",354,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_row_spacing","","",354,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_selection_mode","","",354,{"inputs":[{"name":"self"}],"output":{"name":"selectionmode"}}],[10,"set_property_selection_mode","","",354,{"inputs":[{"name":"self"},{"name":"selectionmode"}],"output":null}],[10,"connect_activate_cursor_child","","",354,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_child_activated","","",354,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_cursor","","",354,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_select_all","","",354,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_selected_children_changed","","",354,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_toggle_cursor_child","","",354,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_unselect_all","","",354,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_activate_on_single_click_notify","","",354,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_column_spacing_notify","","",354,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_homogeneous_notify","","",354,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_max_children_per_line_notify","","",354,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_min_children_per_line_notify","","",354,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_row_spacing_notify","","",354,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_selection_mode_notify","","",354,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"FlowBoxChildExt","","",null,null],[10,"changed","","",355,{"inputs":[{"name":"self"}],"output":null}],[10,"get_index","","",355,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"is_selected","","",355,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"connect_activate","","",355,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"FontButtonExt","","",null,null],[10,"get_font_name","","",356,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_show_size","","",356,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_style","","",356,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_title","","",356,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_use_font","","",356,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_use_size","","",356,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_font_name","","",356,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"set_show_size","","",356,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_style","","",356,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_title","","",356,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_use_font","","",356,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_use_size","","",356,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_font_set","","",356,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_font_name_notify","","",356,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_size_notify","","",356,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_style_notify","","",356,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_title_notify","","",356,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_font_notify","","",356,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_size_notify","","",356,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"FontChooserExt","","Trait containing all `FontChooser` methods.",null,null],[10,"get_font","","Gets the currently-selected font name.",357,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_font_desc","","Gets the currently-selected font.",357,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_font_face","","Gets the `pango::FontFace` representing the selected font group details (i.e. family, slant, weight, width, etc).",357,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_font_family","","Gets the `pango::FontFamily` representing the selected font family. Font families are a collection of font faces.",357,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_font_map","","",357,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_font_size","","The selected font size.",357,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_preview_text","","Gets the text displayed in the preview area.",357,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_show_preview_entry","","Returns whether the preview entry is shown or not.",357,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_font","","Sets the currently-selected font. ## `fontname` a font name like “Helvetica 12” or “Times Bold 18”",357,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_font_desc","","Sets the currently-selected font from `font_desc`. ## `font_desc` a `pango::FontDescription`",357,{"inputs":[{"name":"self"},{"name":"fontdescription"}],"output":null}],[10,"set_font_map","","",357,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_preview_text","","Sets the text displayed in the preview area. The `text` is used to show how the selected font looks. ## `text` the text to display in the preview area",357,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_show_preview_entry","","Shows or hides the editable preview entry. ## `show_preview_entry` whether to show the editable preview entry or not",357,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_font_activated","","",357,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_font_notify","","",357,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_font_desc_notify","","",357,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_preview_text_notify","","",357,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_preview_entry_notify","","",357,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"FrameExt","","Trait containing all `Frame` methods.",null,null],[10,"get_label","","If the frame’s label widget is a `Label`, returns the text in the label widget. (The frame will have a `Label` for the label widget if a non-`None` argument was passed to `Frame::new`.)",358,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_label_align","","Retrieves the X and Y alignment of the frame’s label. See `FrameExt::set_label_align`. ## `xalign` location to store X alignment of  frame’s label, or `None` ## `yalign` location to store X alignment of  frame’s label, or `None`",358,null],[10,"get_label_widget","","Retrieves the label widget for the frame. See `FrameExt::set_label_widget`.",358,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_shadow_type","","Retrieves the shadow type of the frame. See `FrameExt::set_shadow_type`.",358,{"inputs":[{"name":"self"}],"output":{"name":"shadowtype"}}],[10,"set_label","","Sets the text of the label. If `label` is `None`, the current label is removed. ## `label` the text to use as the label of the frame",358,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_label_align","","Sets the alignment of the frame widget’s label. The default values for a newly created frame are 0.0 and 0.5. ## `xalign` The position of the label along the top edge  of the widget. A value of 0.0 represents left alignment;  1.0 represents right alignment. ## `yalign` The y alignment of the label. A value of 0.0 aligns under  the frame; 1.0 aligns above the frame. If the values are exactly  0.0 or 1.0 the gap in the frame won’t be painted because the label  will be completely above or below the frame.",358,{"inputs":[{"name":"self"},{"name":"f32"},{"name":"f32"}],"output":null}],[10,"set_label_widget","","Sets the label widget for the frame. This is the widget that will appear embedded in the top edge of the frame as a title. ## `label_widget` the new label widget",358,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_shadow_type","","Sets the shadow type for `self`. ## `type_` the new `ShadowType`",358,{"inputs":[{"name":"self"},{"name":"shadowtype"}],"output":null}],[10,"get_property_label_xalign","","",358,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_label_xalign","","",358,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"get_property_label_yalign","","",358,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_label_yalign","","",358,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"connect_property_label_notify","","",358,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_label_widget_notify","","",358,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_label_xalign_notify","","",358,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_label_yalign_notify","","",358,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_shadow_type_notify","","",358,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"GLAreaExt","","",null,null],[10,"attach_buffers","","",359,{"inputs":[{"name":"self"}],"output":null}],[10,"get_auto_render","","",359,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_context","","",359,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_error","","",359,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_has_alpha","","",359,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_has_depth_buffer","","",359,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_has_stencil_buffer","","",359,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_required_version","","",359,null],[10,"get_use_es","","",359,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"make_current","","",359,{"inputs":[{"name":"self"}],"output":null}],[10,"queue_render","","",359,{"inputs":[{"name":"self"}],"output":null}],[10,"set_auto_render","","",359,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_error","","",359,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_has_alpha","","",359,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_has_depth_buffer","","",359,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_has_stencil_buffer","","",359,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_required_version","","",359,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_use_es","","",359,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_create_context","","",359,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_render","","",359,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_resize","","",359,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_auto_render_notify","","",359,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_context_notify","","",359,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_has_alpha_notify","","",359,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_has_depth_buffer_notify","","",359,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_has_stencil_buffer_notify","","",359,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_es_notify","","",359,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"GestureExt","","Trait containing all `Gesture` methods.",null,null],[10,"get_bounding_box","","If there are touch sequences being currently handled by `self`, this function returns `true` and fills in `rect` with the bounding box containing all active touches. Otherwise, `false` will be returned.",360,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_bounding_box_center","","If there are touch sequences being currently handled by `self`, this function returns `true` and fills in `x` and `y` with the center of the bounding box containing all active touches. Otherwise, `false` will be returned.",360,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_device","","Returns the master `gdk::Device` that is currently operating on `self`, or `None` if the gesture is not being interacted.",360,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_group","","Returns all gestures in the group of `self`",360,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_window","","Returns the user-defined window that receives the events handled by `self`. See `GestureExt::set_window` for more information.",360,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"group","","Adds `gesture` to the same group than `self`. Gestures are by default isolated in their own groups.",360,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"is_active","","Returns `true` if the gesture is currently active. A gesture is active meanwhile there are touch sequences interacting with it.",360,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_grouped_with","","Returns `true` if both gestures pertain to the same group.",360,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"is_recognized","","Returns `true` if the gesture is currently recognized. A gesture is recognized if there are as many interacting touch sequences as required by `self`, and `Gesture::check` returned `true` for the sequences being currently interpreted.",360,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_state","","Sets the state of all sequences that `self` is currently interacting with. See `GestureExt::set_sequence_state` for more details on sequence states.",360,{"inputs":[{"name":"self"},{"name":"eventsequencestate"}],"output":{"name":"bool"}}],[10,"set_window","","Sets a specific window to receive events about, so `self` will effectively handle only events targeting `window`, or a child of it. `window` must pertain to `EventControllerExt::get_widget`.",360,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"ungroup","","Separates `self` into an isolated group.",360,{"inputs":[{"name":"self"}],"output":null}],[10,"get_property_n_points","","",360,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"connect_property_n_points_notify","","",360,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_window_notify","","",360,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"GestureDragExt","","Trait containing all `GestureDrag` methods.",null,null],[10,"get_offset","","If the `self` is active, this function returns `true` and fills in `x` and `y` with the coordinates of the current point, as an offset to the starting drag point.",361,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_start_point","","If the `self` is active, this function returns `true` and fills in `x` and `y` with the drag start coordinates, in window-relative coordinates.",361,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_drag_begin","","",361,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_drag_end","","",361,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_drag_update","","",361,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"GestureLongPressExt","","",null,null],[10,"get_property_delay_factor","","",362,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"set_property_delay_factor","","",362,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"connect_cancelled","","",362,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_pressed","","",362,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_delay_factor_notify","","",362,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"GestureMultiPressExt","","",null,null],[10,"get_area","","",363,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_area","","",363,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"connect_pressed","","",363,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_released","","",363,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_stopped","","",363,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"GesturePanExt","","",null,null],[10,"get_orientation","","",364,{"inputs":[{"name":"self"}],"output":{"name":"orientation"}}],[10,"set_orientation","","",364,{"inputs":[{"name":"self"},{"name":"orientation"}],"output":null}],[10,"connect_pan","","",364,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_orientation_notify","","",364,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"GestureRotateExt","","",null,null],[10,"get_angle_delta","","",365,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"connect_angle_changed","","",365,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"GestureSingleExt","","Trait containing all `GestureSingle` methods.",null,null],[10,"get_button","","Returns the button number `self` listens for, or 0 if `self` reacts to any button press.",366,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_current_button","","Returns the button number currently interacting with `self`, or 0 if there is none.",366,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_exclusive","","Gets whether a gesture is exclusive. For more information, see `GestureSingleExt::set_exclusive`.",366,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_touch_only","","Returns `true` if the gesture is only triggered by touch events.",366,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_button","","Sets the button number `self` listens to. If non-0, every button press from a different button number will be ignored. Touch events implicitly match with button 1.",366,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"set_exclusive","","Sets whether `self` is exclusive. An exclusive gesture will only handle pointer and \"pointer emulated\" touch events, so at any given time, there is only one sequence able to interact with those.",366,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_touch_only","","If `touch_only` is `true`, `self` will only handle events of type `gdk::EventType::TouchBegin`, `gdk::EventType::TouchUpdate` or `gdk::EventType::TouchEnd`. If `false`, mouse events will be handled too.",366,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_property_button_notify","","",366,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_exclusive_notify","","",366,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_touch_only_notify","","",366,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"GestureSwipeExt","","",null,null],[10,"get_velocity","","",367,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_swipe","","",367,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"GestureZoomExt","","",null,null],[10,"get_scale_delta","","",368,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"connect_scale_changed","","",368,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"GridExt","","",null,null],[10,"attach","","",369,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"attach_next_to","","",369,{"inputs":[{"name":"self"},{"name":"p"},{"name":"r"},{"name":"positiontype"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"get_baseline_row","","",369,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_child_at","","",369,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_column_homogeneous","","",369,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_column_spacing","","",369,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_row_baseline_position","","",369,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"baselineposition"}}],[10,"get_row_homogeneous","","",369,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_row_spacing","","",369,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"insert_column","","",369,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"insert_next_to","","",369,{"inputs":[{"name":"self"},{"name":"p"},{"name":"positiontype"}],"output":null}],[10,"insert_row","","",369,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"remove_column","","",369,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"remove_row","","",369,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_baseline_row","","",369,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_column_homogeneous","","",369,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_column_spacing","","",369,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"set_row_baseline_position","","",369,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"baselineposition"}],"output":null}],[10,"set_row_homogeneous","","",369,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_row_spacing","","",369,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_baseline_row","","",369,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_baseline_row","","",369,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_cell_height","","",369,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"i32"}}],[10,"set_cell_height","","",369,{"inputs":[{"name":"self"},{"name":"t"},{"name":"i32"}],"output":null}],[10,"get_cell_width","","",369,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"i32"}}],[10,"set_cell_width","","",369,{"inputs":[{"name":"self"},{"name":"t"},{"name":"i32"}],"output":null}],[10,"get_cell_left_attach","","",369,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"i32"}}],[10,"set_cell_left_attach","","",369,{"inputs":[{"name":"self"},{"name":"t"},{"name":"i32"}],"output":null}],[10,"get_cell_top_attach","","",369,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"i32"}}],[10,"set_cell_top_attach","","",369,{"inputs":[{"name":"self"},{"name":"t"},{"name":"i32"}],"output":null}],[10,"connect_property_baseline_row_notify","","",369,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_column_homogeneous_notify","","",369,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_column_spacing_notify","","",369,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_row_homogeneous_notify","","",369,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_row_spacing_notify","","",369,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"HeaderBarExt","","",null,null],[10,"get_custom_title","","",370,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_decoration_layout","","",370,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_has_subtitle","","",370,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_close_button","","",370,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_subtitle","","",370,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_title","","",370,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"pack_end","","",370,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"pack_start","","",370,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_custom_title","","",370,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_decoration_layout","","",370,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_has_subtitle","","",370,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_close_button","","",370,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_subtitle","","",370,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_title","","",370,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"get_property_custom_title","","",370,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_custom_title","","",370,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_decoration_layout_set","","",370,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_decoration_layout_set","","",370,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_show_close_button","","",370,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_show_close_button","","",370,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_spacing","","",370,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_spacing","","",370,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_subtitle","","",370,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_subtitle","","",370,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_title","","",370,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_title","","",370,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_child_pack_type","","",370,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"packtype"}}],[10,"set_child_pack_type","","",370,{"inputs":[{"name":"self"},{"name":"t"},{"name":"packtype"}],"output":null}],[10,"get_child_position","","",370,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"i32"}}],[10,"set_child_position","","",370,{"inputs":[{"name":"self"},{"name":"t"},{"name":"i32"}],"output":null}],[10,"connect_property_custom_title_notify","","",370,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_decoration_layout_notify","","",370,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_decoration_layout_set_notify","","",370,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_has_subtitle_notify","","",370,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_close_button_notify","","",370,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_spacing_notify","","",370,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_subtitle_notify","","",370,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_title_notify","","",370,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"IMContextExt","","",null,null],[10,"delete_surrounding","","",371,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"bool"}}],[10,"filter_keypress","","",371,{"inputs":[{"name":"self"},{"name":"eventkey"}],"output":{"name":"bool"}}],[10,"focus_in","","",371,{"inputs":[{"name":"self"}],"output":null}],[10,"focus_out","","",371,{"inputs":[{"name":"self"}],"output":null}],[10,"get_preedit_string","","",371,null],[10,"get_surrounding","","",371,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"reset","","",371,{"inputs":[{"name":"self"}],"output":null}],[10,"set_client_window","","",371,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_cursor_location","","",371,{"inputs":[{"name":"self"},{"name":"rectangle"}],"output":null}],[10,"set_surrounding","","",371,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"}],"output":null}],[10,"set_use_preedit","","",371,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_input_hints","","",371,{"inputs":[{"name":"self"}],"output":{"name":"inputhints"}}],[10,"set_property_input_hints","","",371,{"inputs":[{"name":"self"},{"name":"inputhints"}],"output":null}],[10,"get_property_input_purpose","","",371,{"inputs":[{"name":"self"}],"output":{"name":"inputpurpose"}}],[10,"set_property_input_purpose","","",371,{"inputs":[{"name":"self"},{"name":"inputpurpose"}],"output":null}],[10,"connect_commit","","",371,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_delete_surrounding","","",371,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_preedit_changed","","",371,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_preedit_end","","",371,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_preedit_start","","",371,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_retrieve_surrounding","","",371,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_input_hints_notify","","",371,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_input_purpose_notify","","",371,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"IMMulticontextExt","","",null,null],[10,"append_menuitems","","",372,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"get_context_id","","",372,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_context_id","","",372,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[8,"IconFactoryExt","","",null,null],[10,"add","","",373,{"inputs":[{"name":"self"},{"name":"str"},{"name":"iconset"}],"output":null}],[10,"add_default","","",373,{"inputs":[{"name":"self"}],"output":null}],[10,"lookup","","",373,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"remove_default","","",373,{"inputs":[{"name":"self"}],"output":null}],[8,"IconInfoExt","","",null,null],[10,"copy","","",374,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_base_scale","","",374,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_base_size","","",374,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_builtin_pixbuf","","",374,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_display_name","","",374,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_embedded_rect","","",374,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_filename","","",374,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"is_symbolic","","",374,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"load_icon","","",374,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"load_surface","","",374,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"load_symbolic","","",374,{"inputs":[{"name":"self"},{"name":"rgba"},{"name":"p"},{"name":"q"},{"name":"r"}],"output":{"name":"result"}}],[10,"load_symbolic_for_context","","",374,{"inputs":[{"name":"self"},{"name":"stylecontext"}],"output":{"name":"result"}}],[10,"set_raw_coordinates","","",374,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[8,"IconThemeExt","","",null,null],[10,"add_resource_path","","",375,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"append_search_path","","",375,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"get_example_icon_name","","",375,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"has_icon","","",375,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"list_contexts","","",375,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"list_icons","","",375,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"vec"}}],[10,"load_icon","","",375,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"},{"name":"iconlookupflags"}],"output":{"name":"result"}}],[10,"load_icon_for_scale","","",375,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"},{"name":"i32"},{"name":"iconlookupflags"}],"output":{"name":"result"}}],[10,"load_surface","","",375,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"},{"name":"i32"},{"name":"p"},{"name":"iconlookupflags"}],"output":{"name":"result"}}],[10,"lookup_by_gicon","","",375,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"},{"name":"iconlookupflags"}],"output":{"name":"option"}}],[10,"lookup_by_gicon_for_scale","","",375,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"},{"name":"i32"},{"name":"iconlookupflags"}],"output":{"name":"option"}}],[10,"lookup_icon","","",375,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"},{"name":"iconlookupflags"}],"output":{"name":"option"}}],[10,"lookup_icon_for_scale","","",375,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"},{"name":"i32"},{"name":"iconlookupflags"}],"output":{"name":"option"}}],[10,"prepend_search_path","","",375,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"rescan_if_needed","","",375,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_custom_theme","","",375,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_screen","","",375,{"inputs":[{"name":"self"},{"name":"screen"}],"output":null}],[10,"connect_changed","","",375,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"IconViewExt","","",null,null],[10,"convert_widget_to_bin_window_coords","","",376,null],[10,"create_drag_icon","","",376,{"inputs":[{"name":"self"},{"name":"treepath"}],"output":{"name":"option"}}],[10,"get_activate_on_single_click","","",376,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_cell_rect","","",376,{"inputs":[{"name":"self"},{"name":"treepath"},{"name":"q"}],"output":{"name":"option"}}],[10,"get_column_spacing","","",376,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_columns","","",376,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_cursor","","",376,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_dest_item_at_pos","","",376,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_drag_dest_item","","",376,null],[10,"get_item_at_pos","","",376,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_item_column","","",376,{"inputs":[{"name":"self"},{"name":"treepath"}],"output":{"name":"i32"}}],[10,"get_item_orientation","","",376,{"inputs":[{"name":"self"}],"output":{"name":"orientation"}}],[10,"get_item_padding","","",376,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_item_row","","",376,{"inputs":[{"name":"self"},{"name":"treepath"}],"output":{"name":"i32"}}],[10,"get_item_width","","",376,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_margin","","",376,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_markup_column","","",376,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_model","","",376,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_path_at_pos","","",376,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_pixbuf_column","","",376,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_reorderable","","",376,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_row_spacing","","",376,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_selected_items","","",376,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_selection_mode","","",376,{"inputs":[{"name":"self"}],"output":{"name":"selectionmode"}}],[10,"get_spacing","","",376,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_text_column","","",376,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_tooltip_column","","",376,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_tooltip_context","","",376,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"bool"}],"output":{"name":"option"}}],[10,"get_visible_range","","",376,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"item_activated","","",376,{"inputs":[{"name":"self"},{"name":"treepath"}],"output":null}],[10,"path_is_selected","","",376,{"inputs":[{"name":"self"},{"name":"treepath"}],"output":{"name":"bool"}}],[10,"scroll_to_path","","",376,{"inputs":[{"name":"self"},{"name":"treepath"},{"name":"bool"},{"name":"f32"},{"name":"f32"}],"output":null}],[10,"select_all","","",376,{"inputs":[{"name":"self"}],"output":null}],[10,"select_path","","",376,{"inputs":[{"name":"self"},{"name":"treepath"}],"output":null}],[10,"set_activate_on_single_click","","",376,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_column_spacing","","",376,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_columns","","",376,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_cursor","","",376,{"inputs":[{"name":"self"},{"name":"treepath"},{"name":"q"},{"name":"bool"}],"output":null}],[10,"set_drag_dest_item","","",376,{"inputs":[{"name":"self"},{"name":"p"},{"name":"iconviewdropposition"}],"output":null}],[10,"set_item_orientation","","",376,{"inputs":[{"name":"self"},{"name":"orientation"}],"output":null}],[10,"set_item_padding","","",376,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_item_width","","",376,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_margin","","",376,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_markup_column","","",376,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_model","","",376,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_pixbuf_column","","",376,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_reorderable","","",376,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_row_spacing","","",376,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_selection_mode","","",376,{"inputs":[{"name":"self"},{"name":"selectionmode"}],"output":null}],[10,"set_spacing","","",376,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_text_column","","",376,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_tooltip_cell","","",376,{"inputs":[{"name":"self"},{"name":"tooltip"},{"name":"treepath"},{"name":"q"}],"output":null}],[10,"set_tooltip_column","","",376,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_tooltip_item","","",376,{"inputs":[{"name":"self"},{"name":"tooltip"},{"name":"treepath"}],"output":null}],[10,"unselect_all","","",376,{"inputs":[{"name":"self"}],"output":null}],[10,"unselect_path","","",376,{"inputs":[{"name":"self"},{"name":"treepath"}],"output":null}],[10,"unset_model_drag_dest","","",376,{"inputs":[{"name":"self"}],"output":null}],[10,"unset_model_drag_source","","",376,{"inputs":[{"name":"self"}],"output":null}],[10,"get_property_cell_area","","",376,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_activate_cursor_item","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_item_activated","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_cursor","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_select_all","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_select_cursor_item","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_selection_changed","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_toggle_cursor_item","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_unselect_all","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_activate_on_single_click_notify","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_cell_area_notify","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_column_spacing_notify","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_columns_notify","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_item_orientation_notify","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_item_padding_notify","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_item_width_notify","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_margin_notify","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_markup_column_notify","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_model_notify","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pixbuf_column_notify","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_reorderable_notify","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_row_spacing_notify","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_selection_mode_notify","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_spacing_notify","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_text_column_notify","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_tooltip_column_notify","","",376,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ImageExt","","",null,null],[10,"clear","","",377,{"inputs":[{"name":"self"}],"output":null}],[10,"get_animation","","",377,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_gicon","","",377,null],[10,"get_icon_name","","",377,null],[10,"get_icon_set","","",377,null],[10,"get_pixbuf","","",377,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_pixel_size","","",377,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_storage_type","","",377,{"inputs":[{"name":"self"}],"output":{"name":"imagetype"}}],[10,"set_from_animation","","",377,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_from_file","","",377,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_from_gicon","","",377,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":null}],[10,"set_from_icon_name","","",377,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"}],"output":null}],[10,"set_from_icon_set","","",377,{"inputs":[{"name":"self"},{"name":"iconset"},{"name":"i32"}],"output":null}],[10,"set_from_pixbuf","","",377,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_from_resource","","",377,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_from_stock","","",377,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"}],"output":null}],[10,"set_from_surface","","",377,{"inputs":[{"name":"self"},{"name":"surface"}],"output":null}],[10,"set_pixel_size","","",377,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_file","","",377,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_file","","",377,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"set_property_gicon","","",377,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"set_property_icon_name","","",377,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_icon_size","","",377,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_icon_size","","",377,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_property_pixbuf","","",377,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_pixbuf_animation","","",377,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_pixbuf_animation","","",377,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_resource","","",377,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_resource","","",377,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_stock","","",377,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_stock","","",377,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_use_fallback","","",377,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_use_fallback","","",377,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_property_file_notify","","",377,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gicon_notify","","",377,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_icon_name_notify","","",377,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_icon_size_notify","","",377,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pixbuf_notify","","",377,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pixbuf_animation_notify","","",377,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pixel_size_notify","","",377,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_resource_notify","","",377,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_stock_notify","","",377,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_storage_type_notify","","",377,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_fallback_notify","","",377,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ImageMenuItemExt","","",null,null],[10,"get_always_show_image","","",378,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_image","","",378,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_use_stock","","",378,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_accel_group","","",378,{"inputs":[{"name":"self"},{"name":"accelgroup"}],"output":null}],[10,"set_always_show_image","","",378,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_image","","",378,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_use_stock","","",378,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_property_accel_group_notify","","",378,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_always_show_image_notify","","",378,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_image_notify","","",378,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_stock_notify","","",378,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"InfoBarExt","","",null,null],[10,"add_action_widget","","",379,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":null}],[10,"add_button","","",379,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_action_area","","",379,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_content_area","","",379,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_message_type","","",379,{"inputs":[{"name":"self"}],"output":{"name":"messagetype"}}],[10,"get_show_close_button","","",379,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"response","","",379,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_default_response","","",379,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_message_type","","",379,{"inputs":[{"name":"self"},{"name":"messagetype"}],"output":null}],[10,"set_response_sensitive","","",379,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"bool"}],"output":null}],[10,"set_show_close_button","","",379,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_close","","",379,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_response","","",379,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_message_type_notify","","",379,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_close_button_notify","","",379,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"LabelExt","","",null,null],[10,"get_angle","","",380,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_attributes","","",380,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_current_uri","","",380,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_ellipsize","","",380,{"inputs":[{"name":"self"}],"output":{"name":"ellipsizemode"}}],[10,"get_justify","","",380,{"inputs":[{"name":"self"}],"output":{"name":"justification"}}],[10,"get_label","","",380,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_layout","","",380,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_layout_offsets","","",380,null],[10,"get_line_wrap","","",380,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_line_wrap_mode","","",380,{"inputs":[{"name":"self"}],"output":{"name":"wrapmode"}}],[10,"get_lines","","",380,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_max_width_chars","","",380,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_mnemonic_keyval","","",380,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_mnemonic_widget","","",380,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_selectable","","",380,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_selection_bounds","","",380,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_single_line_mode","","",380,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_text","","",380,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_track_visited_links","","",380,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_use_markup","","",380,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_use_underline","","",380,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_width_chars","","",380,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_xalign","","",380,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"get_yalign","","",380,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"select_region","","",380,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_angle","","",380,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"set_attributes","","",380,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_ellipsize","","",380,{"inputs":[{"name":"self"},{"name":"ellipsizemode"}],"output":null}],[10,"set_justify","","",380,{"inputs":[{"name":"self"},{"name":"justification"}],"output":null}],[10,"set_label","","",380,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_line_wrap","","",380,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_line_wrap_mode","","",380,{"inputs":[{"name":"self"},{"name":"wrapmode"}],"output":null}],[10,"set_lines","","",380,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_markup","","",380,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_markup_with_mnemonic","","",380,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_max_width_chars","","",380,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_mnemonic_widget","","",380,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_pattern","","",380,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_selectable","","",380,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_single_line_mode","","",380,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_text","","",380,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_text_with_mnemonic","","",380,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_track_visited_links","","",380,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_use_markup","","",380,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_use_underline","","",380,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_width_chars","","",380,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_xalign","","",380,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"set_yalign","","",380,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"get_property_cursor_position","","",380,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_property_selection_bound","","",380,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_property_wrap","","",380,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_wrap","","",380,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_wrap_mode","","",380,{"inputs":[{"name":"self"}],"output":{"name":"wrapmode"}}],[10,"set_property_wrap_mode","","",380,{"inputs":[{"name":"self"},{"name":"wrapmode"}],"output":null}],[10,"connect_activate_current_link","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_activate_link","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_copy_clipboard","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_cursor","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_populate_popup","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_angle_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_attributes_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_cursor_position_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_ellipsize_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_justify_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_label_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_lines_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_max_width_chars_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_mnemonic_keyval_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_mnemonic_widget_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pattern_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_selectable_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_selection_bound_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_single_line_mode_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_track_visited_links_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_markup_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_underline_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_width_chars_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_wrap_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_wrap_mode_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_xalign_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_yalign_notify","","",380,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"LayoutExt","","",null,null],[10,"get_bin_window","","",381,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_size","","",381,null],[10,"move_","","",381,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"put","","",381,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_size","","",381,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":null}],[10,"get_property_height","","",381,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_height","","",381,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_width","","",381,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_width","","",381,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_child_x","","",381,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"i32"}}],[10,"set_child_x","","",381,{"inputs":[{"name":"self"},{"name":"t"},{"name":"i32"}],"output":null}],[10,"get_child_y","","",381,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"i32"}}],[10,"set_child_y","","",381,{"inputs":[{"name":"self"},{"name":"t"},{"name":"i32"}],"output":null}],[10,"connect_property_height_notify","","",381,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_width_notify","","",381,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"LevelBarExt","","",null,null],[10,"add_offset_value","","",382,{"inputs":[{"name":"self"},{"name":"str"},{"name":"f64"}],"output":null}],[10,"get_inverted","","",382,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_max_value","","",382,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_min_value","","",382,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_mode","","",382,{"inputs":[{"name":"self"}],"output":{"name":"levelbarmode"}}],[10,"get_offset_value","","",382,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[10,"get_value","","",382,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"remove_offset_value","","",382,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_inverted","","",382,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_max_value","","",382,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"set_min_value","","",382,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"set_mode","","",382,{"inputs":[{"name":"self"},{"name":"levelbarmode"}],"output":null}],[10,"set_value","","",382,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"connect_offset_changed","","",382,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_inverted_notify","","",382,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_max_value_notify","","",382,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_min_value_notify","","",382,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_mode_notify","","",382,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_value_notify","","",382,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"LinkButtonExt","","",null,null],[10,"get_uri","","",383,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_visited","","",383,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_uri","","",383,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_visited","","",383,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_activate_link","","",383,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_uri_notify","","",383,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_visited_notify","","",383,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ListBoxExt","","",null,null],[10,"drag_highlight_row","","",384,{"inputs":[{"name":"self"},{"name":"listboxrow"}],"output":null}],[10,"drag_unhighlight_row","","",384,{"inputs":[{"name":"self"}],"output":null}],[10,"get_activate_on_single_click","","",384,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_adjustment","","",384,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_row_at_index","","",384,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_row_at_y","","",384,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_selected_row","","",384,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_selected_rows","","",384,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_selection_mode","","",384,{"inputs":[{"name":"self"}],"output":{"name":"selectionmode"}}],[10,"insert","","",384,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":null}],[10,"invalidate_filter","","",384,{"inputs":[{"name":"self"}],"output":null}],[10,"invalidate_headers","","",384,{"inputs":[{"name":"self"}],"output":null}],[10,"invalidate_sort","","",384,{"inputs":[{"name":"self"}],"output":null}],[10,"prepend","","",384,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"select_all","","",384,{"inputs":[{"name":"self"}],"output":null}],[10,"select_row","","",384,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_activate_on_single_click","","",384,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_adjustment","","",384,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_placeholder","","",384,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_selection_mode","","",384,{"inputs":[{"name":"self"},{"name":"selectionmode"}],"output":null}],[10,"unselect_all","","",384,{"inputs":[{"name":"self"}],"output":null}],[10,"unselect_row","","",384,{"inputs":[{"name":"self"},{"name":"listboxrow"}],"output":null}],[10,"get_property_activate_on_single_click","","",384,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_activate_on_single_click","","",384,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_selection_mode","","",384,{"inputs":[{"name":"self"}],"output":{"name":"selectionmode"}}],[10,"set_property_selection_mode","","",384,{"inputs":[{"name":"self"},{"name":"selectionmode"}],"output":null}],[10,"connect_activate_cursor_row","","",384,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_cursor","","",384,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_row_activated","","",384,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_row_selected","","",384,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_select_all","","",384,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_selected_rows_changed","","",384,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_toggle_cursor_row","","",384,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_unselect_all","","",384,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_activate_on_single_click_notify","","",384,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_selection_mode_notify","","",384,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ListBoxRowExt","","",null,null],[10,"changed","","",385,{"inputs":[{"name":"self"}],"output":null}],[10,"get_activatable","","",385,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_header","","",385,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_index","","",385,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_selectable","","",385,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_selected","","",385,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_activatable","","",385,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_header","","",385,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_selectable","","",385,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_activate","","",385,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_activatable_notify","","",385,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_selectable_notify","","",385,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ListStoreExt","","",null,null],[10,"append","","",386,{"inputs":[{"name":"self"}],"output":{"name":"treeiter"}}],[10,"clear","","",386,{"inputs":[{"name":"self"}],"output":null}],[10,"insert","","",386,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"treeiter"}}],[10,"insert_after","","",386,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"treeiter"}}],[10,"insert_before","","",386,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"treeiter"}}],[10,"iter_is_valid","","",386,{"inputs":[{"name":"self"},{"name":"treeiter"}],"output":{"name":"bool"}}],[10,"move_after","","",386,{"inputs":[{"name":"self"},{"name":"treeiter"},{"name":"p"}],"output":null}],[10,"move_before","","",386,{"inputs":[{"name":"self"},{"name":"treeiter"},{"name":"p"}],"output":null}],[10,"prepend","","",386,{"inputs":[{"name":"self"}],"output":{"name":"treeiter"}}],[10,"remove","","",386,{"inputs":[{"name":"self"},{"name":"treeiter"}],"output":{"name":"bool"}}],[10,"swap","","",386,{"inputs":[{"name":"self"},{"name":"treeiter"},{"name":"treeiter"}],"output":null}],[8,"MenuExt","","",null,null],[10,"attach","","",387,{"inputs":[{"name":"self"},{"name":"p"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[10,"detach","","",387,{"inputs":[{"name":"self"}],"output":null}],[10,"get_accel_group","","",387,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_accel_path","","",387,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_active","","",387,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_attach_widget","","",387,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_monitor","","",387,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_reserve_toggle_size","","",387,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_tearoff_state","","",387,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_title","","",387,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"place_on_monitor","","",387,{"inputs":[{"name":"self"},{"name":"monitor"}],"output":null}],[10,"popdown","","",387,{"inputs":[{"name":"self"}],"output":null}],[10,"popup_at_pointer","","",387,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"popup_at_rect","","",387,{"inputs":[{"name":"self"},{"name":"window"},{"name":"rectangle"},{"name":"gravity"},{"name":"gravity"},{"name":"p"}],"output":null}],[10,"popup_at_widget","","",387,{"inputs":[{"name":"self"},{"name":"p"},{"name":"gravity"},{"name":"gravity"},{"name":"q"}],"output":null}],[10,"reorder_child","","",387,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":null}],[10,"reposition","","",387,{"inputs":[{"name":"self"}],"output":null}],[10,"set_accel_group","","",387,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_accel_path","","",387,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_active","","",387,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"set_monitor","","",387,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_reserve_toggle_size","","",387,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_screen","","",387,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_tearoff_state","","",387,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_title","","",387,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"get_property_anchor_hints","","",387,{"inputs":[{"name":"self"}],"output":{"name":"anchorhints"}}],[10,"set_property_anchor_hints","","",387,{"inputs":[{"name":"self"},{"name":"anchorhints"}],"output":null}],[10,"set_property_attach_widget","","",387,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_menu_type_hint","","",387,{"inputs":[{"name":"self"}],"output":{"name":"windowtypehint"}}],[10,"set_property_menu_type_hint","","",387,{"inputs":[{"name":"self"},{"name":"windowtypehint"}],"output":null}],[10,"get_property_rect_anchor_dx","","",387,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_rect_anchor_dx","","",387,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_rect_anchor_dy","","",387,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_rect_anchor_dy","","",387,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_tearoff_title","","",387,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_tearoff_title","","",387,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_item_bottom_attach","","",387,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"i32"}}],[10,"set_item_bottom_attach","","",387,{"inputs":[{"name":"self"},{"name":"t"},{"name":"i32"}],"output":null}],[10,"get_item_left_attach","","",387,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"i32"}}],[10,"set_item_left_attach","","",387,{"inputs":[{"name":"self"},{"name":"t"},{"name":"i32"}],"output":null}],[10,"get_item_right_attach","","",387,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"i32"}}],[10,"set_item_right_attach","","",387,{"inputs":[{"name":"self"},{"name":"t"},{"name":"i32"}],"output":null}],[10,"get_item_top_attach","","",387,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"i32"}}],[10,"set_item_top_attach","","",387,{"inputs":[{"name":"self"},{"name":"t"},{"name":"i32"}],"output":null}],[10,"connect_move_scroll","","",387,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_accel_group_notify","","",387,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_accel_path_notify","","",387,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_active_notify","","",387,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_anchor_hints_notify","","",387,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_attach_widget_notify","","",387,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_menu_type_hint_notify","","",387,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_monitor_notify","","",387,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_rect_anchor_dx_notify","","",387,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_rect_anchor_dy_notify","","",387,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_reserve_toggle_size_notify","","",387,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_tearoff_state_notify","","",387,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_tearoff_title_notify","","",387,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"MenuBarExt","","",null,null],[10,"get_child_pack_direction","","",388,{"inputs":[{"name":"self"}],"output":{"name":"packdirection"}}],[10,"get_pack_direction","","",388,{"inputs":[{"name":"self"}],"output":{"name":"packdirection"}}],[10,"set_child_pack_direction","","",388,{"inputs":[{"name":"self"},{"name":"packdirection"}],"output":null}],[10,"set_pack_direction","","",388,{"inputs":[{"name":"self"},{"name":"packdirection"}],"output":null}],[10,"connect_property_child_pack_direction_notify","","",388,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pack_direction_notify","","",388,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"MenuButtonExt","","",null,null],[10,"get_align_widget","","",389,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_direction","","",389,{"inputs":[{"name":"self"}],"output":{"name":"arrowtype"}}],[10,"get_menu_model","","",389,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_popover","","",389,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_popup","","",389,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_use_popover","","",389,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_align_widget","","",389,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_direction","","",389,{"inputs":[{"name":"self"},{"name":"arrowtype"}],"output":null}],[10,"set_menu_model","","",389,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_popover","","",389,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_popup","","",389,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_use_popover","","",389,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_property_align_widget_notify","","",389,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_direction_notify","","",389,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_menu_model_notify","","",389,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_popover_notify","","",389,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_popup_notify","","",389,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_popover_notify","","",389,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"MenuItemExt","","Trait containing all `MenuItem` methods.",null,null],[10,"deselect","","Emits the `MenuItem::deselect` signal on the given item.",390,{"inputs":[{"name":"self"}],"output":null}],[10,"get_accel_path","","Retrieve the accelerator path that was previously set on `self`.",390,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_label","","Sets `text` on the `self` label",390,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_reserve_indicator","","Returns whether the `self` reserves space for the submenu indicator, regardless if it has a submenu or not.",390,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_submenu","","Gets the submenu underneath this menu item, if any. See `MenuItemExt::set_submenu`.",390,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_use_underline","","Checks if an underline in the text indicates the next character should be used for the mnemonic accelerator key.",390,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"select","","Emits the `MenuItem::select` signal on the given item.",390,{"inputs":[{"name":"self"}],"output":null}],[10,"set_accel_path","","Set the accelerator path on `self`, through which runtime changes of the menu item’s accelerator caused by the user can be identified and saved to persistent storage (see `AccelMap::save` on this). To set up a default accelerator for this menu item, call `AccelMap::add_entry` with the same `accel_path`. See also `AccelMap::add_entry` on the specifics of accelerator paths, and `Menu::set_accel_path` for a more convenient variant of this function.",390,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_label","","Sets `text` on the `self` label ## `label` the text you want to set",390,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_reserve_indicator","","Sets whether the `self` should reserve space for the submenu indicator, regardless if it actually has a submenu or not.",390,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_submenu","","Sets or replaces the menu item’s submenu, or removes it when a `None` submenu is passed. ## `submenu` the submenu, or `None`",390,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_use_underline","","If true, an underline in the text indicates the next character should be used for the mnemonic accelerator key. ## `setting` `true` if underlines in the text indicate mnemonics",390,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"toggle_size_allocate","","Emits the `MenuItem::toggle-size-allocate` signal on the given item. ## `allocation` the allocation to use as signal data.",390,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"toggle_size_request","","Emits the `MenuItem::toggle-size-request` signal on the given item. ## `requisition` the requisition to use as signal data.",390,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_right_justified","","",390,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_right_justified","","",390,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_activate","","",390,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_activate_item","","",390,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_deselect","","",390,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_select","","",390,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_toggle_size_allocate","","",390,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_accel_path_notify","","",390,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_label_notify","","",390,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_right_justified_notify","","",390,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_submenu_notify","","",390,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_underline_notify","","",390,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"MenuShellExt","","Trait containing all `MenuShell` methods.",null,null],[10,"activate_item","","Activates the menu item within the menu shell. ## `menu_item` the `MenuItem` to activate ## `force_deactivate` if `true`, force the deactivation of the  menu shell after the menu item is activated",391,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"}],"output":null}],[10,"append","","Adds a new `MenuItem` to the end of the menu shell's item list. ## `child` The `MenuItem` to add",391,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"bind_model","","Establishes a binding between a `MenuShell` and a `gio::MenuModel`.",391,{"inputs":[{"name":"self"},{"name":"q"},{"name":"r"},{"name":"bool"}],"output":null}],[10,"cancel","","Cancels the selection within the menu shell.",391,{"inputs":[{"name":"self"}],"output":null}],[10,"deactivate","","Deactivates the menu shell.",391,{"inputs":[{"name":"self"}],"output":null}],[10,"deselect","","Deselects the currently selected item from the menu shell, if any.",391,{"inputs":[{"name":"self"}],"output":null}],[10,"get_parent_shell","","Gets the parent menu shell.",391,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_selected_item","","Gets the currently selected item.",391,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_take_focus","","Returns `true` if the menu shell will take the keyboard focus on popup.",391,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"insert","","Adds a new `MenuItem` to the menu shell’s item list at the position indicated by `position`. ## `child` The `MenuItem` to add ## `position` The position in the item list where `child`  is added. Positions are numbered from 0 to n-1",391,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":null}],[10,"prepend","","Adds a new `MenuItem` to the beginning of the menu shell's item list. ## `child` The `MenuItem` to add",391,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"select_first","","Select the first visible or selectable child of the menu shell; don’t select tearoff items unless the only item is a tearoff item. ## `search_sensitive` if `true`, search for the first selectable  menu item, otherwise select nothing if  the first item isn’t sensitive. This  should be `false` if the menu is being  popped up initially.",391,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"select_item","","Selects the menu item from the menu shell. ## `menu_item` The `MenuItem` to select",391,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_take_focus","","If `take_focus` is `true` (the default) the menu shell will take the keyboard focus so that it will receive all keyboard events which is needed to enable keyboard navigation in menus.",391,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_activate_current","","",391,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_cancel","","",391,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_cycle_focus","","",391,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_deactivate","","",391,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_insert","","",391,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_current","","",391,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_selected","","",391,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_selection_done","","",391,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_take_focus_notify","","",391,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"MenuToolButtonExt","","",null,null],[10,"get_menu","","",392,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_arrow_tooltip_markup","","",392,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_arrow_tooltip_text","","",392,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_menu","","",392,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"connect_show_menu","","",392,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_menu_notify","","",392,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"MessageDialogExt","","",null,null],[10,"get_image","","",393,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_message_area","","",393,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_image","","",393,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_markup","","",393,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"get_property_message_type","","",393,{"inputs":[{"name":"self"}],"output":{"name":"messagetype"}}],[10,"set_property_message_type","","",393,{"inputs":[{"name":"self"},{"name":"messagetype"}],"output":null}],[10,"get_property_secondary_text","","",393,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_secondary_text","","",393,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_secondary_use_markup","","",393,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_secondary_use_markup","","",393,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_text","","",393,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_text","","",393,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_use_markup","","",393,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_use_markup","","",393,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_property_buttons_notify","","",393,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_image_notify","","",393,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_message_area_notify","","",393,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_message_type_notify","","",393,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_secondary_text_notify","","",393,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_secondary_use_markup_notify","","",393,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_text_notify","","",393,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_markup_notify","","",393,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"MiscExt","","`[Deprecated since 3.14]` Trait containing all `Misc` methods.",null,null],[10,"get_alignment","","Gets the X and Y alignment of the widget within its allocation. See `MiscExt::set_alignment`.",394,null],[10,"get_padding","","Gets the padding in the X and Y directions of the widget. See `MiscExt::set_padding`.",394,null],[10,"set_alignment","","Sets the alignment of the widget.",394,{"inputs":[{"name":"self"},{"name":"f32"},{"name":"f32"}],"output":null}],[10,"set_padding","","Sets the amount of space to add around the widget.",394,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"get_property_xalign","","",394,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_xalign","","",394,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"get_property_xpad","","",394,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_xpad","","",394,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_yalign","","",394,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"set_property_yalign","","",394,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"get_property_ypad","","",394,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_ypad","","",394,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"connect_property_xalign_notify","","",394,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_xpad_notify","","",394,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_yalign_notify","","",394,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_ypad_notify","","",394,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ModelButtonExt","","",null,null],[10,"get_property_active","","",395,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_active","","",395,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_centered","","",395,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_centered","","",395,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_icon","","",395,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_icon","","",395,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_iconic","","",395,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_iconic","","",395,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_inverted","","",395,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_inverted","","",395,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_menu_name","","",395,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_menu_name","","",395,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_role","","",395,{"inputs":[{"name":"self"}],"output":{"name":"buttonrole"}}],[10,"set_property_role","","",395,{"inputs":[{"name":"self"},{"name":"buttonrole"}],"output":null}],[10,"get_property_text","","",395,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_text","","",395,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"connect_property_active_notify","","",395,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_centered_notify","","",395,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_icon_notify","","",395,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_iconic_notify","","",395,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_inverted_notify","","",395,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_menu_name_notify","","",395,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_role_notify","","",395,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_text_notify","","",395,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"NotebookExt","","",null,null],[10,"detach_tab","","",396,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"get_action_widget","","",396,{"inputs":[{"name":"self"},{"name":"packtype"}],"output":{"name":"option"}}],[10,"get_group_name","","",396,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_menu_label","","",396,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[10,"get_menu_label_text","","",396,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[10,"get_scrollable","","",396,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_border","","",396,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_tabs","","",396,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_tab_detachable","","",396,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"get_tab_label","","",396,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[10,"get_tab_label_text","","",396,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[10,"get_tab_pos","","",396,{"inputs":[{"name":"self"}],"output":{"name":"positiontype"}}],[10,"get_tab_reorderable","","",396,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"next_page","","",396,{"inputs":[{"name":"self"}],"output":null}],[10,"popup_disable","","",396,{"inputs":[{"name":"self"}],"output":null}],[10,"popup_enable","","",396,{"inputs":[{"name":"self"}],"output":null}],[10,"prev_page","","",396,{"inputs":[{"name":"self"}],"output":null}],[10,"set_action_widget","","",396,{"inputs":[{"name":"self"},{"name":"p"},{"name":"packtype"}],"output":null}],[10,"set_group_name","","",396,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_menu_label","","",396,{"inputs":[{"name":"self"},{"name":"p"},{"name":"r"}],"output":null}],[10,"set_menu_label_text","","",396,{"inputs":[{"name":"self"},{"name":"p"},{"name":"str"}],"output":null}],[10,"set_scrollable","","",396,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_border","","",396,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_tabs","","",396,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_tab_detachable","","",396,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"}],"output":null}],[10,"set_tab_label","","",396,{"inputs":[{"name":"self"},{"name":"p"},{"name":"r"}],"output":null}],[10,"set_tab_label_text","","",396,{"inputs":[{"name":"self"},{"name":"p"},{"name":"str"}],"output":null}],[10,"set_tab_pos","","",396,{"inputs":[{"name":"self"},{"name":"positiontype"}],"output":null}],[10,"set_tab_reorderable","","",396,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"}],"output":null}],[10,"get_property_enable_popup","","",396,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_enable_popup","","",396,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_page","","",396,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_page","","",396,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"connect_change_current_page","","",396,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_create_window","","",396,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_focus_tab","","",396,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_focus_out","","",396,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_page_added","","",396,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_page_removed","","",396,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_page_reordered","","",396,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_reorder_tab","","",396,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_select_page","","",396,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_switch_page","","",396,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_enable_popup_notify","","",396,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_group_name_notify","","",396,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_page_notify","","",396,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_scrollable_notify","","",396,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_border_notify","","",396,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_tabs_notify","","",396,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_tab_pos_notify","","",396,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"OrientableExt","","Trait containing all `Orientable` methods.",null,null],[10,"get_orientation","","Retrieves the orientation of the `self`.",397,{"inputs":[{"name":"self"}],"output":{"name":"orientation"}}],[10,"set_orientation","","Sets the orientation of the `self`. ## `orientation` the orientable’s new orientation.",397,{"inputs":[{"name":"self"},{"name":"orientation"}],"output":null}],[10,"connect_property_orientation_notify","","",397,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"OverlayExt","","",null,null],[10,"add_overlay","","",398,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"get_overlay_pass_through","","",398,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"reorder_overlay","","",398,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":null}],[10,"set_overlay_pass_through","","",398,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"}],"output":null}],[10,"get_child_index","","",398,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"i32"}}],[10,"set_child_index","","",398,{"inputs":[{"name":"self"},{"name":"t"},{"name":"i32"}],"output":null}],[8,"PageSetupExt","","",null,null],[10,"copy","","",399,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_bottom_margin","","",399,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"f64"}}],[10,"get_left_margin","","",399,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"f64"}}],[10,"get_orientation","","",399,{"inputs":[{"name":"self"}],"output":{"name":"pageorientation"}}],[10,"get_page_height","","",399,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"f64"}}],[10,"get_page_width","","",399,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"f64"}}],[10,"get_paper_height","","",399,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"f64"}}],[10,"get_paper_size","","",399,{"inputs":[{"name":"self"}],"output":{"name":"papersize"}}],[10,"get_paper_width","","",399,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"f64"}}],[10,"get_right_margin","","",399,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"f64"}}],[10,"get_top_margin","","",399,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"f64"}}],[10,"load_file","","",399,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"load_key_file","","",399,{"inputs":[{"name":"self"},{"name":"keyfile"},{"name":"p"}],"output":{"name":"result"}}],[10,"set_bottom_margin","","",399,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"unit"}],"output":null}],[10,"set_left_margin","","",399,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"unit"}],"output":null}],[10,"set_orientation","","",399,{"inputs":[{"name":"self"},{"name":"pageorientation"}],"output":null}],[10,"set_paper_size","","",399,{"inputs":[{"name":"self"},{"name":"papersize"}],"output":null}],[10,"set_paper_size_and_default_margins","","",399,{"inputs":[{"name":"self"},{"name":"papersize"}],"output":null}],[10,"set_right_margin","","",399,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"unit"}],"output":null}],[10,"set_top_margin","","",399,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"unit"}],"output":null}],[10,"to_file","","",399,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"to_gvariant","","",399,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"to_key_file","","",399,{"inputs":[{"name":"self"},{"name":"keyfile"},{"name":"str"}],"output":null}],[8,"PanedExt","","",null,null],[10,"add1","","",400,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"add2","","",400,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"get_child1","","",400,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_child2","","",400,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_handle_window","","",400,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_position","","",400,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_wide_handle","","",400,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"pack1","","",400,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"},{"name":"bool"}],"output":null}],[10,"pack2","","",400,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"},{"name":"bool"}],"output":null}],[10,"set_position","","",400,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_wide_handle","","",400,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_max_position","","",400,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_property_min_position","","",400,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_property_position_set","","",400,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_position_set","","",400,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_child_resize","","",400,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[10,"set_child_resize","","",400,{"inputs":[{"name":"self"},{"name":"t"},{"name":"bool"}],"output":null}],[10,"get_child_shrink","","",400,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[10,"set_child_shrink","","",400,{"inputs":[{"name":"self"},{"name":"t"},{"name":"bool"}],"output":null}],[10,"connect_accept_position","","",400,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_cancel_position","","",400,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_cycle_child_focus","","",400,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_cycle_handle_focus","","",400,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_handle","","",400,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_toggle_handle_focus","","",400,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_max_position_notify","","",400,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_min_position_notify","","",400,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_position_notify","","",400,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_position_set_notify","","",400,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_wide_handle_notify","","",400,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"PlacesSidebarExt","","",null,null],[10,"get_local_only","","",401,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_open_flags","","",401,{"inputs":[{"name":"self"}],"output":{"name":"placesopenflags"}}],[10,"get_show_connect_to_server","","",401,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_desktop","","",401,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_enter_location","","",401,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_other_locations","","",401,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_recent","","",401,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_trash","","",401,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_drop_targets_visible","","",401,{"inputs":[{"name":"self"},{"name":"bool"},{"name":"dragcontext"}],"output":null}],[10,"set_local_only","","",401,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_open_flags","","",401,{"inputs":[{"name":"self"},{"name":"placesopenflags"}],"output":null}],[10,"set_show_connect_to_server","","",401,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_desktop","","",401,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_enter_location","","",401,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_other_locations","","",401,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_recent","","",401,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_trash","","",401,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_local_only","","",401,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_local_only","","",401,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_open_flags","","",401,{"inputs":[{"name":"self"}],"output":{"name":"placesopenflags"}}],[10,"set_property_open_flags","","",401,{"inputs":[{"name":"self"},{"name":"placesopenflags"}],"output":null}],[10,"get_property_populate_all","","",401,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_populate_all","","",401,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_property_show_connect_to_server","","",401,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_show_desktop","","",401,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_show_desktop","","",401,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_show_enter_location","","",401,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_show_enter_location","","",401,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_show_other_locations","","",401,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_show_other_locations","","",401,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_show_recent","","",401,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_show_recent","","",401,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_show_trash","","",401,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_show_trash","","",401,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_drag_action_ask","","",401,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_show_connect_to_server","","",401,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_show_enter_location","","",401,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_show_error_message","","",401,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_show_other_locations","","",401,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_show_other_locations_with_flags","","",401,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_local_only_notify","","",401,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_location_notify","","",401,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_open_flags_notify","","",401,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_populate_all_notify","","",401,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_connect_to_server_notify","","",401,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_desktop_notify","","",401,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_enter_location_notify","","",401,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_other_locations_notify","","",401,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_recent_notify","","",401,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_trash_notify","","",401,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"PopoverExt","","Trait containing all `Popover` methods.",null,null],[10,"bind_model","","Establishes a binding between a `Popover` and a `gio::MenuModel`.",402,{"inputs":[{"name":"self"},{"name":"q"},{"name":"r"}],"output":null}],[10,"get_constrain_to","","",402,{"inputs":[{"name":"self"}],"output":{"name":"popoverconstraint"}}],[10,"get_default_widget","","",402,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_modal","","Returns whether the popover is modal, see gtk_popover_set_modal to see the implications of this.",402,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_pointing_to","","If a rectangle to point to has been set, this function will return `true` and fill in `rect` with such rectangle, otherwise it will return `false` and fill in `rect` with the attached widget coordinates. ## `rect` location to store the rectangle",402,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_position","","Returns the preferred position of `self`.",402,{"inputs":[{"name":"self"}],"output":{"name":"positiontype"}}],[10,"get_relative_to","","Returns the widget `self` is currently attached to",402,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_transitions_enabled","","Returns whether show/hide transitions are enabled on this popover.",402,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"popdown","","",402,{"inputs":[{"name":"self"}],"output":null}],[10,"popup","","",402,{"inputs":[{"name":"self"}],"output":null}],[10,"set_constrain_to","","",402,{"inputs":[{"name":"self"},{"name":"popoverconstraint"}],"output":null}],[10,"set_default_widget","","",402,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_modal","","Sets whether `self` is modal, a modal popover will grab all input within the toplevel and grab the keyboard focus on it when being displayed. Clicking outside the popover area or pressing Esc will dismiss the popover and ungrab input.",402,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_pointing_to","","Sets the rectangle that `self` will point to, in the coordinate space of the widget `self` is attached to, see `PopoverExt::set_relative_to`.",402,{"inputs":[{"name":"self"},{"name":"rectangle"}],"output":null}],[10,"set_position","","Sets the preferred position for `self` to appear. If the `self` is currently visible, it will be immediately updated.",402,{"inputs":[{"name":"self"},{"name":"positiontype"}],"output":null}],[10,"set_relative_to","","Sets a new widget to be attached to `self`. If `self` is visible, the position will be updated.",402,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_transitions_enabled","","Sets whether show/hide transitions are enabled on this popover",402,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_closed","","",402,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_constrain_to_notify","","",402,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_modal_notify","","",402,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pointing_to_notify","","",402,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_position_notify","","",402,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_relative_to_notify","","",402,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_transitions_enabled_notify","","",402,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"PopoverMenuExt","","",null,null],[10,"open_submenu","","",403,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"get_property_visible_submenu","","",403,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_visible_submenu","","",403,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_child_position","","",403,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"i32"}}],[10,"set_child_position","","",403,{"inputs":[{"name":"self"},{"name":"t"},{"name":"i32"}],"output":null}],[10,"get_child_submenu","","",403,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"option"}}],[10,"set_child_submenu","","",403,{"inputs":[{"name":"self"},{"name":"t"},{"name":"p"}],"output":null}],[10,"connect_property_visible_submenu_notify","","",403,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"PrintContextExt","","",null,null],[10,"create_pango_context","","",404,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"create_pango_layout","","",404,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_cairo_context","","",404,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_dpi_x","","",404,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_dpi_y","","",404,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_hard_margins","","",404,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_height","","",404,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_page_setup","","",404,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_pango_fontmap","","",404,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_width","","",404,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"set_cairo_context","","",404,{"inputs":[{"name":"self"},{"name":"context"},{"name":"f64"},{"name":"f64"}],"output":null}],[8,"PrintSettingsExt","","",null,null],[10,"copy","","",405,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get","","",405,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_bool","","",405,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"get_collate","","",405,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_default_source","","",405,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_dither","","",405,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_double","","",405,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"f64"}}],[10,"get_double_with_default","","",405,{"inputs":[{"name":"self"},{"name":"str"},{"name":"f64"}],"output":{"name":"f64"}}],[10,"get_duplex","","",405,{"inputs":[{"name":"self"}],"output":{"name":"printduplex"}}],[10,"get_finishings","","",405,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_int","","",405,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"i32"}}],[10,"get_int_with_default","","",405,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"}],"output":{"name":"i32"}}],[10,"get_length","","",405,{"inputs":[{"name":"self"},{"name":"str"},{"name":"unit"}],"output":{"name":"f64"}}],[10,"get_media_type","","",405,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_n_copies","","",405,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_number_up","","",405,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_number_up_layout","","",405,{"inputs":[{"name":"self"}],"output":{"name":"numberuplayout"}}],[10,"get_orientation","","",405,{"inputs":[{"name":"self"}],"output":{"name":"pageorientation"}}],[10,"get_output_bin","","",405,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_page_set","","",405,{"inputs":[{"name":"self"}],"output":{"name":"pageset"}}],[10,"get_paper_height","","",405,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"f64"}}],[10,"get_paper_size","","",405,{"inputs":[{"name":"self"}],"output":{"name":"papersize"}}],[10,"get_paper_width","","",405,{"inputs":[{"name":"self"},{"name":"unit"}],"output":{"name":"f64"}}],[10,"get_print_pages","","",405,{"inputs":[{"name":"self"}],"output":{"name":"printpages"}}],[10,"get_printer","","",405,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_printer_lpi","","",405,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_quality","","",405,{"inputs":[{"name":"self"}],"output":{"name":"printquality"}}],[10,"get_resolution","","",405,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_resolution_x","","",405,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_resolution_y","","",405,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_reverse","","",405,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_scale","","",405,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_use_color","","",405,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"has_key","","",405,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"load_file","","",405,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"load_key_file","","",405,{"inputs":[{"name":"self"},{"name":"keyfile"},{"name":"p"}],"output":{"name":"result"}}],[10,"set","","",405,{"inputs":[{"name":"self"},{"name":"str"},{"name":"p"}],"output":null}],[10,"set_bool","","",405,{"inputs":[{"name":"self"},{"name":"str"},{"name":"bool"}],"output":null}],[10,"set_collate","","",405,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_default_source","","",405,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_dither","","",405,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_double","","",405,{"inputs":[{"name":"self"},{"name":"str"},{"name":"f64"}],"output":null}],[10,"set_duplex","","",405,{"inputs":[{"name":"self"},{"name":"printduplex"}],"output":null}],[10,"set_finishings","","",405,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_int","","",405,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"}],"output":null}],[10,"set_length","","",405,{"inputs":[{"name":"self"},{"name":"str"},{"name":"f64"},{"name":"unit"}],"output":null}],[10,"set_media_type","","",405,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_n_copies","","",405,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_number_up","","",405,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_number_up_layout","","",405,{"inputs":[{"name":"self"},{"name":"numberuplayout"}],"output":null}],[10,"set_orientation","","",405,{"inputs":[{"name":"self"},{"name":"pageorientation"}],"output":null}],[10,"set_output_bin","","",405,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_page_set","","",405,{"inputs":[{"name":"self"},{"name":"pageset"}],"output":null}],[10,"set_paper_height","","",405,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"unit"}],"output":null}],[10,"set_paper_size","","",405,{"inputs":[{"name":"self"},{"name":"papersize"}],"output":null}],[10,"set_paper_width","","",405,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"unit"}],"output":null}],[10,"set_print_pages","","",405,{"inputs":[{"name":"self"},{"name":"printpages"}],"output":null}],[10,"set_printer","","",405,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_printer_lpi","","",405,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"set_quality","","",405,{"inputs":[{"name":"self"},{"name":"printquality"}],"output":null}],[10,"set_resolution","","",405,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_resolution_xy","","",405,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_reverse","","",405,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_scale","","",405,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"set_use_color","","",405,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"to_file","","",405,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"to_gvariant","","",405,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"to_key_file","","",405,{"inputs":[{"name":"self"},{"name":"keyfile"},{"name":"str"}],"output":null}],[10,"unset","","",405,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[8,"ProgressBarExt","","",null,null],[10,"get_ellipsize","","",406,{"inputs":[{"name":"self"}],"output":{"name":"ellipsizemode"}}],[10,"get_fraction","","",406,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_inverted","","",406,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_pulse_step","","",406,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_show_text","","",406,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_text","","",406,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"pulse","","",406,{"inputs":[{"name":"self"}],"output":null}],[10,"set_ellipsize","","",406,{"inputs":[{"name":"self"},{"name":"ellipsizemode"}],"output":null}],[10,"set_fraction","","",406,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"set_inverted","","",406,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_pulse_step","","",406,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"set_show_text","","",406,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_text","","",406,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"connect_property_ellipsize_notify","","",406,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_fraction_notify","","",406,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_inverted_notify","","",406,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pulse_step_notify","","",406,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_text_notify","","",406,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_text_notify","","",406,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"RadioButtonExt","","",null,null],[10,"get_group","","",407,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"join_group","","",407,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"connect_group_changed","","",407,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"RadioMenuItemExt","","",null,null],[10,"get_group","","",408,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"join_group","","",408,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"connect_group_changed","","",408,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"RangeExt","","Trait containing all `Range` methods.",null,null],[10,"get_adjustment","","Get the `Adjustment` which is the “model” object for `Range`. See `RangeExt::set_adjustment` for details. The return value does not have a reference added, so should not be unreferenced.",409,{"inputs":[{"name":"self"}],"output":{"name":"adjustment"}}],[10,"get_fill_level","","Gets the current position of the fill level indicator.",409,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_flippable","","Gets the value set by `RangeExt::set_flippable`.",409,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_inverted","","Gets the value set by `RangeExt::set_inverted`.",409,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_lower_stepper_sensitivity","","Gets the sensitivity policy for the stepper that points to the 'lower' end of the `Range`’s adjustment.",409,{"inputs":[{"name":"self"}],"output":{"name":"sensitivitytype"}}],[10,"get_min_slider_size","","This function is useful mainly for `Range` subclasses.",409,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_range_rect","","This function returns the area that contains the range’s trough and its steppers, in widget->window coordinates.",409,{"inputs":[{"name":"self"}],"output":{"name":"rectangle"}}],[10,"get_restrict_to_fill_level","","Gets whether the range is restricted to the fill level.",409,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_round_digits","","Gets the number of digits to round the value to when it changes. See `Range::change-value`.",409,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_show_fill_level","","Gets whether the range displays the fill level graphically.",409,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_slider_range","","This function returns sliders range along the long dimension, in widget->window coordinates.",409,null],[10,"get_slider_size_fixed","","This function is useful mainly for `Range` subclasses.",409,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_upper_stepper_sensitivity","","Gets the sensitivity policy for the stepper that points to the 'upper' end of the `Range`’s adjustment.",409,{"inputs":[{"name":"self"}],"output":{"name":"sensitivitytype"}}],[10,"get_value","","Gets the current value of the range.",409,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"set_adjustment","","Sets the adjustment to be used as the “model” object for this range widget. The adjustment indicates the current range value, the minimum and maximum range values, the step/page increments used for keybindings and scrolling, and the page size. The page size is normally 0 for `Scale` and nonzero for `Scrollbar`, and indicates the size of the visible area of the widget being scrolled. The page size affects the size of the scrollbar slider. ## `adjustment` a `Adjustment`",409,{"inputs":[{"name":"self"},{"name":"adjustment"}],"output":null}],[10,"set_fill_level","","Set the new position of the fill level indicator.",409,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"set_flippable","","If a range is flippable, it will switch its direction if it is horizontal and its direction is `TextDirection::Rtl`.",409,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_increments","","Sets the step and page sizes for the range. The step size is used when the user clicks the `Scrollbar` arrows or moves `Scale` via arrow keys. The page size is used for example when moving via Page Up or Page Down keys. ## `step` step size ## `page` page size",409,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"set_inverted","","Ranges normally move from lower to higher values as the slider moves from top to bottom or left to right. Inverted ranges have higher values at the top or on the right rather than on the bottom or left. ## `setting` `true` to invert the range",409,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_lower_stepper_sensitivity","","Sets the sensitivity policy for the stepper that points to the 'lower' end of the `Range`’s adjustment. ## `sensitivity` the lower stepper’s sensitivity policy.",409,{"inputs":[{"name":"self"},{"name":"sensitivitytype"}],"output":null}],[10,"set_min_slider_size","","Sets the minimum size of the range’s slider.",409,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_range","","Sets the allowable values in the `Range`, and clamps the range value to be between `min` and `max`. (If the range has a non-zero page size, it is clamped between `min` and `max` - page-size.) ## `min` minimum range value ## `max` maximum range value",409,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"set_restrict_to_fill_level","","Sets whether the slider is restricted to the fill level. See `RangeExt::set_fill_level` for a general description of the fill level concept. ## `restrict_to_fill_level` Whether the fill level restricts slider movement.",409,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_round_digits","","Sets the number of digits to round the value to when it changes. See `Range::change-value`. ## `round_digits` the precision in digits, or -1",409,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_show_fill_level","","Sets whether a graphical fill level is show on the trough. See `RangeExt::set_fill_level` for a general description of the fill level concept. ## `show_fill_level` Whether a fill level indicator graphics is shown.",409,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_slider_size_fixed","","Sets whether the range’s slider has a fixed size, or a size that depends on its adjustment’s page size.",409,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_upper_stepper_sensitivity","","Sets the sensitivity policy for the stepper that points to the 'upper' end of the `Range`’s adjustment. ## `sensitivity` the upper stepper’s sensitivity policy.",409,{"inputs":[{"name":"self"},{"name":"sensitivitytype"}],"output":null}],[10,"set_value","","Sets the current value of the range; if the value is outside the minimum or maximum range values, it will be clamped to fit inside them. The range emits the `Range::value-changed` signal if the value changes. ## `value` new value of the range",409,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"connect_adjust_bounds","","",409,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_change_value","","",409,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_slider","","",409,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_value_changed","","",409,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_adjustment_notify","","",409,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_fill_level_notify","","",409,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_inverted_notify","","",409,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_lower_stepper_sensitivity_notify","","",409,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_restrict_to_fill_level_notify","","",409,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_round_digits_notify","","",409,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_fill_level_notify","","",409,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_upper_stepper_sensitivity_notify","","",409,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"RecentChooserExt","","Trait containing all `RecentChooser` methods.",null,null],[10,"add_filter","","Adds `filter` to the list of `RecentFilter` objects held by `self`.",410,{"inputs":[{"name":"self"},{"name":"recentfilter"}],"output":null}],[10,"get_current_item","","Gets the `RecentInfo` currently selected by `self`.",410,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_current_uri","","Gets the URI currently selected by `self`.",410,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_filter","","Gets the `RecentFilter` object currently used by `self` to affect the display of the recently used resources.",410,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_items","","Gets the list of recently used resources in form of `RecentInfo` objects.",410,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_limit","","Gets the number of items returned by `RecentChooser::get_items` and `RecentChooser::get_uris`.",410,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_local_only","","Gets whether only local resources should be shown in the recently used resources selector. See `RecentChooser::set_local_only`",410,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_select_multiple","","Gets whether `self` can select multiple items.",410,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_icons","","Retrieves whether `self` should show an icon near the resource.",410,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_not_found","","Retrieves whether `self` should show the recently used resources that were not found.",410,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_private","","Returns whether `self` should display recently used resources registered as private.",410,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_tips","","Gets whether `self` should display tooltips containing the full path of a recently user resource.",410,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_sort_type","","Gets the value set by `RecentChooser::set_sort_type`.",410,{"inputs":[{"name":"self"}],"output":{"name":"recentsorttype"}}],[10,"get_uris","","Gets the URI of the recently used resources.",410,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"list_filters","","Gets the `RecentFilter` objects held by `self`.",410,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"remove_filter","","Removes `filter` from the list of `RecentFilter` objects held by `self`. ## `filter` a `RecentFilter`",410,{"inputs":[{"name":"self"},{"name":"recentfilter"}],"output":null}],[10,"select_all","","Selects all the items inside `self`, if the `self` supports multiple selection.",410,{"inputs":[{"name":"self"}],"output":null}],[10,"select_uri","","Selects `uri` inside `self`. ## `uri` a URI",410,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"set_current_uri","","Sets `uri` as the current URI for `self`. ## `uri` a URI",410,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"set_filter","","Sets `filter` as the current `RecentFilter` object used by `self` to affect the displayed recently used resources. ## `filter` a `RecentFilter`",410,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_limit","","Sets the number of items that should be returned by `RecentChooser::get_items` and `RecentChooser::get_uris`. ## `limit` a positive integer, or -1 for all items",410,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_local_only","","Sets whether only local resources, that is resources using the file:// URI scheme, should be shown in the recently used resources selector. If `local_only` is `true` (the default) then the shown resources are guaranteed to be accessible through the operating system native file system. ## `local_only` `true` if only local files can be shown",410,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_select_multiple","","Sets whether `self` can select multiple items. ## `select_multiple` `true` if `self` can select more than one item",410,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_icons","","Sets whether `self` should show an icon near the resource when displaying it. ## `show_icons` whether to show an icon near the resource",410,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_not_found","","Sets whether `self` should display the recently used resources that it didn’t find. This only applies to local resources. ## `show_not_found` whether to show the local items we didn’t find",410,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_private","","Whether to show recently used resources marked registered as private. ## `show_private` `true` to show private items, `false` otherwise",410,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_tips","","Sets whether to show a tooltips containing the full path of each recently used resource in a `RecentChooser` widget. ## `show_tips` `true` if tooltips should be shown",410,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_sort_type","","Changes the sorting order of the recently used resources list displayed by `self`. ## `sort_type` sort order that the chooser should use",410,{"inputs":[{"name":"self"},{"name":"recentsorttype"}],"output":null}],[10,"unselect_all","","Unselects all the items inside `self`.",410,{"inputs":[{"name":"self"}],"output":null}],[10,"unselect_uri","","Unselects `uri` inside `self`. ## `uri` a URI",410,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"connect_item_activated","","",410,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_selection_changed","","",410,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_filter_notify","","",410,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_limit_notify","","",410,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_local_only_notify","","",410,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_recent_manager_notify","","",410,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_select_multiple_notify","","",410,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_icons_notify","","",410,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_not_found_notify","","",410,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_private_notify","","",410,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_tips_notify","","",410,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_sort_type_notify","","",410,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"RecentFilterExt","","",null,null],[10,"add_age","","",411,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"add_application","","",411,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"add_group","","",411,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"add_mime_type","","",411,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"add_pattern","","",411,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"add_pixbuf_formats","","",411,{"inputs":[{"name":"self"}],"output":null}],[10,"get_name","","",411,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_needed","","",411,{"inputs":[{"name":"self"}],"output":{"name":"recentfilterflags"}}],[10,"set_name","","",411,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[8,"RecentManagerExt","","",null,null],[10,"add_full","","",412,{"inputs":[{"name":"self"},{"name":"str"},{"name":"recentdata"}],"output":{"name":"bool"}}],[10,"add_item","","",412,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"get_items","","",412,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"has_item","","",412,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"lookup_item","","",412,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"move_item","","",412,{"inputs":[{"name":"self"},{"name":"str"},{"name":"p"}],"output":{"name":"result"}}],[10,"purge_items","","",412,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[10,"remove_item","","",412,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"result"}}],[10,"get_property_filename","","",412,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_property_size","","",412,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"connect_changed","","",412,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_filename_notify","","",412,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_size_notify","","",412,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"RevealerExt","","",null,null],[10,"get_child_revealed","","",413,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_reveal_child","","",413,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_transition_duration","","",413,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_transition_type","","",413,{"inputs":[{"name":"self"}],"output":{"name":"revealertransitiontype"}}],[10,"set_reveal_child","","",413,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_transition_duration","","",413,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"set_transition_type","","",413,{"inputs":[{"name":"self"},{"name":"revealertransitiontype"}],"output":null}],[10,"get_property_child_revealed","","",413,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_reveal_child","","",413,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_reveal_child","","",413,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_transition_duration","","",413,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_transition_duration","","",413,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_transition_type","","",413,{"inputs":[{"name":"self"}],"output":{"name":"revealertransitiontype"}}],[10,"set_property_transition_type","","",413,{"inputs":[{"name":"self"},{"name":"revealertransitiontype"}],"output":null}],[10,"connect_property_child_revealed_notify","","",413,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_reveal_child_notify","","",413,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_transition_duration_notify","","",413,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_transition_type_notify","","",413,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ScaleExt","","",null,null],[10,"add_mark","","",414,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"positiontype"},{"name":"p"}],"output":null}],[10,"clear_marks","","",414,{"inputs":[{"name":"self"}],"output":null}],[10,"get_digits","","",414,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_draw_value","","",414,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_has_origin","","",414,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_layout","","",414,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_layout_offsets","","",414,null],[10,"get_value_pos","","",414,{"inputs":[{"name":"self"}],"output":{"name":"positiontype"}}],[10,"set_digits","","",414,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_draw_value","","",414,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_has_origin","","",414,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_value_pos","","",414,{"inputs":[{"name":"self"},{"name":"positiontype"}],"output":null}],[10,"connect_format_value","","",414,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_digits_notify","","",414,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_draw_value_notify","","",414,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_has_origin_notify","","",414,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_value_pos_notify","","",414,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ScaleButtonExt","","Trait containing all `ScaleButton` methods.",null,null],[10,"get_adjustment","","Gets the `Adjustment` associated with the `ScaleButton`’s scale. See `RangeExt::get_adjustment` for details.",415,{"inputs":[{"name":"self"}],"output":{"name":"adjustment"}}],[10,"get_minus_button","","Retrieves the minus button of the `ScaleButton`.",415,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_plus_button","","Retrieves the plus button of the `ScaleButton`.",415,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_popup","","Retrieves the popup of the `ScaleButton`.",415,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_value","","Gets the current value of the scale button.",415,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"set_adjustment","","Sets the `Adjustment` to be used as a model for the `ScaleButton`’s scale. See `RangeExt::set_adjustment` for details. ## `adjustment` a `Adjustment`",415,{"inputs":[{"name":"self"},{"name":"adjustment"}],"output":null}],[10,"set_icons","","Sets the icons to be used by the scale button. For details, see the `ScaleButton:icons` property. ## `icons` a `None`-terminated array of icon names",415,null],[10,"set_value","","Sets the current value of the scale; if the value is outside the minimum or maximum range values, it will be clamped to fit inside them. The scale button emits the `ScaleButton::value-changed` signal if the value changes. ## `value` new value of the scale button",415,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"get_property_size","","",415,{"inputs":[{"name":"self"}],"output":{"name":"iconsize"}}],[10,"set_property_size","","",415,{"inputs":[{"name":"self"},{"name":"iconsize"}],"output":null}],[10,"connect_popdown","","",415,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_popup","","",415,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_value_changed","","",415,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_adjustment_notify","","",415,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_icons_notify","","",415,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_size_notify","","",415,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_value_notify","","",415,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ScrollableExt","","Trait containing all `Scrollable` methods.",null,null],[10,"get_hadjustment","","Retrieves the `Adjustment` used for horizontal scrolling.",416,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_hscroll_policy","","Gets the horizontal `ScrollablePolicy`.",416,{"inputs":[{"name":"self"}],"output":{"name":"scrollablepolicy"}}],[10,"get_vadjustment","","Retrieves the `Adjustment` used for vertical scrolling.",416,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_vscroll_policy","","Gets the vertical `ScrollablePolicy`.",416,{"inputs":[{"name":"self"}],"output":{"name":"scrollablepolicy"}}],[10,"set_hadjustment","","Sets the horizontal adjustment of the `Scrollable`. ## `hadjustment` a `Adjustment`",416,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_hscroll_policy","","Sets the `ScrollablePolicy` to determine whether horizontal scrolling should start below the minimum width or below the natural width. ## `policy` the horizontal `ScrollablePolicy`",416,{"inputs":[{"name":"self"},{"name":"scrollablepolicy"}],"output":null}],[10,"set_vadjustment","","Sets the vertical adjustment of the `Scrollable`. ## `vadjustment` a `Adjustment`",416,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_vscroll_policy","","Sets the `ScrollablePolicy` to determine whether vertical scrolling should start below the minimum height or below the natural height. ## `policy` the vertical `ScrollablePolicy`",416,{"inputs":[{"name":"self"},{"name":"scrollablepolicy"}],"output":null}],[10,"connect_property_hadjustment_notify","","",416,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_hscroll_policy_notify","","",416,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_vadjustment_notify","","",416,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_vscroll_policy_notify","","",416,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ScrolledWindowExt","","Trait containing all `ScrolledWindow` methods.",null,null],[10,"add_with_viewport","","Used to add children without native scrolling capabilities. This is simply a convenience function; it is equivalent to adding the unscrollable child to a viewport, then adding the viewport to the scrolled window. If a child has native scrolling, use `ContainerExt::add` instead of this function.",417,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"get_capture_button_press","","Return whether button presses are captured during kinetic scrolling. See `ScrolledWindowExt::set_capture_button_press`.",417,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_hadjustment","","Returns the horizontal scrollbar’s adjustment, used to connect the horizontal scrollbar to the child widget’s horizontal scroll functionality.",417,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_hscrollbar","","Returns the horizontal scrollbar of `self`.",417,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_kinetic_scrolling","","Returns the specified kinetic scrolling behavior.",417,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_max_content_height","","",417,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_max_content_width","","",417,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_min_content_height","","Gets the minimal content height of `self`, or -1 if not set.",417,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_min_content_width","","Gets the minimum content width of `self`, or -1 if not set.",417,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_overlay_scrolling","","Returns whether overlay scrolling is enabled for this scrolled window.",417,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_placement","","Gets the placement of the contents with respect to the scrollbars for the scrolled window. See `ScrolledWindowExt::set_placement`.",417,{"inputs":[{"name":"self"}],"output":{"name":"cornertype"}}],[10,"get_policy","","Retrieves the current policy values for the horizontal and vertical scrollbars. See `ScrolledWindowExt::set_policy`. ## `hscrollbar_policy` location to store the policy  for the horizontal scrollbar, or `None` ## `vscrollbar_policy` location to store the policy  for the vertical scrollbar, or `None`",417,null],[10,"get_propagate_natural_height","","",417,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_propagate_natural_width","","",417,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_shadow_type","","Gets the shadow type of the scrolled window. See `ScrolledWindowExt::set_shadow_type`.",417,{"inputs":[{"name":"self"}],"output":{"name":"shadowtype"}}],[10,"get_vadjustment","","Returns the vertical scrollbar’s adjustment, used to connect the vertical scrollbar to the child widget’s vertical scroll functionality.",417,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_vscrollbar","","Returns the vertical scrollbar of `self`.",417,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_capture_button_press","","Changes the behaviour of `self` wrt. to the initial event that possibly starts kinetic scrolling. When `capture_button_press` is set to `true`, the event is captured by the scrolled window, and then later replayed if it is meant to go to the child widget.",417,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_hadjustment","","Sets the `Adjustment` for the horizontal scrollbar. ## `hadjustment` horizontal scroll adjustment",417,{"inputs":[{"name":"self"},{"name":"adjustment"}],"output":null}],[10,"set_kinetic_scrolling","","Turns kinetic scrolling on or off. Kinetic scrolling only applies to devices with source `gdk::InputSource::Touchscreen`. ## `kinetic_scrolling` `true` to enable kinetic scrolling",417,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_max_content_height","","",417,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_max_content_width","","",417,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_min_content_height","","Sets the minimum height that `self` should keep visible. Note that this can and (usually will) be smaller than the minimum size of the content. ## `height` the minimal content height",417,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_min_content_width","","Sets the minimum width that `self` should keep visible. Note that this can and (usually will) be smaller than the minimum size of the content. ## `width` the minimal content width",417,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_overlay_scrolling","","Enables or disables overlay scrolling for this scrolled window.",417,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_placement","","Sets the placement of the contents with respect to the scrollbars for the scrolled window.",417,{"inputs":[{"name":"self"},{"name":"cornertype"}],"output":null}],[10,"set_policy","","Sets the scrollbar policy for the horizontal and vertical scrollbars.",417,{"inputs":[{"name":"self"},{"name":"policytype"},{"name":"policytype"}],"output":null}],[10,"set_propagate_natural_height","","",417,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_propagate_natural_width","","",417,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_shadow_type","","Changes the type of shadow drawn around the contents of `self`. ## `type_` kind of shadow to draw around scrolled window contents",417,{"inputs":[{"name":"self"},{"name":"shadowtype"}],"output":null}],[10,"set_vadjustment","","Sets the `Adjustment` for the vertical scrollbar. ## `vadjustment` vertical scroll adjustment",417,{"inputs":[{"name":"self"},{"name":"adjustment"}],"output":null}],[10,"unset_placement","","Unsets the placement of the contents with respect to the scrollbars for the scrolled window. If no window placement is set for a scrolled window, it defaults to `CornerType::TopLeft`.",417,{"inputs":[{"name":"self"}],"output":null}],[10,"get_property_hscrollbar_policy","","",417,{"inputs":[{"name":"self"}],"output":{"name":"policytype"}}],[10,"set_property_hscrollbar_policy","","",417,{"inputs":[{"name":"self"},{"name":"policytype"}],"output":null}],[10,"get_property_vscrollbar_policy","","",417,{"inputs":[{"name":"self"}],"output":{"name":"policytype"}}],[10,"set_property_vscrollbar_policy","","",417,{"inputs":[{"name":"self"},{"name":"policytype"}],"output":null}],[10,"get_property_window_placement","","",417,{"inputs":[{"name":"self"}],"output":{"name":"cornertype"}}],[10,"set_property_window_placement","","",417,{"inputs":[{"name":"self"},{"name":"cornertype"}],"output":null}],[10,"get_property_window_placement_set","","",417,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_window_placement_set","","",417,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_edge_overshot","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_edge_reached","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_focus_out","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_scroll_child","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_hadjustment_notify","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_hscrollbar_policy_notify","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_kinetic_scrolling_notify","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_max_content_height_notify","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_max_content_width_notify","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_min_content_height_notify","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_min_content_width_notify","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_overlay_scrolling_notify","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_propagate_natural_height_notify","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_propagate_natural_width_notify","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_shadow_type_notify","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_vadjustment_notify","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_vscrollbar_policy_notify","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_window_placement_notify","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_window_placement_set_notify","","",417,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"SearchBarExt","","",null,null],[10,"connect_entry","","",418,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"get_search_mode","","",418,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_show_close_button","","",418,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"handle_event","","",418,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"bool"}}],[10,"set_search_mode","","",418,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_show_close_button","","",418,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_search_mode_enabled","","",418,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_search_mode_enabled","","",418,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_show_close_button","","",418,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_show_close_button","","",418,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_property_search_mode_enabled_notify","","",418,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_close_button_notify","","",418,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"SearchEntryExt","","",null,null],[10,"handle_event","","",419,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"bool"}}],[10,"connect_next_match","","",419,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_previous_match","","",419,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_search_changed","","",419,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_stop_search","","",419,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"SeparatorToolItemExt","","",null,null],[10,"get_draw","","",420,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_draw","","",420,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_property_draw_notify","","",420,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"SettingsExt","","",null,null],[10,"reset_property","","",421,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_double_property","","",421,{"inputs":[{"name":"self"},{"name":"str"},{"name":"f64"},{"name":"str"}],"output":null}],[10,"set_long_property","","",421,{"inputs":[{"name":"self"},{"name":"str"},{"name":"c_long"},{"name":"str"}],"output":null}],[10,"set_string_property","","",421,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":null}],[10,"get_property_gtk_alternative_button_order","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_alternative_button_order","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_alternative_sort_arrows","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_alternative_sort_arrows","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_application_prefer_dark_theme","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_application_prefer_dark_theme","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_auto_mnemonics","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_auto_mnemonics","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_button_images","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_button_images","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_can_change_accels","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_can_change_accels","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_color_palette","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_color_palette","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_color_scheme","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_color_scheme","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_cursor_blink","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_cursor_blink","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_cursor_blink_time","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_cursor_blink_time","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_cursor_blink_timeout","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_cursor_blink_timeout","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_cursor_theme_name","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_cursor_theme_name","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_cursor_theme_size","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_cursor_theme_size","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_decoration_layout","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_decoration_layout","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_dialogs_use_header","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_dialogs_use_header","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_dnd_drag_threshold","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_dnd_drag_threshold","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_double_click_distance","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_double_click_distance","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_double_click_time","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_double_click_time","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_enable_accels","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_enable_accels","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_enable_animations","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_enable_animations","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_enable_event_sounds","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_enable_event_sounds","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_enable_input_feedback_sounds","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_enable_input_feedback_sounds","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_enable_mnemonics","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_enable_mnemonics","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_enable_primary_paste","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_enable_primary_paste","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_enable_tooltips","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_enable_tooltips","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_entry_password_hint_timeout","","",421,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_gtk_entry_password_hint_timeout","","",421,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_gtk_entry_select_on_focus","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_entry_select_on_focus","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_error_bell","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_error_bell","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_fallback_icon_theme","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_fallback_icon_theme","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_file_chooser_backend","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_file_chooser_backend","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_font_name","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_font_name","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_fontconfig_timestamp","","",421,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_gtk_fontconfig_timestamp","","",421,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_gtk_icon_sizes","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_icon_sizes","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_icon_theme_name","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_icon_theme_name","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_im_module","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_im_module","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_im_preedit_style","","",421,{"inputs":[{"name":"self"}],"output":{"name":"impreeditstyle"}}],[10,"set_property_gtk_im_preedit_style","","",421,{"inputs":[{"name":"self"},{"name":"impreeditstyle"}],"output":null}],[10,"get_property_gtk_im_status_style","","",421,{"inputs":[{"name":"self"}],"output":{"name":"imstatusstyle"}}],[10,"set_property_gtk_im_status_style","","",421,{"inputs":[{"name":"self"},{"name":"imstatusstyle"}],"output":null}],[10,"get_property_gtk_key_theme_name","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_key_theme_name","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_keynav_cursor_only","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_keynav_cursor_only","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_keynav_use_caret","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_keynav_use_caret","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_keynav_wrap_around","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_keynav_wrap_around","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_label_select_on_focus","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_label_select_on_focus","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_long_press_time","","",421,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_gtk_long_press_time","","",421,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_gtk_menu_bar_accel","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_menu_bar_accel","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_menu_bar_popup_delay","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_menu_bar_popup_delay","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_menu_images","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_menu_images","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_menu_popdown_delay","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_menu_popdown_delay","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_menu_popup_delay","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_menu_popup_delay","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_modules","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_modules","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_primary_button_warps_slider","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_primary_button_warps_slider","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_print_backends","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_print_backends","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_print_preview_command","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_print_preview_command","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_recent_files_enabled","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_recent_files_enabled","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_recent_files_limit","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_recent_files_limit","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_recent_files_max_age","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_recent_files_max_age","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_scrolled_window_placement","","",421,{"inputs":[{"name":"self"}],"output":{"name":"cornertype"}}],[10,"set_property_gtk_scrolled_window_placement","","",421,{"inputs":[{"name":"self"},{"name":"cornertype"}],"output":null}],[10,"get_property_gtk_shell_shows_app_menu","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_shell_shows_app_menu","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_shell_shows_desktop","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_shell_shows_desktop","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_shell_shows_menubar","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_shell_shows_menubar","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_show_input_method_menu","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_show_input_method_menu","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_show_unicode_menu","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_show_unicode_menu","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_sound_theme_name","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_sound_theme_name","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_split_cursor","","",421,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_gtk_split_cursor","","",421,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_gtk_theme_name","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_theme_name","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_timeout_expand","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_timeout_expand","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_timeout_initial","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_timeout_initial","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_timeout_repeat","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_timeout_repeat","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_titlebar_double_click","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_titlebar_double_click","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_titlebar_middle_click","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_titlebar_middle_click","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_titlebar_right_click","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_titlebar_right_click","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_toolbar_icon_size","","",421,{"inputs":[{"name":"self"}],"output":{"name":"iconsize"}}],[10,"set_property_gtk_toolbar_icon_size","","",421,{"inputs":[{"name":"self"},{"name":"iconsize"}],"output":null}],[10,"get_property_gtk_toolbar_style","","",421,{"inputs":[{"name":"self"}],"output":{"name":"toolbarstyle"}}],[10,"set_property_gtk_toolbar_style","","",421,{"inputs":[{"name":"self"},{"name":"toolbarstyle"}],"output":null}],[10,"get_property_gtk_tooltip_browse_mode_timeout","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_tooltip_browse_mode_timeout","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_tooltip_browse_timeout","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_tooltip_browse_timeout","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_tooltip_timeout","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_tooltip_timeout","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_visible_focus","","",421,{"inputs":[{"name":"self"}],"output":{"name":"policytype"}}],[10,"set_property_gtk_visible_focus","","",421,{"inputs":[{"name":"self"},{"name":"policytype"}],"output":null}],[10,"get_property_gtk_xft_antialias","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_xft_antialias","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_xft_dpi","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_xft_dpi","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_xft_hinting","","",421,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_gtk_xft_hinting","","",421,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_gtk_xft_hintstyle","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_xft_hintstyle","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_gtk_xft_rgba","","",421,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_gtk_xft_rgba","","",421,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"connect_property_color_hash_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_alternative_button_order_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_alternative_sort_arrows_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_application_prefer_dark_theme_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_auto_mnemonics_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_button_images_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_can_change_accels_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_color_palette_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_color_scheme_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_cursor_blink_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_cursor_blink_time_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_cursor_blink_timeout_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_cursor_theme_name_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_cursor_theme_size_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_decoration_layout_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_dialogs_use_header_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_dnd_drag_threshold_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_double_click_distance_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_double_click_time_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_enable_accels_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_enable_animations_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_enable_event_sounds_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_enable_input_feedback_sounds_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_enable_mnemonics_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_enable_primary_paste_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_enable_tooltips_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_entry_password_hint_timeout_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_entry_select_on_focus_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_error_bell_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_fallback_icon_theme_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_file_chooser_backend_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_font_name_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_fontconfig_timestamp_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_icon_sizes_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_icon_theme_name_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_im_module_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_im_preedit_style_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_im_status_style_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_key_theme_name_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_keynav_cursor_only_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_keynav_use_caret_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_keynav_wrap_around_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_label_select_on_focus_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_long_press_time_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_menu_bar_accel_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_menu_bar_popup_delay_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_menu_images_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_menu_popdown_delay_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_menu_popup_delay_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_modules_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_primary_button_warps_slider_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_print_backends_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_print_preview_command_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_recent_files_enabled_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_recent_files_limit_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_recent_files_max_age_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_scrolled_window_placement_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_shell_shows_app_menu_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_shell_shows_desktop_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_shell_shows_menubar_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_show_input_method_menu_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_show_unicode_menu_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_sound_theme_name_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_split_cursor_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_theme_name_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_timeout_expand_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_timeout_initial_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_timeout_repeat_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_titlebar_double_click_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_titlebar_middle_click_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_titlebar_right_click_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_toolbar_icon_size_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_toolbar_style_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_tooltip_browse_mode_timeout_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_tooltip_browse_timeout_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_tooltip_timeout_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_visible_focus_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_xft_antialias_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_xft_dpi_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_xft_hinting_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_xft_hintstyle_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gtk_xft_rgba_notify","","",421,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ShortcutsWindowExt","","",null,null],[10,"get_property_section_name","","",422,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_section_name","","",422,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_view_name","","",422,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_view_name","","",422,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"connect_close","","",422,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_search","","",422,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_section_name_notify","","",422,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_view_name_notify","","",422,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"SizeGroupExt","","",null,null],[10,"add_widget","","",423,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"get_ignore_hidden","","",423,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_mode","","",423,{"inputs":[{"name":"self"}],"output":{"name":"sizegroupmode"}}],[10,"get_widgets","","",423,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"remove_widget","","",423,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_ignore_hidden","","",423,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_mode","","",423,{"inputs":[{"name":"self"},{"name":"sizegroupmode"}],"output":null}],[10,"connect_property_ignore_hidden_notify","","",423,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_mode_notify","","",423,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"SpinButtonExt","","",null,null],[10,"configure","","",424,{"inputs":[{"name":"self"},{"name":"p"},{"name":"f64"},{"name":"u32"}],"output":null}],[10,"get_adjustment","","",424,{"inputs":[{"name":"self"}],"output":{"name":"adjustment"}}],[10,"get_digits","","",424,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_increments","","",424,null],[10,"get_numeric","","",424,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_range","","",424,null],[10,"get_snap_to_ticks","","",424,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_update_policy","","",424,{"inputs":[{"name":"self"}],"output":{"name":"spinbuttonupdatepolicy"}}],[10,"get_value","","",424,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_value_as_int","","",424,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_wrap","","",424,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_adjustment","","",424,{"inputs":[{"name":"self"},{"name":"adjustment"}],"output":null}],[10,"set_digits","","",424,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"set_increments","","",424,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"set_numeric","","",424,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_range","","",424,{"inputs":[{"name":"self"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"set_snap_to_ticks","","",424,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_update_policy","","",424,{"inputs":[{"name":"self"},{"name":"spinbuttonupdatepolicy"}],"output":null}],[10,"set_value","","",424,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"set_wrap","","",424,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"spin","","",424,{"inputs":[{"name":"self"},{"name":"spintype"},{"name":"f64"}],"output":null}],[10,"update","","",424,{"inputs":[{"name":"self"}],"output":null}],[10,"get_property_climb_rate","","",424,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"set_property_climb_rate","","",424,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"connect_property_adjustment_notify","","",424,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_climb_rate_notify","","",424,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_digits_notify","","",424,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_numeric_notify","","",424,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_snap_to_ticks_notify","","",424,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_update_policy_notify","","",424,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_value_notify","","",424,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_wrap_notify","","",424,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"SpinnerExt","","",null,null],[10,"start","","",425,{"inputs":[{"name":"self"}],"output":null}],[10,"stop","","",425,{"inputs":[{"name":"self"}],"output":null}],[10,"get_property_active","","",425,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_active","","",425,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_property_active_notify","","",425,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"StackExt","","",null,null],[10,"add_named","","",426,{"inputs":[{"name":"self"},{"name":"p"},{"name":"str"}],"output":null}],[10,"add_titled","","",426,{"inputs":[{"name":"self"},{"name":"p"},{"name":"str"},{"name":"str"}],"output":null}],[10,"get_child_by_name","","",426,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_hhomogeneous","","",426,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_homogeneous","","",426,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_interpolate_size","","",426,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_transition_duration","","",426,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_transition_running","","",426,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_transition_type","","",426,{"inputs":[{"name":"self"}],"output":{"name":"stacktransitiontype"}}],[10,"get_vhomogeneous","","",426,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_visible_child","","",426,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_visible_child_name","","",426,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_hhomogeneous","","",426,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_homogeneous","","",426,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_interpolate_size","","",426,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_transition_duration","","",426,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"set_transition_type","","",426,{"inputs":[{"name":"self"},{"name":"stacktransitiontype"}],"output":null}],[10,"set_vhomogeneous","","",426,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_visible_child","","",426,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_visible_child_full","","",426,{"inputs":[{"name":"self"},{"name":"str"},{"name":"stacktransitiontype"}],"output":null}],[10,"set_visible_child_name","","",426,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"get_property_homogeneous","","",426,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_homogeneous","","",426,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_interpolate_size","","",426,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_interpolate_size","","",426,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_transition_duration","","",426,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"set_property_transition_duration","","",426,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"get_property_transition_running","","",426,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_transition_type","","",426,{"inputs":[{"name":"self"}],"output":{"name":"stacktransitiontype"}}],[10,"set_property_transition_type","","",426,{"inputs":[{"name":"self"},{"name":"stacktransitiontype"}],"output":null}],[10,"get_property_visible_child","","",426,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_visible_child","","",426,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_visible_child_name","","",426,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_visible_child_name","","",426,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_child_icon_name","","",426,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"option"}}],[10,"set_child_icon_name","","",426,{"inputs":[{"name":"self"},{"name":"t"},{"name":"p"}],"output":null}],[10,"get_child_name","","",426,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"option"}}],[10,"set_child_name","","",426,{"inputs":[{"name":"self"},{"name":"t"},{"name":"p"}],"output":null}],[10,"get_child_needs_attention","","",426,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[10,"set_child_needs_attention","","",426,{"inputs":[{"name":"self"},{"name":"t"},{"name":"bool"}],"output":null}],[10,"get_child_position","","",426,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"i32"}}],[10,"set_child_position","","",426,{"inputs":[{"name":"self"},{"name":"t"},{"name":"i32"}],"output":null}],[10,"get_child_title","","",426,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"option"}}],[10,"set_child_title","","",426,{"inputs":[{"name":"self"},{"name":"t"},{"name":"p"}],"output":null}],[10,"connect_property_hhomogeneous_notify","","",426,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_homogeneous_notify","","",426,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_interpolate_size_notify","","",426,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_transition_duration_notify","","",426,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_transition_running_notify","","",426,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_transition_type_notify","","",426,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_vhomogeneous_notify","","",426,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_visible_child_notify","","",426,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_visible_child_name_notify","","",426,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"StackSidebarExt","","",null,null],[10,"get_stack","","",427,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_stack","","",427,{"inputs":[{"name":"self"},{"name":"stack"}],"output":null}],[10,"get_property_stack","","",427,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_stack","","",427,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"connect_property_stack_notify","","",427,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"StackSwitcherExt","","",null,null],[10,"get_stack","","",428,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_stack","","",428,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"get_property_icon_size","","",428,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_icon_size","","",428,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_stack","","",428,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_stack","","",428,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"connect_property_icon_size_notify","","",428,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_stack_notify","","",428,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"StatusIconExt","","",null,null],[10,"get_geometry","","",429,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_gicon","","",429,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_has_tooltip","","",429,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_icon_name","","",429,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_pixbuf","","",429,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_screen","","",429,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_size","","",429,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_stock","","",429,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_storage_type","","",429,{"inputs":[{"name":"self"}],"output":{"name":"imagetype"}}],[10,"get_title","","",429,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_tooltip_markup","","",429,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_tooltip_text","","",429,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_visible","","",429,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_x11_window_id","","",429,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"is_embedded","","",429,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_from_file","","",429,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_from_gicon","","",429,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_from_icon_name","","",429,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_from_pixbuf","","",429,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_from_stock","","",429,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_has_tooltip","","",429,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_name","","",429,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_screen","","",429,{"inputs":[{"name":"self"},{"name":"screen"}],"output":null}],[10,"set_title","","",429,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_tooltip_markup","","",429,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_tooltip_text","","",429,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_visible","","",429,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_embedded","","",429,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_file","","",429,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"set_property_gicon","","",429,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"set_property_icon_name","","",429,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_orientation","","",429,{"inputs":[{"name":"self"}],"output":{"name":"orientation"}}],[10,"set_property_pixbuf","","",429,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"set_property_stock","","",429,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"connect_activate","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_button_press_event","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_button_release_event","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_popup_menu","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_query_tooltip","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_scroll_event","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_size_changed","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_embedded_notify","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_file_notify","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gicon_notify","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_has_tooltip_notify","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_icon_name_notify","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_orientation_notify","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pixbuf_notify","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_screen_notify","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_size_notify","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_stock_notify","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_storage_type_notify","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_title_notify","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_tooltip_markup_notify","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_tooltip_text_notify","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_visible_notify","","",429,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"StatusbarExt","","",null,null],[10,"get_context_id","","",430,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"u32"}}],[10,"get_message_area","","",430,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"pop","","",430,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"push","","",430,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"str"}],"output":{"name":"u32"}}],[10,"remove","","",430,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"u32"}],"output":null}],[10,"remove_all","","",430,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"connect_text_popped","","",430,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_text_pushed","","",430,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"StyleContextExt","","",null,null],[10,"add_class","","",431,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"add_provider","","",431,{"inputs":[{"name":"self"},{"name":"p"},{"name":"u32"}],"output":null}],[10,"add_region","","",431,{"inputs":[{"name":"self"},{"name":"str"},{"name":"regionflags"}],"output":null}],[10,"get_background_color","","",431,{"inputs":[{"name":"self"},{"name":"stateflags"}],"output":{"name":"rgba"}}],[10,"get_border_color","","",431,{"inputs":[{"name":"self"},{"name":"stateflags"}],"output":{"name":"rgba"}}],[10,"get_color","","",431,{"inputs":[{"name":"self"},{"name":"stateflags"}],"output":{"name":"rgba"}}],[10,"get_direction","","",431,{"inputs":[{"name":"self"}],"output":{"name":"textdirection"}}],[10,"get_frame_clock","","",431,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_junction_sides","","",431,{"inputs":[{"name":"self"}],"output":{"name":"junctionsides"}}],[10,"get_parent","","",431,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_scale","","",431,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_screen","","",431,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_section","","",431,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_state","","",431,{"inputs":[{"name":"self"}],"output":{"name":"stateflags"}}],[10,"has_class","","",431,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"has_region","","",431,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"invalidate","","",431,{"inputs":[{"name":"self"}],"output":null}],[10,"list_classes","","",431,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"list_regions","","",431,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"lookup_color","","",431,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"lookup_icon_set","","",431,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"pop_animatable_region","","",431,{"inputs":[{"name":"self"}],"output":null}],[10,"remove_class","","",431,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"remove_provider","","",431,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"remove_region","","",431,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"restore","","",431,{"inputs":[{"name":"self"}],"output":null}],[10,"save","","",431,{"inputs":[{"name":"self"}],"output":null}],[10,"scroll_animations","","",431,{"inputs":[{"name":"self"},{"name":"window"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_background","","",431,{"inputs":[{"name":"self"},{"name":"window"}],"output":null}],[10,"set_direction","","",431,{"inputs":[{"name":"self"},{"name":"textdirection"}],"output":null}],[10,"set_frame_clock","","",431,{"inputs":[{"name":"self"},{"name":"frameclock"}],"output":null}],[10,"set_junction_sides","","",431,{"inputs":[{"name":"self"},{"name":"junctionsides"}],"output":null}],[10,"set_parent","","",431,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_scale","","",431,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_screen","","",431,{"inputs":[{"name":"self"},{"name":"screen"}],"output":null}],[10,"set_state","","",431,{"inputs":[{"name":"self"},{"name":"stateflags"}],"output":null}],[10,"state_is_running","","",431,{"inputs":[{"name":"self"},{"name":"statetype"}],"output":{"name":"option"}}],[10,"to_string","","",431,{"inputs":[{"name":"self"},{"name":"stylecontextprintflags"}],"output":{"name":"string"}}],[10,"get_property_paint_clock","","",431,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_paint_clock","","",431,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"connect_changed","","",431,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_direction_notify","","",431,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_paint_clock_notify","","",431,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_parent_notify","","",431,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_screen_notify","","",431,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"StylePropertiesExt","","",null,null],[10,"clear","","",432,{"inputs":[{"name":"self"}],"output":null}],[10,"get_property","","",432,{"inputs":[{"name":"self"},{"name":"str"},{"name":"stateflags"}],"output":{"name":"option"}}],[10,"lookup_color","","",432,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"map_color","","",432,{"inputs":[{"name":"self"},{"name":"str"},{"name":"symboliccolor"}],"output":null}],[10,"merge","","",432,{"inputs":[{"name":"self"},{"name":"styleproperties"},{"name":"bool"}],"output":null}],[10,"set_property","","",432,{"inputs":[{"name":"self"},{"name":"str"},{"name":"stateflags"},{"name":"value"}],"output":null}],[10,"unset_property","","",432,{"inputs":[{"name":"self"},{"name":"str"},{"name":"stateflags"}],"output":null}],[8,"StyleProviderExt","","Trait containing all `StyleProvider` methods.",null,null],[8,"SwitchExt","","",null,null],[10,"get_active","","",433,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_state","","",433,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_active","","",433,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_state","","",433,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_activate","","",433,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_state_set","","",433,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_active_notify","","",433,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_state_notify","","",433,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"TextBufferExt","","",null,null],[10,"add_mark","","",434,{"inputs":[{"name":"self"},{"name":"textmark"},{"name":"textiter"}],"output":null}],[10,"add_selection_clipboard","","",434,{"inputs":[{"name":"self"},{"name":"clipboard"}],"output":null}],[10,"apply_tag","","",434,{"inputs":[{"name":"self"},{"name":"texttag"},{"name":"textiter"},{"name":"textiter"}],"output":null}],[10,"apply_tag_by_name","","",434,{"inputs":[{"name":"self"},{"name":"str"},{"name":"textiter"},{"name":"textiter"}],"output":null}],[10,"backspace","","",434,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"bool"},{"name":"bool"}],"output":{"name":"bool"}}],[10,"begin_user_action","","",434,{"inputs":[{"name":"self"}],"output":null}],[10,"copy_clipboard","","",434,{"inputs":[{"name":"self"},{"name":"clipboard"}],"output":null}],[10,"create_child_anchor","","",434,{"inputs":[{"name":"self"},{"name":"textiter"}],"output":{"name":"option"}}],[10,"create_mark","","",434,{"inputs":[{"name":"self"},{"name":"p"},{"name":"textiter"},{"name":"bool"}],"output":{"name":"option"}}],[10,"cut_clipboard","","",434,{"inputs":[{"name":"self"},{"name":"clipboard"},{"name":"bool"}],"output":null}],[10,"delete","","",434,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"textiter"}],"output":null}],[10,"delete_interactive","","",434,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"textiter"},{"name":"bool"}],"output":{"name":"bool"}}],[10,"delete_mark","","",434,{"inputs":[{"name":"self"},{"name":"textmark"}],"output":null}],[10,"delete_mark_by_name","","",434,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"delete_selection","","",434,{"inputs":[{"name":"self"},{"name":"bool"},{"name":"bool"}],"output":{"name":"bool"}}],[10,"deserialize","","",434,null],[10,"deserialize_get_can_create_tags","","",434,{"inputs":[{"name":"self"},{"name":"atom"}],"output":{"name":"bool"}}],[10,"deserialize_set_can_create_tags","","",434,{"inputs":[{"name":"self"},{"name":"atom"},{"name":"bool"}],"output":null}],[10,"end_user_action","","",434,{"inputs":[{"name":"self"}],"output":null}],[10,"get_bounds","","",434,null],[10,"get_char_count","","",434,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_copy_target_list","","",434,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_deserialize_formats","","",434,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_end_iter","","",434,{"inputs":[{"name":"self"}],"output":{"name":"textiter"}}],[10,"get_has_selection","","",434,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_insert","","",434,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_iter_at_child_anchor","","",434,{"inputs":[{"name":"self"},{"name":"textchildanchor"}],"output":{"name":"textiter"}}],[10,"get_iter_at_line","","",434,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"textiter"}}],[10,"get_iter_at_line_index","","",434,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"textiter"}}],[10,"get_iter_at_line_offset","","",434,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"textiter"}}],[10,"get_iter_at_mark","","",434,{"inputs":[{"name":"self"},{"name":"textmark"}],"output":{"name":"textiter"}}],[10,"get_iter_at_offset","","",434,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"textiter"}}],[10,"get_line_count","","",434,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_mark","","",434,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_modified","","",434,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_paste_target_list","","",434,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_selection_bound","","",434,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_selection_bounds","","",434,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_serialize_formats","","",434,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_slice","","",434,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"textiter"},{"name":"bool"}],"output":{"name":"option"}}],[10,"get_start_iter","","",434,{"inputs":[{"name":"self"}],"output":{"name":"textiter"}}],[10,"get_tag_table","","",434,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_text","","",434,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"textiter"},{"name":"bool"}],"output":{"name":"option"}}],[10,"insert","","",434,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"str"}],"output":null}],[10,"insert_at_cursor","","",434,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"insert_child_anchor","","",434,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"textchildanchor"}],"output":null}],[10,"insert_interactive","","",434,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"str"},{"name":"bool"}],"output":{"name":"bool"}}],[10,"insert_interactive_at_cursor","","",434,{"inputs":[{"name":"self"},{"name":"str"},{"name":"bool"}],"output":{"name":"bool"}}],[10,"insert_markup","","",434,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"str"}],"output":null}],[10,"insert_pixbuf","","",434,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"pixbuf"}],"output":null}],[10,"insert_range","","",434,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"textiter"},{"name":"textiter"}],"output":null}],[10,"insert_range_interactive","","",434,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"textiter"},{"name":"textiter"},{"name":"bool"}],"output":{"name":"bool"}}],[10,"move_mark","","",434,{"inputs":[{"name":"self"},{"name":"textmark"},{"name":"textiter"}],"output":null}],[10,"move_mark_by_name","","",434,{"inputs":[{"name":"self"},{"name":"str"},{"name":"textiter"}],"output":null}],[10,"paste_clipboard","","",434,{"inputs":[{"name":"self"},{"name":"clipboard"},{"name":"p"},{"name":"bool"}],"output":null}],[10,"place_cursor","","",434,{"inputs":[{"name":"self"},{"name":"textiter"}],"output":null}],[10,"register_deserialize_tagset","","",434,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"atom"}}],[10,"register_serialize_tagset","","",434,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"atom"}}],[10,"remove_all_tags","","",434,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"textiter"}],"output":null}],[10,"remove_selection_clipboard","","",434,{"inputs":[{"name":"self"},{"name":"clipboard"}],"output":null}],[10,"remove_tag","","",434,{"inputs":[{"name":"self"},{"name":"texttag"},{"name":"textiter"},{"name":"textiter"}],"output":null}],[10,"remove_tag_by_name","","",434,{"inputs":[{"name":"self"},{"name":"str"},{"name":"textiter"},{"name":"textiter"}],"output":null}],[10,"select_range","","",434,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"textiter"}],"output":null}],[10,"serialize","","",434,{"inputs":[{"name":"self"},{"name":"textbuffer"},{"name":"atom"},{"name":"textiter"},{"name":"textiter"}],"output":{"name":"vec"}}],[10,"set_modified","","",434,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_text","","",434,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"unregister_deserialize_format","","",434,{"inputs":[{"name":"self"},{"name":"atom"}],"output":null}],[10,"unregister_serialize_format","","",434,{"inputs":[{"name":"self"},{"name":"atom"}],"output":null}],[10,"get_property_cursor_position","","",434,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"connect_apply_tag","","",434,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_begin_user_action","","",434,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_changed","","",434,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_delete_range","","",434,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_end_user_action","","",434,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_insert_child_anchor","","",434,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_insert_pixbuf","","",434,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_mark_deleted","","",434,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_mark_set","","",434,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_modified_changed","","",434,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_paste_done","","",434,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_remove_tag","","",434,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_copy_target_list_notify","","",434,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_cursor_position_notify","","",434,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_has_selection_notify","","",434,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_paste_target_list_notify","","",434,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_tag_table_notify","","",434,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_text_notify","","",434,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"TextChildAnchorExt","","",null,null],[10,"get_deleted","","",435,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_widgets","","",435,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[8,"TextMarkExt","","",null,null],[10,"get_buffer","","",436,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_deleted","","",436,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_left_gravity","","",436,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_name","","",436,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_visible","","",436,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_visible","","",436,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_property_left_gravity_notify","","",436,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_name_notify","","",436,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"TextTagExt","","",null,null],[10,"changed","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"event","","",437,{"inputs":[{"name":"self"},{"name":"p"},{"name":"event"},{"name":"textiter"}],"output":{"name":"bool"}}],[10,"get_priority","","",437,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_priority","","",437,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_accumulative_margin","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_accumulative_margin","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_property_background","","",437,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_background_full_height","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_background_full_height","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_background_full_height_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_background_full_height_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_background_rgba","","",437,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_background_rgba","","",437,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_background_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_background_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_direction","","",437,{"inputs":[{"name":"self"}],"output":{"name":"textdirection"}}],[10,"set_property_direction","","",437,{"inputs":[{"name":"self"},{"name":"textdirection"}],"output":null}],[10,"get_property_editable","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_editable","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_editable_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_editable_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_fallback","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_fallback","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_fallback_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_fallback_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_family","","",437,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_family","","",437,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_family_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_family_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_font","","",437,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_font","","",437,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_font_features","","",437,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_font_features","","",437,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_font_features_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_font_features_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_property_foreground","","",437,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_foreground_rgba","","",437,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_foreground_rgba","","",437,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_foreground_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_foreground_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_indent","","",437,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_indent","","",437,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_indent_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_indent_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_invisible","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_invisible","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_invisible_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_invisible_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_justification","","",437,{"inputs":[{"name":"self"}],"output":{"name":"justification"}}],[10,"set_property_justification","","",437,{"inputs":[{"name":"self"},{"name":"justification"}],"output":null}],[10,"get_property_justification_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_justification_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_language","","",437,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_language","","",437,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_language_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_language_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_left_margin","","",437,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_left_margin","","",437,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_left_margin_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_left_margin_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_letter_spacing","","",437,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_letter_spacing","","",437,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_letter_spacing_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_letter_spacing_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_name","","",437,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_paragraph_background","","",437,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_paragraph_background_rgba","","",437,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_paragraph_background_rgba","","",437,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_paragraph_background_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_paragraph_background_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_pixels_above_lines","","",437,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_pixels_above_lines","","",437,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_pixels_above_lines_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_pixels_above_lines_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_pixels_below_lines","","",437,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_pixels_below_lines","","",437,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_pixels_below_lines_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_pixels_below_lines_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_pixels_inside_wrap","","",437,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_pixels_inside_wrap","","",437,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_pixels_inside_wrap_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_pixels_inside_wrap_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_right_margin","","",437,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_right_margin","","",437,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_right_margin_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_right_margin_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_rise","","",437,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_rise","","",437,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_rise_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_rise_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_scale","","",437,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"set_property_scale","","",437,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"get_property_scale_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_scale_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_size","","",437,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_size","","",437,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_size_points","","",437,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"set_property_size_points","","",437,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"get_property_size_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_size_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_stretch","","",437,{"inputs":[{"name":"self"}],"output":{"name":"stretch"}}],[10,"set_property_stretch","","",437,{"inputs":[{"name":"self"},{"name":"stretch"}],"output":null}],[10,"get_property_stretch_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_stretch_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_strikethrough","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_strikethrough","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_strikethrough_rgba","","",437,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_strikethrough_rgba","","",437,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_strikethrough_rgba_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_strikethrough_rgba_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_strikethrough_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_strikethrough_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_style","","",437,{"inputs":[{"name":"self"}],"output":{"name":"style"}}],[10,"set_property_style","","",437,{"inputs":[{"name":"self"},{"name":"style"}],"output":null}],[10,"get_property_style_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_style_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_tabs_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_tabs_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_underline","","",437,{"inputs":[{"name":"self"}],"output":{"name":"underline"}}],[10,"set_property_underline","","",437,{"inputs":[{"name":"self"},{"name":"underline"}],"output":null}],[10,"get_property_underline_rgba","","",437,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_underline_rgba","","",437,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_underline_rgba_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_underline_rgba_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_underline_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_underline_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_variant","","",437,{"inputs":[{"name":"self"}],"output":{"name":"variant"}}],[10,"set_property_variant","","",437,{"inputs":[{"name":"self"},{"name":"variant"}],"output":null}],[10,"get_property_variant_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_variant_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_weight","","",437,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_weight","","",437,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_weight_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_weight_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_wrap_mode","","",437,{"inputs":[{"name":"self"}],"output":{"name":"wrapmode"}}],[10,"set_property_wrap_mode","","",437,{"inputs":[{"name":"self"},{"name":"wrapmode"}],"output":null}],[10,"get_property_wrap_mode_set","","",437,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_wrap_mode_set","","",437,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_event","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_accumulative_margin_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_background_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_background_full_height_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_background_full_height_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_background_rgba_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_background_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_direction_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_editable_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_editable_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_fallback_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_fallback_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_family_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_family_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_font_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_font_features_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_font_features_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_foreground_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_foreground_rgba_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_foreground_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_indent_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_indent_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_invisible_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_invisible_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_justification_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_justification_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_language_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_language_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_left_margin_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_left_margin_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_letter_spacing_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_letter_spacing_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_name_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_paragraph_background_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_paragraph_background_rgba_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_paragraph_background_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pixels_above_lines_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pixels_above_lines_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pixels_below_lines_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pixels_below_lines_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pixels_inside_wrap_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pixels_inside_wrap_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_right_margin_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_right_margin_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_rise_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_rise_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_scale_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_scale_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_size_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_size_points_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_size_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_stretch_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_stretch_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_strikethrough_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_strikethrough_rgba_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_strikethrough_rgba_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_strikethrough_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_style_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_style_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_tabs_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_underline_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_underline_rgba_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_underline_rgba_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_underline_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_variant_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_variant_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_weight_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_weight_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_wrap_mode_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_wrap_mode_set_notify","","",437,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"TextTagTableExt","","",null,null],[10,"add","","",438,{"inputs":[{"name":"self"},{"name":"texttag"}],"output":{"name":"bool"}}],[10,"get_size","","",438,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"lookup","","",438,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"remove","","",438,{"inputs":[{"name":"self"},{"name":"texttag"}],"output":null}],[10,"connect_tag_added","","",438,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_tag_changed","","",438,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_tag_removed","","",438,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"TextViewExt","","",null,null],[10,"add_child_at_anchor","","",439,{"inputs":[{"name":"self"},{"name":"p"},{"name":"textchildanchor"}],"output":null}],[10,"add_child_in_window","","",439,{"inputs":[{"name":"self"},{"name":"p"},{"name":"textwindowtype"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"backward_display_line","","",439,{"inputs":[{"name":"self"},{"name":"textiter"}],"output":{"name":"bool"}}],[10,"backward_display_line_start","","",439,{"inputs":[{"name":"self"},{"name":"textiter"}],"output":{"name":"bool"}}],[10,"buffer_to_window_coords","","",439,null],[10,"forward_display_line","","",439,{"inputs":[{"name":"self"},{"name":"textiter"}],"output":{"name":"bool"}}],[10,"forward_display_line_end","","",439,{"inputs":[{"name":"self"},{"name":"textiter"}],"output":{"name":"bool"}}],[10,"get_accepts_tab","","",439,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_border_window_size","","",439,{"inputs":[{"name":"self"},{"name":"textwindowtype"}],"output":{"name":"i32"}}],[10,"get_bottom_margin","","",439,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_buffer","","",439,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_cursor_locations","","",439,null],[10,"get_cursor_visible","","",439,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_default_attributes","","",439,{"inputs":[{"name":"self"}],"output":{"name":"textattributes"}}],[10,"get_editable","","",439,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_indent","","",439,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_input_hints","","",439,{"inputs":[{"name":"self"}],"output":{"name":"inputhints"}}],[10,"get_input_purpose","","",439,{"inputs":[{"name":"self"}],"output":{"name":"inputpurpose"}}],[10,"get_iter_at_location","","",439,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_iter_at_position","","",439,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_iter_location","","",439,{"inputs":[{"name":"self"},{"name":"textiter"}],"output":{"name":"rectangle"}}],[10,"get_justification","","",439,{"inputs":[{"name":"self"}],"output":{"name":"justification"}}],[10,"get_left_margin","","",439,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_line_at_y","","",439,null],[10,"get_line_yrange","","",439,null],[10,"get_monospace","","",439,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_overwrite","","",439,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_pixels_above_lines","","",439,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_pixels_below_lines","","",439,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_pixels_inside_wrap","","",439,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_right_margin","","",439,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_tabs","","",439,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_top_margin","","",439,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_visible_rect","","",439,{"inputs":[{"name":"self"}],"output":{"name":"rectangle"}}],[10,"get_window","","",439,{"inputs":[{"name":"self"},{"name":"textwindowtype"}],"output":{"name":"option"}}],[10,"get_window_type","","",439,{"inputs":[{"name":"self"},{"name":"window"}],"output":{"name":"textwindowtype"}}],[10,"get_wrap_mode","","",439,{"inputs":[{"name":"self"}],"output":{"name":"wrapmode"}}],[10,"im_context_filter_keypress","","",439,{"inputs":[{"name":"self"},{"name":"eventkey"}],"output":{"name":"bool"}}],[10,"move_child","","",439,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"move_mark_onscreen","","",439,{"inputs":[{"name":"self"},{"name":"textmark"}],"output":{"name":"bool"}}],[10,"move_visually","","",439,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"i32"}],"output":{"name":"bool"}}],[10,"place_cursor_onscreen","","",439,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"reset_cursor_blink","","",439,{"inputs":[{"name":"self"}],"output":null}],[10,"reset_im_context","","",439,{"inputs":[{"name":"self"}],"output":null}],[10,"scroll_mark_onscreen","","",439,{"inputs":[{"name":"self"},{"name":"textmark"}],"output":null}],[10,"scroll_to_iter","","",439,{"inputs":[{"name":"self"},{"name":"textiter"},{"name":"f64"},{"name":"bool"},{"name":"f64"},{"name":"f64"}],"output":{"name":"bool"}}],[10,"scroll_to_mark","","",439,{"inputs":[{"name":"self"},{"name":"textmark"},{"name":"f64"},{"name":"bool"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"set_accepts_tab","","",439,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_border_window_size","","",439,{"inputs":[{"name":"self"},{"name":"textwindowtype"},{"name":"i32"}],"output":null}],[10,"set_bottom_margin","","",439,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_buffer","","",439,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_cursor_visible","","",439,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_editable","","",439,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_indent","","",439,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_input_hints","","",439,{"inputs":[{"name":"self"},{"name":"inputhints"}],"output":null}],[10,"set_input_purpose","","",439,{"inputs":[{"name":"self"},{"name":"inputpurpose"}],"output":null}],[10,"set_justification","","",439,{"inputs":[{"name":"self"},{"name":"justification"}],"output":null}],[10,"set_left_margin","","",439,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_monospace","","",439,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_overwrite","","",439,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_pixels_above_lines","","",439,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_pixels_below_lines","","",439,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_pixels_inside_wrap","","",439,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_right_margin","","",439,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_tabs","","",439,{"inputs":[{"name":"self"},{"name":"tabarray"}],"output":null}],[10,"set_top_margin","","",439,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_wrap_mode","","",439,{"inputs":[{"name":"self"},{"name":"wrapmode"}],"output":null}],[10,"starts_display_line","","",439,{"inputs":[{"name":"self"},{"name":"textiter"}],"output":{"name":"bool"}}],[10,"window_to_buffer_coords","","",439,null],[10,"get_property_im_module","","",439,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_property_im_module","","",439,{"inputs":[{"name":"self"},{"name":"option"}],"output":null}],[10,"get_property_monospace","","",439,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_monospace","","",439,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_populate_all","","",439,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_populate_all","","",439,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_backspace","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_copy_clipboard","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_cut_clipboard","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_delete_from_cursor","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_extend_selection","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_insert_at_cursor","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_cursor","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_viewport","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_paste_clipboard","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_populate_popup","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_preedit_changed","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_select_all","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_set_anchor","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_toggle_cursor_visible","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_toggle_overwrite","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_accepts_tab_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_bottom_margin_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_buffer_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_cursor_visible_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_editable_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_im_module_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_indent_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_input_hints_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_input_purpose_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_justification_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_left_margin_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_monospace_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_overwrite_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pixels_above_lines_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pixels_below_lines_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_pixels_inside_wrap_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_populate_all_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_right_margin_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_tabs_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_top_margin_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_wrap_mode_notify","","",439,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ToggleButtonExt","","Trait containing all `ToggleButton` methods.",null,null],[10,"get_active","","Queries a `ToggleButton` and returns its current state. Returns `true` if the toggle button is pressed in and `false` if it is raised.",440,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_inconsistent","","Gets the value set by `ToggleButtonExt::set_inconsistent`.",440,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_mode","","Retrieves whether the button is displayed as a separate indicator and label. See `ToggleButtonExt::set_mode`.",440,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_active","","Sets the status of the toggle button. Set to `true` if you want the `ToggleButton` to be “pressed in”, and `false` to raise it. This action causes the `ToggleButton::toggled` signal and the `Button::clicked` signal to be emitted. ## `is_active` `true` or `false`.",440,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_inconsistent","","If the user has selected a range of elements (such as some text or spreadsheet cells) that are affected by a toggle button, and the current values in that range are inconsistent, you may want to display the toggle in an “in between” state. This function turns on “in between” display. Normally you would turn off the inconsistent state again if the user toggles the toggle button. This has to be done manually, `ToggleButtonExt::set_inconsistent` only affects visual appearance, it doesn’t affect the semantics of the button. ## `setting` `true` if state is inconsistent",440,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_mode","","Sets whether the button is displayed as a separate indicator and label. You can call this function on a checkbutton or a radiobutton with `draw_indicator` = `false` to make the button look like a normal button",440,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"toggled","","Emits the `ToggleButton::toggled` signal on the `ToggleButton`. There is no good reason for an application ever to call this function.",440,{"inputs":[{"name":"self"}],"output":null}],[10,"get_property_draw_indicator","","",440,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_draw_indicator","","",440,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_toggled","","",440,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_active_notify","","",440,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_draw_indicator_notify","","",440,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_inconsistent_notify","","",440,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ToggleToolButtonExt","","",null,null],[10,"get_active","","",441,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_active","","",441,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_toggled","","",441,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_active_notify","","",441,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ToolButtonExt","","Trait containing all `ToolButton` methods.",null,null],[10,"get_icon_name","","Returns the name of the themed icon for the tool button, see `ToolButtonExt::set_icon_name`.",442,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_icon_widget","","Return the widget used as icon widget on `self`. See `ToolButtonExt::set_icon_widget`.",442,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_label","","Returns the label used by the tool button, or `None` if the tool button doesn’t have a label. or uses a the label from a stock item. The returned string is owned by GTK+, and must not be modified or freed.",442,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_label_widget","","Returns the widget used as label on `self`. See `ToolButtonExt::set_label_widget`.",442,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_stock_id","","Returns the name of the stock item. See `ToolButtonExt::set_stock_id`. The returned string is owned by GTK+ and must not be freed or modifed.",442,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_use_underline","","Returns whether underscores in the label property are used as mnemonics on menu items on the overflow menu. See `ToolButtonExt::set_use_underline`.",442,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_icon_name","","Sets the icon for the tool button from a named themed icon. See the docs for `IconTheme` for more details. The “icon_name” property only has an effect if not overridden by non-`None` “label”, “icon_widget” and “stock_id” properties. ## `icon_name` the name of the themed icon",442,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_icon_widget","","Sets `icon` as the widget used as icon on `self`. If `icon_widget` is `None` the icon is determined by the “stock_id” property. If the “stock_id” property is also `None`, `self` will not have an icon. ## `icon_widget` the widget used as icon, or `None`",442,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_label","","Sets `label` as the label used for the tool button. The “label” property only has an effect if not overridden by a non-`None` “label_widget” property. If both the “label_widget” and “label” properties are `None`, the label is determined by the “stock_id” property. If the “stock_id” property is also `None`, `self` will not have a label. ## `label` a string that will be used as label, or `None`.",442,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_label_widget","","Sets `label_widget` as the widget that will be used as the label for `self`. If `label_widget` is `None` the “label” property is used as label. If “label” is also `None`, the label in the stock item determined by the “stock_id” property is used as label. If “stock_id” is also `None`, `self` does not have a label. ## `label_widget` the widget used as label, or `None`",442,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_stock_id","","Sets the name of the stock item. See `ToolButton::new_from_stock`. The stock_id property only has an effect if not overridden by non-`None` “label” and “icon_widget” properties.",442,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_use_underline","","If set, an underline in the label property indicates that the next character should be used for the mnemonic accelerator key in the overflow menu. For example, if the label property is “_Open” and `use_underline` is `true`, the label on the tool button will be “Open” and the item on the overflow menu will have an underlined “O”.",442,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_clicked","","",442,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_icon_name_notify","","",442,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_icon_widget_notify","","",442,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_label_notify","","",442,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_label_widget_notify","","",442,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_stock_id_notify","","",442,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_use_underline_notify","","",442,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ToolItemExt","","Trait containing all `ToolItem` methods.",null,null],[10,"get_ellipsize_mode","","Returns the ellipsize mode used for `self`. Custom subclasses of `ToolItem` should call this function to find out how text should be ellipsized.",443,{"inputs":[{"name":"self"}],"output":{"name":"ellipsizemode"}}],[10,"get_expand","","Returns whether `self` is allocated extra space. See `ToolItemExt::set_expand`.",443,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_homogeneous","","Returns whether `self` is the same size as other homogeneous items. See `ToolItemExt::set_homogeneous`.",443,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_icon_size","","Returns the icon size used for `self`. Custom subclasses of `ToolItem` should call this function to find out what size icons they should use.",443,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_is_important","","Returns whether `self` is considered important. See `ToolItemExt::set_is_important`",443,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_orientation","","Returns the orientation used for `self`. Custom subclasses of `ToolItem` should call this function to find out what size icons they should use.",443,{"inputs":[{"name":"self"}],"output":{"name":"orientation"}}],[10,"get_proxy_menu_item","","If `menu_item_id` matches the string passed to `ToolItemExt::set_proxy_menu_item` return the corresponding `MenuItem`.",443,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_relief_style","","Returns the relief style of `self`. See `ButtonExt::set_relief`. Custom subclasses of `ToolItem` should call this function in the handler of the `ToolItem::toolbar_reconfigured` signal to find out the relief style of buttons.",443,{"inputs":[{"name":"self"}],"output":{"name":"reliefstyle"}}],[10,"get_text_alignment","","Returns the text alignment used for `self`. Custom subclasses of `ToolItem` should call this function to find out how text should be aligned.",443,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"get_text_orientation","","Returns the text orientation used for `self`. Custom subclasses of `ToolItem` should call this function to find out how text should be orientated.",443,{"inputs":[{"name":"self"}],"output":{"name":"orientation"}}],[10,"get_text_size_group","","Returns the size group used for labels in `self`. Custom subclasses of `ToolItem` should call this function and use the size group for labels.",443,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_toolbar_style","","Returns the toolbar style used for `self`. Custom subclasses of `ToolItem` should call this function in the handler of the `ToolItem`::toolbar_reconfigured signal to find out in what style the toolbar is displayed and change themselves accordingly",443,{"inputs":[{"name":"self"}],"output":{"name":"toolbarstyle"}}],[10,"get_use_drag_window","","Returns whether `self` has a drag window. See `ToolItemExt::set_use_drag_window`.",443,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_visible_horizontal","","Returns whether the `self` is visible on toolbars that are docked horizontally.",443,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_visible_vertical","","Returns whether `self` is visible when the toolbar is docked vertically. See `ToolItemExt::set_visible_vertical`.",443,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"rebuild_menu","","Calling this function signals to the toolbar that the overflow menu item for `self` has changed. If the overflow menu is visible when this function it called, the menu will be rebuilt.",443,{"inputs":[{"name":"self"}],"output":null}],[10,"retrieve_proxy_menu_item","","Returns the `MenuItem` that was last set by `ToolItemExt::set_proxy_menu_item`, ie. the `MenuItem` that is going to appear in the overflow menu.",443,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_expand","","Sets whether `self` is allocated extra space when there is more room on the toolbar then needed for the items. The effect is that the item gets bigger when the toolbar gets bigger and smaller when the toolbar gets smaller. ## `expand` Whether `self` is allocated extra space",443,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_homogeneous","","Sets whether `self` is to be allocated the same size as other homogeneous items. The effect is that all homogeneous items will have the same width as the widest of the items. ## `homogeneous` whether `self` is the same size as other homogeneous items",443,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_is_important","","Sets whether `self` should be considered important. The `ToolButton` class uses this property to determine whether to show or hide its label when the toolbar style is `ToolbarStyle::BothHoriz`. The result is that only tool buttons with the “is_important” property set have labels, an effect known as “priority text” ## `is_important` whether the tool item should be considered important",443,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_proxy_menu_item","","Sets the `MenuItem` used in the toolbar overflow menu. The `menu_item_id` is used to identify the caller of this function and should also be used with `ToolItemExt::get_proxy_menu_item`. ## `menu_item_id` a string used to identify `menu_item` ## `menu_item` a `MenuItem` to be used in the overflow menu",443,{"inputs":[{"name":"self"},{"name":"str"},{"name":"p"}],"output":null}],[10,"set_use_drag_window","","Sets whether `self` has a drag window. When `true` the toolitem can be used as a drag source through `Widget::drag_source_set`. When `self` has a drag window it will intercept all events, even those that would otherwise be sent to a child of `self`. ## `use_drag_window` Whether `self` has a drag window.",443,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_visible_horizontal","","Sets whether `self` is visible when the toolbar is docked horizontally. ## `visible_horizontal` Whether `self` is visible when in horizontal mode",443,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_visible_vertical","","Sets whether `self` is visible when the toolbar is docked vertically. Some tool items, such as text entries, are too wide to be useful on a vertically docked toolbar. If `visible_vertical` is `false` `self` will not appear on toolbars that are docked vertically. ## `visible_vertical` whether `self` is visible when the toolbar is in vertical mode",443,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"toolbar_reconfigured","","Emits the signal `ToolItem::toolbar_reconfigured` on `self`. `Toolbar` and other `ToolShell` implementations use this function to notify children, when some aspect of their configuration changes.",443,{"inputs":[{"name":"self"}],"output":null}],[10,"connect_create_menu_proxy","","",443,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_toolbar_reconfigured","","",443,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_is_important_notify","","",443,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_visible_horizontal_notify","","",443,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_visible_vertical_notify","","",443,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ToolItemGroupExt","","",null,null],[10,"get_collapsed","","",444,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_drop_item","","",444,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_ellipsize","","",444,{"inputs":[{"name":"self"}],"output":{"name":"ellipsizemode"}}],[10,"get_header_relief","","",444,{"inputs":[{"name":"self"}],"output":{"name":"reliefstyle"}}],[10,"get_item_position","","",444,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"i32"}}],[10,"get_label","","",444,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_label_widget","","",444,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_n_items","","",444,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_nth_item","","",444,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"option"}}],[10,"insert","","",444,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":null}],[10,"set_collapsed","","",444,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_ellipsize","","",444,{"inputs":[{"name":"self"},{"name":"ellipsizemode"}],"output":null}],[10,"set_header_relief","","",444,{"inputs":[{"name":"self"},{"name":"reliefstyle"}],"output":null}],[10,"set_item_position","","",444,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":null}],[10,"set_label","","",444,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_label_widget","","",444,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"get_item_expand","","",444,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[10,"set_item_expand","","",444,{"inputs":[{"name":"self"},{"name":"t"},{"name":"bool"}],"output":null}],[10,"get_item_fill","","",444,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[10,"set_item_fill","","",444,{"inputs":[{"name":"self"},{"name":"t"},{"name":"bool"}],"output":null}],[10,"get_item_homogeneous","","",444,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[10,"set_item_homogeneous","","",444,{"inputs":[{"name":"self"},{"name":"t"},{"name":"bool"}],"output":null}],[10,"get_item_new_row","","",444,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[10,"set_item_new_row","","",444,{"inputs":[{"name":"self"},{"name":"t"},{"name":"bool"}],"output":null}],[10,"connect_property_collapsed_notify","","",444,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_ellipsize_notify","","",444,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_header_relief_notify","","",444,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_label_notify","","",444,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_label_widget_notify","","",444,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ToolPaletteExt","","",null,null],[10,"add_drag_dest","","",445,{"inputs":[{"name":"self"},{"name":"p"},{"name":"destdefaults"},{"name":"toolpalettedragtargets"},{"name":"dragaction"}],"output":null}],[10,"get_drag_item","","",445,{"inputs":[{"name":"self"},{"name":"selectiondata"}],"output":{"name":"option"}}],[10,"get_drop_group","","",445,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_drop_item","","",445,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_exclusive","","",445,{"inputs":[{"name":"self"},{"name":"toolitemgroup"}],"output":{"name":"bool"}}],[10,"get_expand","","",445,{"inputs":[{"name":"self"},{"name":"toolitemgroup"}],"output":{"name":"bool"}}],[10,"get_group_position","","",445,{"inputs":[{"name":"self"},{"name":"toolitemgroup"}],"output":{"name":"i32"}}],[10,"get_icon_size","","",445,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_style","","",445,{"inputs":[{"name":"self"}],"output":{"name":"toolbarstyle"}}],[10,"set_drag_source","","",445,{"inputs":[{"name":"self"},{"name":"toolpalettedragtargets"}],"output":null}],[10,"set_exclusive","","",445,{"inputs":[{"name":"self"},{"name":"toolitemgroup"},{"name":"bool"}],"output":null}],[10,"set_expand","","",445,{"inputs":[{"name":"self"},{"name":"toolitemgroup"},{"name":"bool"}],"output":null}],[10,"set_group_position","","",445,{"inputs":[{"name":"self"},{"name":"toolitemgroup"},{"name":"i32"}],"output":null}],[10,"set_icon_size","","",445,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_style","","",445,{"inputs":[{"name":"self"},{"name":"toolbarstyle"}],"output":null}],[10,"unset_icon_size","","",445,{"inputs":[{"name":"self"}],"output":null}],[10,"unset_style","","",445,{"inputs":[{"name":"self"}],"output":null}],[10,"get_property_icon_size_set","","",445,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_icon_size_set","","",445,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_toolbar_style","","",445,{"inputs":[{"name":"self"}],"output":{"name":"toolbarstyle"}}],[10,"set_property_toolbar_style","","",445,{"inputs":[{"name":"self"},{"name":"toolbarstyle"}],"output":null}],[10,"connect_property_icon_size_notify","","",445,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_icon_size_set_notify","","",445,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_toolbar_style_notify","","",445,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ToolShellExt","","Trait containing all `ToolShell` methods.",null,null],[10,"get_ellipsize_mode","","Retrieves the current ellipsize mode for the tool shell. Tool items must not call this function directly, but rely on `ToolItemExt::get_ellipsize_mode` instead.",446,{"inputs":[{"name":"self"}],"output":{"name":"ellipsizemode"}}],[10,"get_icon_size","","Retrieves the icon size for the tool shell. Tool items must not call this function directly, but rely on `ToolItemExt::get_icon_size` instead.",446,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_orientation","","Retrieves the current orientation for the tool shell. Tool items must not call this function directly, but rely on `ToolItemExt::get_orientation` instead.",446,{"inputs":[{"name":"self"}],"output":{"name":"orientation"}}],[10,"get_relief_style","","Returns the relief style of buttons on `self`. Tool items must not call this function directly, but rely on `ToolItemExt::get_relief_style` instead.",446,{"inputs":[{"name":"self"}],"output":{"name":"reliefstyle"}}],[10,"get_style","","Retrieves whether the tool shell has text, icons, or both. Tool items must not call this function directly, but rely on `ToolItemExt::get_toolbar_style` instead.",446,{"inputs":[{"name":"self"}],"output":{"name":"toolbarstyle"}}],[10,"get_text_alignment","","Retrieves the current text alignment for the tool shell. Tool items must not call this function directly, but rely on `ToolItemExt::get_text_alignment` instead.",446,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"get_text_orientation","","Retrieves the current text orientation for the tool shell. Tool items must not call this function directly, but rely on `ToolItemExt::get_text_orientation` instead.",446,{"inputs":[{"name":"self"}],"output":{"name":"orientation"}}],[10,"get_text_size_group","","Retrieves the current text size group for the tool shell. Tool items must not call this function directly, but rely on `ToolItemExt::get_text_size_group` instead.",446,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"rebuild_menu","","Calling this function signals the tool shell that the overflow menu item for tool items have changed. If there is an overflow menu and if it is visible when this function it called, the menu will be rebuilt.",446,{"inputs":[{"name":"self"}],"output":null}],[8,"ToolbarExt","","",null,null],[10,"get_drop_index","","",447,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[10,"get_icon_size","","",447,{"inputs":[{"name":"self"}],"output":{"name":"iconsize"}}],[10,"get_item_index","","",447,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"i32"}}],[10,"get_n_items","","",447,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_nth_item","","",447,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_show_arrow","","",447,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"insert","","",447,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":null}],[10,"set_drop_highlight_item","","",447,{"inputs":[{"name":"self"},{"name":"q"},{"name":"i32"}],"output":null}],[10,"set_icon_size","","",447,{"inputs":[{"name":"self"},{"name":"iconsize"}],"output":null}],[10,"set_show_arrow","","",447,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_style","","",447,{"inputs":[{"name":"self"},{"name":"toolbarstyle"}],"output":null}],[10,"unset_icon_size","","",447,{"inputs":[{"name":"self"}],"output":null}],[10,"unset_style","","",447,{"inputs":[{"name":"self"}],"output":null}],[10,"get_property_icon_size_set","","",447,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_icon_size_set","","",447,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_toolbar_style","","",447,{"inputs":[{"name":"self"}],"output":{"name":"toolbarstyle"}}],[10,"set_property_toolbar_style","","",447,{"inputs":[{"name":"self"},{"name":"toolbarstyle"}],"output":null}],[10,"get_item_expand","","",447,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[10,"set_item_expand","","",447,{"inputs":[{"name":"self"},{"name":"t"},{"name":"bool"}],"output":null}],[10,"get_item_homogeneous","","",447,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[10,"set_item_homogeneous","","",447,{"inputs":[{"name":"self"},{"name":"t"},{"name":"bool"}],"output":null}],[10,"connect_focus_home_or_end","","",447,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_orientation_changed","","",447,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_popup_context_menu","","",447,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_style_changed","","",447,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_icon_size_notify","","",447,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_icon_size_set_notify","","",447,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_arrow_notify","","",447,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_toolbar_style_notify","","",447,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"TooltipExt","","",null,null],[10,"set_custom","","",448,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_icon","","",448,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_icon_from_gicon","","",448,{"inputs":[{"name":"self"},{"name":"q"},{"name":"i32"}],"output":null}],[10,"set_icon_from_icon_name","","",448,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":null}],[10,"set_icon_from_stock","","",448,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":null}],[10,"set_markup","","",448,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_text","","",448,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_tip_area","","",448,{"inputs":[{"name":"self"},{"name":"rectangle"}],"output":null}],[8,"TreeModelExt","","Trait containing all `TreeModel` methods.",null,null],[10,"get_column_type","","Returns the type of the column. ## `index_` the column index",449,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"type"}}],[10,"get_flags","","Returns a set of flags supported by this interface.",449,{"inputs":[{"name":"self"}],"output":{"name":"treemodelflags"}}],[10,"get_iter","","Sets `iter` to a valid iterator pointing to `path`. If `path` does not exist, `iter` is set to an invalid iterator and `false` is returned. ## `iter` the uninitialized `TreeIter`-struct ## `path` the `TreePath`-struct",449,{"inputs":[{"name":"self"},{"name":"treepath"}],"output":{"name":"option"}}],[10,"get_iter_first","","Initializes `iter` with the first iterator in the tree (the one at the path \"0\") and returns `true`. Returns `false` if the tree is empty. ## `iter` the uninitialized `TreeIter`-struct",449,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_iter_from_string","","Sets `iter` to a valid iterator pointing to `path_string`, if it exists. Otherwise, `iter` is left invalid and `false` is returned. ## `iter` an uninitialized `TreeIter`-struct ## `path_string` a string representation of a `TreePath`-struct",449,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_n_columns","","Returns the number of columns supported by `self`.",449,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_path","","Returns a newly-created `TreePath`-struct referenced by `iter`.",449,{"inputs":[{"name":"self"},{"name":"treeiter"}],"output":{"name":"option"}}],[10,"get_string_from_iter","","Generates a string representation of the iter.",449,{"inputs":[{"name":"self"},{"name":"treeiter"}],"output":{"name":"option"}}],[10,"get_value","","Initializes and sets `value` to that at `column`.",449,{"inputs":[{"name":"self"},{"name":"treeiter"},{"name":"i32"}],"output":{"name":"value"}}],[10,"iter_children","","Sets `iter` to point to the first child of `parent`.",449,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[10,"iter_has_child","","Returns `true` if `iter` has children, `false` otherwise. ## `iter` the `TreeIter`-struct to test for children",449,{"inputs":[{"name":"self"},{"name":"treeiter"}],"output":{"name":"bool"}}],[10,"iter_n_children","","Returns the number of children that `iter` has.",449,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"i32"}}],[10,"iter_next","","Sets `iter` to point to the node following it at the current level.",449,{"inputs":[{"name":"self"},{"name":"treeiter"}],"output":{"name":"bool"}}],[10,"iter_nth_child","","Sets `iter` to be the child of `parent`, using the given index.",449,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":{"name":"option"}}],[10,"iter_parent","","Sets `iter` to be the parent of `child`.",449,{"inputs":[{"name":"self"},{"name":"treeiter"}],"output":{"name":"option"}}],[10,"iter_previous","","Sets `iter` to point to the previous node at the current level.",449,{"inputs":[{"name":"self"},{"name":"treeiter"}],"output":{"name":"bool"}}],[10,"row_changed","","Emits the `TreeModel::row-changed` signal on `self`. ## `path` a `TreePath`-struct pointing to the changed row ## `iter` a valid `TreeIter`-struct pointing to the changed row",449,{"inputs":[{"name":"self"},{"name":"treepath"},{"name":"treeiter"}],"output":null}],[10,"row_deleted","","Emits the `TreeModel::row-deleted` signal on `self`.",449,{"inputs":[{"name":"self"},{"name":"treepath"}],"output":null}],[10,"row_has_child_toggled","","Emits the `TreeModel::row-has-child-toggled` signal on `self`. This should be called by models after the child state of a node changes. ## `path` a `TreePath`-struct pointing to the changed row ## `iter` a valid `TreeIter`-struct pointing to the changed row",449,{"inputs":[{"name":"self"},{"name":"treepath"},{"name":"treeiter"}],"output":null}],[10,"row_inserted","","Emits the `TreeModel::row-inserted` signal on `self`. ## `path` a `TreePath`-struct pointing to the inserted row ## `iter` a valid `TreeIter`-struct pointing to the inserted row",449,{"inputs":[{"name":"self"},{"name":"treepath"},{"name":"treeiter"}],"output":null}],[10,"rows_reordered_with_length","","Emits the `TreeModel::rows-reordered` signal on `self`.",449,null],[10,"sort_new_with_model","","Creates a new `TreeModel`, with `self` as the child model.",449,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_row_changed","","",449,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_row_deleted","","",449,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_row_has_child_toggled","","",449,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_row_inserted","","",449,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"TreeModelFilterExt","","",null,null],[10,"clear_cache","","",450,{"inputs":[{"name":"self"}],"output":null}],[10,"convert_child_iter_to_iter","","",450,{"inputs":[{"name":"self"},{"name":"treeiter"}],"output":{"name":"option"}}],[10,"convert_child_path_to_path","","",450,{"inputs":[{"name":"self"},{"name":"treepath"}],"output":{"name":"option"}}],[10,"convert_iter_to_child_iter","","",450,{"inputs":[{"name":"self"},{"name":"treeiter"}],"output":{"name":"treeiter"}}],[10,"convert_path_to_child_path","","",450,{"inputs":[{"name":"self"},{"name":"treepath"}],"output":{"name":"option"}}],[10,"get_model","","",450,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"refilter","","",450,{"inputs":[{"name":"self"}],"output":null}],[10,"set_visible_column","","",450,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_child_model","","",450,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_property_child_model_notify","","",450,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"TreeSelectionExt","","",null,null],[10,"count_selected_rows","","",451,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_mode","","",451,{"inputs":[{"name":"self"}],"output":{"name":"selectionmode"}}],[10,"get_selected","","",451,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_selected_rows","","",451,null],[10,"get_tree_view","","",451,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"iter_is_selected","","",451,{"inputs":[{"name":"self"},{"name":"treeiter"}],"output":{"name":"bool"}}],[10,"path_is_selected","","",451,{"inputs":[{"name":"self"},{"name":"treepath"}],"output":{"name":"bool"}}],[10,"select_all","","",451,{"inputs":[{"name":"self"}],"output":null}],[10,"select_iter","","",451,{"inputs":[{"name":"self"},{"name":"treeiter"}],"output":null}],[10,"select_path","","",451,{"inputs":[{"name":"self"},{"name":"treepath"}],"output":null}],[10,"select_range","","",451,{"inputs":[{"name":"self"},{"name":"treepath"},{"name":"treepath"}],"output":null}],[10,"set_mode","","",451,{"inputs":[{"name":"self"},{"name":"selectionmode"}],"output":null}],[10,"unselect_all","","",451,{"inputs":[{"name":"self"}],"output":null}],[10,"unselect_iter","","",451,{"inputs":[{"name":"self"},{"name":"treeiter"}],"output":null}],[10,"unselect_path","","",451,{"inputs":[{"name":"self"},{"name":"treepath"}],"output":null}],[10,"unselect_range","","",451,{"inputs":[{"name":"self"},{"name":"treepath"},{"name":"treepath"}],"output":null}],[10,"connect_changed","","",451,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_mode_notify","","",451,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"TreeSortableExt","","Trait containing all `TreeSortable` methods.",null,null],[10,"has_default_sort_func","","Returns `true` if the model has a default sort function. This is used primarily by `GtkTreeViewColumns` in order to determine if a model can go back to the default state, or not.",452,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"sort_column_changed","","Emits a `TreeSortable::sort-column-changed` signal on `self`.",452,{"inputs":[{"name":"self"}],"output":null}],[10,"connect_sort_column_changed","","",452,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"TreeStoreExt","","",null,null],[10,"append","","",453,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"treeiter"}}],[10,"clear","","",453,{"inputs":[{"name":"self"}],"output":null}],[10,"insert","","",453,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"}],"output":{"name":"treeiter"}}],[10,"insert_after","","",453,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":{"name":"treeiter"}}],[10,"insert_before","","",453,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":{"name":"treeiter"}}],[10,"is_ancestor","","",453,{"inputs":[{"name":"self"},{"name":"treeiter"},{"name":"treeiter"}],"output":{"name":"bool"}}],[10,"iter_depth","","",453,{"inputs":[{"name":"self"},{"name":"treeiter"}],"output":{"name":"i32"}}],[10,"iter_is_valid","","",453,{"inputs":[{"name":"self"},{"name":"treeiter"}],"output":{"name":"bool"}}],[10,"move_after","","",453,{"inputs":[{"name":"self"},{"name":"treeiter"},{"name":"p"}],"output":null}],[10,"move_before","","",453,{"inputs":[{"name":"self"},{"name":"treeiter"},{"name":"p"}],"output":null}],[10,"prepend","","",453,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"treeiter"}}],[10,"remove","","",453,{"inputs":[{"name":"self"},{"name":"treeiter"}],"output":{"name":"bool"}}],[10,"swap","","",453,{"inputs":[{"name":"self"},{"name":"treeiter"},{"name":"treeiter"}],"output":null}],[8,"TreeViewExt","","",null,null],[10,"append_column","","",454,{"inputs":[{"name":"self"},{"name":"treeviewcolumn"}],"output":{"name":"i32"}}],[10,"collapse_all","","",454,{"inputs":[{"name":"self"}],"output":null}],[10,"collapse_row","","",454,{"inputs":[{"name":"self"},{"name":"treepath"}],"output":{"name":"bool"}}],[10,"columns_autosize","","",454,{"inputs":[{"name":"self"}],"output":null}],[10,"convert_bin_window_to_tree_coords","","",454,null],[10,"convert_bin_window_to_widget_coords","","",454,null],[10,"convert_tree_to_bin_window_coords","","",454,null],[10,"convert_tree_to_widget_coords","","",454,null],[10,"convert_widget_to_bin_window_coords","","",454,null],[10,"convert_widget_to_tree_coords","","",454,null],[10,"create_row_drag_icon","","",454,{"inputs":[{"name":"self"},{"name":"treepath"}],"output":{"name":"option"}}],[10,"expand_all","","",454,{"inputs":[{"name":"self"}],"output":null}],[10,"expand_row","","",454,{"inputs":[{"name":"self"},{"name":"treepath"},{"name":"bool"}],"output":{"name":"bool"}}],[10,"expand_to_path","","",454,{"inputs":[{"name":"self"},{"name":"treepath"}],"output":null}],[10,"get_activate_on_single_click","","",454,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_background_area","","",454,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":{"name":"rectangle"}}],[10,"get_bin_window","","",454,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_cell_area","","",454,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":{"name":"rectangle"}}],[10,"get_column","","",454,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_columns","","",454,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_cursor","","",454,null],[10,"get_dest_row_at_pos","","",454,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_drag_dest_row","","",454,null],[10,"get_enable_search","","",454,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_enable_tree_lines","","",454,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_expander_column","","",454,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_fixed_height_mode","","",454,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_grid_lines","","",454,{"inputs":[{"name":"self"}],"output":{"name":"treeviewgridlines"}}],[10,"get_headers_clickable","","",454,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_headers_visible","","",454,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_hover_expand","","",454,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_hover_selection","","",454,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_level_indentation","","",454,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_model","","",454,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_n_columns","","",454,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[10,"get_path_at_pos","","",454,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_reorderable","","",454,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_rubber_banding","","",454,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_rules_hint","","",454,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_search_column","","",454,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_search_entry","","",454,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_selection","","",454,{"inputs":[{"name":"self"}],"output":{"name":"treeselection"}}],[10,"get_show_expanders","","",454,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_tooltip_column","","",454,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_tooltip_context","","",454,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"bool"}],"output":{"name":"option"}}],[10,"get_visible_range","","",454,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_visible_rect","","",454,{"inputs":[{"name":"self"}],"output":{"name":"rectangle"}}],[10,"insert_column","","",454,{"inputs":[{"name":"self"},{"name":"treeviewcolumn"},{"name":"i32"}],"output":{"name":"i32"}}],[10,"is_blank_at_pos","","",454,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"is_rubber_banding_active","","",454,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"move_column_after","","",454,{"inputs":[{"name":"self"},{"name":"treeviewcolumn"},{"name":"p"}],"output":null}],[10,"remove_column","","",454,{"inputs":[{"name":"self"},{"name":"treeviewcolumn"}],"output":{"name":"i32"}}],[10,"row_activated","","",454,{"inputs":[{"name":"self"},{"name":"treepath"},{"name":"treeviewcolumn"}],"output":null}],[10,"row_expanded","","",454,{"inputs":[{"name":"self"},{"name":"treepath"}],"output":{"name":"bool"}}],[10,"scroll_to_cell","","",454,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"},{"name":"bool"},{"name":"f32"},{"name":"f32"}],"output":null}],[10,"scroll_to_point","","",454,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_activate_on_single_click","","",454,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_cursor","","",454,{"inputs":[{"name":"self"},{"name":"treepath"},{"name":"p"},{"name":"bool"}],"output":null}],[10,"set_cursor_on_cell","","",454,{"inputs":[{"name":"self"},{"name":"treepath"},{"name":"p"},{"name":"r"},{"name":"bool"}],"output":null}],[10,"set_drag_dest_row","","",454,{"inputs":[{"name":"self"},{"name":"p"},{"name":"treeviewdropposition"}],"output":null}],[10,"set_enable_search","","",454,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_enable_tree_lines","","",454,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_expander_column","","",454,{"inputs":[{"name":"self"},{"name":"treeviewcolumn"}],"output":null}],[10,"set_fixed_height_mode","","",454,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_grid_lines","","",454,{"inputs":[{"name":"self"},{"name":"treeviewgridlines"}],"output":null}],[10,"set_headers_clickable","","",454,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_headers_visible","","",454,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_hover_expand","","",454,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_hover_selection","","",454,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_level_indentation","","",454,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_model","","",454,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_reorderable","","",454,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_rubber_banding","","",454,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_rules_hint","","",454,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_search_column","","",454,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_search_entry","","",454,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_show_expanders","","",454,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_tooltip_cell","","",454,{"inputs":[{"name":"self"},{"name":"tooltip"},{"name":"p"},{"name":"q"},{"name":"s"}],"output":null}],[10,"set_tooltip_column","","",454,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_tooltip_row","","",454,{"inputs":[{"name":"self"},{"name":"tooltip"},{"name":"treepath"}],"output":null}],[10,"unset_rows_drag_dest","","",454,{"inputs":[{"name":"self"}],"output":null}],[10,"unset_rows_drag_source","","",454,{"inputs":[{"name":"self"}],"output":null}],[10,"get_property_enable_grid_lines","","",454,{"inputs":[{"name":"self"}],"output":{"name":"treeviewgridlines"}}],[10,"set_property_enable_grid_lines","","",454,{"inputs":[{"name":"self"},{"name":"treeviewgridlines"}],"output":null}],[10,"set_property_ubuntu_almost_fixed_height_mode","","",454,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_columns_changed","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_cursor_changed","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_expand_collapse_cursor_row","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_cursor","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_row_activated","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_row_collapsed","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_row_expanded","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_select_all","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_select_cursor_parent","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_select_cursor_row","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_start_interactive_search","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_test_collapse_row","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_test_expand_row","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_toggle_cursor_row","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_unselect_all","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_activate_on_single_click_notify","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_enable_grid_lines_notify","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_enable_search_notify","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_enable_tree_lines_notify","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_expander_column_notify","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_fixed_height_mode_notify","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_headers_clickable_notify","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_headers_visible_notify","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_hover_expand_notify","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_hover_selection_notify","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_level_indentation_notify","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_model_notify","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_reorderable_notify","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_rubber_banding_notify","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_rules_hint_notify","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_search_column_notify","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_show_expanders_notify","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_tooltip_column_notify","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_ubuntu_almost_fixed_height_mode_notify","","",454,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"TreeViewColumnExt","","",null,null],[10,"cell_get_position","","",455,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[10,"cell_get_size","","",455,null],[10,"cell_is_visible","","",455,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"cell_set_cell_data","","",455,{"inputs":[{"name":"self"},{"name":"p"},{"name":"treeiter"},{"name":"bool"},{"name":"bool"}],"output":null}],[10,"clicked","","",455,{"inputs":[{"name":"self"}],"output":null}],[10,"focus_cell","","",455,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"get_alignment","","",455,{"inputs":[{"name":"self"}],"output":{"name":"f32"}}],[10,"get_button","","",455,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_clickable","","",455,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_expand","","",455,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_fixed_width","","",455,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_max_width","","",455,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_min_width","","",455,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_reorderable","","",455,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_resizable","","",455,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_sizing","","",455,{"inputs":[{"name":"self"}],"output":{"name":"treeviewcolumnsizing"}}],[10,"get_sort_column_id","","",455,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_sort_indicator","","",455,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_sort_order","","",455,{"inputs":[{"name":"self"}],"output":{"name":"sorttype"}}],[10,"get_spacing","","",455,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_title","","",455,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_tree_view","","",455,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_visible","","",455,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_widget","","",455,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_width","","",455,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_x_offset","","",455,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"queue_resize","","",455,{"inputs":[{"name":"self"}],"output":null}],[10,"set_alignment","","",455,{"inputs":[{"name":"self"},{"name":"f32"}],"output":null}],[10,"set_clickable","","",455,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_expand","","",455,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_fixed_width","","",455,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_max_width","","",455,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_min_width","","",455,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_reorderable","","",455,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_resizable","","",455,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_sizing","","",455,{"inputs":[{"name":"self"},{"name":"treeviewcolumnsizing"}],"output":null}],[10,"set_sort_column_id","","",455,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_sort_indicator","","",455,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_sort_order","","",455,{"inputs":[{"name":"self"},{"name":"sorttype"}],"output":null}],[10,"set_spacing","","",455,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_title","","",455,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_visible","","",455,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_widget","","",455,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"get_property_cell_area","","",455,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"connect_clicked","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_alignment_notify","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_cell_area_notify","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_clickable_notify","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_expand_notify","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_fixed_width_notify","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_max_width_notify","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_min_width_notify","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_reorderable_notify","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_resizable_notify","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_sizing_notify","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_sort_column_id_notify","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_sort_indicator_notify","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_sort_order_notify","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_spacing_notify","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_title_notify","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_visible_notify","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_widget_notify","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_width_notify","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_x_offset_notify","","",455,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ViewportExt","","",null,null],[10,"get_bin_window","","",456,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_shadow_type","","",456,{"inputs":[{"name":"self"}],"output":{"name":"shadowtype"}}],[10,"get_view_window","","",456,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"set_shadow_type","","",456,{"inputs":[{"name":"self"},{"name":"shadowtype"}],"output":null}],[10,"connect_property_shadow_type_notify","","",456,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"VolumeButtonExt","","",null,null],[10,"get_property_use_symbolic","","",457,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_use_symbolic","","",457,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"connect_property_use_symbolic_notify","","",457,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"WidgetExt","","Trait containing all `Widget` methods.",null,null],[10,"activate","","For widgets that can be “activated” (buttons, menu items, etc.) this function activates them. Activation is what happens when you press Enter on a widget during key navigation. If `self` isn't activatable, the function returns `false`.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"add_accelerator","","Installs an accelerator for this `self` in `accel_group` that causes `accel_signal` to be emitted if the accelerator is activated. The `accel_group` needs to be added to the widget’s toplevel via `Window::add_accel_group`, and the signal must be of type `gobject::SignalFlags::Action`. Accelerators added through this function are not user changeable during runtime. If you want to support accelerators that can be changed by the user, use `AccelMap::add_entry` and `WidgetExt::set_accel_path` or `MenuItemExt::set_accel_path` instead. ## `accel_signal` widget signal to emit on accelerator activation ## `accel_group` accel group for this widget, added to its toplevel ## `accel_key` GDK keyval of the accelerator ## `accel_mods` modifier key combination of the accelerator ## `accel_flags` flag accelerators, e.g. `AccelFlags::Visible`",458,{"inputs":[{"name":"self"},{"name":"str"},{"name":"accelgroup"},{"name":"u32"},{"name":"modifiertype"},{"name":"accelflags"}],"output":null}],[10,"add_device_events","","Adds the device events in the bitfield `events` to the event mask for `self`. See `WidgetExt::set_device_events` for details. ## `device` a `gdk::Device` ## `events` an event mask, see `gdk::EventMask`",458,{"inputs":[{"name":"self"},{"name":"p"},{"name":"eventmask"}],"output":null}],[10,"add_events","","Adds the events in the bitfield `events` to the event mask for `self`. See `WidgetExt::set_events` and the [input handling overview][event-masks] for details. ## `events` an event mask, see `gdk::EventMask`",458,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"add_mnemonic_label","","Adds a widget to the list of mnemonic labels for this widget. (See `WidgetExt::list_mnemonic_labels`). Note the list of mnemonic labels for the widget is cleared when the widget is destroyed, so the caller must make sure to update its internal state at this point as well, by using a connection to the `Widget::destroy` signal or a weak notifier. ## `label` a `Widget` that acts as a mnemonic label for `self`",458,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"can_activate_accel","","Determines whether an accelerator that activates the signal identified by `signal_id` can currently be activated. This is done by emitting the `Widget::can-activate-accel` signal on `self`; if the signal isn’t overridden by a handler or in a derived widget, then the default check is that the widget must be sensitive, and the widget and all its ancestors mapped. ## `signal_id` the ID of a signal installed on `self`",458,{"inputs":[{"name":"self"},{"name":"u32"}],"output":{"name":"bool"}}],[10,"child_focus","","This function is used by custom widget implementations; if you're writing an app, you’d use `WidgetExt::grab_focus` to move the focus to a particular widget, and `ContainerExt::set_focus_chain` to change the focus tab order. So you may want to investigate those functions instead.",458,{"inputs":[{"name":"self"},{"name":"directiontype"}],"output":{"name":"bool"}}],[10,"child_notify","","Emits a `Widget::child-notify` signal for the [child property][child-properties] `child_property` on `self`.",458,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"compute_expand","","Computes whether a container should give this widget extra space when possible. Containers should check this, rather than looking at `WidgetExt::get_hexpand` or `WidgetExt::get_vexpand`.",458,{"inputs":[{"name":"self"},{"name":"orientation"}],"output":{"name":"bool"}}],[10,"create_pango_context","","Creates a new `pango::Context` with the appropriate font map, font description, and base direction for drawing text for this widget. See also `WidgetExt::get_pango_context`.",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"create_pango_layout","","Creates a new `pango::Layout` with the appropriate font map, font description, and base direction for drawing text for this widget.",458,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[10,"destroy","","Destroys a widget.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"device_is_shadowed","","Returns `true` if `device` has been shadowed by a GTK+ device grab on another widget, so it would stop sending events to `self`. This may be used in the `Widget::grab-notify` signal to check for specific devices. See `gtk_device_grab_add`. ## `device` a `gdk::Device`",458,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"drag_begin","","This function is equivalent to `WidgetExt::drag_begin_with_coordinates`, passing -1, -1 as coordinates.",458,{"inputs":[{"name":"self"},{"name":"targetlist"},{"name":"dragaction"},{"name":"i32"},{"name":"p"}],"output":{"name":"option"}}],[10,"drag_begin_with_coordinates","","Initiates a drag on the source side. The function only needs to be used when the application is starting drags itself, and is not needed when `WidgetExt::drag_source_set` is used.",458,{"inputs":[{"name":"self"},{"name":"targetlist"},{"name":"dragaction"},{"name":"i32"},{"name":"p"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"drag_check_threshold","","Checks to see if a mouse drag starting at (`start_x`, `start_y`) and ending at (`current_x`, `current_y`) has passed the GTK+ drag threshold, and thus should trigger the beginning of a drag-and-drop operation. ## `start_x` X coordinate of start of drag ## `start_y` Y coordinate of start of drag ## `current_x` current X coordinate ## `current_y` current Y coordinate",458,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"bool"}}],[10,"drag_dest_add_image_targets","","Add the image targets supported by `SelectionData` to the target list of the drag destination. The targets are added with `info` = 0. If you need another value, use `TargetList::add_image_targets` and `WidgetExt::drag_dest_set_target_list`.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"drag_dest_add_text_targets","","Add the text targets supported by `SelectionData` to the target list of the drag destination. The targets are added with `info` = 0. If you need another value, use `TargetList::add_text_targets` and `WidgetExt::drag_dest_set_target_list`.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"drag_dest_add_uri_targets","","Add the URI targets supported by `SelectionData` to the target list of the drag destination. The targets are added with `info` = 0. If you need another value, use `TargetList::add_uri_targets` and `WidgetExt::drag_dest_set_target_list`.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"drag_dest_find_target","","Looks for a match between the supported targets of `context` and the `dest_target_list`, returning the first matching target, otherwise returning `GDK_NONE`. `dest_target_list` should usually be the return value from `WidgetExt::drag_dest_get_target_list`, but some widgets may have different valid targets for different parts of the widget; in that case, they will have to implement a drag_motion handler that passes the correct target list to this function. ## `context` drag context ## `target_list` list of droppable targets, or `None` to use  gtk_drag_dest_get_target_list (`self`).",458,{"inputs":[{"name":"self"},{"name":"dragcontext"},{"name":"p"}],"output":{"name":"option"}}],[10,"drag_dest_get_target_list","","Returns the list of targets this widget can accept from drag-and-drop.",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"drag_dest_get_track_motion","","Returns whether the widget has been configured to always emit `Widget::drag-motion` signals.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"drag_dest_set_proxy","","Sets this widget as a proxy for drops to another window. ## `proxy_window` the window to which to forward drag events ## `protocol` the drag protocol which the `proxy_window` accepts  (You can use `gdk_drag_get_protocol` to determine this) ## `use_coordinates` If `true`, send the same coordinates to the  destination, because it is an embedded  subwindow.",458,{"inputs":[{"name":"self"},{"name":"window"},{"name":"dragprotocol"},{"name":"bool"}],"output":null}],[10,"drag_dest_set_target_list","","Sets the target types that this widget can accept from drag-and-drop. The widget must first be made into a drag destination with `WidgetExt::drag_dest_set`. ## `target_list` list of droppable targets, or `None` for none",458,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"drag_dest_set_track_motion","","Tells the widget to emit `Widget::drag-motion` and `Widget::drag-leave` events regardless of the targets and the `DestDefaults::Motion` flag.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"drag_dest_unset","","Clears information about a drop destination set with `WidgetExt::drag_dest_set`. The widget will no longer receive notification of drags.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"drag_get_data","","Gets the data associated with a drag. When the data is received or the retrieval fails, GTK+ will emit a `Widget::drag-data-received` signal. Failure of the retrieval is indicated by the length field of the `selection_data` signal parameter being negative. However, when `WidgetExt::drag_get_data` is called implicitely because the `DestDefaults::Drop` was set, then the widget will not receive notification of failed drops. ## `context` the drag context ## `target` the target (form of the data) to retrieve ## `time_` a timestamp for retrieving the data. This will  generally be the time received in a `Widget::drag-motion`  or `Widget::drag-drop` signal",458,{"inputs":[{"name":"self"},{"name":"dragcontext"},{"name":"atom"},{"name":"u32"}],"output":null}],[10,"drag_highlight","","Draws a highlight around a widget. This will attach handlers to `Widget::draw`, so the highlight will continue to be displayed until `WidgetExt::drag_unhighlight` is called.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"drag_source_add_image_targets","","Add the writable image targets supported by `SelectionData` to the target list of the drag source. The targets are added with `info` = 0. If you need another value, use `TargetList::add_image_targets` and `WidgetExt::drag_source_set_target_list`.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"drag_source_add_text_targets","","Add the text targets supported by `SelectionData` to the target list of the drag source. The targets are added with `info` = 0. If you need another value, use `TargetList::add_text_targets` and `WidgetExt::drag_source_set_target_list`.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"drag_source_add_uri_targets","","Add the URI targets supported by `SelectionData` to the target list of the drag source. The targets are added with `info` = 0. If you need another value, use `TargetList::add_uri_targets` and `WidgetExt::drag_source_set_target_list`.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"drag_source_get_target_list","","Gets the list of targets this widget can provide for drag-and-drop.",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"drag_source_set_icon_gicon","","Sets the icon that will be used for drags from a particular source to `icon`. See the docs for `IconTheme` for more details. ## `icon` A `gio::Icon`",458,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"drag_source_set_icon_name","","Sets the icon that will be used for drags from a particular source to a themed icon. See the docs for `IconTheme` for more details. ## `icon_name` name of icon to use",458,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"drag_source_set_icon_pixbuf","","Sets the icon that will be used for drags from a particular widget from a `gdk_pixbuf::Pixbuf`. GTK+ retains a reference for `pixbuf` and will release it when it is no longer needed. ## `pixbuf` the `gdk_pixbuf::Pixbuf` for the drag icon",458,{"inputs":[{"name":"self"},{"name":"pixbuf"}],"output":null}],[10,"drag_source_set_icon_stock","","Sets the icon that will be used for drags from a particular source to a stock icon.",458,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"drag_source_set_target_list","","Changes the target types that this widget offers for drag-and-drop. The widget must first be made into a drag source with `WidgetExt::drag_source_set`. ## `target_list` list of draggable targets, or `None` for none",458,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"drag_source_unset","","Undoes the effects of `WidgetExt::drag_source_set`.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"drag_unhighlight","","Removes a highlight set by `WidgetExt::drag_highlight` from a widget.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"draw","","Draws `self` to `cr`. The top left corner of the widget will be drawn to the currently set origin point of `cr`.",458,{"inputs":[{"name":"self"},{"name":"context"}],"output":null}],[10,"error_bell","","Notifies the user about an input-related error on this widget. If the `Settings:gtk-error-bell` setting is `true`, it calls `gdk::Window::beep`, otherwise it does nothing.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"event","","Rarely-used function. This function is used to emit the event signals on a widget (those signals should never be emitted without using this function to do so). If you want to synthesize an event though, don’t use this function; instead, use `gtk_main_do_event` so the event will behave as if it were in the event queue. Don’t synthesize expose events; instead, use `gdk::Window::invalidate_rect` to invalidate a region of the window. ## `event` a `GdkEvent`",458,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"bool"}}],[10,"freeze_child_notify","","Stops emission of `Widget::child-notify` signals on `self`. The signals are queued until `WidgetExt::thaw_child_notify` is called on `self`.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"get_action_group","","Retrieves the `gio::ActionGroup` that was registered using `prefix`. The resulting `gio::ActionGroup` may have been registered to `self` or any `Widget` in its ancestry.",458,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_allocated_baseline","","Returns the baseline that has currently been allocated to `self`. This function is intended to be used when implementing handlers for the `Widget::draw` function, and when allocating child widgets in `Widget::size_allocate`.",458,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_allocated_height","","Returns the height that has currently been allocated to `self`. This function is intended to be used when implementing handlers for the `Widget::draw` function.",458,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_allocated_size","","",458,null],[10,"get_allocated_width","","Returns the width that has currently been allocated to `self`. This function is intended to be used when implementing handlers for the `Widget::draw` function.",458,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_allocation","","Retrieves the widget’s allocation.",458,{"inputs":[{"name":"self"}],"output":{"name":"allocation"}}],[10,"get_ancestor","","Gets the first ancestor of `self` with type `widget_type`. For example, `gtk_widget_get_ancestor (widget, GTK_TYPE_BOX)` gets the first `Box` that’s an ancestor of `self`. No reference will be added to the returned widget; it should not be unreferenced. See note about checking for a toplevel `Window` in the docs for `WidgetExt::get_toplevel`.",458,{"inputs":[{"name":"self"},{"name":"type"}],"output":{"name":"option"}}],[10,"get_app_paintable","","Determines whether the application intends to draw on the widget in an `Widget::draw` handler.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_can_default","","Determines whether `self` can be a default widget. See `WidgetExt::set_can_default`.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_can_focus","","Determines whether `self` can own the input focus. See `WidgetExt::set_can_focus`.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_child_visible","","Gets the value set with `WidgetExt::set_child_visible`. If you feel a need to use this function, your code probably needs reorganization.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_clip","","Retrieves the widget’s clip area.",458,{"inputs":[{"name":"self"}],"output":{"name":"allocation"}}],[10,"get_clipboard","","Returns the clipboard object for the given selection to be used with `self`. `self` must have a `gdk::Display` associated with it, so must be attached to a toplevel window. ## `selection` a `gdk::Atom` which identifies the clipboard  to use. `GDK_SELECTION_CLIPBOARD` gives the  default clipboard. Another common value  is `GDK_SELECTION_PRIMARY`, which gives  the primary X selection.",458,{"inputs":[{"name":"self"},{"name":"atom"}],"output":{"name":"clipboard"}}],[10,"get_composite_name","","Obtains the composite name of a widget.",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_device_enabled","","Returns whether `device` can interact with `self` and its children. See `WidgetExt::set_device_enabled`. ## `device` a `gdk::Device`",458,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"get_device_events","","Returns the events mask for the widget corresponding to an specific device. These are the events that the widget will receive when `device` operates on it. ## `device` a `gdk::Device`",458,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"eventmask"}}],[10,"get_direction","","Gets the reading direction for a particular widget. See `WidgetExt::set_direction`.",458,{"inputs":[{"name":"self"}],"output":{"name":"textdirection"}}],[10,"get_display","","Get the `gdk::Display` for the toplevel window associated with this widget. This function can only be called after the widget has been added to a widget hierarchy with a `Window` at the top.",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_double_buffered","","Determines whether the widget is double buffered.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_events","","Returns the event mask (see `gdk::EventMask`) for the widget. These are the events that the widget will receive.",458,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_focus_on_click","","",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_font_map","","",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_frame_clock","","Obtains the frame clock for a widget. The frame clock is a global “ticker” that can be used to drive animations and repaints. The most common reason to get the frame clock is to call `gdk::FrameClock::get_frame_time`, in order to get a time to use for animating. For example you might record the start of the animation with an initial value from `gdk::FrameClock::get_frame_time`, and then update the animation by calling `gdk::FrameClock::get_frame_time` again during each repaint.",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_halign","","Gets the value of the `Widget:halign` property.",458,{"inputs":[{"name":"self"}],"output":{"name":"align"}}],[10,"get_has_tooltip","","Returns the current value of the has-tooltip property. See `Widget:has-tooltip` for more information.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_has_window","","Determines whether `self` has a `gdk::Window` of its own. See `WidgetExt::set_has_window`.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_hexpand","","Gets whether the widget would like any available extra horizontal space. When a user resizes a `Window`, widgets with expand=TRUE generally receive the extra space. For example, a list or scrollable area or document in your window would often be set to expand.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_hexpand_set","","Gets whether `WidgetExt::set_hexpand` has been used to explicitly set the expand flag on this widget.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_mapped","","Whether the widget is mapped.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_margin_bottom","","Gets the value of the `Widget:margin-bottom` property.",458,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_margin_end","","Gets the value of the `Widget:margin-end` property.",458,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_margin_left","","Gets the value of the `Widget:margin-left` property.",458,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_margin_right","","Gets the value of the `Widget:margin-right` property.",458,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_margin_start","","Gets the value of the `Widget:margin-start` property.",458,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_margin_top","","Gets the value of the `Widget:margin-top` property.",458,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_modifier_mask","","Returns the modifier mask the `self`’s windowing system backend uses for a particular purpose.",458,{"inputs":[{"name":"self"},{"name":"modifierintent"}],"output":{"name":"modifiertype"}}],[10,"get_name","","Retrieves the name of a widget. See `WidgetExt::set_name` for the significance of widget names.",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_no_show_all","","Returns the current value of the `Widget:no-show-all` property, which determines whether calls to `WidgetExt::show_all` will affect this widget.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_opacity","","Fetches the requested opacity for this widget. See `WidgetExt::set_opacity`.",458,{"inputs":[{"name":"self"}],"output":{"name":"f64"}}],[10,"get_pango_context","","Gets a `pango::Context` with the appropriate font map, font description, and base direction for this widget. Unlike the context returned by `WidgetExt::create_pango_context`, this context is owned by the widget (it can be used until the screen for the widget changes or the widget is removed from its toplevel), and will be updated to match any changes to the widget’s attributes. This can be tracked by using the `Widget::screen-changed` signal on the widget.",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_parent","","Returns the parent container of `self`.",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_parent_window","","Gets `self`’s parent window.",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_preferred_height","","Retrieves a widget’s initial minimum and natural height.",458,null],[10,"get_preferred_height_and_baseline_for_width","","Retrieves a widget’s minimum and natural height and the corresponding baselines if it would be given the specified `width`, or the default height if `width` is -1. The baselines may be -1 which means that no baseline is requested for this widget.",458,null],[10,"get_preferred_height_for_width","","Retrieves a widget’s minimum and natural height if it would be given the specified `width`.",458,null],[10,"get_preferred_size","","Retrieves the minimum and natural size of a widget, taking into account the widget’s preference for height-for-width management.",458,null],[10,"get_preferred_width","","Retrieves a widget’s initial minimum and natural width.",458,null],[10,"get_preferred_width_for_height","","Retrieves a widget’s minimum and natural width if it would be given the specified `height`.",458,null],[10,"get_realized","","Determines whether `self` is realized.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_receives_default","","Determines whether `self` is always treated as the default widget within its toplevel when it has the focus, even if another widget is the default.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_request_mode","","Gets whether the widget prefers a height-for-width layout or a width-for-height layout.",458,{"inputs":[{"name":"self"}],"output":{"name":"sizerequestmode"}}],[10,"get_root_window","","Get the root window where this widget is located. This function can only be called after the widget has been added to a widget hierarchy with `Window` at the top.",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_scale_factor","","Retrieves the internal scale factor that maps from window coordinates to the actual device pixels. On traditional systems this is 1, on high density outputs, it can be a higher value (typically 2).",458,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"get_screen","","Get the `gdk::Screen` from the toplevel window associated with this widget. This function can only be called after the widget has been added to a widget hierarchy with a `Window` at the top.",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_sensitive","","Returns the widget’s sensitivity (in the sense of returning the value that has been set using `WidgetExt::set_sensitive`).",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_settings","","Gets the settings object holding the settings used for this widget.",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_size_request","","Gets the size request that was explicitly set for the widget using `WidgetExt::set_size_request`. A value of -1 stored in `width` or `height` indicates that that dimension has not been set explicitly and the natural requisition of the widget will be used intead. See `WidgetExt::set_size_request`. To get the size a widget will actually request, call `WidgetExt::get_preferred_size` instead of this function. ## `width` return location for width, or `None` ## `height` return location for height, or `None`",458,null],[10,"get_state_flags","","Returns the widget state as a flag set. It is worth mentioning that the effective `StateFlags::Insensitive` state will be returned, that is, also based on parent insensitivity, even if `self` itself is sensitive.",458,{"inputs":[{"name":"self"}],"output":{"name":"stateflags"}}],[10,"get_style_context","","Returns the style context associated to `self`.",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_support_multidevice","","Returns `true` if `self` is multiple pointer aware. See `WidgetExt::set_support_multidevice` for more information.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_template_child","","Fetch an object build from the template XML for `widget_type` in this `self` instance.",458,{"inputs":[{"name":"self"},{"name":"type"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_tooltip_markup","","Gets the contents of the tooltip for `self`.",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_tooltip_text","","Gets the contents of the tooltip for `self`.",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_tooltip_window","","Returns the `Window` of the current tooltip. This can be the `Window` created by default, or the custom tooltip window set using `WidgetExt::set_tooltip_window`.",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_toplevel","","This function returns the topmost widget in the container hierarchy `self` is a part of. If `self` has no parent widgets, it will be returned as the topmost widget. No reference will be added to the returned widget; it should not be unreferenced.",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_valign","","Gets the value of the `Widget:valign` property.",458,{"inputs":[{"name":"self"}],"output":{"name":"align"}}],[10,"get_valign_with_baseline","","Gets the value of the `Widget:valign` property, including `Align::Baseline`.",458,{"inputs":[{"name":"self"}],"output":{"name":"align"}}],[10,"get_vexpand","","Gets whether the widget would like any available extra vertical space.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_vexpand_set","","Gets whether `WidgetExt::set_vexpand` has been used to explicitly set the expand flag on this widget.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_visible","","Determines whether the widget is visible. If you want to take into account whether the widget’s parent is also marked as visible, use `WidgetExt::is_visible` instead.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_visual","","Gets the visual that will be used to render `self`.",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_window","","Returns the widget’s window if it is realized, `None` otherwise",458,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"grab_add","","Makes `self` the current grabbed widget.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"grab_default","","Causes `self` to become the default widget. `self` must be able to be a default widget; typically you would ensure this yourself by calling `WidgetExt::set_can_default` with a `true` value. The default widget is activated when the user presses Enter in a window. Default widgets must be activatable, that is, `WidgetExt::activate` should affect them. Note that `Entry` widgets require the “activates-default” property set to `true` before they activate the default widget when Enter is pressed and the `Entry` is focused.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"grab_focus","","Causes `self` to have the keyboard focus for the `Window` it's inside. `self` must be a focusable widget, such as a `Entry`; something like `Frame` won’t work.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"grab_remove","","Removes the grab from the given widget.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"has_default","","Determines whether `self` is the current default widget within its toplevel. See `WidgetExt::set_can_default`.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"has_focus","","Determines if the widget has the global input focus. See `WidgetExt::is_focus` for the difference between having the global input focus, and only having the focus within a toplevel.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"has_grab","","Determines whether the widget is currently grabbing events, so it is the only widget receiving input events (keyboard and mouse).",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"has_screen","","Checks whether there is a `gdk::Screen` is associated with this widget. All toplevel widgets have an associated screen, and all widgets added into a hierarchy with a toplevel window at the top.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"has_visible_focus","","Determines if the widget should show a visible indication that it has the global input focus. This is a convenience function for use in ::draw handlers that takes into account whether focus indication should currently be shown in the toplevel window of `self`. See `Window::get_focus_visible` for more information about focus indication.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"hide","","Reverses the effects of `WidgetExt::show`, causing the widget to be hidden (invisible to the user).",458,{"inputs":[{"name":"self"}],"output":null}],[10,"hide_on_delete","","Utility function; intended to be connected to the `Widget::delete-event` signal on a `Window`. The function calls `WidgetExt::hide` on its argument, then returns `true`. If connected to ::delete-event, the result is that clicking the close button for a window (on the window frame, top right corner usually) will hide but not destroy the window. By default, GTK+ destroys windows when ::delete-event is received.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"in_destruction","","Returns whether the widget is currently being destroyed. This information can sometimes be used to avoid doing unnecessary work.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"init_template","","Creates and initializes child widgets defined in templates. This function must be called in the instance initializer for any class which assigned itself a template using `WidgetClass::set_template`",458,{"inputs":[{"name":"self"}],"output":null}],[10,"input_shape_combine_region","","Sets an input shape for this widget’s GDK window. This allows for windows which react to mouse click in a nonrectangular region, see `gdk::Window::input_shape_combine_region` for more information. ## `region` shape to be added, or `None` to remove an existing shape",458,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"insert_action_group","","Inserts `group` into `self`. Children of `self` that implement `Actionable` can then be associated with actions in `group` by setting their “action-name” to `prefix`.`action-name`.",458,{"inputs":[{"name":"self"},{"name":"str"},{"name":"q"}],"output":null}],[10,"is_ancestor","","Determines whether `self` is somewhere inside `ancestor`, possibly with intermediate containers. ## `ancestor` another `Widget`",458,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"bool"}}],[10,"is_composited","","Whether `self` can rely on having its alpha channel drawn correctly. On X11 this function returns whether a compositing manager is running for `self`’s screen.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_drawable","","Determines whether `self` can be drawn to. A widget can be drawn to if it is mapped and visible.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_focus","","Determines if the widget is the focus widget within its toplevel. (This does not mean that the `Widget:has-focus` property is necessarily set; `Widget:has-focus` will only be set if the toplevel widget additionally has the global input focus.)",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_sensitive","","Returns the widget’s effective sensitivity, which means it is sensitive itself and also its parent widget is sensitive",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_toplevel","","Determines whether `self` is a toplevel widget.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_visible","","Determines whether the widget and all its parents are marked as visible.",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"keynav_failed","","This function should be called whenever keyboard navigation within a single widget hits a boundary. The function emits the `Widget::keynav-failed` signal on the widget and its return value should be interpreted in a way similar to the return value of `WidgetExt::child_focus`:",458,{"inputs":[{"name":"self"},{"name":"directiontype"}],"output":{"name":"bool"}}],[10,"list_action_prefixes","","Retrieves a `None`-terminated array of strings containing the prefixes of `gio::ActionGroup`'s available to `self`.",458,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"list_mnemonic_labels","","Returns a newly allocated list of the widgets, normally labels, for which this widget is the target of a mnemonic (see for example, `Label::set_mnemonic_widget`).",458,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"map","","This function is only for use in widget implementations. Causes a widget to be mapped if it isn’t already.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"mnemonic_activate","","Emits the `Widget::mnemonic-activate` signal.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":{"name":"bool"}}],[10,"override_background_color","","Sets the background color to use for a widget.",458,{"inputs":[{"name":"self"},{"name":"stateflags"},{"name":"p"}],"output":null}],[10,"override_color","","Sets the color to use for a widget.",458,{"inputs":[{"name":"self"},{"name":"stateflags"},{"name":"p"}],"output":null}],[10,"override_cursor","","Sets the cursor color to use in a widget, overriding the cursor-color and secondary-cursor-color style properties. All other style values are left untouched. See also `Widget::modify_style`.",458,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":null}],[10,"override_font","","Sets the font to use for a widget. All other style values are left untouched. See `WidgetExt::override_color`.",458,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"override_symbolic_color","","Sets a symbolic color for a widget.",458,{"inputs":[{"name":"self"},{"name":"str"},{"name":"p"}],"output":null}],[10,"queue_allocate","","",458,{"inputs":[{"name":"self"}],"output":null}],[10,"queue_compute_expand","","Mark `self` as needing to recompute its expand flags. Call this function when setting legacy expand child properties on the child of a container.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"queue_draw","","Equivalent to calling `WidgetExt::queue_draw_area` for the entire area of a widget.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"queue_draw_area","","Convenience function that calls `WidgetExt::queue_draw_region` on the region created from the given coordinates.",458,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"queue_draw_region","","Invalidates the area of `self` defined by `region` by calling `gdk::Window::invalidate_region` on the widget’s window and all its child windows. Once the main loop becomes idle (after the current batch of events has been processed, roughly), the window will receive expose events for the union of all regions that have been invalidated.",458,{"inputs":[{"name":"self"},{"name":"region"}],"output":null}],[10,"queue_resize","","This function is only for use in widget implementations. Flags a widget to have its size renegotiated; should be called when a widget for some reason has a new size request. For example, when you change the text in a `Label`, `Label` queues a resize to ensure there’s enough space for the new text.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"queue_resize_no_redraw","","This function works like `WidgetExt::queue_resize`, except that the widget is not invalidated.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"realize","","Creates the GDK (windowing system) resources associated with a widget. For example, `self`->window will be created when a widget is realized. Normally realization happens implicitly; if you show a widget and all its parent containers, then the widget will be realized and mapped automatically.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"region_intersect","","Computes the intersection of a `self`’s area and `region`, returning the intersection. The result may be empty, use `cairo_region_is_empty` to check.",458,{"inputs":[{"name":"self"},{"name":"region"}],"output":{"name":"option"}}],[10,"register_window","","Registers a `gdk::Window` with the widget and sets it up so that the widget receives events for it. Call `WidgetExt::unregister_window` when destroying the window.",458,{"inputs":[{"name":"self"},{"name":"window"}],"output":null}],[10,"remove_accelerator","","Removes an accelerator from `self`, previously installed with `WidgetExt::add_accelerator`. ## `accel_group` accel group for this widget ## `accel_key` GDK keyval of the accelerator ## `accel_mods` modifier key combination of the accelerator",458,{"inputs":[{"name":"self"},{"name":"accelgroup"},{"name":"u32"},{"name":"modifiertype"}],"output":{"name":"bool"}}],[10,"remove_mnemonic_label","","Removes a widget from the list of mnemonic labels for this widget. (See `WidgetExt::list_mnemonic_labels`). The widget must have previously been added to the list with `WidgetExt::add_mnemonic_label`. ## `label` a `Widget` that was previously set as a mnemnic label for  `self` with `WidgetExt::add_mnemonic_label`.",458,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"remove_tick_callback","","Removes a tick callback previously registered with `WidgetExt::add_tick_callback`.",458,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"render_icon_pixbuf","","A convenience function that uses the theme engine and style settings for `self` to look up `stock_id` and render it to a pixbuf. `stock_id` should be a stock icon ID such as `GTK_STOCK_OPEN` or `GTK_STOCK_OK`. `size` should be a size such as `IconSize::Menu`.",458,{"inputs":[{"name":"self"},{"name":"str"},{"name":"i32"}],"output":{"name":"option"}}],[10,"reparent","","Moves a widget from one `Container` to another, handling reference count issues to avoid destroying the widget.",458,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"reset_style","","Updates the style context of `self` and all descendents by updating its widget path. `GtkContainers` may want to use this on a child when reordering it in a way that a different style might apply to it. See also `ContainerExt::get_path_for_child`.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"send_expose","","Very rarely-used function. This function is used to emit an expose event on a widget. This function is not normally used directly. The only time it is used is when propagating an expose event to a windowless child widget (`WidgetExt::get_has_window` is `false`), and that is normally done using `ContainerExt::propagate_draw`.",458,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"i32"}}],[10,"send_focus_change","","Sends the focus change `event` to `self`",458,{"inputs":[{"name":"self"},{"name":"event"}],"output":{"name":"bool"}}],[10,"set_accel_path","","Given an accelerator group, `accel_group`, and an accelerator path, `accel_path`, sets up an accelerator in `accel_group` so whenever the key binding that is defined for `accel_path` is pressed, `self` will be activated. This removes any accelerators (for any accelerator group) installed by previous calls to `WidgetExt::set_accel_path`. Associating accelerators with paths allows them to be modified by the user and the modifications to be saved for future use. (See `AccelMap::save`.)",458,{"inputs":[{"name":"self"},{"name":"p"},{"name":"q"}],"output":null}],[10,"set_allocation","","Sets the widget’s allocation. This should not be used directly, but from within a widget’s size_allocate method.",458,{"inputs":[{"name":"self"},{"name":"allocation"}],"output":null}],[10,"set_app_paintable","","Sets whether the application intends to draw on the widget in an `Widget::draw` handler.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_can_default","","Specifies whether `self` can be a default widget. See `WidgetExt::grab_default` for details about the meaning of “default”. ## `can_default` whether or not `self` can be a default widget.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_can_focus","","Specifies whether `self` can own the input focus. See `WidgetExt::grab_focus` for actually setting the input focus on a widget. ## `can_focus` whether or not `self` can own the input focus.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_child_visible","","Sets whether `self` should be mapped along with its when its parent is mapped and `self` has been shown with `WidgetExt::show`.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_clip","","Sets the widget’s clip. This must not be used directly, but from within a widget’s size_allocate method. It must be called after `WidgetExt::set_allocation` (or after chaning up to the parent class), because that function resets the clip.",458,{"inputs":[{"name":"self"},{"name":"allocation"}],"output":null}],[10,"set_composite_name","","Sets a widgets composite name. The widget must be a composite child of its parent; see `Widget::push_composite_child`.",458,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_device_enabled","","Enables or disables a `gdk::Device` to interact with `self` and all its children.",458,{"inputs":[{"name":"self"},{"name":"p"},{"name":"bool"}],"output":null}],[10,"set_device_events","","Sets the device event mask (see `gdk::EventMask`) for a widget. The event mask determines which events a widget will receive from `device`. Keep in mind that different widgets have different default event masks, and by changing the event mask you may disrupt a widget’s functionality, so be careful. This function must be called while a widget is unrealized. Consider `WidgetExt::add_device_events` for widgets that are already realized, or if you want to preserve the existing event mask. This function can’t be used with windowless widgets (which return `false` from `WidgetExt::get_has_window`); to get events on those widgets, place them inside a `EventBox` and receive events on the event box. ## `device` a `gdk::Device` ## `events` event mask",458,{"inputs":[{"name":"self"},{"name":"p"},{"name":"eventmask"}],"output":null}],[10,"set_direction","","Sets the reading direction on a particular widget. This direction controls the primary direction for widgets containing text, and also the direction in which the children of a container are packed. The ability to set the direction is present in order so that correct localization into languages with right-to-left reading directions can be done. Generally, applications will let the default reading direction present, except for containers where the containers are arranged in an order that is explicitly visual rather than logical (such as buttons for text justification).",458,{"inputs":[{"name":"self"},{"name":"textdirection"}],"output":null}],[10,"set_double_buffered","","Widgets are double buffered by default; you can use this function to turn off the buffering. “Double buffered” simply means that `gdk::Window::begin_paint_region` and `gdk::Window::end_paint` are called automatically around expose events sent to the widget. `gdk::Window::begin_paint_region` diverts all drawing to a widget's window to an offscreen buffer, and `gdk::Window::end_paint` draws the buffer to the screen. The result is that users see the window update in one smooth step, and don’t see individual graphics primitives being rendered.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_events","","Sets the event mask (see `gdk::EventMask`) for a widget. The event mask determines which events a widget will receive. Keep in mind that different widgets have different default event masks, and by changing the event mask you may disrupt a widget’s functionality, so be careful. This function must be called while a widget is unrealized. Consider `WidgetExt::add_events` for widgets that are already realized, or if you want to preserve the existing event mask. This function can’t be used with widgets that have no window. (See `WidgetExt::get_has_window`). To get events on those widgets, place them inside a `EventBox` and receive events on the event box. ## `events` event mask",458,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_focus_on_click","","",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_font_map","","",458,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_halign","","Sets the horizontal alignment of `self`. See the `Widget:halign` property. ## `align` the horizontal alignment",458,{"inputs":[{"name":"self"},{"name":"align"}],"output":null}],[10,"set_has_tooltip","","Sets the has-tooltip property on `self` to `has_tooltip`. See `Widget:has-tooltip` for more information. ## `has_tooltip` whether or not `self` has a tooltip.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_has_window","","Specifies whether `self` has a `gdk::Window` of its own. Note that all realized widgets have a non-`None` “window” pointer (`WidgetExt::get_window` never returns a `None` window when a widget is realized), but for many of them it’s actually the `gdk::Window` of one of its parent widgets. Widgets that do not create a `window` for themselves in `Widget::realize` must announce this by calling this function with `has_window` = `false`.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_hexpand","","Sets whether the widget would like any available extra horizontal space. When a user resizes a `Window`, widgets with expand=TRUE generally receive the extra space. For example, a list or scrollable area or document in your window would often be set to expand.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_hexpand_set","","Sets whether the hexpand flag (see `WidgetExt::get_hexpand`) will be used.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_mapped","","Marks the widget as being realized.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_margin_bottom","","Sets the bottom margin of `self`. See the `Widget:margin-bottom` property. ## `margin` the bottom margin",458,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_margin_end","","Sets the end margin of `self`. See the `Widget:margin-end` property.",458,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_margin_left","","Sets the left margin of `self`. See the `Widget:margin-left` property.",458,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_margin_right","","Sets the right margin of `self`. See the `Widget:margin-right` property.",458,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_margin_start","","Sets the start margin of `self`. See the `Widget:margin-start` property.",458,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_margin_top","","Sets the top margin of `self`. See the `Widget:margin-top` property. ## `margin` the top margin",458,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"set_name","","Widgets can be named, which allows you to refer to them from a CSS file. You can apply a style to widgets with a particular name in the CSS file. See the documentation for the CSS syntax (on the same page as the docs for `StyleContext`).",458,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_no_show_all","","Sets the `Widget:no-show-all` property, which determines whether calls to `WidgetExt::show_all` will affect this widget.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_opacity","","Request the `self` to be rendered partially transparent, with opacity 0 being fully transparent and 1 fully opaque. (Opacity values are clamped to the [0,1] range.). This works on both toplevel widget, and child widgets, although there are some limitations:",458,{"inputs":[{"name":"self"},{"name":"f64"}],"output":null}],[10,"set_parent","","This function is useful only when implementing subclasses of `Container`. Sets the container as the parent of `self`, and takes care of some details such as updating the state and style of the child to reflect its new location. The opposite function is `WidgetExt::unparent`. ## `parent` parent container",458,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_parent_window","","Sets a non default parent window for `self`.",458,{"inputs":[{"name":"self"},{"name":"window"}],"output":null}],[10,"set_realized","","Marks the widget as being realized. This function must only be called after all `GdkWindows` for the `self` have been created and registered.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_receives_default","","Specifies whether `self` will be treated as the default widget within its toplevel when it has the focus, even if another widget is the default.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_redraw_on_allocate","","Sets whether the entire widget is queued for drawing when its size allocation changes. By default, this setting is `true` and the entire widget is redrawn on every size change. If your widget leaves the upper left unchanged when made bigger, turning this setting off will improve performance.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_sensitive","","Sets the sensitivity of a widget. A widget is sensitive if the user can interact with it. Insensitive widgets are “grayed out” and the user can’t interact with them. Insensitive widgets are known as “inactive”, “disabled”, or “ghosted” in some other toolkits. ## `sensitive` `true` to make the widget sensitive",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_size_request","","Sets the minimum size of a widget; that is, the widget’s size request will be at least `width` by `height`. You can use this function to force a widget to be larger than it normally would be.",458,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_state_flags","","This function is for use in widget implementations. Turns on flag values in the current widget state (insensitive, prelighted, etc.).",458,{"inputs":[{"name":"self"},{"name":"stateflags"},{"name":"bool"}],"output":null}],[10,"set_support_multidevice","","Enables or disables multiple pointer awareness. If this setting is `true`, `self` will start receiving multiple, per device enter/leave events. Note that if custom `GdkWindows` are created in `Widget::realize`, `gdk::Window::set_support_multidevice` will have to be called manually on them. ## `support_multidevice` `true` to support input from multiple devices.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_tooltip_markup","","Sets `markup` as the contents of the tooltip, which is marked up with  the Pango text markup language.",458,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_tooltip_text","","Sets `text` as the contents of the tooltip. This function will take care of setting `Widget:has-tooltip` to `true` and of the default handler for the `Widget::query-tooltip` signal.",458,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_tooltip_window","","Replaces the default, usually yellow, window used for displaying tooltips with `custom_window`. GTK+ will take care of showing and hiding `custom_window` at the right moment, to behave likewise as the default tooltip window. If `custom_window` is `None`, the default tooltip window will be used.",458,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_valign","","Sets the vertical alignment of `self`. See the `Widget:valign` property. ## `align` the vertical alignment",458,{"inputs":[{"name":"self"},{"name":"align"}],"output":null}],[10,"set_vexpand","","Sets whether the widget would like any available extra vertical space.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_vexpand_set","","Sets whether the vexpand flag (see `WidgetExt::get_vexpand`) will be used.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_visible","","Sets the visibility state of `self`. Note that setting this to `true` doesn’t mean the widget is actually viewable, see `WidgetExt::get_visible`.",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_visual","","Sets the visual that should be used for by widget and its children for creating `GdkWindows`. The visual must be on the same `gdk::Screen` as returned by `WidgetExt::get_screen`, so handling the `Widget::screen-changed` signal is necessary.",458,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_window","","Sets a widget’s window. This function should only be used in a widget’s `Widget::realize` implementation. The `window` passed is usually either new window created with `gdk::Window::new`, or the window of its parent widget as returned by `WidgetExt::get_parent_window`.",458,{"inputs":[{"name":"self"},{"name":"window"}],"output":null}],[10,"shape_combine_region","","Sets a shape for this widget’s GDK window. This allows for transparent windows etc., see `gdk::Window::shape_combine_region` for more information. ## `region` shape to be added, or `None` to remove an existing shape",458,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"show","","Flags a widget to be displayed. Any widget that isn’t shown will not appear on the screen. If you want to show all the widgets in a container, it’s easier to call `WidgetExt::show_all` on the container, instead of individually showing the widgets.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"show_all","","Recursively shows a widget, and any child widgets (if the widget is a container).",458,{"inputs":[{"name":"self"}],"output":null}],[10,"show_now","","Shows a widget. If the widget is an unmapped toplevel widget (i.e. a `Window` that has not yet been shown), enter the main loop and wait for the window to actually be mapped. Be careful; because the main loop is running, anything can happen during this function.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"size_allocate","","This function is only used by `Container` subclasses, to assign a size and position to their child widgets.",458,{"inputs":[{"name":"self"},{"name":"allocation"}],"output":null}],[10,"size_allocate_with_baseline","","This function is only used by `Container` subclasses, to assign a size, position and (optionally) baseline to their child widgets.",458,{"inputs":[{"name":"self"},{"name":"allocation"},{"name":"i32"}],"output":null}],[10,"thaw_child_notify","","Reverts the effect of a previous call to `WidgetExt::freeze_child_notify`. This causes all queued `Widget::child-notify` signals on `self` to be emitted.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"translate_coordinates","","Translate coordinates relative to `self`’s allocation to coordinates relative to `dest_widget`’s allocations. In order to perform this operation, both widgets must be realized, and must share a common toplevel. ## `dest_widget` a `Widget` ## `src_x` X position relative to `self` ## `src_y` Y position relative to `self` ## `dest_x` location to store X position relative to `dest_widget` ## `dest_y` location to store Y position relative to `dest_widget`",458,{"inputs":[{"name":"self"},{"name":"p"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"trigger_tooltip_query","","Triggers a tooltip query on the display where the toplevel of `self` is located. See `Tooltip::trigger_tooltip_query` for more information.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"unmap","","This function is only for use in widget implementations. Causes a widget to be unmapped if it’s currently mapped.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"unparent","","This function is only for use in widget implementations. Should be called by implementations of the remove method on `Container`, to dissociate a child from the container.",458,{"inputs":[{"name":"self"}],"output":null}],[10,"unrealize","","This function is only useful in widget implementations. Causes a widget to be unrealized (frees all GDK resources associated with the widget, such as `self`->window).",458,{"inputs":[{"name":"self"}],"output":null}],[10,"unregister_window","","Unregisters a `gdk::Window` from the widget that was previously set up with `WidgetExt::register_window`. You need to call this when the window is no longer used by the widget, such as when you destroy it.",458,{"inputs":[{"name":"self"},{"name":"window"}],"output":null}],[10,"unset_state_flags","","This function is for use in widget implementations. Turns off flag values for the current widget state (insensitive, prelighted, etc.). See `WidgetExt::set_state_flags`. ## `flags` State flags to turn off",458,{"inputs":[{"name":"self"},{"name":"stateflags"}],"output":null}],[10,"get_property_composite_child","","",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_expand","","",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_expand","","",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_has_default","","",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_has_default","","",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_has_focus","","",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_has_focus","","",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_height_request","","",458,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_height_request","","",458,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_is_focus","","",458,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"set_property_is_focus","","",458,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"get_property_margin","","",458,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_margin","","",458,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_width_request","","",458,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_width_request","","",458,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"connect_accel_closures_changed","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_button_press_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_button_release_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_can_activate_accel","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_composited_changed","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_configure_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_damage_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_delete_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_destroy","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_destroy_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_direction_changed","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_drag_begin","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_drag_data_delete","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_drag_data_get","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_drag_data_received","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_drag_drop","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_drag_end","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_drag_failed","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_drag_leave","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_drag_motion","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_draw","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_enter_notify_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_event_after","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_focus","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_focus_in_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_focus_out_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_grab_broken_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_grab_focus","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_grab_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_hide","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_hierarchy_changed","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_key_press_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_key_release_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_keynav_failed","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_leave_notify_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_map","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_mnemonic_activate","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_motion_notify_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_focus","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_parent_set","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_popup_menu","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_notify_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_proximity_in_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_proximity_out_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_query_tooltip","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_realize","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_screen_changed","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_scroll_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_selection_clear_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_selection_get","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_selection_notify_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_selection_received","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_selection_request_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_show","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_show_help","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_size_allocate","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_state_flags_changed","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_style_updated","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_touch_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_unmap","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_unrealize","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_visibility_notify_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_window_state_event","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_app_paintable_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_can_default_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_can_focus_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_composite_child_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_double_buffered_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_events_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_expand_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_focus_on_click_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_halign_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_has_default_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_has_focus_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_has_tooltip_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_height_request_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_hexpand_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_hexpand_set_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_is_focus_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_margin_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_margin_bottom_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_margin_end_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_margin_left_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_margin_right_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_margin_start_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_margin_top_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_name_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_no_show_all_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_opacity_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_parent_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_receives_default_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_scale_factor_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_sensitive_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_tooltip_markup_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_tooltip_text_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_valign_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_vexpand_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_vexpand_set_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_visible_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_width_request_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_window_notify","","",458,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"WindowExt","","Trait containing all `Window` methods.",null,null],[10,"activate_default","","Activates the default widget for the window, unless the current focused widget has been configured to receive the default action (see `WidgetExt::set_receives_default`), in which case the focused widget is activated.",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"activate_focus","","Activates the current focused widget within the window.",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"activate_key","","Activates mnemonics and accelerators for this `Window`. This is normally called by the default ::key_press_event handler for toplevel windows, however in some cases it may be useful to call this directly when overriding the standard key handling for a toplevel window. ## `event` a `gdk::EventKey`",459,{"inputs":[{"name":"self"},{"name":"eventkey"}],"output":{"name":"bool"}}],[10,"add_accel_group","","Associate `accel_group` with `self`, such that calling `gtk_accel_groups_activate` on `self` will activate accelerators in `accel_group`. ## `accel_group` a `AccelGroup`",459,{"inputs":[{"name":"self"},{"name":"accelgroup"}],"output":null}],[10,"add_mnemonic","","Adds a mnemonic to this window. ## `keyval` the mnemonic ## `target` the widget that gets activated by the mnemonic",459,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"p"}],"output":null}],[10,"begin_move_drag","","Starts moving a window. This function is used if an application has window movement grips. When GDK can support it, the window movement will be done using the standard mechanism for the [window manager][gtk-X11-arch] or windowing system. Otherwise, GDK will try to emulate window movement, potentially not all that well, depending on the windowing system. ## `button` mouse button that initiated the drag ## `root_x` X position where the user clicked to initiate the drag, in root window coordinates ## `root_y` Y position where the user clicked to initiate the drag ## `timestamp` timestamp from the click event that initiated the drag",459,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"u32"}],"output":null}],[10,"begin_resize_drag","","Starts resizing a window. This function is used if an application has window resizing controls. When GDK can support it, the resize will be done using the standard mechanism for the [window manager][gtk-X11-arch] or windowing system. Otherwise, GDK will try to emulate window resizing, potentially not all that well, depending on the windowing system. ## `edge` position of the resize control ## `button` mouse button that initiated the drag ## `root_x` X position where the user clicked to initiate the drag, in root window coordinates ## `root_y` Y position where the user clicked to initiate the drag ## `timestamp` timestamp from the click event that initiated the drag",459,{"inputs":[{"name":"self"},{"name":"windowedge"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"u32"}],"output":null}],[10,"close","","Requests that the window is closed, similar to what happens when a window manager close button is clicked.",459,{"inputs":[{"name":"self"}],"output":null}],[10,"deiconify","","Asks to deiconify (i.e. unminimize) the specified `self`. Note that you shouldn’t assume the window is definitely deiconified afterward, because other entities (e.g. the user or [window manager][gtk-X11-arch])) could iconify it again before your code which assumes deiconification gets to run.",459,{"inputs":[{"name":"self"}],"output":null}],[10,"fullscreen","","Asks to place `self` in the fullscreen state. Note that you shouldn’t assume the window is definitely full screen afterward, because other entities (e.g. the user or [window manager][gtk-X11-arch]) could unfullscreen it again, and not all window managers honor requests to fullscreen windows. But normally the window will end up fullscreen. Just don’t write code that crashes if not.",459,{"inputs":[{"name":"self"}],"output":null}],[10,"fullscreen_on_monitor","","",459,{"inputs":[{"name":"self"},{"name":"screen"},{"name":"i32"}],"output":null}],[10,"get_accept_focus","","Gets the value set by `WindowExt::set_accept_focus`.",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_application","","Gets the `Application` associated with the window (if any).",459,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_attached_to","","Fetches the attach widget for this window. See `WindowExt::set_attached_to`.",459,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_decorated","","Returns whether the window has been set to have decorations such as a title bar via `WindowExt::set_decorated`.",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_default_size","","Gets the default size of the window. A value of -1 for the width or height indicates that a default size has not been explicitly set for that dimension, so the “natural” size of the window will be used. ## `width` location to store the default width, or `None` ## `height` location to store the default height, or `None`",459,null],[10,"get_default_widget","","Returns the default widget for `self`. See `WindowExt::set_default` for more details.",459,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_deletable","","Returns whether the window has been set to have a close button via `WindowExt::set_deletable`.",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_destroy_with_parent","","Returns whether the window will be destroyed with its transient parent. See gtk_window_set_destroy_with_parent ().",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_focus","","Retrieves the current focused widget within the window. Note that this is the widget that would have the focus if the toplevel window focused; if the toplevel window is not focused then `gtk_widget_has_focus (widget)` will not be `true` for the widget.",459,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_focus_on_map","","Gets the value set by `WindowExt::set_focus_on_map`.",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_focus_visible","","Gets the value of the `Window:focus-visible` property.",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_gravity","","Gets the value set by `WindowExt::set_gravity`.",459,{"inputs":[{"name":"self"}],"output":{"name":"gravity"}}],[10,"get_group","","Returns the group for `self` or the default group, if `self` is `None` or if `self` does not have an explicit window group.",459,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_has_resize_grip","","Determines whether the window may have a resize grip.",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_hide_titlebar_when_maximized","","Returns whether the window has requested to have its titlebar hidden when maximized. See gtk_window_set_hide_titlebar_when_maximized ().",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_icon","","Gets the value set by `WindowExt::set_icon` (or if you've called `WindowExt::set_icon_list`, gets the first icon in the icon list).",459,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_icon_list","","Retrieves the list of icons set by `WindowExt::set_icon_list`. The list is copied, but the reference count on each member won’t be incremented.",459,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"get_icon_name","","Returns the name of the themed icon for the window, see `WindowExt::set_icon_name`.",459,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_mnemonic_modifier","","Returns the mnemonic modifier for this window. See `WindowExt::set_mnemonic_modifier`.",459,{"inputs":[{"name":"self"}],"output":{"name":"modifiertype"}}],[10,"get_mnemonics_visible","","Gets the value of the `Window:mnemonics-visible` property.",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_modal","","Returns whether the window is modal. See `WindowExt::set_modal`.",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_position","","This function returns the position you need to pass to `WindowExt::move` to keep `self` in its current position. This means that the meaning of the returned value varies with window gravity. See `WindowExt::move` for more details.",459,null],[10,"get_resizable","","Gets the value set by `WindowExt::set_resizable`.",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_resize_grip_area","","If a window has a resize grip, this will retrieve the grip position, width and height into the specified `gdk::Rectangle`.",459,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_role","","Returns the role of the window. See `WindowExt::set_role` for further explanation.",459,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_size","","Obtains the current size of `self`. If `self` is not onscreen, it returns the size GTK+ will suggest to the [window manager][gtk-X11-arch] for the initial window size (but this is not reliably the same as the size the window manager will actually select). The size obtained by `WindowExt::get_size` is the last size received in a `gdk::EventConfigure`, that is, GTK+ uses its locally-stored size, rather than querying the X server for the size. As a result, if you call `WindowExt::resize` then immediately call `WindowExt::get_size`, the size won’t have taken effect yet. After the window manager processes the resize request, GTK+ receives notification that the size has changed via a configure event, and the size of the window gets updated.",459,null],[10,"get_skip_pager_hint","","Gets the value set by `WindowExt::set_skip_pager_hint`.",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_skip_taskbar_hint","","Gets the value set by `WindowExt::set_skip_taskbar_hint`",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_title","","Retrieves the title of the window. See `WindowExt::set_title`.",459,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_titlebar","","Returns the custom titlebar that has been set with `WindowExt::set_titlebar`.",459,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_transient_for","","Fetches the transient parent for this window. See `WindowExt::set_transient_for`.",459,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"get_type_hint","","Gets the type hint for this window. See `WindowExt::set_type_hint`.",459,{"inputs":[{"name":"self"}],"output":{"name":"windowtypehint"}}],[10,"get_urgency_hint","","Gets the value set by `WindowExt::set_urgency_hint`",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_window_type","","Gets the type of the window. See `WindowType`.",459,{"inputs":[{"name":"self"}],"output":{"name":"windowtype"}}],[10,"has_group","","Returns whether `self` has an explicit window group.",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"has_toplevel_focus","","Returns whether the input focus is within this `Window`. For real toplevel windows, this is identical to `WindowExt::is_active`, but for embedded windows, like `Plug`, the results will differ.",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"iconify","","Asks to iconify (i.e. minimize) the specified `self`. Note that you shouldn’t assume the window is definitely iconified afterward, because other entities (e.g. the user or [window manager][gtk-X11-arch]) could deiconify it again, or there may not be a window manager in which case iconification isn’t possible, etc. But normally the window will end up iconified. Just don’t write code that crashes if not.",459,{"inputs":[{"name":"self"}],"output":null}],[10,"is_active","","Returns whether the window is part of the current active toplevel. (That is, the toplevel window receiving keystrokes.) The return value is `true` if the window is active toplevel itself, but also if it is, say, a `Plug` embedded in the active toplevel. You might use this function if you wanted to draw a widget differently in an active window from a widget in an inactive window. See `WindowExt::has_toplevel_focus`",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_maximized","","Retrieves the current maximized state of `self`.",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"maximize","","Asks to maximize `self`, so that it becomes full-screen. Note that you shouldn’t assume the window is definitely maximized afterward, because other entities (e.g. the user or [window manager][gtk-X11-arch]) could unmaximize it again, and not all window managers support maximization. But normally the window will end up maximized. Just don’t write code that crashes if not.",459,{"inputs":[{"name":"self"}],"output":null}],[10,"mnemonic_activate","","Activates the targets associated with the mnemonic. ## `keyval` the mnemonic ## `modifier` the modifiers",459,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"modifiertype"}],"output":{"name":"bool"}}],[10,"move_","","",459,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"parse_geometry","","Parses a standard X Window System geometry string - see the manual page for X (type “man X”) for details on this. `WindowExt::parse_geometry` does work on all GTK+ ports including Win32 but is primarily intended for an X environment.",459,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[10,"present","","Presents a window to the user. This may mean raising the window in the stacking order, deiconifying it, moving it to the current desktop, and/or giving it the keyboard focus, possibly dependent on the user’s platform, window manager, and preferences.",459,{"inputs":[{"name":"self"}],"output":null}],[10,"present_with_time","","Presents a window to the user in response to a user interaction. If you need to present a window without a timestamp, use `WindowExt::present`. See `WindowExt::present` for details. ## `timestamp` the timestamp of the user interaction (typically a  button or key press event) which triggered this call",459,{"inputs":[{"name":"self"},{"name":"u32"}],"output":null}],[10,"propagate_key_event","","Propagate a key press or release event to the focus widget and up the focus container chain until a widget handles `event`. This is normally called by the default ::key_press_event and ::key_release_event handlers for toplevel windows, however in some cases it may be useful to call this directly when overriding the standard key handling for a toplevel window. ## `event` a `gdk::EventKey`",459,{"inputs":[{"name":"self"},{"name":"eventkey"}],"output":{"name":"bool"}}],[10,"remove_accel_group","","Reverses the effects of `WindowExt::add_accel_group`. ## `accel_group` a `AccelGroup`",459,{"inputs":[{"name":"self"},{"name":"accelgroup"}],"output":null}],[10,"remove_mnemonic","","Removes a mnemonic from this window. ## `keyval` the mnemonic ## `target` the widget that gets activated by the mnemonic",459,{"inputs":[{"name":"self"},{"name":"u32"},{"name":"p"}],"output":null}],[10,"reshow_with_initial_size","","Hides `self`, then reshows it, resetting the default size and position of the window. Used by GUI builders only.",459,{"inputs":[{"name":"self"}],"output":null}],[10,"resize","","Resizes the window as if the user had done so, obeying geometry constraints. The default geometry constraint is that windows may not be smaller than their size request; to override this constraint, call `WidgetExt::set_size_request` to set the window's request to a smaller value.",459,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"resize_grip_is_visible","","Determines whether a resize grip is visible for the specified window.",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"resize_to_geometry","","Like `WindowExt::resize`, but `width` and `height` are interpreted in terms of the base size and increment set with gtk_window_set_geometry_hints. ## `width` width in resize increments to resize the window to ## `height` height in resize increments to resize the window to",459,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_accept_focus","","Windows may set a hint asking the desktop environment not to receive the input focus. This function sets this hint. ## `setting` `true` to let this window receive input focus",459,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_application","","Sets or unsets the `Application` associated with the window.",459,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_attached_to","","Marks `self` as attached to `attach_widget`. This creates a logical binding between the window and the widget it belongs to, which is used by GTK+ to propagate information such as styling or accessibility to `self` as if it was a children of `attach_widget`.",459,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_decorated","","By default, windows are decorated with a title bar, resize controls, etc. Some [window managers][gtk-X11-arch] allow GTK+ to disable these decorations, creating a borderless window. If you set the decorated property to `false` using this function, GTK+ will do its best to convince the window manager not to decorate the window. Depending on the system, this function may not have any effect when called on a window that is already visible, so you should call it before calling `WidgetExt::show`.",459,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_default","","The default widget is the widget that’s activated when the user presses Enter in a dialog (for example). This function sets or unsets the default widget for a `Window`. When setting (rather than unsetting) the default widget it’s generally easier to call `WidgetExt::grab_default` on the widget. Before making a widget the default widget, you must call `WidgetExt::set_can_default` on the widget you’d like to make the default. ## `default_widget` widget to be the default, or `None`  to unset the default widget for the toplevel",459,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_default_geometry","","Like `WindowExt::set_default_size`, but `width` and `height` are interpreted in terms of the base size and increment set with gtk_window_set_geometry_hints. ## `width` width in resize increments, or -1 to unset the default width ## `height` height in resize increments, or -1 to unset the default height",459,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_default_size","","Sets the default size of a window. If the window’s “natural” size (its size request) is larger than the default, the default will be ignored. More generally, if the default size does not obey the geometry hints for the window (`WindowExt::set_geometry_hints` can be used to set these explicitly), the default size will be clamped to the nearest permitted size.",459,{"inputs":[{"name":"self"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_deletable","","By default, windows have a close button in the window frame. Some [window managers][gtk-X11-arch] allow GTK+ to disable this button. If you set the deletable property to `false` using this function, GTK+ will do its best to convince the window manager not to show a close button. Depending on the system, this function may not have any effect when called on a window that is already visible, so you should call it before calling `WidgetExt::show`.",459,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_destroy_with_parent","","If `setting` is `true`, then destroying the transient parent of `self` will also destroy `self` itself. This is useful for dialogs that shouldn’t persist beyond the lifetime of the main window they're associated with, for example. ## `setting` whether to destroy `self` with its transient parent",459,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_focus","","If `focus` is not the current focus widget, and is focusable, sets it as the focus widget for the window. If `focus` is `None`, unsets the focus widget for this window. To set the focus to a particular widget in the toplevel, it is usually more convenient to use `WidgetExt::grab_focus` instead of this function. ## `focus` widget to be the new focus widget, or `None` to unset  any focus widget for the toplevel window.",459,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_focus_on_map","","Windows may set a hint asking the desktop environment not to receive the input focus when the window is mapped. This function sets this hint. ## `setting` `true` to let this window receive input focus on map",459,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_focus_visible","","Sets the `Window:focus-visible` property. ## `setting` the new value",459,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_gravity","","Window gravity defines the meaning of coordinates passed to `WindowExt::move`. See `WindowExt::move` and `gdk::Gravity` for more details.",459,{"inputs":[{"name":"self"},{"name":"gravity"}],"output":null}],[10,"set_has_resize_grip","","Sets whether `self` has a corner resize grip.",459,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_has_user_ref_count","","Tells GTK+ whether to drop its extra reference to the window when `WidgetExt::destroy` is called.",459,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_hide_titlebar_when_maximized","","If `setting` is `true`, then `self` will request that it’s titlebar should be hidden when maximized. This is useful for windows that don’t convey any information other than the application name in the titlebar, to put the available screen space to better use. If the underlying window system does not support the request, the setting will not have any effect.",459,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_icon","","Sets up the icon representing a `Window`. This icon is used when the window is minimized (also known as iconified). Some window managers or desktop environments may also place it in the window frame, or display it in other contexts.",459,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_icon_from_file","","Sets the icon for `self`. Warns on failure if `err` is `None`.",459,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[10,"set_icon_list","","Sets up the icon representing a `Window`. The icon is used when the window is minimized (also known as iconified). Some window managers or desktop environments may also place it in the window frame, or display it in other contexts.",459,null],[10,"set_icon_name","","Sets the icon for the window from a named themed icon. See the docs for `IconTheme` for more details.",459,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"set_keep_above","","Asks to keep `self` above, so that it stays on top. Note that you shouldn’t assume the window is definitely above afterward, because other entities (e.g. the user or [window manager][gtk-X11-arch]) could not keep it above, and not all window managers support keeping windows above. But normally the window will end kept above. Just don’t write code that crashes if not.",459,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_keep_below","","Asks to keep `self` below, so that it stays in bottom. Note that you shouldn’t assume the window is definitely below afterward, because other entities (e.g. the user or [window manager][gtk-X11-arch]) could not keep it below, and not all window managers support putting windows below. But normally the window will be kept below. Just don’t write code that crashes if not.",459,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_mnemonic_modifier","","Sets the mnemonic modifier for this window. ## `modifier` the modifier mask used to activate  mnemonics on this window.",459,{"inputs":[{"name":"self"},{"name":"modifiertype"}],"output":null}],[10,"set_mnemonics_visible","","Sets the `Window:mnemonics-visible` property. ## `setting` the new value",459,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_modal","","Sets a window modal or non-modal. Modal windows prevent interaction with other windows in the same application. To keep modal dialogs on top of main application windows, use `WindowExt::set_transient_for` to make the dialog transient for the parent; most [window managers][gtk-X11-arch] will then disallow lowering the dialog below the parent. ## `modal` whether the window is modal",459,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_position","","Sets a position constraint for this window. If the old or new constraint is `WindowPosition::CenterAlways`, this will also cause the window to be repositioned to satisfy the new constraint. ## `position` a position constraint.",459,{"inputs":[{"name":"self"},{"name":"windowposition"}],"output":null}],[10,"set_resizable","","Sets whether the user can resize a window. Windows are user resizable by default. ## `resizable` `true` if the user can resize this window",459,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_role","","This function is only useful on X11, not with other GTK+ targets.",459,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_screen","","Sets the `gdk::Screen` where the `self` is displayed; if the window is already mapped, it will be unmapped, and then remapped on the new screen. ## `screen` a `gdk::Screen`.",459,{"inputs":[{"name":"self"},{"name":"screen"}],"output":null}],[10,"set_skip_pager_hint","","Windows may set a hint asking the desktop environment not to display the window in the pager. This function sets this hint. (A \"pager\" is any desktop navigation tool such as a workspace switcher that displays a thumbnail representation of the windows on the screen.) ## `setting` `true` to keep this window from appearing in the pager",459,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_skip_taskbar_hint","","Windows may set a hint asking the desktop environment not to display the window in the task bar. This function sets this hint. ## `setting` `true` to keep this window from appearing in the task bar",459,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_startup_id","","Startup notification identifiers are used by desktop environment to track application startup, to provide user feedback and other features. This function changes the corresponding property on the underlying `gdk::Window`. Normally, startup identifier is managed automatically and you should only use this function in special cases like transferring focus from other processes. You should use this function before calling `WindowExt::present` or any equivalent function generating a window map event.",459,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_title","","Sets the title of the `Window`. The title of a window will be displayed in its title bar; on the X Window System, the title bar is rendered by the [window manager][gtk-X11-arch], so exactly how the title appears to users may vary according to a user’s exact configuration. The title should help a user distinguish this window from other windows they may have open. A good title might include the application name and current document filename, for example. ## `title` title of the window",459,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[10,"set_titlebar","","Sets a custom titlebar for `self`.",459,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_transient_for","","Dialog windows should be set transient for the main application window they were spawned from. This allows [window managers][gtk-X11-arch] to e.g. keep the dialog on top of the main window, or center the dialog over the main window. `Dialog::new_with_buttons` and other convenience functions in GTK+ will sometimes call `WindowExt::set_transient_for` on your behalf.",459,{"inputs":[{"name":"self"},{"name":"q"}],"output":null}],[10,"set_type_hint","","By setting the type hint for the window, you allow the window manager to decorate and handle the window in a way which is suitable to the function of the window in your application.",459,{"inputs":[{"name":"self"},{"name":"windowtypehint"}],"output":null}],[10,"set_urgency_hint","","Windows may set a hint asking the desktop environment to draw the users attention to the window. This function sets this hint. ## `setting` `true` to mark this window as urgent",459,{"inputs":[{"name":"self"},{"name":"bool"}],"output":null}],[10,"set_wmclass","","Don’t use this function. It sets the X Window System “class” and “name” hints for a window. According to the ICCCM, you should always set these to the same value for all windows in an application, and GTK+ sets them to that value by default, so calling this function is sort of pointless. However, you may want to call `WindowExt::set_role` on each window in your application, for the benefit of the session manager. Setting the role allows the window manager to restore window positions when loading a saved session. ## `wmclass_name` window name hint ## `wmclass_class` window class hint",459,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"}],"output":null}],[10,"stick","","Asks to stick `self`, which means that it will appear on all user desktops. Note that you shouldn’t assume the window is definitely stuck afterward, because other entities (e.g. the user or [window manager][gtk-X11-arch] could unstick it again, and some window managers do not support sticking windows. But normally the window will end up stuck. Just don't write code that crashes if not.",459,{"inputs":[{"name":"self"}],"output":null}],[10,"unfullscreen","","Asks to toggle off the fullscreen state for `self`. Note that you shouldn’t assume the window is definitely not full screen afterward, because other entities (e.g. the user or [window manager][gtk-X11-arch]) could fullscreen it again, and not all window managers honor requests to unfullscreen windows. But normally the window will end up restored to its normal state. Just don’t write code that crashes if not.",459,{"inputs":[{"name":"self"}],"output":null}],[10,"unmaximize","","Asks to unmaximize `self`. Note that you shouldn’t assume the window is definitely unmaximized afterward, because other entities (e.g. the user or [window manager][gtk-X11-arch]) could maximize it again, and not all window managers honor requests to unmaximize. But normally the window will end up unmaximized. Just don’t write code that crashes if not.",459,{"inputs":[{"name":"self"}],"output":null}],[10,"unstick","","Asks to unstick `self`, which means that it will appear on only one of the user’s desktops. Note that you shouldn’t assume the window is definitely unstuck afterward, because other entities (e.g. the user or [window manager][gtk-X11-arch]) could stick it again. But normally the window will end up stuck. Just don’t write code that crashes if not.",459,{"inputs":[{"name":"self"}],"output":null}],[10,"get_property_default_height","","",459,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_default_height","","",459,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_default_width","","",459,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[10,"set_property_default_width","","",459,{"inputs":[{"name":"self"},{"name":"i32"}],"output":null}],[10,"get_property_has_toplevel_focus","","",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_is_active","","",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_is_maximized","","",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_resize_grip_visible","","",459,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"get_property_type","","",459,{"inputs":[{"name":"self"}],"output":{"name":"windowtype"}}],[10,"get_property_window_position","","",459,{"inputs":[{"name":"self"}],"output":{"name":"windowposition"}}],[10,"set_property_window_position","","",459,{"inputs":[{"name":"self"},{"name":"windowposition"}],"output":null}],[10,"connect_activate_default","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_activate_focus","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_enable_debugging","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_keys_changed","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_set_focus","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_accept_focus_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_application_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_attached_to_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_decorated_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_default_height_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_default_width_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_deletable_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_destroy_with_parent_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_focus_on_map_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_focus_visible_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_gravity_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_has_resize_grip_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_has_toplevel_focus_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_hide_titlebar_when_maximized_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_icon_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_icon_name_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_is_active_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_is_maximized_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_mnemonics_visible_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_modal_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_resizable_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_resize_grip_visible_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_role_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_screen_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_skip_pager_hint_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_skip_taskbar_hint_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_startup_id_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_title_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_transient_for_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_type_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_type_hint_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_urgency_hint_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_window_position_notify","","",459,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"WindowGroupExt","","",null,null],[10,"add_window","","",460,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[10,"get_current_device_grab","","",460,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"option"}}],[10,"get_current_grab","","",460,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[10,"list_windows","","",460,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[10,"remove_window","","",460,{"inputs":[{"name":"self"},{"name":"p"}],"output":null}],[8,"EditableSignals","","",null,null],[10,"connect_changed","","",477,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_delete_text","","",477,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_insert_text","","",477,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[8,"SpinButtonSignals","","",null,null],[10,"connect_change_value","","",478,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_input","","",478,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_output","","",478,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_value_changed","","",478,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_wrapped","","",478,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"u64"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"rectangle"}}],[11,"set_value_optional","","",6,null],[11,"from","","",6,{"inputs":[{"name":"rectangleint"}],"output":{"name":"rectangle"}}],[11,"as_ref","","",6,{"inputs":[{"name":"self"}],"output":{"name":"rectangleint"}}],[11,"hash","","",6,null],[11,"static_type","","",6,{"inputs":[],"output":{"name":"type"}}],[11,"set_value","","",6,null],[11,"from_value_optional","","",6,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"rectangle"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"self"},{"name":"rectangle"}],"output":{"name":"bool"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"uninitialized","","",479,{"inputs":[],"output":{"name":"value"}}],[11,"static_type","","",480,{"inputs":[],"output":{"name":"type"}}],[11,"static_type","","",481,{"inputs":[],"output":{"name":"type"}}],[11,"clone","gtk::prelude","",5,{"inputs":[{"name":"self"}],"output":{"name":"inhibit"}}],[11,"clone","gtk","",482,{"inputs":[{"name":"self"}],"output":{"name":"typedvalue"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"type"}}],[11,"clone","","",479,{"inputs":[{"name":"self"}],"output":{"name":"value"}}],[11,"clone","","",481,{"inputs":[{"name":"self"}],"output":{"name":"object"}}],[11,"clone","","",480,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"to_value","","",479,{"inputs":[{"name":"self"}],"output":{"name":"value"}}],[11,"to_value_type","","",479,{"inputs":[{"name":"self"}],"output":{"name":"type"}}],[11,"deref_mut","","",482,{"inputs":[{"name":"self"}],"output":{"name":"value"}}],[11,"description","","",480,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"downcast","","Tries to downcast to a `TypedValue`.",479,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"get","","Tries to get a value of type `T`.",479,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"is","","Returns `true` if the type of the value corresponds to `T`.",479,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"type_","","Returns the type of the value.",479,{"inputs":[{"name":"self"}],"output":{"name":"type"}}],[11,"type_transformable","","Returns whether `Value`s of type `src` can be transformed to type `dst`.",479,{"inputs":[{"name":"type"},{"name":"type"}],"output":{"name":"bool"}}],[11,"deref","","",482,{"inputs":[{"name":"self"}],"output":{"name":"value"}}],[11,"fmt","","",480,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",482,{"inputs":[{"name":"typedvalue"}],"output":{"name":"typedvalue"}}],[11,"from","","",482,{"inputs":[{"name":"option"}],"output":{"name":"typedvalue"}}],[11,"from","","",479,{"inputs":[{"name":"t"}],"output":{"name":"value"}}],[11,"from","","",482,{"inputs":[{"name":"typedvalue"}],"output":{"name":"typedvalue"}}],[11,"from","","",482,{"inputs":[{"name":"t"}],"output":{"name":"typedvalue"}}],[11,"from","","",479,{"inputs":[{"name":"option"}],"output":{"name":"value"}}],[11,"from","","",479,{"inputs":[{"name":"typedvalue"}],"output":{"name":"value"}}],[11,"from","","",482,{"inputs":[{"name":"str"}],"output":{"name":"typedvalue"}}],[11,"from","","",482,{"inputs":[{"name":"option"}],"output":{"name":"typedvalue"}}],[11,"drop","","",479,null],[11,"to_glib_none_mut","","",479,{"inputs":[{"name":"self"}],"output":{"name":"stashmut"}}],[11,"hash","","",481,null],[11,"from_glib_none","","",479,null],[11,"from_glib_none","","",479,null],[11,"default","gtk::prelude","",5,{"inputs":[],"output":{"name":"inhibit"}}],[11,"from_glib_none_as_vec","gtk","",479,null],[11,"from_glib_container_as_vec","","",479,null],[11,"from_glib_full_as_vec","","",479,null],[11,"from_glib_none_as_vec","","",479,null],[11,"from_glib_container_as_vec","","",479,null],[11,"from_glib_full_as_vec","","",479,null],[11,"to_glib_none","","",479,{"inputs":[{"name":"self"}],"output":{"name":"stash"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"type"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"type"}],"output":{"name":"bool"}}],[11,"eq","","",481,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"eq","gtk::prelude","",5,{"inputs":[{"name":"self"},{"name":"inhibit"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"inhibit"}],"output":{"name":"bool"}}],[11,"from_glib","gtk","",4,{"inputs":[{"name":"usize"}],"output":{"name":"type"}}],[11,"fmt","","",481,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",479,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","gtk::prelude","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","gtk","",482,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",480,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_glib_full","","",479,null],[11,"from_glib_none_num_as_vec","","",479,null],[11,"from_glib_container_num_as_vec","","",479,null],[11,"from_glib_full_num_as_vec","","",479,null],[11,"from_glib_none_num_as_vec","","",479,null],[11,"from_glib_container_num_as_vec","","",479,null],[11,"from_glib_full_num_as_vec","","",479,null],[11,"to_glib","","",4,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"to_glib","","",1,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"new","","Creates an error with supplied error enum variant and message.",480,{"inputs":[{"name":"t"},{"name":"str"}],"output":{"name":"error"}}],[11,"is","","Checks if the error domain matches `T`.",480,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"kind","","Tries to convert to a specific error enum.",480,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"wrap","","",480,null],[11,"name","","",4,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"get","","Returns the value.",482,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"get_some","","Returns the value.",482,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[11,"set","","Sets the value.",482,null],[11,"set_none","","Sets the value to `None`.",482,null],[11,"set_some","","Sets the value.",482,null],[11,"intersect","","",6,{"inputs":[{"name":"self"},{"name":"rectangle"}],"output":{"name":"option"}}],[11,"union","","",6,{"inputs":[{"name":"self"},{"name":"rectangle"}],"output":{"name":"rectangle"}}]],"paths":[[8,"Cast"],[3,"Continue"],[8,"StaticType"],[8,"ToValue"],[4,"Type"],[3,"Inhibit"],[3,"Rectangle"],[3,"RecentData"],[3,"Requisition"],[4,"Align"],[4,"ArrowType"],[4,"AssistantPageType"],[4,"BaselinePosition"],[4,"BuilderError"],[4,"ButtonBoxStyle"],[4,"ButtonRole"],[4,"ButtonsType"],[4,"CellRendererAccelMode"],[4,"CellRendererMode"],[4,"CornerType"],[4,"CssProviderError"],[4,"CssSectionType"],[4,"DeleteType"],[4,"DirectionType"],[4,"DragResult"],[4,"EntryIconPosition"],[4,"EventSequenceState"],[4,"FileChooserAction"],[4,"FileChooserConfirmation"],[4,"FileChooserError"],[4,"IMPreeditStyle"],[4,"IMStatusStyle"],[4,"IconSize"],[4,"IconThemeError"],[4,"IconViewDropPosition"],[4,"ImageType"],[4,"InputPurpose"],[4,"Justification"],[4,"LevelBarMode"],[4,"License"],[4,"MenuDirectionType"],[4,"MessageType"],[4,"MovementStep"],[4,"NotebookTab"],[4,"NumberUpLayout"],[4,"Orientation"],[4,"PackDirection"],[4,"PackType"],[4,"PageOrientation"],[4,"PageSet"],[4,"PanDirection"],[4,"PolicyType"],[4,"PopoverConstraint"],[4,"PositionType"],[4,"PrintDuplex"],[4,"PrintError"],[4,"PrintPages"],[4,"PrintQuality"],[4,"PropagationPhase"],[4,"RecentChooserError"],[4,"RecentManagerError"],[4,"RecentSortType"],[4,"ReliefStyle"],[4,"ResizeMode"],[4,"ResponseType"],[4,"RevealerTransitionType"],[4,"ScrollStep"],[4,"ScrollType"],[4,"ScrollablePolicy"],[4,"SelectionMode"],[4,"SensitivityType"],[4,"ShadowType"],[4,"SizeGroupMode"],[4,"SizeRequestMode"],[4,"SortType"],[4,"SpinButtonUpdatePolicy"],[4,"SpinType"],[4,"StackTransitionType"],[4,"StateType"],[4,"TextDirection"],[4,"TextExtendSelection"],[4,"TextWindowType"],[4,"ToolbarStyle"],[4,"TreeViewColumnSizing"],[4,"TreeViewDropPosition"],[4,"TreeViewGridLines"],[4,"Unit"],[4,"WidgetHelpType"],[4,"WindowPosition"],[4,"WindowType"],[4,"WrapMode"],[4,"SortColumn"],[3,"AboutDialog"],[3,"AccelGroup"],[3,"ActionBar"],[3,"Actionable"],[3,"Adjustment"],[3,"Alignment"],[3,"AppChooserDialog"],[3,"AppChooserWidget"],[3,"Application"],[3,"ApplicationWindow"],[3,"Arrow"],[3,"AspectFrame"],[3,"Assistant"],[3,"Bin"],[3,"Box"],[3,"Builder"],[3,"Button"],[3,"ButtonBox"],[3,"Calendar"],[3,"CellArea"],[3,"CellAreaBox"],[3,"CellAreaContext"],[3,"CellEditable"],[3,"CellLayout"],[3,"CellRenderer"],[3,"CellRendererAccel"],[3,"CellRendererCombo"],[3,"CellRendererPixbuf"],[3,"CellRendererProgress"],[3,"CellRendererSpin"],[3,"CellRendererSpinner"],[3,"CellRendererText"],[3,"CellRendererToggle"],[3,"CheckButton"],[3,"CheckMenuItem"],[3,"Clipboard"],[3,"ColorButton"],[3,"ColorChooser"],[3,"ColorChooserDialog"],[3,"ColorChooserWidget"],[3,"ComboBox"],[3,"ComboBoxText"],[3,"Container"],[3,"CssProvider"],[3,"Dialog"],[3,"DrawingArea"],[3,"Editable"],[3,"Entry"],[3,"EntryCompletion"],[3,"EventBox"],[3,"EventController"],[3,"Expander"],[3,"FileChooser"],[3,"FileChooserButton"],[3,"FileChooserDialog"],[3,"FileChooserWidget"],[3,"FileFilter"],[3,"Fixed"],[3,"FlowBox"],[3,"FlowBoxChild"],[3,"FontButton"],[3,"FontChooser"],[3,"FontChooserDialog"],[3,"FontChooserWidget"],[3,"Frame"],[3,"GLArea"],[3,"Gesture"],[3,"GestureDrag"],[3,"GestureLongPress"],[3,"GestureMultiPress"],[3,"GesturePan"],[3,"GestureRotate"],[3,"GestureSingle"],[3,"GestureSwipe"],[3,"GestureZoom"],[3,"Grid"],[3,"HeaderBar"],[3,"IMContext"],[3,"IMMulticontext"],[3,"IconFactory"],[3,"IconInfo"],[3,"IconTheme"],[3,"IconView"],[3,"Image"],[3,"ImageMenuItem"],[3,"InfoBar"],[3,"Label"],[3,"Layout"],[3,"LevelBar"],[3,"LinkButton"],[3,"ListBox"],[3,"ListBoxRow"],[3,"ListStore"],[3,"Menu"],[3,"MenuBar"],[3,"MenuButton"],[3,"MenuItem"],[3,"MenuShell"],[3,"MenuToolButton"],[3,"MessageDialog"],[3,"Misc"],[3,"ModelButton"],[3,"Notebook"],[3,"Orientable"],[3,"Overlay"],[3,"PageSetup"],[3,"Paned"],[3,"PlacesSidebar"],[3,"Popover"],[3,"PopoverMenu"],[3,"PrintContext"],[3,"PrintSettings"],[3,"ProgressBar"],[3,"RadioButton"],[3,"RadioMenuItem"],[3,"Range"],[3,"RecentChooser"],[3,"RecentChooserDialog"],[3,"RecentChooserWidget"],[3,"RecentFilter"],[3,"RecentManager"],[3,"Revealer"],[3,"Scale"],[3,"ScaleButton"],[3,"Scrollable"],[3,"Scrollbar"],[3,"ScrolledWindow"],[3,"SearchBar"],[3,"SearchEntry"],[3,"Separator"],[3,"SeparatorMenuItem"],[3,"SeparatorToolItem"],[3,"Settings"],[3,"ShortcutsWindow"],[3,"SizeGroup"],[3,"SpinButton"],[3,"Spinner"],[3,"Stack"],[3,"StackSidebar"],[3,"StackSwitcher"],[3,"StatusIcon"],[3,"Statusbar"],[3,"StyleContext"],[3,"StyleProperties"],[3,"StyleProvider"],[3,"Switch"],[3,"TextBuffer"],[3,"TextChildAnchor"],[3,"TextMark"],[3,"TextTag"],[3,"TextTagTable"],[3,"TextView"],[3,"ToggleButton"],[3,"ToggleToolButton"],[3,"ToolButton"],[3,"ToolItem"],[3,"ToolItemGroup"],[3,"ToolPalette"],[3,"ToolShell"],[3,"Toolbar"],[3,"Tooltip"],[3,"TreeModel"],[3,"TreeModelFilter"],[3,"TreeSelection"],[3,"TreeSortable"],[3,"TreeStore"],[3,"TreeView"],[3,"TreeViewColumn"],[3,"Viewport"],[3,"VolumeButton"],[3,"Widget"],[3,"Window"],[3,"WindowGroup"],[3,"CssSection"],[3,"IconSet"],[3,"IconSource"],[3,"PaperSize"],[3,"RecentInfo"],[3,"SelectionData"],[3,"SymbolicColor"],[3,"TargetList"],[3,"TextAttributes"],[3,"TextIter"],[3,"TreeIter"],[3,"TreePath"],[3,"AccelFlags"],[3,"ApplicationInhibitFlags"],[3,"CalendarDisplayOptions"],[3,"CellRendererState"],[3,"DestDefaults"],[3,"DialogFlags"],[3,"FileFilterFlags"],[3,"IconLookupFlags"],[3,"InputHints"],[3,"JunctionSides"],[3,"PlacesOpenFlags"],[3,"RecentFilterFlags"],[3,"RegionFlags"],[3,"StateFlags"],[3,"StyleContextPrintFlags"],[3,"TargetFlags"],[3,"TextSearchFlags"],[3,"ToolPaletteDragTargets"],[3,"TreeModelFlags"],[3,"AppChooser"],[3,"EntryBuffer"],[3,"TargetEntry"],[8,"AboutDialogExt"],[8,"AccelGroupExt"],[8,"ActionBarExt"],[8,"ActionableExt"],[8,"AdjustmentExt"],[8,"AlignmentExt"],[8,"AppChooserDialogExt"],[8,"AppChooserWidgetExt"],[8,"GtkApplicationExt"],[8,"ApplicationWindowExt"],[8,"ArrowExt"],[8,"AspectFrameExt"],[8,"AssistantExt"],[8,"BinExt"],[8,"BoxExt"],[8,"BuilderExt"],[8,"ButtonExt"],[8,"ButtonBoxExt"],[8,"CalendarExt"],[8,"CellAreaExt"],[8,"CellAreaBoxExt"],[8,"CellAreaContextExt"],[8,"CellEditableExt"],[8,"CellLayoutExt"],[8,"CellRendererExt"],[8,"CellRendererAccelExt"],[8,"CellRendererComboExt"],[8,"CellRendererPixbufExt"],[8,"CellRendererProgressExt"],[8,"CellRendererSpinExt"],[8,"CellRendererSpinnerExt"],[8,"CellRendererTextExt"],[8,"CellRendererToggleExt"],[8,"CheckMenuItemExt"],[8,"ClipboardExt"],[8,"ColorButtonExt"],[8,"ColorChooserExt"],[8,"ColorChooserDialogExt"],[8,"ColorChooserWidgetExt"],[8,"ComboBoxExt"],[8,"ComboBoxTextExt"],[8,"ContainerExt"],[8,"CssProviderExt"],[8,"DialogExt"],[8,"EditableExt"],[8,"EntryExt"],[8,"EntryCompletionExt"],[8,"EventBoxExt"],[8,"EventControllerExt"],[8,"ExpanderExt"],[8,"FileChooserExt"],[8,"FileChooserButtonExt"],[8,"FileChooserWidgetExt"],[8,"FileFilterExt"],[8,"FixedExt"],[8,"FlowBoxExt"],[8,"FlowBoxChildExt"],[8,"FontButtonExt"],[8,"FontChooserExt"],[8,"FrameExt"],[8,"GLAreaExt"],[8,"GestureExt"],[8,"GestureDragExt"],[8,"GestureLongPressExt"],[8,"GestureMultiPressExt"],[8,"GesturePanExt"],[8,"GestureRotateExt"],[8,"GestureSingleExt"],[8,"GestureSwipeExt"],[8,"GestureZoomExt"],[8,"GridExt"],[8,"HeaderBarExt"],[8,"IMContextExt"],[8,"IMMulticontextExt"],[8,"IconFactoryExt"],[8,"IconInfoExt"],[8,"IconThemeExt"],[8,"IconViewExt"],[8,"ImageExt"],[8,"ImageMenuItemExt"],[8,"InfoBarExt"],[8,"LabelExt"],[8,"LayoutExt"],[8,"LevelBarExt"],[8,"LinkButtonExt"],[8,"ListBoxExt"],[8,"ListBoxRowExt"],[8,"ListStoreExt"],[8,"MenuExt"],[8,"MenuBarExt"],[8,"MenuButtonExt"],[8,"MenuItemExt"],[8,"MenuShellExt"],[8,"MenuToolButtonExt"],[8,"MessageDialogExt"],[8,"MiscExt"],[8,"ModelButtonExt"],[8,"NotebookExt"],[8,"OrientableExt"],[8,"OverlayExt"],[8,"PageSetupExt"],[8,"PanedExt"],[8,"PlacesSidebarExt"],[8,"PopoverExt"],[8,"PopoverMenuExt"],[8,"PrintContextExt"],[8,"PrintSettingsExt"],[8,"ProgressBarExt"],[8,"RadioButtonExt"],[8,"RadioMenuItemExt"],[8,"RangeExt"],[8,"RecentChooserExt"],[8,"RecentFilterExt"],[8,"RecentManagerExt"],[8,"RevealerExt"],[8,"ScaleExt"],[8,"ScaleButtonExt"],[8,"ScrollableExt"],[8,"ScrolledWindowExt"],[8,"SearchBarExt"],[8,"SearchEntryExt"],[8,"SeparatorToolItemExt"],[8,"SettingsExt"],[8,"ShortcutsWindowExt"],[8,"SizeGroupExt"],[8,"SpinButtonExt"],[8,"SpinnerExt"],[8,"StackExt"],[8,"StackSidebarExt"],[8,"StackSwitcherExt"],[8,"StatusIconExt"],[8,"StatusbarExt"],[8,"StyleContextExt"],[8,"StylePropertiesExt"],[8,"SwitchExt"],[8,"TextBufferExt"],[8,"TextChildAnchorExt"],[8,"TextMarkExt"],[8,"TextTagExt"],[8,"TextTagTableExt"],[8,"TextViewExt"],[8,"ToggleButtonExt"],[8,"ToggleToolButtonExt"],[8,"ToolButtonExt"],[8,"ToolItemExt"],[8,"ToolItemGroupExt"],[8,"ToolPaletteExt"],[8,"ToolShellExt"],[8,"ToolbarExt"],[8,"TooltipExt"],[8,"TreeModelExt"],[8,"TreeModelFilterExt"],[8,"TreeSelectionExt"],[8,"TreeSortableExt"],[8,"TreeStoreExt"],[8,"TreeViewExt"],[8,"TreeViewColumnExt"],[8,"ViewportExt"],[8,"VolumeButtonExt"],[8,"WidgetExt"],[8,"WindowExt"],[8,"WindowGroupExt"],[8,"AppChooserExt"],[8,"AssistantExtManual"],[8,"ColorButtonExtManual"],[8,"ColorChooserExtManual"],[8,"CssProviderExtManual"],[8,"DialogExtManual"],[8,"DragContextExtManual"],[8,"ListStoreExtManual"],[8,"MenuExtManual"],[8,"NotebookExtManual"],[8,"SwitchExtManual"],[8,"TextBufferExtManual"],[8,"TreeModelFilterExtManual"],[8,"TreeSortableExtManual"],[8,"TreeStoreExtManual"],[8,"WidgetExtManual"],[8,"EditableSignals"],[8,"SpinButtonSignals"],[3,"Value"],[3,"Error"],[3,"Object"],[3,"TypedValue"]]};
initSearch(searchIndex);
